   1               		.file	"nrk_watchdog.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.global __do_copy_data
   8               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
 123               	.global	nrk_watchdog_check
 125               	nrk_watchdog_check:
 126               		.stabd	46,0,0
   1:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** /******************************************************************************
   2:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *  All rights reserved.
   5:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *
   6:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *
  10:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *  This program is free software: you can redistribute it and/or modify
  11:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *  it under the terms of the GNU General Public License as published by
  12:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *
  14:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *  This program is distributed in the hope that it will be useful,
  15:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *  GNU General Public License for more details.
  18:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *
  19:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *  You should have received a copy of the GNU General Public License
  20:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *
  22:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *  Contributing Authors (specific to this file):
  23:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *  Anthony Rowe
  24:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** *******************************************************************************/
  25:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** 
  26:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** #include <include.h>
  27:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** #include <nrk_watchdog.h>
  28:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** #include <nrk_error.h>
  29:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** #include <nrk.h>
  30:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** #include <avr/wdt.h>
  31:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** 
  32:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** void nrk_watchdog_disable()
  33:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** {
  34:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** nrk_int_disable();
  35:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** nrk_watchdog_reset();
  36:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** MCUSR &= ~(1<<WDRF);
  37:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** WDTCSR |= (1<<WDCE) | (1<<WDE);
  38:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** WDTCSR = 0;
  39:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** nrk_int_enable();
  40:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** }
  41:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** 
  42:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** void nrk_watchdog_enable()
  43:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** {
  44:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** // Enable watchdog with 1024K cycle timeout
  45:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** // No Interrupt Trigger
  46:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** nrk_int_disable();
  47:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** MCUSR &= ~(1<<WDRF);
  48:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** nrk_watchdog_reset();
  49:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** WDTCSR |= (1<<WDCE) | (1<<WDE);
  50:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** WDTCSR = (1<<WDE) | (1<<WDP2) | (1<<WDP0);
  51:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** nrk_int_enable();
  52:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** 
  53:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** }
  54:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** 
  55:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** int8_t nrk_watchdog_check()
  56:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** {
 128               	.LM0:
 129               	.LFBB1:
 130               	/* prologue: frame size=0 */
 131               	/* prologue end (size=0) */
  57:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** 
  58:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** if((MCUSR & (1<<WDRF))==0) return NRK_OK;
 133               	.LM1:
 134 0000 04B6      		in __tmp_reg__,84-0x20
 135 0002 03FC      		sbrc __tmp_reg__,3
 136 0004 00C0      		rjmp .L2
 138               	.LM2:
 139 0006 81E0      		ldi r24,lo8(1)
 140 0008 90E0      		ldi r25,hi8(1)
 141 000a 0895      		ret
 142               	.L2:
 143 000c 8FEF      		ldi r24,lo8(-1)
 144 000e 9FEF      		ldi r25,hi8(-1)
  59:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** return NRK_ERROR;
  60:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** }
 146               	.LM3:
 147 0010 0895      		ret
 148               	/* epilogue: frame size=0 */
 149               	/* epilogue: noreturn */
 150               	/* epilogue end (size=0) */
 151               	/* function nrk_watchdog_check size 9 (9) */
 153               	.Lscope1:
 155               		.stabd	78,0,0
 157               	.global	nrk_watchdog_reset
 159               	nrk_watchdog_reset:
 160               		.stabd	46,0,0
  61:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** 
  62:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** inline void nrk_watchdog_reset()
  63:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** {
 162               	.LM4:
 163               	.LFBB2:
 164               	/* prologue: frame size=0 */
 165               	/* prologue end (size=0) */
  64:../../../src/kernel/hal/atmega1281/nrk_watchdog.c **** wdt_reset();
 167               	.LM5:
 168               	/* #APP */
 169 0012 A895      		wdr
 170               	/* #NOAPP */
 171               	/* epilogue: frame size=0 */
 172 0014 0895      		ret
 173               	/* epilogue end (size=1) */
 174               	/* function nrk_watchdog_reset size 3 (2) */
 176               	.Lscope2:
 178               		.stabd	78,0,0
 180               	.global	nrk_watchdog_disable
 182               	nrk_watchdog_disable:
 183               		.stabd	46,0,0
 185               	.LM6:
 186               	.LFBB3:
 187               	/* prologue: frame size=0 */
 188               	/* prologue end (size=0) */
 190               	.LM7:
 191 0016 0E94 0000 		call nrk_int_disable
 192               	.LBB4:
 193               	.LBB5:
 195               	.LM8:
 196               	/* #APP */
 197 001a A895      		wdr
 198               	/* #NOAPP */
 199               	.LBE5:
 200               	.LBE4:
 202               	.LM9:
 203 001c 84B7      		in r24,84-0x20
 204 001e 877F      		andi r24,lo8(-9)
 205 0020 84BF      		out 84-0x20,r24
 207               	.LM10:
 208 0022 E0E6      		ldi r30,lo8(96)
 209 0024 F0E0      		ldi r31,hi8(96)
 210 0026 8081      		ld r24,Z
 211 0028 8861      		ori r24,lo8(24)
 212 002a 8083      		st Z,r24
 214               	.LM11:
 215 002c 1082      		st Z,__zero_reg__
 217               	.LM12:
 218 002e 0E94 0000 		call nrk_int_enable
 219               	/* epilogue: frame size=0 */
 220 0032 0895      		ret
 221               	/* epilogue end (size=1) */
 222               	/* function nrk_watchdog_disable size 16 (15) */
 224               	.Lscope3:
 226               		.stabd	78,0,0
 228               	.global	nrk_watchdog_enable
 230               	nrk_watchdog_enable:
 231               		.stabd	46,0,0
 233               	.LM13:
 234               	.LFBB4:
 235               	/* prologue: frame size=0 */
 236               	/* prologue end (size=0) */
 238               	.LM14:
 239 0034 0E94 0000 		call nrk_int_disable
 241               	.LM15:
 242 0038 84B7      		in r24,84-0x20
 243 003a 877F      		andi r24,lo8(-9)
 244 003c 84BF      		out 84-0x20,r24
 245               	.LBB8:
 246               	.LBB9:
 248               	.LM16:
 249               	/* #APP */
 250 003e A895      		wdr
 251               	/* #NOAPP */
 252               	.LBE9:
 253               	.LBE8:
 255               	.LM17:
 256 0040 E0E6      		ldi r30,lo8(96)
 257 0042 F0E0      		ldi r31,hi8(96)
 258 0044 8081      		ld r24,Z
 259 0046 8861      		ori r24,lo8(24)
 260 0048 8083      		st Z,r24
 262               	.LM18:
 263 004a 8DE0      		ldi r24,lo8(13)
 264 004c 8083      		st Z,r24
 266               	.LM19:
 267 004e 0E94 0000 		call nrk_int_enable
 268               	/* epilogue: frame size=0 */
 269 0052 0895      		ret
 270               	/* epilogue end (size=1) */
 271               	/* function nrk_watchdog_enable size 17 (16) */
 273               	.Lscope4:
 275               		.stabd	78,0,0
 276               		.comm _nrk_signal_list,4,1
 277               		.comm error_task,1,1
 278               		.comm error_num,1,1
 279               		.comm nrk_idle_task_stk,128,1
 280               		.comm nrk_kernel_stk_ptr,2,1
 287               	.Letext0:
 288               	/* File "../../../src/kernel/hal/atmega1281/nrk_watchdog.c": code   45 = 0x002d (  42), prologues  
DEFINED SYMBOLS
                            *ABS*:00000000 nrk_watchdog.c
     /tmp/cczpUMYJ.s:2      *ABS*:0000003f __SREG__
     /tmp/cczpUMYJ.s:3      *ABS*:0000003e __SP_H__
     /tmp/cczpUMYJ.s:4      *ABS*:0000003d __SP_L__
     /tmp/cczpUMYJ.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/cczpUMYJ.s:6      *ABS*:00000001 __zero_reg__
     /tmp/cczpUMYJ.s:125    .text:00000000 nrk_watchdog_check
     /tmp/cczpUMYJ.s:159    .text:00000012 nrk_watchdog_reset
     /tmp/cczpUMYJ.s:182    .text:00000016 nrk_watchdog_disable
     /tmp/cczpUMYJ.s:230    .text:00000034 nrk_watchdog_enable
                            *COM*:00000004 _nrk_signal_list
                            *COM*:00000001 error_task
                            *COM*:00000001 error_num
                            *COM*:00000080 nrk_idle_task_stk
                            *COM*:00000002 nrk_kernel_stk_ptr

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
nrk_int_disable
nrk_int_enable
