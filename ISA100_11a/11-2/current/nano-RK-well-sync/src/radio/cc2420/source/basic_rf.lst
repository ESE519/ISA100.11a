   1               		.file	"basic_rf.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.global __do_copy_data
   8               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
 126               	.global	rf_security_last_pkt_status
 128               	rf_security_last_pkt_status:
 129               		.stabd	46,0,0
   1:../../../src/radio/cc2420/source/basic_rf.c **** /******************************************************************************
   2:../../../src/radio/cc2420/source/basic_rf.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:../../../src/radio/cc2420/source/basic_rf.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:../../../src/radio/cc2420/source/basic_rf.c **** *  All rights reserved.
   5:../../../src/radio/cc2420/source/basic_rf.c **** *
   6:../../../src/radio/cc2420/source/basic_rf.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:../../../src/radio/cc2420/source/basic_rf.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:../../../src/radio/cc2420/source/basic_rf.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:../../../src/radio/cc2420/source/basic_rf.c **** *
  10:../../../src/radio/cc2420/source/basic_rf.c **** *  This program is free software: you can redistribute it and/or modify
  11:../../../src/radio/cc2420/source/basic_rf.c **** *  it under the terms of the GNU General Public License as published by
  12:../../../src/radio/cc2420/source/basic_rf.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:../../../src/radio/cc2420/source/basic_rf.c **** *
  14:../../../src/radio/cc2420/source/basic_rf.c **** *  This program is distributed in the hope that it will be useful,
  15:../../../src/radio/cc2420/source/basic_rf.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:../../../src/radio/cc2420/source/basic_rf.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:../../../src/radio/cc2420/source/basic_rf.c **** *  GNU General Public License for more details.
  18:../../../src/radio/cc2420/source/basic_rf.c **** *
  19:../../../src/radio/cc2420/source/basic_rf.c **** *  You should have received a copy of the GNU General Public License
  20:../../../src/radio/cc2420/source/basic_rf.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:../../../src/radio/cc2420/source/basic_rf.c **** *
  22:../../../src/radio/cc2420/source/basic_rf.c **** *  Contributing Authors (specific to this file):
  23:../../../src/radio/cc2420/source/basic_rf.c **** *  Chipcon Development Team
  24:../../../src/radio/cc2420/source/basic_rf.c **** *  Anthony Rowe
  25:../../../src/radio/cc2420/source/basic_rf.c **** *  Nuno Pereira
  26:../../../src/radio/cc2420/source/basic_rf.c **** *  Bach Bui 
  27:../../../src/radio/cc2420/source/basic_rf.c **** *******************************************************************************/
  28:../../../src/radio/cc2420/source/basic_rf.c **** 
  29:../../../src/radio/cc2420/source/basic_rf.c **** #include <include.h>
  30:../../../src/radio/cc2420/source/basic_rf.c **** #include <basic_rf.h>
  31:../../../src/radio/cc2420/source/basic_rf.c **** #include <ulib.h>
  32:../../../src/radio/cc2420/source/basic_rf.c **** #include <nrk.h>
  33:../../../src/radio/cc2420/source/basic_rf.c **** #include <nrk_events.h>
  34:../../../src/radio/cc2420/source/basic_rf.c **** #include <nrk_error.h>
  35:../../../src/radio/cc2420/source/basic_rf.c **** #include <nrk_timer.h>
  36:../../../src/radio/cc2420/source/basic_rf.c **** #include <nrk_cpu.h>
  37:../../../src/radio/cc2420/source/basic_rf.c **** 
  38:../../../src/radio/cc2420/source/basic_rf.c **** 
  39:../../../src/radio/cc2420/source/basic_rf.c **** //#ifndef RADIO_PRIORITY_CEILING
  40:../../../src/radio/cc2420/source/basic_rf.c **** //  #define RADIO_PRIORITY_CEILING	20
  41:../../../src/radio/cc2420/source/basic_rf.c **** //#endif
  42:../../../src/radio/cc2420/source/basic_rf.c **** 
  43:../../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_t *radio_sem;
  44:../../../src/radio/cc2420/source/basic_rf.c **** uint8_t auto_ack_enable;
  45:../../../src/radio/cc2420/source/basic_rf.c **** uint8_t security_enable;
  46:../../../src/radio/cc2420/source/basic_rf.c **** uint8_t last_pkt_encrypted;
  47:../../../src/radio/cc2420/source/basic_rf.c **** uint16_t mdmctrl0;
  48:../../../src/radio/cc2420/source/basic_rf.c **** uint8_t tx_ctr[4];
  49:../../../src/radio/cc2420/source/basic_rf.c **** uint8_t rx_ctr[4];
  50:../../../src/radio/cc2420/source/basic_rf.c **** 
  51:../../../src/radio/cc2420/source/basic_rf.c **** // Returns 1 if the last packet was encrypted, 0 otherwise
  52:../../../src/radio/cc2420/source/basic_rf.c **** uint8_t rf_security_last_pkt_status()
  53:../../../src/radio/cc2420/source/basic_rf.c **** {
 131               	.LM0:
 132               	.LFBB1:
 133               	/* prologue: frame size=0 */
 134               	/* prologue end (size=0) */
 135 0000 8091 0000 		lds r24,last_pkt_encrypted
  54:../../../src/radio/cc2420/source/basic_rf.c **** return last_pkt_encrypted;
  55:../../../src/radio/cc2420/source/basic_rf.c **** }
 137               	.LM1:
 138 0004 9927      		clr r25
 139               	/* epilogue: frame size=0 */
 140 0006 0895      		ret
 141               	/* epilogue end (size=1) */
 142               	/* function rf_security_last_pkt_status size 4 (3) */
 144               	.Lscope1:
 146               		.stabd	78,0,0
 149               	.global	rf_security_set_ctr_counter
 151               	rf_security_set_ctr_counter:
 152               		.stabd	46,0,0
  56:../../../src/radio/cc2420/source/basic_rf.c **** 
  57:../../../src/radio/cc2420/source/basic_rf.c **** 
  58:../../../src/radio/cc2420/source/basic_rf.c **** void rf_security_set_ctr_counter(uint8_t *counter)
  59:../../../src/radio/cc2420/source/basic_rf.c **** {
 154               	.LM2:
 155               	.LFBB2:
 156               	/* prologue: frame size=0 */
 157 0008 CF93      		push r28
 158 000a DF93      		push r29
 159               	/* prologue end (size=2) */
 160 000c DC01      		movw r26,r24
  60:../../../src/radio/cc2420/source/basic_rf.c **** uint8_t n;
  61:../../../src/radio/cc2420/source/basic_rf.c **** // CTR counter value
  62:../../../src/radio/cc2420/source/basic_rf.c **** FASTSPI_WRITE_RAM(&counter[0],(CC2420RAM_TXNONCE+9),2,n); 
 162               	.LM3:
 163 000e 4098      		cbi 40-0x20,0
 164 0010 89EC      		ldi r24,lo8(-55)
 165 0012 8EBD      		out 78-0x20,r24
 166               	.L4:
 168               	.LM4:
 169 0014 0DB4      		in __tmp_reg__,77-0x20
 170 0016 07FE      		sbrs __tmp_reg__,7
 171 0018 00C0      		rjmp .L4
 172 001a 80E8      		ldi r24,lo8(-128)
 173 001c 8EBD      		out 78-0x20,r24
 174               	.L6:
 175 001e 0DB4      		in __tmp_reg__,77-0x20
 176 0020 07FE      		sbrs __tmp_reg__,7
 177 0022 00C0      		rjmp .L6
 178 0024 92E0      		ldi r25,lo8(2)
 179               	.L8:
 180 0026 9150      		subi r25,lo8(-(-1))
 181 0028 FD01      		movw r30,r26
 182 002a E90F      		add r30,r25
 183 002c F11D      		adc r31,__zero_reg__
 184 002e 8081      		ld r24,Z
 185 0030 8EBD      		out 78-0x20,r24
 186               	.L9:
 187 0032 0DB4      		in __tmp_reg__,77-0x20
 188 0034 07FE      		sbrs __tmp_reg__,7
 189 0036 00C0      		rjmp .L9
 190 0038 9923      		tst r25
 191 003a 01F4      		brne .L8
 192 003c 409A      		sbi 40-0x20,0
  63:../../../src/radio/cc2420/source/basic_rf.c **** FASTSPI_WRITE_RAM(&counter[2],(CC2420RAM_TXNONCE+11),2,n); 
 194               	.LM5:
 195 003e 4098      		cbi 40-0x20,0
 196 0040 8BEC      		ldi r24,lo8(-53)
 197 0042 8EBD      		out 78-0x20,r24
 198               	.L12:
 199 0044 0DB4      		in __tmp_reg__,77-0x20
 200 0046 07FE      		sbrs __tmp_reg__,7
 201 0048 00C0      		rjmp .L12
 202 004a 80E8      		ldi r24,lo8(-128)
 203 004c 8EBD      		out 78-0x20,r24
 204               	.L14:
 205 004e 0DB4      		in __tmp_reg__,77-0x20
 206 0050 07FE      		sbrs __tmp_reg__,7
 207 0052 00C0      		rjmp .L14
 208 0054 92E0      		ldi r25,lo8(2)
 209 0056 9D01      		movw r18,r26
 210 0058 2E5F      		subi r18,lo8(-(2))
 211 005a 3F4F      		sbci r19,hi8(-(2))
 212               	.L16:
 213 005c E901      		movw r28,r18
 214 005e 9150      		subi r25,lo8(-(-1))
 215 0060 F901      		movw r30,r18
 216 0062 E90F      		add r30,r25
 217 0064 F11D      		adc r31,__zero_reg__
 218 0066 8081      		ld r24,Z
 219 0068 8EBD      		out 78-0x20,r24
 220               	.L17:
 221 006a 0DB4      		in __tmp_reg__,77-0x20
 222 006c 07FE      		sbrs __tmp_reg__,7
 223 006e 00C0      		rjmp .L17
 224 0070 9923      		tst r25
 225 0072 01F4      		brne .L16
 226 0074 409A      		sbi 40-0x20,0
  64:../../../src/radio/cc2420/source/basic_rf.c **** tx_ctr[0]=counter[0];
 228               	.LM6:
 229 0076 8C91      		ld r24,X
 230 0078 8093 0000 		sts tx_ctr,r24
  65:../../../src/radio/cc2420/source/basic_rf.c **** tx_ctr[1]=counter[1];
 232               	.LM7:
 233 007c FD01      		movw r30,r26
 234 007e 8181      		ldd r24,Z+1
 235 0080 8093 0000 		sts tx_ctr+1,r24
  66:../../../src/radio/cc2420/source/basic_rf.c **** tx_ctr[2]=counter[2];
 237               	.LM8:
 238 0084 8881      		ld r24,Y
 239 0086 8093 0000 		sts tx_ctr+2,r24
  67:../../../src/radio/cc2420/source/basic_rf.c **** tx_ctr[3]=counter[3];
 241               	.LM9:
 242 008a 8381      		ldd r24,Z+3
 243 008c 8093 0000 		sts tx_ctr+3,r24
 244               	/* epilogue: frame size=0 */
 245 0090 DF91      		pop r29
 246 0092 CF91      		pop r28
 247 0094 0895      		ret
 248               	/* epilogue end (size=3) */
 249               	/* function rf_security_set_ctr_counter size 71 (66) */
 254               	.Lscope2:
 256               		.stabd	78,0,0
 259               	.global	rf_security_enable
 261               	rf_security_enable:
 262               		.stabd	46,0,0
  68:../../../src/radio/cc2420/source/basic_rf.c **** }
  69:../../../src/radio/cc2420/source/basic_rf.c **** 
  70:../../../src/radio/cc2420/source/basic_rf.c **** 
  71:../../../src/radio/cc2420/source/basic_rf.c **** void rf_security_set_key(uint8_t *key)
  72:../../../src/radio/cc2420/source/basic_rf.c **** {
  73:../../../src/radio/cc2420/source/basic_rf.c **** uint8_t n,i;
  74:../../../src/radio/cc2420/source/basic_rf.c **** uint16_t key_buf;
  75:../../../src/radio/cc2420/source/basic_rf.c **** 
  76:../../../src/radio/cc2420/source/basic_rf.c **** // Set AES key
  77:../../../src/radio/cc2420/source/basic_rf.c **** nrk_spin_wait_us(100); 
  78:../../../src/radio/cc2420/source/basic_rf.c **** for(i=0; i<8; i++ )
  79:../../../src/radio/cc2420/source/basic_rf.c **** 	{
  80:../../../src/radio/cc2420/source/basic_rf.c ****     	key_buf=(key[i]<<8)|key[i+1]; 
  81:../../../src/radio/cc2420/source/basic_rf.c ****    	nrk_spin_wait_us(100); 
  82:../../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_WRITE_RAM_LE(&key_buf,(CC2420RAM_KEY0+(i*2)),2,n); 
  83:../../../src/radio/cc2420/source/basic_rf.c **** 	}
  84:../../../src/radio/cc2420/source/basic_rf.c **** 
  85:../../../src/radio/cc2420/source/basic_rf.c **** // Set AES nonce to all zeros
  86:../../../src/radio/cc2420/source/basic_rf.c **** nrk_spin_wait_us(100); 
  87:../../../src/radio/cc2420/source/basic_rf.c **** for(i=0; i<7; i++ )
  88:../../../src/radio/cc2420/source/basic_rf.c **** 	{
  89:../../../src/radio/cc2420/source/basic_rf.c ****     	key_buf=0; 
  90:../../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_WRITE_RAM_LE(&key_buf,(CC2420RAM_TXNONCE+(i*2)),2,n); 
  91:../../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_WRITE_RAM_LE(&key_buf,(CC2420RAM_RXNONCE+(i*2)),2,n); 
  92:../../../src/radio/cc2420/source/basic_rf.c **** 	}
  93:../../../src/radio/cc2420/source/basic_rf.c **** 	// block counter set 1
  94:../../../src/radio/cc2420/source/basic_rf.c ****     	key_buf=1; 
  95:../../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_WRITE_RAM_LE(&key_buf,(CC2420RAM_TXNONCE+14),2,n); 
  96:../../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_WRITE_RAM_LE(&key_buf,(CC2420RAM_RXNONCE+14),2,n); 
  97:../../../src/radio/cc2420/source/basic_rf.c **** }
  98:../../../src/radio/cc2420/source/basic_rf.c **** 
  99:../../../src/radio/cc2420/source/basic_rf.c **** void rf_security_enable(uint8_t *key)
 100:../../../src/radio/cc2420/source/basic_rf.c **** {
 264               	.LM10:
 265               	.LFBB3:
 266               	/* prologue: frame size=0 */
 267               	/* prologue end (size=0) */
 101:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_SECCTRL0, 0x0306); // Enable CTR encryption with key 0
 269               	.LM11:
 270 0096 4098      		cbi 40-0x20,0
 271 0098 89E1      		ldi r24,lo8(25)
 272 009a 8EBD      		out 78-0x20,r24
 273               	.L38:
 275               	.LM12:
 276 009c 0DB4      		in __tmp_reg__,77-0x20
 277 009e 07FE      		sbrs __tmp_reg__,7
 278 00a0 00C0      		rjmp .L38
 279 00a2 83E0      		ldi r24,lo8(3)
 280 00a4 8EBD      		out 78-0x20,r24
 281               	.L40:
 282 00a6 0DB4      		in __tmp_reg__,77-0x20
 283 00a8 07FE      		sbrs __tmp_reg__,7
 284 00aa 00C0      		rjmp .L40
 285 00ac 86E0      		ldi r24,lo8(6)
 286 00ae 8EBD      		out 78-0x20,r24
 287               	.L42:
 288 00b0 0DB4      		in __tmp_reg__,77-0x20
 289 00b2 07FE      		sbrs __tmp_reg__,7
 290 00b4 00C0      		rjmp .L42
 291 00b6 409A      		sbi 40-0x20,0
 102:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_SECCTRL1, 0x0e0e); // Encrypt / Decrypt 18 bytes into header
 293               	.LM13:
 294 00b8 4098      		cbi 40-0x20,0
 295 00ba 8AE1      		ldi r24,lo8(26)
 296 00bc 8EBD      		out 78-0x20,r24
 297               	.L44:
 298 00be 0DB4      		in __tmp_reg__,77-0x20
 299 00c0 07FE      		sbrs __tmp_reg__,7
 300 00c2 00C0      		rjmp .L44
 301 00c4 8EE0      		ldi r24,lo8(14)
 302 00c6 8EBD      		out 78-0x20,r24
 303               	.L46:
 304 00c8 0DB4      		in __tmp_reg__,77-0x20
 305 00ca 07FE      		sbrs __tmp_reg__,7
 306 00cc 00C0      		rjmp .L46
 307 00ce 8EE0      		ldi r24,lo8(14)
 308 00d0 8EBD      		out 78-0x20,r24
 309               	.L48:
 310 00d2 0DB4      		in __tmp_reg__,77-0x20
 311 00d4 07FE      		sbrs __tmp_reg__,7
 312 00d6 00C0      		rjmp .L48
 313 00d8 409A      		sbi 40-0x20,0
 103:../../../src/radio/cc2420/source/basic_rf.c **** 
 104:../../../src/radio/cc2420/source/basic_rf.c **** security_enable=1;
 315               	.LM14:
 316 00da 81E0      		ldi r24,lo8(1)
 317 00dc 8093 0000 		sts security_enable,r24
 318               	/* epilogue: frame size=0 */
 319 00e0 0895      		ret
 320               	/* epilogue end (size=1) */
 321               	/* function rf_security_enable size 38 (37) */
 323               	.Lscope3:
 325               		.stabd	78,0,0
 327               	.global	rf_security_disable
 329               	rf_security_disable:
 330               		.stabd	46,0,0
 105:../../../src/radio/cc2420/source/basic_rf.c **** }
 106:../../../src/radio/cc2420/source/basic_rf.c **** 
 107:../../../src/radio/cc2420/source/basic_rf.c **** 
 108:../../../src/radio/cc2420/source/basic_rf.c **** 
 109:../../../src/radio/cc2420/source/basic_rf.c **** void rf_security_disable()
 110:../../../src/radio/cc2420/source/basic_rf.c **** {
 332               	.LM15:
 333               	.LFBB4:
 334               	/* prologue: frame size=0 */
 335               	/* prologue end (size=0) */
 111:../../../src/radio/cc2420/source/basic_rf.c ****   FASTSPI_SETREG(CC2420_SECCTRL0, 0x01C4); // Turn off "Security enable"
 337               	.LM16:
 338 00e2 4098      		cbi 40-0x20,0
 339 00e4 89E1      		ldi r24,lo8(25)
 340 00e6 8EBD      		out 78-0x20,r24
 341               	.L64:
 343               	.LM17:
 344 00e8 0DB4      		in __tmp_reg__,77-0x20
 345 00ea 07FE      		sbrs __tmp_reg__,7
 346 00ec 00C0      		rjmp .L64
 347 00ee 81E0      		ldi r24,lo8(1)
 348 00f0 8EBD      		out 78-0x20,r24
 349               	.L66:
 350 00f2 0DB4      		in __tmp_reg__,77-0x20
 351 00f4 07FE      		sbrs __tmp_reg__,7
 352 00f6 00C0      		rjmp .L66
 353 00f8 84EC      		ldi r24,lo8(-60)
 354 00fa 8EBD      		out 78-0x20,r24
 355               	.L68:
 356 00fc 0DB4      		in __tmp_reg__,77-0x20
 357 00fe 07FE      		sbrs __tmp_reg__,7
 358 0100 00C0      		rjmp .L68
 359 0102 409A      		sbi 40-0x20,0
 112:../../../src/radio/cc2420/source/basic_rf.c ****   security_enable=0;
 361               	.LM18:
 362 0104 1092 0000 		sts security_enable,__zero_reg__
 363               	/* epilogue: frame size=0 */
 364 0108 0895      		ret
 365               	/* epilogue end (size=1) */
 366               	/* function rf_security_disable size 20 (19) */
 368               	.Lscope4:
 370               		.stabd	78,0,0
 372               	.global	rf_get_sem
 374               	rf_get_sem:
 375               		.stabd	46,0,0
 113:../../../src/radio/cc2420/source/basic_rf.c **** }
 114:../../../src/radio/cc2420/source/basic_rf.c **** 
 115:../../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 116:../../../src/radio/cc2420/source/basic_rf.c **** // The RF settings structure is declared here, since we'll always need halRfInit()
 117:../../../src/radio/cc2420/source/basic_rf.c **** volatile RF_SETTINGS rfSettings;
 118:../../../src/radio/cc2420/source/basic_rf.c **** volatile uint8_t rx_ready;
 119:../../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 120:../../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_t* rf_get_sem()
 121:../../../src/radio/cc2420/source/basic_rf.c **** {
 377               	.LM19:
 378               	.LFBB5:
 379               	/* prologue: frame size=0 */
 380               	/* prologue end (size=0) */
 122:../../../src/radio/cc2420/source/basic_rf.c **** return radio_sem;
 123:../../../src/radio/cc2420/source/basic_rf.c **** }
 382               	.LM20:
 383 010a 8091 0000 		lds r24,radio_sem
 384 010e 9091 0000 		lds r25,(radio_sem)+1
 385               	/* epilogue: frame size=0 */
 386 0112 0895      		ret
 387               	/* epilogue end (size=1) */
 388               	/* function rf_get_sem size 5 (4) */
 390               	.Lscope5:
 392               		.stabd	78,0,0
 394               	.global	rf_addr_decode_enable
 396               	rf_addr_decode_enable:
 397               		.stabd	46,0,0
 124:../../../src/radio/cc2420/source/basic_rf.c **** 
 125:../../../src/radio/cc2420/source/basic_rf.c **** void rf_tx_power(uint8_t pwr)
 126:../../../src/radio/cc2420/source/basic_rf.c **** {
 127:../../../src/radio/cc2420/source/basic_rf.c **** uint16_t tmp;
 128:../../../src/radio/cc2420/source/basic_rf.c ****     //tmp=0x5070;
 129:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 130:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_pend (radio_sem);
 131:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 132:../../../src/radio/cc2420/source/basic_rf.c ****     tmp=0xA0E0;
 133:../../../src/radio/cc2420/source/basic_rf.c ****     tmp=tmp | (pwr&0x1F);  
 134:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_TXCTRL, tmp);   // Set the FIFOP threshold to maximum
 135:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 136:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_post(radio_sem);
 137:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 138:../../../src/radio/cc2420/source/basic_rf.c **** }
 139:../../../src/radio/cc2420/source/basic_rf.c **** void rf_set_channel( uint8_t channel )
 140:../../../src/radio/cc2420/source/basic_rf.c **** {
 141:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 142:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_pend (radio_sem);
 143:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 144:../../../src/radio/cc2420/source/basic_rf.c ****     halRfSetChannel(channel);
 145:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 146:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_post(radio_sem);
 147:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 148:../../../src/radio/cc2420/source/basic_rf.c **** }
 149:../../../src/radio/cc2420/source/basic_rf.c **** 
 150:../../../src/radio/cc2420/source/basic_rf.c **** 
 151:../../../src/radio/cc2420/source/basic_rf.c **** void rf_addr_decode_enable()
 152:../../../src/radio/cc2420/source/basic_rf.c **** {
 399               	.LM21:
 400               	.LFBB6:
 401               	/* prologue: frame size=0 */
 402               	/* prologue end (size=0) */
 153:../../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0 |= 0x0800;
 404               	.LM22:
 405 0114 2091 0000 		lds r18,mdmctrl0
 406 0118 3091 0000 		lds r19,(mdmctrl0)+1
 407 011c 3860      		ori r19,hi8(2048)
 408 011e 3093 0000 		sts (mdmctrl0)+1,r19
 409 0122 2093 0000 		sts mdmctrl0,r18
 154:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, mdmctrl0);
 411               	.LM23:
 412 0126 4098      		cbi 40-0x20,0
 413 0128 81E1      		ldi r24,lo8(17)
 414 012a 8EBD      		out 78-0x20,r24
 415               	.L80:
 417               	.LM24:
 418 012c 0DB4      		in __tmp_reg__,77-0x20
 419 012e 07FE      		sbrs __tmp_reg__,7
 420 0130 00C0      		rjmp .L80
 421 0132 832F      		mov r24,r19
 422 0134 9927      		clr r25
 423 0136 8EBD      		out 78-0x20,r24
 424               	.L82:
 425 0138 0DB4      		in __tmp_reg__,77-0x20
 426 013a 07FE      		sbrs __tmp_reg__,7
 427 013c 00C0      		rjmp .L82
 428 013e 2EBD      		out 78-0x20,r18
 429               	.L84:
 430 0140 0DB4      		in __tmp_reg__,77-0x20
 431 0142 07FE      		sbrs __tmp_reg__,7
 432 0144 00C0      		rjmp .L84
 433 0146 409A      		sbi 40-0x20,0
 434               	/* epilogue: frame size=0 */
 435 0148 0895      		ret
 436               	/* epilogue end (size=1) */
 437               	/* function rf_addr_decode_enable size 27 (26) */
 439               	.Lscope6:
 441               		.stabd	78,0,0
 443               	.global	rf_addr_decode_disable
 445               	rf_addr_decode_disable:
 446               		.stabd	46,0,0
 155:../../../src/radio/cc2420/source/basic_rf.c **** }
 156:../../../src/radio/cc2420/source/basic_rf.c **** 
 157:../../../src/radio/cc2420/source/basic_rf.c **** void rf_addr_decode_disable()
 158:../../../src/radio/cc2420/source/basic_rf.c **** {
 448               	.LM25:
 449               	.LFBB7:
 450               	/* prologue: frame size=0 */
 451               	/* prologue end (size=0) */
 159:../../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0 &= (~0x0800);
 453               	.LM26:
 454 014a 2091 0000 		lds r18,mdmctrl0
 455 014e 3091 0000 		lds r19,(mdmctrl0)+1
 456 0152 377F      		andi r19,hi8(-2049)
 457 0154 3093 0000 		sts (mdmctrl0)+1,r19
 458 0158 2093 0000 		sts mdmctrl0,r18
 160:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, mdmctrl0);
 460               	.LM27:
 461 015c 4098      		cbi 40-0x20,0
 462 015e 81E1      		ldi r24,lo8(17)
 463 0160 8EBD      		out 78-0x20,r24
 464               	.L94:
 466               	.LM28:
 467 0162 0DB4      		in __tmp_reg__,77-0x20
 468 0164 07FE      		sbrs __tmp_reg__,7
 469 0166 00C0      		rjmp .L94
 470 0168 832F      		mov r24,r19
 471 016a 9927      		clr r25
 472 016c 8EBD      		out 78-0x20,r24
 473               	.L96:
 474 016e 0DB4      		in __tmp_reg__,77-0x20
 475 0170 07FE      		sbrs __tmp_reg__,7
 476 0172 00C0      		rjmp .L96
 477 0174 2EBD      		out 78-0x20,r18
 478               	.L98:
 479 0176 0DB4      		in __tmp_reg__,77-0x20
 480 0178 07FE      		sbrs __tmp_reg__,7
 481 017a 00C0      		rjmp .L98
 482 017c 409A      		sbi 40-0x20,0
 483               	/* epilogue: frame size=0 */
 484 017e 0895      		ret
 485               	/* epilogue end (size=1) */
 486               	/* function rf_addr_decode_disable size 28 (27) */
 488               	.Lscope7:
 490               		.stabd	78,0,0
 492               	.global	rf_auto_ack_enable
 494               	rf_auto_ack_enable:
 495               		.stabd	46,0,0
 161:../../../src/radio/cc2420/source/basic_rf.c **** }
 162:../../../src/radio/cc2420/source/basic_rf.c **** 
 163:../../../src/radio/cc2420/source/basic_rf.c **** 
 164:../../../src/radio/cc2420/source/basic_rf.c **** void rf_auto_ack_enable()
 165:../../../src/radio/cc2420/source/basic_rf.c **** {
 497               	.LM29:
 498               	.LFBB8:
 499               	/* prologue: frame size=0 */
 500               	/* prologue end (size=0) */
 166:../../../src/radio/cc2420/source/basic_rf.c ****     auto_ack_enable=1;
 502               	.LM30:
 503 0180 81E0      		ldi r24,lo8(1)
 504 0182 8093 0000 		sts auto_ack_enable,r24
 167:../../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0 |= 0x0010;
 506               	.LM31:
 507 0186 2091 0000 		lds r18,mdmctrl0
 508 018a 3091 0000 		lds r19,(mdmctrl0)+1
 509 018e 2061      		ori r18,lo8(16)
 510 0190 3093 0000 		sts (mdmctrl0)+1,r19
 511 0194 2093 0000 		sts mdmctrl0,r18
 168:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, mdmctrl0); 
 513               	.LM32:
 514 0198 4098      		cbi 40-0x20,0
 515 019a 81E1      		ldi r24,lo8(17)
 516 019c 8EBD      		out 78-0x20,r24
 517               	.L108:
 519               	.LM33:
 520 019e 0DB4      		in __tmp_reg__,77-0x20
 521 01a0 07FE      		sbrs __tmp_reg__,7
 522 01a2 00C0      		rjmp .L108
 523 01a4 832F      		mov r24,r19
 524 01a6 9927      		clr r25
 525 01a8 8EBD      		out 78-0x20,r24
 526               	.L110:
 527 01aa 0DB4      		in __tmp_reg__,77-0x20
 528 01ac 07FE      		sbrs __tmp_reg__,7
 529 01ae 00C0      		rjmp .L110
 530 01b0 2EBD      		out 78-0x20,r18
 531               	.L112:
 532 01b2 0DB4      		in __tmp_reg__,77-0x20
 533 01b4 07FE      		sbrs __tmp_reg__,7
 534 01b6 00C0      		rjmp .L112
 535 01b8 409A      		sbi 40-0x20,0
 536               	/* epilogue: frame size=0 */
 537 01ba 0895      		ret
 538               	/* epilogue end (size=1) */
 539               	/* function rf_auto_ack_enable size 30 (29) */
 541               	.Lscope8:
 543               		.stabd	78,0,0
 545               	.global	rf_auto_ack_disable
 547               	rf_auto_ack_disable:
 548               		.stabd	46,0,0
 169:../../../src/radio/cc2420/source/basic_rf.c **** }
 170:../../../src/radio/cc2420/source/basic_rf.c **** 
 171:../../../src/radio/cc2420/source/basic_rf.c **** void rf_auto_ack_disable()
 172:../../../src/radio/cc2420/source/basic_rf.c **** {
 550               	.LM34:
 551               	.LFBB9:
 552               	/* prologue: frame size=0 */
 553               	/* prologue end (size=0) */
 173:../../../src/radio/cc2420/source/basic_rf.c ****     auto_ack_enable=0;
 555               	.LM35:
 556 01bc 1092 0000 		sts auto_ack_enable,__zero_reg__
 174:../../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0 &= (~0x0010);
 558               	.LM36:
 559 01c0 2091 0000 		lds r18,mdmctrl0
 560 01c4 3091 0000 		lds r19,(mdmctrl0)+1
 561 01c8 2F7E      		andi r18,lo8(-17)
 562 01ca 3093 0000 		sts (mdmctrl0)+1,r19
 563 01ce 2093 0000 		sts mdmctrl0,r18
 175:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, mdmctrl0);  
 565               	.LM37:
 566 01d2 4098      		cbi 40-0x20,0
 567 01d4 81E1      		ldi r24,lo8(17)
 568 01d6 8EBD      		out 78-0x20,r24
 569               	.L122:
 571               	.LM38:
 572 01d8 0DB4      		in __tmp_reg__,77-0x20
 573 01da 07FE      		sbrs __tmp_reg__,7
 574 01dc 00C0      		rjmp .L122
 575 01de 832F      		mov r24,r19
 576 01e0 9927      		clr r25
 577 01e2 8EBD      		out 78-0x20,r24
 578               	.L124:
 579 01e4 0DB4      		in __tmp_reg__,77-0x20
 580 01e6 07FE      		sbrs __tmp_reg__,7
 581 01e8 00C0      		rjmp .L124
 582 01ea 2EBD      		out 78-0x20,r18
 583               	.L126:
 584 01ec 0DB4      		in __tmp_reg__,77-0x20
 585 01ee 07FE      		sbrs __tmp_reg__,7
 586 01f0 00C0      		rjmp .L126
 587 01f2 409A      		sbi 40-0x20,0
 588               	/* epilogue: frame size=0 */
 589 01f4 0895      		ret
 590               	/* epilogue end (size=1) */
 591               	/* function rf_auto_ack_disable size 30 (29) */
 593               	.Lscope9:
 595               		.stabd	78,0,0
 597               	.global	rf_busy
 599               	rf_busy:
 600               		.stabd	46,0,0
 176:../../../src/radio/cc2420/source/basic_rf.c **** }
 177:../../../src/radio/cc2420/source/basic_rf.c **** 
 178:../../../src/radio/cc2420/source/basic_rf.c **** 
 179:../../../src/radio/cc2420/source/basic_rf.c **** void rf_addr_decode_set_my_mac(uint16_t my_mac)
 180:../../../src/radio/cc2420/source/basic_rf.c **** {
 181:../../../src/radio/cc2420/source/basic_rf.c **** uint8_t n;
 182:../../../src/radio/cc2420/source/basic_rf.c ****     rfSettings.myAddr = my_mac;
 183:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 184:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_RAM_LE(&my_mac, CC2420RAM_SHORTADDR, 2, n);
 185:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 186:../../../src/radio/cc2420/source/basic_rf.c **** }
 187:../../../src/radio/cc2420/source/basic_rf.c **** 
 188:../../../src/radio/cc2420/source/basic_rf.c **** 
 189:../../../src/radio/cc2420/source/basic_rf.c **** 
 190:../../../src/radio/cc2420/source/basic_rf.c **** void rf_set_rx(RF_RX_INFO *pRRI, uint8_t channel )
 191:../../../src/radio/cc2420/source/basic_rf.c **** {
 192:../../../src/radio/cc2420/source/basic_rf.c **** 
 193:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 194:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_pend (radio_sem);
 195:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 196:../../../src/radio/cc2420/source/basic_rf.c **** 
 197:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SFLUSHRX);
 198:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SFLUSHRX);
 199:../../../src/radio/cc2420/source/basic_rf.c ****     halRfSetChannel(channel);
 200:../../../src/radio/cc2420/source/basic_rf.c ****     rfSettings.pRxInfo = pRRI;
 201:../../../src/radio/cc2420/source/basic_rf.c **** 
 202:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 203:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_post(radio_sem);
 204:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 205:../../../src/radio/cc2420/source/basic_rf.c **** }
 206:../../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 207:../../../src/radio/cc2420/source/basic_rf.c **** //  void rf_init(RF_RX_INFO *pRRI, uint8_t channel, WORD panId, WORD myAddr)
 208:../../../src/radio/cc2420/source/basic_rf.c **** //
 209:../../../src/radio/cc2420/source/basic_rf.c **** //  DESCRIPTION:
 210:../../../src/radio/cc2420/source/basic_rf.c **** //      Initializes CC2420 for radio communication via the basic RF library functions. Turns on the
 211:../../../src/radio/cc2420/source/basic_rf.c **** //		voltage regulator, resets the CC2420, turns on the crystal oscillator, writes all necessary
 212:../../../src/radio/cc2420/source/basic_rf.c **** //		registers and protocol addresses (for automatic address recognition). Note that the crystal
 213:../../../src/radio/cc2420/source/basic_rf.c **** //		oscillator will remain on (forever).
 214:../../../src/radio/cc2420/source/basic_rf.c **** //
 215:../../../src/radio/cc2420/source/basic_rf.c **** //  ARGUMENTS:
 216:../../../src/radio/cc2420/source/basic_rf.c **** //      RF_RX_INFO *pRRI
 217:../../../src/radio/cc2420/source/basic_rf.c **** //          A pointer the RF_RX_INFO data structure to be used during the first packet reception.
 218:../../../src/radio/cc2420/source/basic_rf.c **** //			The structure can be switched upon packet reception.
 219:../../../src/radio/cc2420/source/basic_rf.c **** //      uint8_t channel
 220:../../../src/radio/cc2420/source/basic_rf.c **** //          The RF channel to be used (11 = 2405 MHz to 26 = 2480 MHz)
 221:../../../src/radio/cc2420/source/basic_rf.c **** //      WORD panId
 222:../../../src/radio/cc2420/source/basic_rf.c **** //          The personal area network identification number
 223:../../../src/radio/cc2420/source/basic_rf.c **** //      WORD myAddr
 224:../../../src/radio/cc2420/source/basic_rf.c **** //          The 16-bit short address which is used by this node. Must together with the PAN ID form
 225:../../../src/radio/cc2420/source/basic_rf.c **** //			unique 32-bit identifier to avoid addressing conflicts. Normally, in a 802.15.4 network, the
 226:../../../src/radio/cc2420/source/basic_rf.c **** //			short address will be given to associated nodes by the PAN coordinator.
 227:../../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 228:../../../src/radio/cc2420/source/basic_rf.c **** void rf_init(RF_RX_INFO *pRRI, uint8_t channel, uint16_t panId, uint16_t myAddr) {
 229:../../../src/radio/cc2420/source/basic_rf.c ****     uint8_t n;
 230:../../../src/radio/cc2420/source/basic_rf.c **** 
 231:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 232:../../../src/radio/cc2420/source/basic_rf.c ****    int8_t v;
 233:../../../src/radio/cc2420/source/basic_rf.c ****     radio_sem = nrk_sem_create(1,RADIO_PRIORITY_CEILING);
 234:../../../src/radio/cc2420/source/basic_rf.c ****     if (radio_sem == NULL)
 235:../../../src/radio/cc2420/source/basic_rf.c ****       nrk_kernel_error_add (NRK_SEMAPHORE_CREATE_ERROR, nrk_get_pid ());
 236:../../../src/radio/cc2420/source/basic_rf.c **** 
 237:../../../src/radio/cc2420/source/basic_rf.c ****   v = nrk_sem_pend (radio_sem);
 238:../../../src/radio/cc2420/source/basic_rf.c ****   if (v == NRK_ERROR) {
 239:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_kprintf (PSTR ("CC2420 ERROR:  Access to semaphore failed\r\n"));
 240:../../../src/radio/cc2420/source/basic_rf.c ****   }
 241:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 242:../../../src/radio/cc2420/source/basic_rf.c **** 
 243:../../../src/radio/cc2420/source/basic_rf.c ****     // Make sure that the voltage regulator is on, and that the reset pin is inactive
 244:../../../src/radio/cc2420/source/basic_rf.c ****     SET_VREG_ACTIVE();
 245:../../../src/radio/cc2420/source/basic_rf.c ****     halWait(1000);
 246:../../../src/radio/cc2420/source/basic_rf.c ****     SET_RESET_ACTIVE();
 247:../../../src/radio/cc2420/source/basic_rf.c ****     halWait(1);
 248:../../../src/radio/cc2420/source/basic_rf.c ****     SET_RESET_INACTIVE();
 249:../../../src/radio/cc2420/source/basic_rf.c ****     halWait(100);
 250:../../../src/radio/cc2420/source/basic_rf.c **** 
 251:../../../src/radio/cc2420/source/basic_rf.c ****     // Initialize the FIFOP external interrupt
 252:../../../src/radio/cc2420/source/basic_rf.c ****     //FIFOP_INT_INIT();
 253:../../../src/radio/cc2420/source/basic_rf.c ****     //ENABLE_FIFOP_INT();
 254:../../../src/radio/cc2420/source/basic_rf.c **** 
 255:../../../src/radio/cc2420/source/basic_rf.c ****     // Turn off all interrupts while we're accessing the CC2420 registers
 256:../../../src/radio/cc2420/source/basic_rf.c **** 	DISABLE_GLOBAL_INT();
 257:../../../src/radio/cc2420/source/basic_rf.c **** 
 258:../../../src/radio/cc2420/source/basic_rf.c ****     // Register modifications
 259:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SXOSCON);
 260:../../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0=0x02E2;
 261:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, mdmctrl0);  // Std Preamble, CRC, no auto ack, no hw addr decod
 262:../../../src/radio/cc2420/source/basic_rf.c ****     //FASTSPI_SETREG(CC2420_MDMCTRL0, 0x0AF2);  // Turn on automatic packet acknowledgment
 263:../../../src/radio/cc2420/source/basic_rf.c **** 						// Turn on hw addre decoding 
 264:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL1, 0x0500); // Set the correlation threshold = 20
 265:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_IOCFG0, 0x007F);   // Set the FIFOP threshold to maximum
 266:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_SECCTRL0, 0x01C4); // Turn off "Security"
 267:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_RXCTRL1, 0x1A56); // All default except
 268:../../../src/radio/cc2420/source/basic_rf.c **** 					    // reference bias current to RX
 269:../../../src/radio/cc2420/source/basic_rf.c **** 					    // bandpass filter is set to 3uA 
 270:../../../src/radio/cc2420/source/basic_rf.c **** 
 271:../../../src/radio/cc2420/source/basic_rf.c **** /*
 272:../../../src/radio/cc2420/source/basic_rf.c ****     // FIXME: remove later for auto ack
 273:../../../src/radio/cc2420/source/basic_rf.c ****     myAddr=MY_MAC;
 274:../../../src/radio/cc2420/source/basic_rf.c ****     panId=0x02;
 275:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, 0x0AF2);  // Turn on automatic packet acknowledgment
 276:../../../src/radio/cc2420/source/basic_rf.c **** //    FASTSPI_SETREG(CC2420_MDMCTRL0, 0x0AE2);  // Turn on automatic packet acknowledgment
 277:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 278:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 279:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_RAM_LE(&myAddr, CC2420RAM_SHORTADDR, 2, n);
 280:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 281:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_RAM_LE(&panId, CC2420RAM_PANID, 2, n);
 282:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 283:../../../src/radio/cc2420/source/basic_rf.c ****     
 284:../../../src/radio/cc2420/source/basic_rf.c ****    printf( "myAddr=%d\r\n",myAddr );
 285:../../../src/radio/cc2420/source/basic_rf.c **** */
 286:../../../src/radio/cc2420/source/basic_rf.c **** 
 287:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 288:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_RAM_LE(&panId, CC2420RAM_PANID, 2, n);
 289:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 290:../../../src/radio/cc2420/source/basic_rf.c **** 
 291:../../../src/radio/cc2420/source/basic_rf.c ****   	ENABLE_GLOBAL_INT();
 292:../../../src/radio/cc2420/source/basic_rf.c **** 
 293:../../../src/radio/cc2420/source/basic_rf.c ****     // Set the RF channel
 294:../../../src/radio/cc2420/source/basic_rf.c ****     halRfSetChannel(channel);
 295:../../../src/radio/cc2420/source/basic_rf.c **** 
 296:../../../src/radio/cc2420/source/basic_rf.c ****     // Turn interrupts back on
 297:../../../src/radio/cc2420/source/basic_rf.c **** 	ENABLE_GLOBAL_INT();
 298:../../../src/radio/cc2420/source/basic_rf.c **** 
 299:../../../src/radio/cc2420/source/basic_rf.c **** 	// Set the protocol configuration
 300:../../../src/radio/cc2420/source/basic_rf.c **** 	rfSettings.pRxInfo = pRRI;
 301:../../../src/radio/cc2420/source/basic_rf.c **** 	rfSettings.panId = panId;
 302:../../../src/radio/cc2420/source/basic_rf.c **** 	rfSettings.myAddr = myAddr;
 303:../../../src/radio/cc2420/source/basic_rf.c **** 	rfSettings.txSeqNumber = 0;
 304:../../../src/radio/cc2420/source/basic_rf.c ****         rfSettings.receiveOn = FALSE;
 305:../../../src/radio/cc2420/source/basic_rf.c **** 
 306:../../../src/radio/cc2420/source/basic_rf.c **** 	// Wait for the crystal oscillator to become stable
 307:../../../src/radio/cc2420/source/basic_rf.c ****     halRfWaitForCrystalOscillator();
 308:../../../src/radio/cc2420/source/basic_rf.c **** 
 309:../../../src/radio/cc2420/source/basic_rf.c **** 	// Write the short address and the PAN ID to the CC2420 RAM (requires that the XOSC is on and stab
 310:../../../src/radio/cc2420/source/basic_rf.c ****    //	DISABLE_GLOBAL_INT();
 311:../../../src/radio/cc2420/source/basic_rf.c **** //    FASTSPI_WRITE_RAM_LE(&myAddr, CC2420RAM_SHORTADDR, 2, n);
 312:../../../src/radio/cc2420/source/basic_rf.c **** //    FASTSPI_WRITE_RAM_LE(&panId, CC2420RAM_PANID, 2, n);
 313:../../../src/radio/cc2420/source/basic_rf.c ****   //	ENABLE_GLOBAL_INT();
 314:../../../src/radio/cc2420/source/basic_rf.c **** 
 315:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 316:../../../src/radio/cc2420/source/basic_rf.c ****   v = nrk_sem_post (radio_sem);
 317:../../../src/radio/cc2420/source/basic_rf.c ****   if (v == NRK_ERROR) {
 318:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_kprintf (PSTR ("CC2420 ERROR:  Release of semaphore failed\r\n"));
 319:../../../src/radio/cc2420/source/basic_rf.c ****     _nrk_errno_set (2);
 320:../../../src/radio/cc2420/source/basic_rf.c ****   }
 321:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 322:../../../src/radio/cc2420/source/basic_rf.c **** 
 323:../../../src/radio/cc2420/source/basic_rf.c **** auto_ack_enable=0;
 324:../../../src/radio/cc2420/source/basic_rf.c **** security_enable=0;
 325:../../../src/radio/cc2420/source/basic_rf.c **** last_pkt_encrypted=0;
 326:../../../src/radio/cc2420/source/basic_rf.c **** } // rf_init() 
 327:../../../src/radio/cc2420/source/basic_rf.c **** 
 328:../../../src/radio/cc2420/source/basic_rf.c **** 
 329:../../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 330:../../../src/radio/cc2420/source/basic_rf.c **** //  void rf_rx_on(void)
 331:../../../src/radio/cc2420/source/basic_rf.c **** //
 332:../../../src/radio/cc2420/source/basic_rf.c **** //  DESCRIPTION:
 333:../../../src/radio/cc2420/source/basic_rf.c **** //      Enables the CC2420 receiver and the FIFOP interrupt. When a packet is received through this
 334:../../../src/radio/cc2420/source/basic_rf.c **** //      interrupt, it will call rf_rx_callback(...), which must be defined by the application
 335:../../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 336:../../../src/radio/cc2420/source/basic_rf.c **** void rf_rx_on(void) {
 337:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 338:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_pend (radio_sem);
 339:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 340:../../../src/radio/cc2420/source/basic_rf.c ****     	rfSettings.receiveOn = TRUE;
 341:../../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SRXON);
 342:../../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHRX);
 343:../../../src/radio/cc2420/source/basic_rf.c **** 	rx_ready=0;
 344:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 345:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_post(radio_sem);
 346:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 347:../../../src/radio/cc2420/source/basic_rf.c ****     //	ENABLE_FIFOP_INT();
 348:../../../src/radio/cc2420/source/basic_rf.c **** } // rf_rx_on() 
 349:../../../src/radio/cc2420/source/basic_rf.c **** 
 350:../../../src/radio/cc2420/source/basic_rf.c **** void rf_polling_rx_on(void) {
 351:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 352:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_pend (radio_sem);
 353:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 354:../../../src/radio/cc2420/source/basic_rf.c ****     	rfSettings.receiveOn = TRUE;
 355:../../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SRXON);
 356:../../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHRX);
 357:../../../src/radio/cc2420/source/basic_rf.c **** 	rx_ready=0;
 358:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 359:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_post(radio_sem);
 360:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 361:../../../src/radio/cc2420/source/basic_rf.c **** } // rf_rx_on() 
 362:../../../src/radio/cc2420/source/basic_rf.c **** 
 363:../../../src/radio/cc2420/source/basic_rf.c **** 
 364:../../../src/radio/cc2420/source/basic_rf.c **** /**********************************************************
 365:../../../src/radio/cc2420/source/basic_rf.c **** // Here is a sample of the rf_rx_callback() that should
 366:../../../src/radio/cc2420/source/basic_rf.c **** // be placed in your application
 367:../../../src/radio/cc2420/source/basic_rf.c **** 
 368:../../../src/radio/cc2420/source/basic_rf.c **** RF_RX_INFO* rf_rx_callback(RF_RX_INFO *pRRI) {
 369:../../../src/radio/cc2420/source/basic_rf.c **** 	// Its okay to leave this empty...    
 370:../../../src/radio/cc2420/source/basic_rf.c **** 	return pRRI;
 371:../../../src/radio/cc2420/source/basic_rf.c **** }  
 372:../../../src/radio/cc2420/source/basic_rf.c **** ***********************************************************/
 373:../../../src/radio/cc2420/source/basic_rf.c **** 
 374:../../../src/radio/cc2420/source/basic_rf.c **** 
 375:../../../src/radio/cc2420/source/basic_rf.c **** 
 376:../../../src/radio/cc2420/source/basic_rf.c **** 
 377:../../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 378:../../../src/radio/cc2420/source/basic_rf.c **** //  void rf_rx_off(void)
 379:../../../src/radio/cc2420/source/basic_rf.c **** //
 380:../../../src/radio/cc2420/source/basic_rf.c **** //  DESCRIPTION:
 381:../../../src/radio/cc2420/source/basic_rf.c **** //      Disables the CC2420 receiver and the FIFOP interrupt.
 382:../../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 383:../../../src/radio/cc2420/source/basic_rf.c **** void rf_rx_off(void) {
 384:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 385:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_pend (radio_sem);
 386:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 387:../../../src/radio/cc2420/source/basic_rf.c **** 	// XXX
 388:../../../src/radio/cc2420/source/basic_rf.c ****     	//SET_VREG_INACTIVE();	
 389:../../../src/radio/cc2420/source/basic_rf.c **** 	rfSettings.receiveOn = FALSE;
 390:../../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SRFOFF);
 391:../../../src/radio/cc2420/source/basic_rf.c **** 	rx_ready=0;
 392:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 393:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_post(radio_sem);
 394:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 395:../../../src/radio/cc2420/source/basic_rf.c ****     //	DISABLE_FIFOP_INT();
 396:../../../src/radio/cc2420/source/basic_rf.c **** } // rf_rx_off() 
 397:../../../src/radio/cc2420/source/basic_rf.c **** 
 398:../../../src/radio/cc2420/source/basic_rf.c **** 
 399:../../../src/radio/cc2420/source/basic_rf.c **** /**************************************************************************
 400:../../../src/radio/cc2420/source/basic_rf.c **** This function is the same as normal TX, only it records actual transmission
 401:../../../src/radio/cc2420/source/basic_rf.c **** starting time for calculating offset for SYNC
 402:../../../src/radio/cc2420/source/basic_rf.c **** **************************************************************************/
 403:../../../src/radio/cc2420/source/basic_rf.c **** uint8_t rf_tx_tdma_packet(RF_TX_INFO *pRTI, uint16_t slot_start_time, uint16_t tx_guard_time, uint1
 404:../../../src/radio/cc2420/source/basic_rf.c **** 	uint16_t frameControlField;
 405:../../../src/radio/cc2420/source/basic_rf.c ****     	uint8_t packetLength;
 406:../../../src/radio/cc2420/source/basic_rf.c ****     	uint8_t success;
 407:../../../src/radio/cc2420/source/basic_rf.c ****     	uint8_t spiStatusByte;
 408:../../../src/radio/cc2420/source/basic_rf.c ****    	uint8_t checksum,i;
 409:../../../src/radio/cc2420/source/basic_rf.c **** 	uint8_t timestamp;
 410:../../../src/radio/cc2420/source/basic_rf.c **** 
 411:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 412:../../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend (radio_sem);
 413:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 414:../../../src/radio/cc2420/source/basic_rf.c **** 	timestamp=_nrk_os_timer_get();
 415:../../../src/radio/cc2420/source/basic_rf.c **** 	// XXX 2 below are hacks...
 416:../../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHRX);
 417:../../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHRX);
 418:../../../src/radio/cc2420/source/basic_rf.c ****     // Wait until the transceiver is idle
 419:../../../src/radio/cc2420/source/basic_rf.c ****      while (FIFOP_IS_1 || SFD_IS_1);
 420:../../../src/radio/cc2420/source/basic_rf.c ****     // Turn off global interrupts to avoid interference on the SPI interface
 421:../../../src/radio/cc2420/source/basic_rf.c ****       DISABLE_GLOBAL_INT();
 422:../../../src/radio/cc2420/source/basic_rf.c **** 	// Flush the TX FIFO just in case...
 423:../../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHTX);
 424:../../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHTX);
 425:../../../src/radio/cc2420/source/basic_rf.c **** 
 426:../../../src/radio/cc2420/source/basic_rf.c ****     checksum=0;
 427:../../../src/radio/cc2420/source/basic_rf.c ****     for(i=0; i<pRTI->length; i++ )
 428:../../../src/radio/cc2420/source/basic_rf.c ****     {
 429:../../../src/radio/cc2420/source/basic_rf.c **** 	// lets do our own payload checksum because we don't trust the CRC
 430:../../../src/radio/cc2420/source/basic_rf.c **** 	checksum+=pRTI->pPayload[i];
 431:../../../src/radio/cc2420/source/basic_rf.c ****     }
 432:../../../src/radio/cc2420/source/basic_rf.c ****     packetLength = pRTI->length + RF_PACKET_OVERHEAD_SIZE + CHECKSUM_OVERHEAD;
 433:../../../src/radio/cc2420/source/basic_rf.c ****     //printf("packet length is %d, packet is %s.\n\r",packetLength,pRTI->pPayload);
 434:../../../src/radio/cc2420/source/basic_rf.c ****     //nrk_set_led(3);
 435:../../../src/radio/cc2420/source/basic_rf.c ****     //do { } while(_nrk_get_high_speed_timer()<(tx_guard_time));
 436:../../../src/radio/cc2420/source/basic_rf.c ****     
 437:../../../src/radio/cc2420/source/basic_rf.c ****     // Write the packet to the TX FIFO (the FCS is appended automatically when AUTOCRC is enabled)
 438:../../../src/radio/cc2420/source/basic_rf.c ****     // These are only the MAC AGNOSTIC parameters...
 439:../../../src/radio/cc2420/source/basic_rf.c ****     // Slots for example are at a higher layer since they assume TDMA
 440:../../../src/radio/cc2420/source/basic_rf.c ****     
 441:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*)&packetLength, 1);               // Packet length
 442:../../../src/radio/cc2420/source/basic_rf.c ****     frameControlField = pRTI->ackRequest ? RF_FCF_ACK : RF_FCF_NOACK;
 443:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &frameControlField, 2);         // Frame control field
 444:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &rfSettings.txSeqNumber, 1);    // Sequence number
 445:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &rfSettings.panId, 2);          // Dest. PAN ID
 446:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &pRTI->destAddr, 2);            // Dest. address
 447:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &rfSettings.myAddr, 2);         // Source address
 448:../../../src/radio/cc2420/source/basic_rf.c **** 
 449:../../../src/radio/cc2420/source/basic_rf.c ****     nrk_high_speed_timer_wait(slot_start_time,tx_guard_time);
 450:../../../src/radio/cc2420/source/basic_rf.c ****     
 451:../../../src/radio/cc2420/source/basic_rf.c **** if (pRTI->cca == TRUE)
 452:../../../src/radio/cc2420/source/basic_rf.c ****     {
 453:../../../src/radio/cc2420/source/basic_rf.c ****     uint8_t cnt;
 454:../../../src/radio/cc2420/source/basic_rf.c ****       if (!rfSettings.receiveOn)
 455:../../../src/radio/cc2420/source/basic_rf.c **** 	{
 456:../../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_STROBE (CC2420_SRXON);
 457:../../../src/radio/cc2420/source/basic_rf.c **** 	}
 458:../../../src/radio/cc2420/source/basic_rf.c **** 
 459:../../../src/radio/cc2420/source/basic_rf.c ****       // Wait for the RSSI value to become valid
 460:../../../src/radio/cc2420/source/basic_rf.c ****       /*do
 461:../../../src/radio/cc2420/source/basic_rf.c **** 	{
 462:../../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_UPD_STATUS (spiStatusByte);
 463:../../../src/radio/cc2420/source/basic_rf.c **** 	}
 464:../../../src/radio/cc2420/source/basic_rf.c ****       while (!(spiStatusByte & BM (CC2420_RSSI_VALID)));*/
 465:../../../src/radio/cc2420/source/basic_rf.c **** 
 466:../../../src/radio/cc2420/source/basic_rf.c ****       // TX begins after the CCA check has passed
 467:../../../src/radio/cc2420/source/basic_rf.c ****       cnt = 0;
 468:../../../src/radio/cc2420/source/basic_rf.c ****       do
 469:../../../src/radio/cc2420/source/basic_rf.c **** 	{
 470:../../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_STROBE (CC2420_STXONCCA);
 471:../../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_UPD_STATUS (spiStatusByte);
 472:../../../src/radio/cc2420/source/basic_rf.c **** 	  cnt++;
 473:../../../src/radio/cc2420/source/basic_rf.c **** 	  if (cnt > 100)
 474:../../../src/radio/cc2420/source/basic_rf.c **** 	    {
 475:../../../src/radio/cc2420/source/basic_rf.c **** 	      ENABLE_GLOBAL_INT ();
 476:../../../src/radio/cc2420/source/basic_rf.c **** 		nrk_sem_post(radio_sem);
 477:../../../src/radio/cc2420/source/basic_rf.c **** 		//printf("transmission fail.\n\r");
 478:../../../src/radio/cc2420/source/basic_rf.c **** 	      return FALSE;
 479:../../../src/radio/cc2420/source/basic_rf.c **** 	    }
 480:../../../src/radio/cc2420/source/basic_rf.c **** 	  halWait (100);
 481:../../../src/radio/cc2420/source/basic_rf.c **** 	}
 482:../../../src/radio/cc2420/source/basic_rf.c ****       while (!(spiStatusByte & BM (CC2420_TX_ACTIVE)));
 483:../../../src/radio/cc2420/source/basic_rf.c **** 	//printf("In basic_rf.c: cnt is %d\n\r", cnt);
 484:../../../src/radio/cc2420/source/basic_rf.c ****     }
 485:../../../src/radio/cc2420/source/basic_rf.c ****   else
 486:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE (CC2420_STXON);
 487:../../../src/radio/cc2420/source/basic_rf.c **** 	 //nrk_gpio_set(DEBUG_0);
 488:../../../src/radio/cc2420/source/basic_rf.c **** 
 489:../../../src/radio/cc2420/source/basic_rf.c ****     // get the high speed timer value
 490:../../../src/radio/cc2420/source/basic_rf.c **** nrk_gpio_set(NRK_DEBUG_0);
 491:../../../src/radio/cc2420/source/basic_rf.c ****     *tx_start_time = (volatile)TCNT1;
 492:../../../src/radio/cc2420/source/basic_rf.c ****     // Fill in the rest of the packet now
 493:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) pRTI->pPayload, pRTI->length);  // Payload
 494:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &checksum, 1);         // Checksum
 495:../../../src/radio/cc2420/source/basic_rf.c **** 
 496:../../../src/radio/cc2420/source/basic_rf.c **** 
 497:../../../src/radio/cc2420/source/basic_rf.c **** 
 498:../../../src/radio/cc2420/source/basic_rf.c ****     //nrk_spin_wait_us(200);
 499:../../../src/radio/cc2420/source/basic_rf.c **** //  FASTSPI_STROBE(CC2420_STXON);
 500:../../../src/radio/cc2420/source/basic_rf.c ****    // Wait for the transmission to begin before exiting (makes sure that this function cannot be ca
 501:../../../src/radio/cc2420/source/basic_rf.c **** 	// a second time, and thereby cancelling the first transmission (observe the FIFOP + SFD test abov
 502:../../../src/radio/cc2420/source/basic_rf.c **** 	while (!SFD_IS_1);
 503:../../../src/radio/cc2420/source/basic_rf.c **** 	success = TRUE;
 504:../../../src/radio/cc2420/source/basic_rf.c **** 	// Turn interrupts back on
 505:../../../src/radio/cc2420/source/basic_rf.c **** //	ENABLE_GLOBAL_INT();
 506:../../../src/radio/cc2420/source/basic_rf.c **** 
 507:../../../src/radio/cc2420/source/basic_rf.c ****     // Wait for the acknowledge to be received, if any
 508:../../../src/radio/cc2420/source/basic_rf.c ****     /*if (pRTI->ackRequest) {
 509:../../../src/radio/cc2420/source/basic_rf.c **** 		rfSettings.ackReceived = FALSE;
 510:../../../src/radio/cc2420/source/basic_rf.c **** 
 511:../../../src/radio/cc2420/source/basic_rf.c **** 		// Wait for the SFD to go low again
 512:../../../src/radio/cc2420/source/basic_rf.c **** 		while (SFD_IS_1);
 513:../../../src/radio/cc2420/source/basic_rf.c ****         // We'll enter RX automatically, so just wait until we can be sure that the ack reception s
 514:../../../src/radio/cc2420/source/basic_rf.c ****         // The timeout consists of a 12-symbol turnaround time, the ack packet duration, and a smal
 515:../../../src/radio/cc2420/source/basic_rf.c ****         halWait((12 * RF_SYMBOL_DURATION) + (RF_ACK_DURATION) + (2 * RF_SYMBOL_DURATION) + 100);
 516:../../../src/radio/cc2420/source/basic_rf.c **** 
 517:../../../src/radio/cc2420/source/basic_rf.c **** 		// If an acknowledgment has been received (by the FIFOP interrupt), the ackReceived flag should b
 518:../../../src/radio/cc2420/source/basic_rf.c **** 		success = rfSettings.ackReceived;
 519:../../../src/radio/cc2420/source/basic_rf.c ****     }*/
 520:../../../src/radio/cc2420/source/basic_rf.c **** 
 521:../../../src/radio/cc2420/source/basic_rf.c ****     
 522:../../../src/radio/cc2420/source/basic_rf.c **** 	// Turn off the receiver if it should not continue to be enabled
 523:../../../src/radio/cc2420/source/basic_rf.c ****     DISABLE_GLOBAL_INT();
 524:../../../src/radio/cc2420/source/basic_rf.c ****     // XXX hack, temp out
 525:../../../src/radio/cc2420/source/basic_rf.c ****     //if (!rfSettings.receiveOn) { while (SFD_IS_1); /*FASTSPI_STROBE(CC2420_SRFOFF);*/ }
 526:../../../src/radio/cc2420/source/basic_rf.c ****     // while (SFD_IS_1); 
 527:../../../src/radio/cc2420/source/basic_rf.c ****     while (SFD_IS_1); // wait for packet to finish
 528:../../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHRX);
 529:../../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHRX);
 530:../../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHTX);
 531:../../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHTX);
 532:../../../src/radio/cc2420/source/basic_rf.c **** 
 533:../../../src/radio/cc2420/source/basic_rf.c **** FASTSPI_STROBE(CC2420_SRFOFF);  // shut off radio
 534:../../../src/radio/cc2420/source/basic_rf.c ****     ENABLE_GLOBAL_INT();
 535:../../../src/radio/cc2420/source/basic_rf.c ****     
 536:../../../src/radio/cc2420/source/basic_rf.c **** 
 537:../../../src/radio/cc2420/source/basic_rf.c ****     // Increment the sequence number, and return the result
 538:../../../src/radio/cc2420/source/basic_rf.c ****     rfSettings.txSeqNumber++;
 539:../../../src/radio/cc2420/source/basic_rf.c **** //	while (SFD_IS_1);
 540:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 541:../../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
 542:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 543:../../../src/radio/cc2420/source/basic_rf.c **** 	//printf("sent success? %d.\n\r",success);
 544:../../../src/radio/cc2420/source/basic_rf.c ****     return success;
 545:../../../src/radio/cc2420/source/basic_rf.c **** 
 546:../../../src/radio/cc2420/source/basic_rf.c **** }
 547:../../../src/radio/cc2420/source/basic_rf.c **** 
 548:../../../src/radio/cc2420/source/basic_rf.c **** 
 549:../../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 550:../../../src/radio/cc2420/source/basic_rf.c **** //  BYTE rf_tx_packet(RF_TX_INFO *pRTI)
 551:../../../src/radio/cc2420/source/basic_rf.c **** //
 552:../../../src/radio/cc2420/source/basic_rf.c **** //  DESCRIPTION:
 553:../../../src/radio/cc2420/source/basic_rf.c **** //		Transmits a packet using the IEEE 802.15.4 MAC data packet format with short addresses. CCA is
 554:../../../src/radio/cc2420/source/basic_rf.c **** //		measured only once before backet transmission (not compliant with 802.15.4 CSMA-CA).
 555:../../../src/radio/cc2420/source/basic_rf.c **** //		The function returns:
 556:../../../src/radio/cc2420/source/basic_rf.c **** //			- When pRTI->ackRequest is FALSE: After the transmission has begun (SFD gone high)
 557:../../../src/radio/cc2420/source/basic_rf.c **** //			- When pRTI->ackRequest is TRUE: After the acknowledgment has been received/declared missing.
 558:../../../src/radio/cc2420/source/basic_rf.c **** //		The acknowledgment is received through the FIFOP interrupt.
 559:../../../src/radio/cc2420/source/basic_rf.c **** //
 560:../../../src/radio/cc2420/source/basic_rf.c **** //  ARGUMENTS:
 561:../../../src/radio/cc2420/source/basic_rf.c **** //      RF_TX_INFO *pRTI
 562:../../../src/radio/cc2420/source/basic_rf.c **** //          The transmission structure, which contains all relevant info about the packet.
 563:../../../src/radio/cc2420/source/basic_rf.c **** //
 564:../../../src/radio/cc2420/source/basic_rf.c **** //  RETURN VALUE:
 565:../../../src/radio/cc2420/source/basic_rf.c **** //		uint8_t
 566:../../../src/radio/cc2420/source/basic_rf.c **** //			Successful transmission (acknowledgment received)
 567:../../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 568:../../../src/radio/cc2420/source/basic_rf.c **** uint8_t rf_tx_packet(RF_TX_INFO *pRTI) {
 569:../../../src/radio/cc2420/source/basic_rf.c **** 	uint16_t frameControlField;
 570:../../../src/radio/cc2420/source/basic_rf.c ****     uint8_t packetLength, length;
 571:../../../src/radio/cc2420/source/basic_rf.c ****     uint8_t success;
 572:../../../src/radio/cc2420/source/basic_rf.c ****     uint8_t spiStatusByte;
 573:../../../src/radio/cc2420/source/basic_rf.c ****    uint8_t checksum,i;
 574:../../../src/radio/cc2420/source/basic_rf.c **** 	
 575:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 576:../../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
 577:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 578:../../../src/radio/cc2420/source/basic_rf.c **** 
 579:../../../src/radio/cc2420/source/basic_rf.c **** if(security_enable)
 580:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_STXENC);
 581:../../../src/radio/cc2420/source/basic_rf.c **** 
 582:../../../src/radio/cc2420/source/basic_rf.c ****     checksum=0;
 583:../../../src/radio/cc2420/source/basic_rf.c ****     for(i=0; i<pRTI->length; i++ )
 584:../../../src/radio/cc2420/source/basic_rf.c ****     {
 585:../../../src/radio/cc2420/source/basic_rf.c **** 	// lets do our own payload checksum because we don't trust the CRC
 586:../../../src/radio/cc2420/source/basic_rf.c **** 	checksum+=pRTI->pPayload[i];
 587:../../../src/radio/cc2420/source/basic_rf.c ****     }
 588:../../../src/radio/cc2420/source/basic_rf.c ****     // Write the packet to the TX FIFO (the FCS is appended automatically when AUTOCRC is enabled)
 589:../../../src/radio/cc2420/source/basic_rf.c **** 
 590:../../../src/radio/cc2420/source/basic_rf.c ****     // These are only the MAC AGNOSTIC parameters...
 591:../../../src/radio/cc2420/source/basic_rf.c ****     // Slots for example are at a slighly higher later since they assume TDMA
 592:../../../src/radio/cc2420/source/basic_rf.c ****     packetLength = pRTI->length + RF_PACKET_OVERHEAD_SIZE + CHECKSUM_OVERHEAD;
 593:../../../src/radio/cc2420/source/basic_rf.c ****     if(security_enable) packetLength+=4;  // for CTR counter
 594:../../../src/radio/cc2420/source/basic_rf.c **** 
 595:../../../src/radio/cc2420/source/basic_rf.c **** 
 596:../../../src/radio/cc2420/source/basic_rf.c ****    	// XXX 2 below are hacks...
 597:../../../src/radio/cc2420/source/basic_rf.c **** 	//FASTSPI_STROBE(CC2420_SFLUSHRX);
 598:../../../src/radio/cc2420/source/basic_rf.c **** 	//FASTSPI_STROBE(CC2420_SFLUSHRX);
 599:../../../src/radio/cc2420/source/basic_rf.c ****     // Wait until the transceiver is idle
 600:../../../src/radio/cc2420/source/basic_rf.c ****     while (FIFOP_IS_1 || SFD_IS_1);
 601:../../../src/radio/cc2420/source/basic_rf.c ****     // Turn off global interrupts to avoid interference on the SPI interface
 602:../../../src/radio/cc2420/source/basic_rf.c ****     DISABLE_GLOBAL_INT();
 603:../../../src/radio/cc2420/source/basic_rf.c **** 	// Flush the TX FIFO just in case...
 604:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SFLUSHTX);
 605:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SFLUSHTX);
 606:../../../src/radio/cc2420/source/basic_rf.c **** 
 607:../../../src/radio/cc2420/source/basic_rf.c **** /*
 608:../../../src/radio/cc2420/source/basic_rf.c ****     // Turn on RX if necessary
 609:../../../src/radio/cc2420/source/basic_rf.c ****     if (!rfSettings.receiveOn) {
 610:../../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_STROBE(CC2420_SRXON);
 611:../../../src/radio/cc2420/source/basic_rf.c **** 		}
 612:../../../src/radio/cc2420/source/basic_rf.c **** 
 613:../../../src/radio/cc2420/source/basic_rf.c ****     // Wait for the RSSI value to become valid
 614:../../../src/radio/cc2420/source/basic_rf.c ****     do {
 615:../../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_UPD_STATUS(spiStatusByte);
 616:../../../src/radio/cc2420/source/basic_rf.c ****     } while (!(spiStatusByte & BM(CC2420_RSSI_VALID)));
 617:../../../src/radio/cc2420/source/basic_rf.c **** 
 618:../../../src/radio/cc2420/source/basic_rf.c **** 	// TX begins after the CCA check has passed
 619:../../../src/radio/cc2420/source/basic_rf.c ****     do {
 620:../../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_STROBE(CC2420_STXONCCA);
 621:../../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_UPD_STATUS(spiStatusByte);
 622:../../../src/radio/cc2420/source/basic_rf.c **** 		halWait(100);
 623:../../../src/radio/cc2420/source/basic_rf.c ****     } while (!(spiStatusByte & BM(CC2420_TX_ACTIVE)));
 624:../../../src/radio/cc2420/source/basic_rf.c **** */
 625:../../../src/radio/cc2420/source/basic_rf.c **** 
 626:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*)&packetLength, 1);               // Packet length
 627:../../../src/radio/cc2420/source/basic_rf.c ****     frameControlField = RF_FCF_NOACK;   // default
 628:../../../src/radio/cc2420/source/basic_rf.c ****     if(auto_ack_enable) frameControlField |= RF_ACK_BM;
 629:../../../src/radio/cc2420/source/basic_rf.c ****     if(security_enable) frameControlField |= RF_SEC_BM;
 630:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &frameControlField, 2);         // Frame control field
 631:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &rfSettings.txSeqNumber, 1);    // Sequence number
 632:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &rfSettings.panId, 2);          // Dest. PAN ID
 633:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &pRTI->destAddr, 2);            // Dest. address
 634:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &rfSettings.myAddr, 2);         // Source address
 635:../../../src/radio/cc2420/source/basic_rf.c ****     if(security_enable)
 636:../../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_WRITE_FIFO((uint8_t*) &tx_ctr, 4);         // CTR counter 
 637:../../../src/radio/cc2420/source/basic_rf.c ****    
 638:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) pRTI->pPayload, pRTI->length);  // Payload
 639:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &checksum, 1);         // Checksum
 640:../../../src/radio/cc2420/source/basic_rf.c **** 
 641:../../../src/radio/cc2420/source/basic_rf.c **** if (pRTI->cca == TRUE)
 642:../../../src/radio/cc2420/source/basic_rf.c **** {
 643:../../../src/radio/cc2420/source/basic_rf.c ****     uint8_t cnt;
 644:../../../src/radio/cc2420/source/basic_rf.c ****      if (!rfSettings.receiveOn)
 645:../../../src/radio/cc2420/source/basic_rf.c **** 	{
 646:../../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_STROBE (CC2420_SRXON);
 647:../../../src/radio/cc2420/source/basic_rf.c **** 	}
 648:../../../src/radio/cc2420/source/basic_rf.c ****       
 649:../../../src/radio/cc2420/source/basic_rf.c ****       // Wait for the RSSI value to become valid
 650:../../../src/radio/cc2420/source/basic_rf.c ****       do
 651:../../../src/radio/cc2420/source/basic_rf.c **** 	{
 652:../../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_UPD_STATUS (spiStatusByte);
 653:../../../src/radio/cc2420/source/basic_rf.c **** 	}
 654:../../../src/radio/cc2420/source/basic_rf.c ****       while (!(spiStatusByte & BM (CC2420_RSSI_VALID)));      
 655:../../../src/radio/cc2420/source/basic_rf.c ****       // TX begins after the CCA check has passed
 656:../../../src/radio/cc2420/source/basic_rf.c ****       cnt = 0;
 657:../../../src/radio/cc2420/source/basic_rf.c ****       do
 658:../../../src/radio/cc2420/source/basic_rf.c **** 	{
 659:../../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_STROBE (CC2420_STXONCCA);
 660:../../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_UPD_STATUS (spiStatusByte);
 661:../../../src/radio/cc2420/source/basic_rf.c **** 	  cnt++;
 662:../../../src/radio/cc2420/source/basic_rf.c **** 	  if (cnt > 100)
 663:../../../src/radio/cc2420/source/basic_rf.c **** 	    {
 664:../../../src/radio/cc2420/source/basic_rf.c **** 	      ENABLE_GLOBAL_INT ();
 665:../../../src/radio/cc2420/source/basic_rf.c **** 	      nrk_sem_post(radio_sem);
 666:../../../src/radio/cc2420/source/basic_rf.c **** 	      return FALSE;
 667:../../../src/radio/cc2420/source/basic_rf.c **** 	    }
 668:../../../src/radio/cc2420/source/basic_rf.c **** 	  halWait (100);
 669:../../../src/radio/cc2420/source/basic_rf.c **** 	}
 670:../../../src/radio/cc2420/source/basic_rf.c ****       while (!(spiStatusByte & BM (CC2420_TX_ACTIVE)));
 671:../../../src/radio/cc2420/source/basic_rf.c ****     }
 672:../../../src/radio/cc2420/source/basic_rf.c ****   else
 673:../../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE (CC2420_STXON); 
 674:../../../src/radio/cc2420/source/basic_rf.c **** 
 675:../../../src/radio/cc2420/source/basic_rf.c **** 
 676:../../../src/radio/cc2420/source/basic_rf.c ****   ENABLE_GLOBAL_INT();
 677:../../../src/radio/cc2420/source/basic_rf.c **** 	// Wait for the transmission to begin before exiting (makes sure that this function cannot be call
 678:../../../src/radio/cc2420/source/basic_rf.c **** 	// a second time, and thereby cancelling the first transmission (observe the FIFOP + SFD test abov
 679:../../../src/radio/cc2420/source/basic_rf.c ****   while (!SFD_IS_1);
 680:../../../src/radio/cc2420/source/basic_rf.c ****   success = TRUE;
 681:../../../src/radio/cc2420/source/basic_rf.c **** 
 682:../../../src/radio/cc2420/source/basic_rf.c **** 	// Turn interrupts back on
 683:../../../src/radio/cc2420/source/basic_rf.c **** //	ENABLE_GLOBAL_INT();
 684:../../../src/radio/cc2420/source/basic_rf.c **** 
 685:../../../src/radio/cc2420/source/basic_rf.c ****     while (SFD_IS_1); // wait for packet to finish
 686:../../../src/radio/cc2420/source/basic_rf.c **** 
 687:../../../src/radio/cc2420/source/basic_rf.c ****     // Wait for the acknowledge to be received, if any
 688:../../../src/radio/cc2420/source/basic_rf.c ****     if (auto_ack_enable) {
 689:../../../src/radio/cc2420/source/basic_rf.c **** //		rfSettings.ackReceived = FALSE;
 690:../../../src/radio/cc2420/source/basic_rf.c **** 
 691:../../../src/radio/cc2420/source/basic_rf.c **** 		// Wait for the SFD to go low again
 692:../../../src/radio/cc2420/source/basic_rf.c **** 		//	while (SFD_IS_1);
 693:../../../src/radio/cc2420/source/basic_rf.c ****         // We'll enter RX automatically, so just wait until we can be sure that the 
 694:../../../src/radio/cc2420/source/basic_rf.c **** 	// ack reception should have finished
 695:../../../src/radio/cc2420/source/basic_rf.c ****         // The timeout consists of a 12-symbol turnaround time, the ack packet duration, 
 696:../../../src/radio/cc2420/source/basic_rf.c **** 	// and a small margin
 697:../../../src/radio/cc2420/source/basic_rf.c ****         halWait((12 * RF_SYMBOL_DURATION) + (RF_ACK_DURATION) + (2 * RF_SYMBOL_DURATION) + 100);
 698:../../../src/radio/cc2420/source/basic_rf.c **** 
 699:../../../src/radio/cc2420/source/basic_rf.c **** 	if(FIFO_IS_1)
 700:../../../src/radio/cc2420/source/basic_rf.c **** 	{
 701:../../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_READ_FIFO_BYTE(length);
 702:../../../src/radio/cc2420/source/basic_rf.c **** 	length &= RF_LENGTH_MASK; // Ignore MSB
 703:../../../src/radio/cc2420/source/basic_rf.c **** 	    success = TRUE;
 704:../../../src/radio/cc2420/source/basic_rf.c **** 
 705:../../../src/radio/cc2420/source/basic_rf.c **** 	}else
 706:../../../src/radio/cc2420/source/basic_rf.c **** 	{
 707:../../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 708:../../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 709:../../../src/radio/cc2420/source/basic_rf.c **** 	    success = FALSE;
 710:../../../src/radio/cc2420/source/basic_rf.c **** 	}
 711:../../../src/radio/cc2420/source/basic_rf.c **** 
 712:../../../src/radio/cc2420/source/basic_rf.c ****     }
 713:../../../src/radio/cc2420/source/basic_rf.c **** 
 714:../../../src/radio/cc2420/source/basic_rf.c ****     
 715:../../../src/radio/cc2420/source/basic_rf.c **** 	// Turn off the receiver if it should not continue to be enabled
 716:../../../src/radio/cc2420/source/basic_rf.c ****     
 717:../../../src/radio/cc2420/source/basic_rf.c ****     DISABLE_GLOBAL_INT();	
 718:../../../src/radio/cc2420/source/basic_rf.c **** 	//FASTSPI_STROBE(CC2420_SFLUSHRX);
 719:../../../src/radio/cc2420/source/basic_rf.c **** 	//FASTSPI_STROBE(CC2420_SFLUSHRX);
 720:../../../src/radio/cc2420/source/basic_rf.c **** 	//FASTSPI_STROBE(CC2420_SFLUSHTX);
 721:../../../src/radio/cc2420/source/basic_rf.c **** 	//FASTSPI_STROBE(CC2420_SFLUSHTX);
 722:../../../src/radio/cc2420/source/basic_rf.c ****     
 723:../../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SRFOFF);  // shut off radio
 724:../../../src/radio/cc2420/source/basic_rf.c ****     ENABLE_GLOBAL_INT();
 725:../../../src/radio/cc2420/source/basic_rf.c **** 
 726:../../../src/radio/cc2420/source/basic_rf.c ****     // agr XXX hack to test time issue
 727:../../../src/radio/cc2420/source/basic_rf.c ****     //rf_rx_on(); 
 728:../../../src/radio/cc2420/source/basic_rf.c **** 
 729:../../../src/radio/cc2420/source/basic_rf.c ****     // Increment the sequence number, and return the result
 730:../../../src/radio/cc2420/source/basic_rf.c ****     rfSettings.txSeqNumber++;
 731:../../../src/radio/cc2420/source/basic_rf.c **** //	while (SFD_IS_1);
 732:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 733:../../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
 734:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 735:../../../src/radio/cc2420/source/basic_rf.c ****     return success;
 736:../../../src/radio/cc2420/source/basic_rf.c **** 
 737:../../../src/radio/cc2420/source/basic_rf.c **** }
 738:../../../src/radio/cc2420/source/basic_rf.c **** 
 739:../../../src/radio/cc2420/source/basic_rf.c **** uint8_t rf_busy()
 740:../../../src/radio/cc2420/source/basic_rf.c **** {
 602               	.LM39:
 603               	.LFBB10:
 604               	/* prologue: frame size=0 */
 605               	/* prologue end (size=0) */
 741:../../../src/radio/cc2420/source/basic_rf.c **** return SFD_IS_1;
 607               	.LM40:
 608 01f6 89B1      		in r24,41-0x20
 609 01f8 9927      		clr r25
 610 01fa 66E0      		ldi r22,6
 611 01fc 9695      	1:	lsr r25
 612 01fe 8795      		ror r24
 613 0200 6A95      		dec r22
 614 0202 01F4      		brne 1b
 742:../../../src/radio/cc2420/source/basic_rf.c **** }
 616               	.LM41:
 617 0204 8170      		andi r24,lo8(1)
 618 0206 9070      		andi r25,hi8(1)
 619               	/* epilogue: frame size=0 */
 620 0208 0895      		ret
 621               	/* epilogue end (size=1) */
 622               	/* function rf_busy size 10 (9) */
 624               	.Lscope10:
 626               		.stabd	78,0,0
 628               	.global	rf_rx_check_fifop
 630               	rf_rx_check_fifop:
 631               		.stabd	46,0,0
 743:../../../src/radio/cc2420/source/basic_rf.c **** 
 744:../../../src/radio/cc2420/source/basic_rf.c **** uint8_t rf_rx_check_fifop()
 745:../../../src/radio/cc2420/source/basic_rf.c **** {
 633               	.LM42:
 634               	.LFBB11:
 635               	/* prologue: frame size=0 */
 636               	/* prologue end (size=0) */
 746:../../../src/radio/cc2420/source/basic_rf.c **** return FIFOP_IS_1;
 638               	.LM43:
 639 020a 8CB1      		in r24,44-0x20
 640 020c 9927      		clr r25
 641 020e 87FD      		sbrc r24,7
 642 0210 9095      		com r25
 747:../../../src/radio/cc2420/source/basic_rf.c **** }
 644               	.LM44:
 645 0212 8827      		clr r24
 646 0214 990F      		lsl r25
 647 0216 881F      		rol r24
 648 0218 9927      		clr r25
 649               	/* epilogue: frame size=0 */
 650 021a 0895      		ret
 651               	/* epilogue end (size=1) */
 652               	/* function rf_rx_check_fifop size 9 (8) */
 654               	.Lscope11:
 656               		.stabd	78,0,0
 658               	.global	rf_rx_check_sfd
 660               	rf_rx_check_sfd:
 661               		.stabd	46,0,0
 748:../../../src/radio/cc2420/source/basic_rf.c **** 
 749:../../../src/radio/cc2420/source/basic_rf.c **** 
 750:../../../src/radio/cc2420/source/basic_rf.c **** uint8_t rf_rx_check_sfd()
 751:../../../src/radio/cc2420/source/basic_rf.c **** {
 663               	.LM45:
 664               	.LFBB12:
 665               	/* prologue: frame size=0 */
 666               	/* prologue end (size=0) */
 752:../../../src/radio/cc2420/source/basic_rf.c **** return SFD_IS_1;
 668               	.LM46:
 669 021c 89B1      		in r24,41-0x20
 670 021e 9927      		clr r25
 671 0220 E6E0      		ldi r30,6
 672 0222 9695      	1:	lsr r25
 673 0224 8795      		ror r24
 674 0226 EA95      		dec r30
 675 0228 01F4      		brne 1b
 753:../../../src/radio/cc2420/source/basic_rf.c **** }
 677               	.LM47:
 678 022a 8170      		andi r24,lo8(1)
 679 022c 9070      		andi r25,hi8(1)
 680               	/* epilogue: frame size=0 */
 681 022e 0895      		ret
 682               	/* epilogue end (size=1) */
 683               	/* function rf_rx_check_sfd size 10 (9) */
 685               	.Lscope12:
 687               		.stabd	78,0,0
 689               	.global	rf_rx_packet
 691               	rf_rx_packet:
 692               		.stabd	46,0,0
 754:../../../src/radio/cc2420/source/basic_rf.c **** uint16_t tmp_blah;
 755:../../../src/radio/cc2420/source/basic_rf.c **** 
 756:../../../src/radio/cc2420/source/basic_rf.c **** int8_t rf_polling_rx_packet(bool ack,uint8_t len)
 757:../../../src/radio/cc2420/source/basic_rf.c **** {
 758:../../../src/radio/cc2420/source/basic_rf.c **** uint8_t tmp;
 759:../../../src/radio/cc2420/source/basic_rf.c **** 	
 760:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 761:../../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
 762:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 763:../../../src/radio/cc2420/source/basic_rf.c **** 
 764:../../../src/radio/cc2420/source/basic_rf.c ****     if(FIFOP_IS_1 )
 765:../../../src/radio/cc2420/source/basic_rf.c ****     {
 766:../../../src/radio/cc2420/source/basic_rf.c **** 	uint16_t frameControlField;
 767:../../../src/radio/cc2420/source/basic_rf.c **** 	int8_t length;
 768:../../../src/radio/cc2420/source/basic_rf.c **** 	uint8_t pFooter[2];
 769:../../../src/radio/cc2420/source/basic_rf.c **** 	uint8_t checksum,rx_checksum,i;
 770:../../../src/radio/cc2420/source/basic_rf.c **** 			
 771:../../../src/radio/cc2420/source/basic_rf.c **** 	last_pkt_encrypted=0;
 772:../../../src/radio/cc2420/source/basic_rf.c **** 
 773:../../../src/radio/cc2420/source/basic_rf.c **** //	FASTSPI_STROBE(CC2420_SRXON);
 774:../../../src/radio/cc2420/source/basic_rf.c **** //	FASTSPI_STROBE(CC2420_SFLUSHRX);
 775:../../../src/radio/cc2420/source/basic_rf.c ****     
 776:../../../src/radio/cc2420/source/basic_rf.c **** //	while(!SFD_IS_1);
 777:../../../src/radio/cc2420/source/basic_rf.c **** //  XXX Need to make sure SFD has gone down to be sure packet finished!
 778:../../../src/radio/cc2420/source/basic_rf.c **** //	while(SFD_IS_1);
 779:../../../src/radio/cc2420/source/basic_rf.c ****     // Clean up and exit in case of FIFO overflow, which is indicated by FIFOP = 1 and FIFO = 0
 780:../../../src/radio/cc2420/source/basic_rf.c **** 	if((FIFOP_IS_1) && (!(FIFO_IS_1))) {	   
 781:../../../src/radio/cc2420/source/basic_rf.c **** 	    // always read 1 byte before flush (data sheet pg 62)
 782:../../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_READ_FIFO_BYTE(tmp);  
 783:../../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 784:../../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 785:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 786:../../../src/radio/cc2420/source/basic_rf.c **** 	    nrk_sem_post(radio_sem);
 787:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 788:../../../src/radio/cc2420/source/basic_rf.c **** 	    return -1;
 789:../../../src/radio/cc2420/source/basic_rf.c **** 	}
 790:../../../src/radio/cc2420/source/basic_rf.c **** 
 791:../../../src/radio/cc2420/source/basic_rf.c **** 	// Payload length
 792:../../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_READ_FIFO_BYTE(length);
 793:../../../src/radio/cc2420/source/basic_rf.c **** 	length &= RF_LENGTH_MASK; // Ignore MSB
 794:../../../src/radio/cc2420/source/basic_rf.c ****     // Ignore the packet if the length is too short
 795:../../../src/radio/cc2420/source/basic_rf.c ****     if(length==0){  
 796:../../../src/radio/cc2420/source/basic_rf.c **** 	    // always read 1 byte before flush (data sheet pg 62)
 797:../../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_READ_FIFO_BYTE(tmp);  
 798:../../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 799:../../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 800:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 801:../../../src/radio/cc2420/source/basic_rf.c **** 	    nrk_sem_post(radio_sem);
 802:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 803:../../../src/radio/cc2420/source/basic_rf.c **** 	return -2;
 804:../../../src/radio/cc2420/source/basic_rf.c **** 	}
 805:../../../src/radio/cc2420/source/basic_rf.c ****     if (length < RF_ACK_PACKET_SIZE || (length-RF_PACKET_OVERHEAD_SIZE)> rfSettings.pRxInfo->max_le
 806:../../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_READ_FIFO_GARBAGE(length);
 807:../../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_READ_FIFO_BYTE(tmp);  
 808:../../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 809:../../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 810:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 811:../../../src/radio/cc2420/source/basic_rf.c **** 	    nrk_sem_post(radio_sem);
 812:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 813:../../../src/radio/cc2420/source/basic_rf.c **** 	return -3;
 814:../../../src/radio/cc2420/source/basic_rf.c **** 	//printf_u( "Bad length: %d %d\n",length, rfSettings.pRxInfo->max_length );
 815:../../../src/radio/cc2420/source/basic_rf.c ****     // Otherwise, if the length is valid, then proceed with the rest of the packet
 816:../../../src/radio/cc2420/source/basic_rf.c ****     } else {
 817:../../../src/radio/cc2420/source/basic_rf.c ****         // Register the payload length
 818:../../../src/radio/cc2420/source/basic_rf.c ****         rfSettings.pRxInfo->length = length - RF_PACKET_OVERHEAD_SIZE - CHECKSUM_OVERHEAD;
 819:../../../src/radio/cc2420/source/basic_rf.c **** 	if(ack==true&&rfSettings.pRxInfo->length!=len){
 820:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 821:../../../src/radio/cc2420/source/basic_rf.c **** 	    nrk_sem_post(radio_sem);
 822:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 823:../../../src/radio/cc2420/source/basic_rf.c **** 	    return -6;
 824:../../../src/radio/cc2420/source/basic_rf.c **** }
 825:../../../src/radio/cc2420/source/basic_rf.c ****         // Read the frame control field and the data sequence number
 826:../../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_READ_FIFO_NO_WAIT((uint8_t*) &frameControlField, 2);
 827:../../../src/radio/cc2420/source/basic_rf.c ****         rfSettings.pRxInfo->ackRequest = !!(frameControlField & RF_FCF_ACK_BM);
 828:../../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_READ_FIFO_BYTE(rfSettings.pRxInfo->seqNumber);
 829:../../../src/radio/cc2420/source/basic_rf.c **** 
 830:../../../src/radio/cc2420/source/basic_rf.c **** 		// Is this an acknowledgment packet?
 831:../../../src/radio/cc2420/source/basic_rf.c **** /*
 832:../../../src/radio/cc2420/source/basic_rf.c ****     	if ((length == RF_ACK_PACKET_SIZE) && (frameControlField == RF_ACK_FCF) && (rfSettings.pRxInfo
 833:../../../src/radio/cc2420/source/basic_rf.c **** 
 834:../../../src/radio/cc2420/source/basic_rf.c ****  	       	// Read the footer and check for CRC OK
 835:../../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_READ_FIFO_NO_WAIT((uint8_t*) pFooter, 2);
 836:../../../src/radio/cc2420/source/basic_rf.c **** 
 837:../../../src/radio/cc2420/source/basic_rf.c **** 			// Indicate the successful ack reception (this flag is polled by the transmission routine)
 838:../../../src/radio/cc2420/source/basic_rf.c **** 			if (pFooter[1] & RF_CRC_OK_BM) rfSettings.ackReceived = TRUE;
 839:../../../src/radio/cc2420/source/basic_rf.c ****  
 840:../../../src/radio/cc2420/source/basic_rf.c **** 		// Too small to be a valid packet?
 841:../../../src/radio/cc2420/source/basic_rf.c **** 		} else if (length < RF_PACKET_OVERHEAD_SIZE) {
 842:../../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_READ_FIFO_GARBAGE(length - 3);
 843:../../../src/radio/cc2420/source/basic_rf.c **** 
 844:../../../src/radio/cc2420/source/basic_rf.c **** 		// Receive the rest of the packet
 845:../../../src/radio/cc2420/source/basic_rf.c **** 		} else {
 846:../../../src/radio/cc2420/source/basic_rf.c **** */
 847:../../../src/radio/cc2420/source/basic_rf.c **** 			// Skip the destination PAN and address (that's taken care of by harware address recognition!)
 848:../../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_READ_FIFO_GARBAGE(4);
 849:../../../src/radio/cc2420/source/basic_rf.c **** 
 850:../../../src/radio/cc2420/source/basic_rf.c **** 			// Read the source address
 851:../../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_READ_FIFO_NO_WAIT((uint8_t*) &rfSettings.pRxInfo->srcAddr, 2);
 852:../../../src/radio/cc2420/source/basic_rf.c **** 
 853:../../../src/radio/cc2420/source/basic_rf.c **** 		        if(frameControlField & RF_SEC_BM)
 854:../../../src/radio/cc2420/source/basic_rf.c **** 			{
 855:../../../src/radio/cc2420/source/basic_rf.c **** 				uint8_t n;
 856:../../../src/radio/cc2420/source/basic_rf.c **** 				// READ rx_ctr and set it
 857:../../../src/radio/cc2420/source/basic_rf.c **** 				FASTSPI_READ_FIFO_NO_WAIT((uint8_t*) &rx_ctr, 4);
 858:../../../src/radio/cc2420/source/basic_rf.c **** 				FASTSPI_WRITE_RAM(&rx_ctr[0],(CC2420RAM_RXNONCE+9),2,n); 
 859:../../../src/radio/cc2420/source/basic_rf.c **** 				FASTSPI_WRITE_RAM(&rx_ctr[2],(CC2420RAM_RXNONCE+11),2,n); 
 860:../../../src/radio/cc2420/source/basic_rf.c **** 				FASTSPI_STROBE(CC2420_SRXDEC);  // if packet is encrypted then decrypt 
 861:../../../src/radio/cc2420/source/basic_rf.c **** 				last_pkt_encrypted=1;
 862:../../../src/radio/cc2420/source/basic_rf.c ****         			rfSettings.pRxInfo->length -= 4;
 863:../../../src/radio/cc2420/source/basic_rf.c **** 			}
 864:../../../src/radio/cc2420/source/basic_rf.c **** 	
 865:../../../src/radio/cc2420/source/basic_rf.c **** 			// Read the packet payload
 866:../../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_READ_FIFO_NO_WAIT(rfSettings.pRxInfo->pPayload, rfSettings.pRxInfo->length);
 867:../../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_READ_FIFO_NO_WAIT(&rx_checksum, 1 );
 868:../../../src/radio/cc2420/source/basic_rf.c **** 
 869:../../../src/radio/cc2420/source/basic_rf.c **** 			// Read the footer to get the RSSI value
 870:../../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_READ_FIFO_NO_WAIT((uint8_t*) pFooter, 2);
 871:../../../src/radio/cc2420/source/basic_rf.c **** 			rfSettings.pRxInfo->rssi = pFooter[0];
 872:../../../src/radio/cc2420/source/basic_rf.c **** 			checksum=0;	
 873:../../../src/radio/cc2420/source/basic_rf.c **** 			for(i=0; i<rfSettings.pRxInfo->length; i++ )
 874:../../../src/radio/cc2420/source/basic_rf.c **** 			{
 875:../../../src/radio/cc2420/source/basic_rf.c **** 				checksum+=rfSettings.pRxInfo->pPayload[i];
 876:../../../src/radio/cc2420/source/basic_rf.c **** 				//printf( "%d ", rfSettings.pRxInfo->pPayload[i]);
 877:../../../src/radio/cc2420/source/basic_rf.c **** 			}
 878:../../../src/radio/cc2420/source/basic_rf.c **** 
 879:../../../src/radio/cc2420/source/basic_rf.c **** 			if(checksum!=rx_checksum) {
 880:../../../src/radio/cc2420/source/basic_rf.c **** 				//printf( "Checksum failed %d %d\r",rx_checksum, checksum );
 881:../../../src/radio/cc2420/source/basic_rf.c **** 	    			// always read 1 byte before flush (data sheet pg 62)
 882:../../../src/radio/cc2420/source/basic_rf.c **** 	   			FASTSPI_READ_FIFO_BYTE(tmp);  
 883:../../../src/radio/cc2420/source/basic_rf.c **** 	    			FASTSPI_STROBE(CC2420_SFLUSHRX);
 884:../../../src/radio/cc2420/source/basic_rf.c **** 	    			FASTSPI_STROBE(CC2420_SFLUSHRX);
 885:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 886:../../../src/radio/cc2420/source/basic_rf.c **** 	    			nrk_sem_post(radio_sem);
 887:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 888:../../../src/radio/cc2420/source/basic_rf.c **** 				return -4;
 889:../../../src/radio/cc2420/source/basic_rf.c **** 			}	
 890:../../../src/radio/cc2420/source/basic_rf.c **** 			if (pFooter[1] & RF_CRC_OK_BM) {
 891:../../../src/radio/cc2420/source/basic_rf.c **** 				//rfSettings.pRxInfo = rf_rx_callback(rfSettings.pRxInfo);
 892:../../../src/radio/cc2420/source/basic_rf.c **** 				rx_ready++;
 893:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 894:../../../src/radio/cc2420/source/basic_rf.c **** 	    			nrk_sem_post(radio_sem);
 895:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 896:../../../src/radio/cc2420/source/basic_rf.c **** 				return 1;
 897:../../../src/radio/cc2420/source/basic_rf.c **** 			} else
 898:../../../src/radio/cc2420/source/basic_rf.c **** 	    		{
 899:../../../src/radio/cc2420/source/basic_rf.c **** 	    		// always read 1 byte before flush (data sheet pg 62)
 900:../../../src/radio/cc2420/source/basic_rf.c **** 	   		FASTSPI_READ_FIFO_BYTE(tmp);  
 901:../../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_STROBE(CC2420_SFLUSHRX);
 902:../../../src/radio/cc2420/source/basic_rf.c **** 	    		FASTSPI_STROBE(CC2420_SFLUSHRX);
 903:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 904:../../../src/radio/cc2420/source/basic_rf.c **** 	    		nrk_sem_post(radio_sem);
 905:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 906:../../../src/radio/cc2420/source/basic_rf.c **** 			return -5;
 907:../../../src/radio/cc2420/source/basic_rf.c **** 			}
 908:../../../src/radio/cc2420/source/basic_rf.c **** //		}
 909:../../../src/radio/cc2420/source/basic_rf.c ****     
 910:../../../src/radio/cc2420/source/basic_rf.c **** 	}
 911:../../../src/radio/cc2420/source/basic_rf.c **** 
 912:../../../src/radio/cc2420/source/basic_rf.c **** 
 913:../../../src/radio/cc2420/source/basic_rf.c ****     }
 914:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 915:../../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
 916:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 917:../../../src/radio/cc2420/source/basic_rf.c **** return 0;
 918:../../../src/radio/cc2420/source/basic_rf.c **** }
 919:../../../src/radio/cc2420/source/basic_rf.c **** 
 920:../../../src/radio/cc2420/source/basic_rf.c **** int8_t rf_rx_packet()
 921:../../../src/radio/cc2420/source/basic_rf.c **** {
 694               	.LM48:
 695               	.LFBB13:
 696               	/* prologue: frame size=0 */
 697               	/* prologue end (size=0) */
 922:../../../src/radio/cc2420/source/basic_rf.c **** int8_t tmp;
 923:../../../src/radio/cc2420/source/basic_rf.c **** if(rx_ready>0) { tmp=rx_ready; rx_ready=0; return tmp;}
 699               	.LM49:
 700 0230 8091 0000 		lds r24,rx_ready
 701 0234 8823      		tst r24
 702 0236 01F4      		brne .L143
 704               	.LM50:
 705 0238 80E0      		ldi r24,lo8(0)
 706 023a 90E0      		ldi r25,hi8(0)
 707 023c 0895      		ret
 708               	.L143:
 709 023e 8091 0000 		lds r24,rx_ready
 710 0242 1092 0000 		sts rx_ready,__zero_reg__
 711 0246 9927      		clr r25
 712 0248 87FD      		sbrc r24,7
 713 024a 9095      		com r25
 924:../../../src/radio/cc2420/source/basic_rf.c **** return 0;
 925:../../../src/radio/cc2420/source/basic_rf.c **** }
 715               	.LM51:
 716 024c 0895      		ret
 717               	/* epilogue: frame size=0 */
 718               	/* epilogue: noreturn */
 719               	/* epilogue end (size=0) */
 720               	/* function rf_rx_packet size 15 (15) */
 722               	.Lscope13:
 724               		.stabd	78,0,0
 726               	.global	rf_flush_rx_fifo
 728               	rf_flush_rx_fifo:
 729               		.stabd	46,0,0
 926:../../../src/radio/cc2420/source/basic_rf.c **** 
 927:../../../src/radio/cc2420/source/basic_rf.c **** 
 928:../../../src/radio/cc2420/source/basic_rf.c **** inline void rf_flush_rx_fifo()
 929:../../../src/radio/cc2420/source/basic_rf.c **** {
 731               	.LM52:
 732               	.LFBB14:
 733               	/* prologue: frame size=0 */
 734               	/* prologue end (size=0) */
 930:../../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_STROBE(CC2420_SFLUSHRX);
 736               	.LM53:
 737 024e 4098      		cbi 40-0x20,0
 738 0250 88E0      		ldi r24,lo8(8)
 739 0252 8EBD      		out 78-0x20,r24
 740               	.L148:
 742               	.LM54:
 743 0254 0DB4      		in __tmp_reg__,77-0x20
 744 0256 07FE      		sbrs __tmp_reg__,7
 745 0258 00C0      		rjmp .L148
 746 025a 409A      		sbi 40-0x20,0
 931:../../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_STROBE(CC2420_SFLUSHRX);
 748               	.LM55:
 749 025c 4098      		cbi 40-0x20,0
 750 025e 88E0      		ldi r24,lo8(8)
 751 0260 8EBD      		out 78-0x20,r24
 752               	.L150:
 753 0262 0DB4      		in __tmp_reg__,77-0x20
 754 0264 07FE      		sbrs __tmp_reg__,7
 755 0266 00C0      		rjmp .L150
 756 0268 409A      		sbi 40-0x20,0
 757               	/* epilogue: frame size=0 */
 758 026a 0895      		ret
 759               	/* epilogue end (size=1) */
 760               	/* function rf_flush_rx_fifo size 15 (14) */
 762               	.Lscope14:
 764               		.stabd	78,0,0
 766               	.global	rf_carrier_off
 768               	rf_carrier_off:
 769               		.stabd	46,0,0
 932:../../../src/radio/cc2420/source/basic_rf.c **** }
 933:../../../src/radio/cc2420/source/basic_rf.c **** 
 934:../../../src/radio/cc2420/source/basic_rf.c **** void rf_set_cca_thresh(int8_t t)
 935:../../../src/radio/cc2420/source/basic_rf.c **** {
 936:../../../src/radio/cc2420/source/basic_rf.c **** // default is -32
 937:../../../src/radio/cc2420/source/basic_rf.c **** // Higher number is less sensitive
 938:../../../src/radio/cc2420/source/basic_rf.c **** uint16_t val;
 939:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 940:../../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
 941:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 942:../../../src/radio/cc2420/source/basic_rf.c **** 
 943:../../../src/radio/cc2420/source/basic_rf.c **** val=(t<<8) | 0x80;
 944:../../../src/radio/cc2420/source/basic_rf.c **** FASTSPI_SETREG(CC2420_RSSI, val); 
 945:../../../src/radio/cc2420/source/basic_rf.c **** 
 946:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 947:../../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
 948:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 949:../../../src/radio/cc2420/source/basic_rf.c **** }
 950:../../../src/radio/cc2420/source/basic_rf.c **** 
 951:../../../src/radio/cc2420/source/basic_rf.c **** void rf_test_mode()
 952:../../../src/radio/cc2420/source/basic_rf.c **** {
 953:../../../src/radio/cc2420/source/basic_rf.c **** 
 954:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 955:../../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
 956:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 957:../../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_STROBE(CC2420_SRFOFF); //stop radio
 958:../../../src/radio/cc2420/source/basic_rf.c **** 	// NOTE ON SETTING CC2420_MDMCTRL1
 959:../../../src/radio/cc2420/source/basic_rf.c **** 	// 
 960:../../../src/radio/cc2420/source/basic_rf.c **** 	// RF studio" uses TX_MODE=3 (CC2420_MDMCTRL1=0x050C)
 961:../../../src/radio/cc2420/source/basic_rf.c **** 	// to send an unmodulated carrier; data sheet says TX_MODE 
 962:../../../src/radio/cc2420/source/basic_rf.c **** 	// can be 2 or 3. So it should not matter...
 963:../../../src/radio/cc2420/source/basic_rf.c **** 	// HOWEVER, using (TX_MODE=3) sometimes causes problems when 
 964:../../../src/radio/cc2420/source/basic_rf.c **** 	// going back to "data" mode!
 965:../../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_SETREG(CC2420_MDMCTRL1, 0x0508); // MDMCTRL1 with TX_MODE=2
 966:../../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_SETREG(CC2420_DACTST, 0x1800); // send unmodulated carrier
 967:../../../src/radio/cc2420/source/basic_rf.c **** 	rf_flush_rx_fifo();
 968:../../../src/radio/cc2420/source/basic_rf.c **** 
 969:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 970:../../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
 971:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 972:../../../src/radio/cc2420/source/basic_rf.c **** }
 973:../../../src/radio/cc2420/source/basic_rf.c **** 
 974:../../../src/radio/cc2420/source/basic_rf.c **** 
 975:../../../src/radio/cc2420/source/basic_rf.c **** /**********************************************************
 976:../../../src/radio/cc2420/source/basic_rf.c ****  * set the radio into "normal" mode (buffered TXFIFO) and go into (data) receive */
 977:../../../src/radio/cc2420/source/basic_rf.c **** void rf_data_mode() {
 978:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 979:../../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
 980:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 981:../../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_STROBE(CC2420_SRFOFF); //stop radio
 982:../../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_SETREG(CC2420_MDMCTRL1, 0x0500); // default MDMCTRL1 value
 983:../../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_SETREG(CC2420_DACTST, 0); // default value
 984:../../../src/radio/cc2420/source/basic_rf.c ****         rf_flush_rx_fifo();
 985:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 986:../../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
 987:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 988:../../../src/radio/cc2420/source/basic_rf.c **** }
 989:../../../src/radio/cc2420/source/basic_rf.c **** 
 990:../../../src/radio/cc2420/source/basic_rf.c **** /**********************************************************
 991:../../../src/radio/cc2420/source/basic_rf.c ****  * start sending a carrier pulse
 992:../../../src/radio/cc2420/source/basic_rf.c ****  * assumes wdrf_radio_test_mode() was called before doing this
 993:../../../src/radio/cc2420/source/basic_rf.c ****  */
 994:../../../src/radio/cc2420/source/basic_rf.c **** void rf_carrier_on()
 995:../../../src/radio/cc2420/source/basic_rf.c **** {
 996:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 997:../../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
 998:../../../src/radio/cc2420/source/basic_rf.c **** #endif
 999:../../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_STROBE(CC2420_STXON); // tell radio to start sending
1000:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1001:../../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
1002:../../../src/radio/cc2420/source/basic_rf.c **** #endif
1003:../../../src/radio/cc2420/source/basic_rf.c **** }
1004:../../../src/radio/cc2420/source/basic_rf.c **** 
1005:../../../src/radio/cc2420/source/basic_rf.c **** /**********************************************************
1006:../../../src/radio/cc2420/source/basic_rf.c ****  * stop sending a carrier pulse; set the radio to idle state
1007:../../../src/radio/cc2420/source/basic_rf.c ****  */
1008:../../../src/radio/cc2420/source/basic_rf.c **** void rf_carrier_off()
1009:../../../src/radio/cc2420/source/basic_rf.c **** {
 771               	.LM56:
 772               	.LFBB15:
 773               	/* prologue: frame size=0 */
 774               	/* prologue end (size=0) */
1010:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1011:../../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
 776               	.LM57:
 777 026c 8091 0000 		lds r24,radio_sem
 778 0270 9091 0000 		lds r25,(radio_sem)+1
 779 0274 0E94 0000 		call nrk_sem_pend
1012:../../../src/radio/cc2420/source/basic_rf.c **** #endif
1013:../../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_STROBE(CC2420_SRFOFF); // stop radio
 781               	.LM58:
 782 0278 4098      		cbi 40-0x20,0
 783 027a 86E0      		ldi r24,lo8(6)
 784 027c 8EBD      		out 78-0x20,r24
 785               	.L158:
 787               	.LM59:
 788 027e 0DB4      		in __tmp_reg__,77-0x20
 789 0280 07FE      		sbrs __tmp_reg__,7
 790 0282 00C0      		rjmp .L158
 791 0284 409A      		sbi 40-0x20,0
1014:../../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1015:../../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
 793               	.LM60:
 794 0286 8091 0000 		lds r24,radio_sem
 795 028a 9091 0000 		lds r25,(radio_sem)+1
 796 028e 0E94 0000 		call nrk_sem_post
 797               	/* epilogue: frame size=0 */
 798 0292 0895      		ret
 799               	/* epilogue end (size=1) */
 800               	/* function rf_carrier_off size 20 (19) */
 802               	.Lscope15:
 804               		.stabd	78,0,0
 806               	.global	rf_carrier_on
 808               	rf_carrier_on:
 809               		.stabd	46,0,0
 811               	.LM61:
 812               	.LFBB16:
 813               	/* prologue: frame size=0 */
 814               	/* prologue end (size=0) */
 816               	.LM62:
 817 0294 8091 0000 		lds r24,radio_sem
 818 0298 9091 0000 		lds r25,(radio_sem)+1
 819 029c 0E94 0000 		call nrk_sem_pend
 821               	.LM63:
 822 02a0 4098      		cbi 40-0x20,0
 823 02a2 84E0      		ldi r24,lo8(4)
 824 02a4 8EBD      		out 78-0x20,r24
 825               	.L164:
 827               	.LM64:
 828 02a6 0DB4      		in __tmp_reg__,77-0x20
 829 02a8 07FE      		sbrs __tmp_reg__,7
 830 02aa 00C0      		rjmp .L164
 831 02ac 409A      		sbi 40-0x20,0
 833               	.LM65:
 834 02ae 8091 0000 		lds r24,radio_sem
 835 02b2 9091 0000 		lds r25,(radio_sem)+1
 836 02b6 0E94 0000 		call nrk_sem_post
 837               	/* epilogue: frame size=0 */
 838 02ba 0895      		ret
 839               	/* epilogue end (size=1) */
 840               	/* function rf_carrier_on size 20 (19) */
 842               	.Lscope16:
 844               		.stabd	78,0,0
 846               	.global	rf_data_mode
 848               	rf_data_mode:
 849               		.stabd	46,0,0
 851               	.LM66:
 852               	.LFBB17:
 853               	/* prologue: frame size=0 */
 854               	/* prologue end (size=0) */
 856               	.LM67:
 857 02bc 8091 0000 		lds r24,radio_sem
 858 02c0 9091 0000 		lds r25,(radio_sem)+1
 859 02c4 0E94 0000 		call nrk_sem_pend
 861               	.LM68:
 862 02c8 4098      		cbi 40-0x20,0
 863 02ca 86E0      		ldi r24,lo8(6)
 864 02cc 8EBD      		out 78-0x20,r24
 865               	.L170:
 867               	.LM69:
 868 02ce 0DB4      		in __tmp_reg__,77-0x20
 869 02d0 07FE      		sbrs __tmp_reg__,7
 870 02d2 00C0      		rjmp .L170
 871 02d4 409A      		sbi 40-0x20,0
 873               	.LM70:
 874 02d6 4098      		cbi 40-0x20,0
 875 02d8 82E1      		ldi r24,lo8(18)
 876 02da 8EBD      		out 78-0x20,r24
 877               	.L172:
 878 02dc 0DB4      		in __tmp_reg__,77-0x20
 879 02de 07FE      		sbrs __tmp_reg__,7
 880 02e0 00C0      		rjmp .L172
 881 02e2 85E0      		ldi r24,lo8(5)
 882 02e4 8EBD      		out 78-0x20,r24
 883               	.L174:
 884 02e6 0DB4      		in __tmp_reg__,77-0x20
 885 02e8 07FE      		sbrs __tmp_reg__,7
 886 02ea 00C0      		rjmp .L174
 887 02ec 1EBC      		out 78-0x20,__zero_reg__
 888               	.L176:
 889 02ee 0DB4      		in __tmp_reg__,77-0x20
 890 02f0 07FE      		sbrs __tmp_reg__,7
 891 02f2 00C0      		rjmp .L176
 892 02f4 409A      		sbi 40-0x20,0
 894               	.LM71:
 895 02f6 4098      		cbi 40-0x20,0
 896 02f8 8EE2      		ldi r24,lo8(46)
 897 02fa 8EBD      		out 78-0x20,r24
 898               	.L178:
 899 02fc 0DB4      		in __tmp_reg__,77-0x20
 900 02fe 07FE      		sbrs __tmp_reg__,7
 901 0300 00C0      		rjmp .L178
 902 0302 1EBC      		out 78-0x20,__zero_reg__
 903               	.L180:
 904 0304 0DB4      		in __tmp_reg__,77-0x20
 905 0306 07FE      		sbrs __tmp_reg__,7
 906 0308 00C0      		rjmp .L180
 907 030a 1EBC      		out 78-0x20,__zero_reg__
 908               	.L182:
 909 030c 0DB4      		in __tmp_reg__,77-0x20
 910 030e 07FE      		sbrs __tmp_reg__,7
 911 0310 00C0      		rjmp .L182
 912 0312 409A      		sbi 40-0x20,0
 914               	.LM72:
 915 0314 0E94 0000 		call rf_flush_rx_fifo
 917               	.LM73:
 918 0318 8091 0000 		lds r24,radio_sem
 919 031c 9091 0000 		lds r25,(radio_sem)+1
 920 0320 0E94 0000 		call nrk_sem_post
 921               	/* epilogue: frame size=0 */
 922 0324 0895      		ret
 923               	/* epilogue end (size=1) */
 924               	/* function rf_data_mode size 53 (52) */
 926               	.Lscope17:
 928               		.stabd	78,0,0
 930               	.global	rf_test_mode
 932               	rf_test_mode:
 933               		.stabd	46,0,0
 935               	.LM74:
 936               	.LFBB18:
 937               	/* prologue: frame size=0 */
 938               	/* prologue end (size=0) */
 940               	.LM75:
 941 0326 8091 0000 		lds r24,radio_sem
 942 032a 9091 0000 		lds r25,(radio_sem)+1
 943 032e 0E94 0000 		call nrk_sem_pend
 945               	.LM76:
 946 0332 4098      		cbi 40-0x20,0
 947 0334 86E0      		ldi r24,lo8(6)
 948 0336 8EBD      		out 78-0x20,r24
 949               	.L200:
 951               	.LM77:
 952 0338 0DB4      		in __tmp_reg__,77-0x20
 953 033a 07FE      		sbrs __tmp_reg__,7
 954 033c 00C0      		rjmp .L200
 955 033e 409A      		sbi 40-0x20,0
 957               	.LM78:
 958 0340 4098      		cbi 40-0x20,0
 959 0342 82E1      		ldi r24,lo8(18)
 960 0344 8EBD      		out 78-0x20,r24
 961               	.L202:
 962 0346 0DB4      		in __tmp_reg__,77-0x20
 963 0348 07FE      		sbrs __tmp_reg__,7
 964 034a 00C0      		rjmp .L202
 965 034c 85E0      		ldi r24,lo8(5)
 966 034e 8EBD      		out 78-0x20,r24
 967               	.L204:
 968 0350 0DB4      		in __tmp_reg__,77-0x20
 969 0352 07FE      		sbrs __tmp_reg__,7
 970 0354 00C0      		rjmp .L204
 971 0356 88E0      		ldi r24,lo8(8)
 972 0358 8EBD      		out 78-0x20,r24
 973               	.L206:
 974 035a 0DB4      		in __tmp_reg__,77-0x20
 975 035c 07FE      		sbrs __tmp_reg__,7
 976 035e 00C0      		rjmp .L206
 977 0360 409A      		sbi 40-0x20,0
 979               	.LM79:
 980 0362 4098      		cbi 40-0x20,0
 981 0364 8EE2      		ldi r24,lo8(46)
 982 0366 8EBD      		out 78-0x20,r24
 983               	.L208:
 984 0368 0DB4      		in __tmp_reg__,77-0x20
 985 036a 07FE      		sbrs __tmp_reg__,7
 986 036c 00C0      		rjmp .L208
 987 036e 88E1      		ldi r24,lo8(24)
 988 0370 8EBD      		out 78-0x20,r24
 989               	.L210:
 990 0372 0DB4      		in __tmp_reg__,77-0x20
 991 0374 07FE      		sbrs __tmp_reg__,7
 992 0376 00C0      		rjmp .L210
 993 0378 1EBC      		out 78-0x20,__zero_reg__
 994               	.L212:
 995 037a 0DB4      		in __tmp_reg__,77-0x20
 996 037c 07FE      		sbrs __tmp_reg__,7
 997 037e 00C0      		rjmp .L212
 998 0380 409A      		sbi 40-0x20,0
 1000               	.LM80:
 1001 0382 0E94 0000 		call rf_flush_rx_fifo
 1003               	.LM81:
 1004 0386 8091 0000 		lds r24,radio_sem
 1005 038a 9091 0000 		lds r25,(radio_sem)+1
 1006 038e 0E94 0000 		call nrk_sem_post
 1007               	/* epilogue: frame size=0 */
 1008 0392 0895      		ret
 1009               	/* epilogue end (size=1) */
 1010               	/* function rf_test_mode size 55 (54) */
 1012               	.Lscope18:
 1014               		.stabd	78,0,0
 1017               	.global	rf_set_cca_thresh
 1019               	rf_set_cca_thresh:
 1020               		.stabd	46,0,0
 1022               	.LM82:
 1023               	.LFBB19:
 1024               	/* prologue: frame size=0 */
 1025 0394 0F93      		push r16
 1026 0396 1F93      		push r17
 1027               	/* prologue end (size=2) */
 1028 0398 082F      		mov r16,r24
 1030               	.LM83:
 1031 039a 8091 0000 		lds r24,radio_sem
 1032 039e 9091 0000 		lds r25,(radio_sem)+1
 1033 03a2 0E94 0000 		call nrk_sem_pend
 1035               	.LM84:
 1036 03a6 1127      		clr r17
 1037 03a8 07FD      		sbrc r16,7
 1038 03aa 1095      		com r17
 1039 03ac 302F      		mov r19,r16
 1040 03ae 2227      		clr r18
 1041 03b0 2068      		ori r18,lo8(128)
 1043               	.LM85:
 1044 03b2 4098      		cbi 40-0x20,0
 1045 03b4 83E1      		ldi r24,lo8(19)
 1046 03b6 8EBD      		out 78-0x20,r24
 1047               	.L230:
 1049               	.LM86:
 1050 03b8 0DB4      		in __tmp_reg__,77-0x20
 1051 03ba 07FE      		sbrs __tmp_reg__,7
 1052 03bc 00C0      		rjmp .L230
 1053 03be 832F      		mov r24,r19
 1054 03c0 9927      		clr r25
 1055 03c2 8EBD      		out 78-0x20,r24
 1056               	.L232:
 1057 03c4 0DB4      		in __tmp_reg__,77-0x20
 1058 03c6 07FE      		sbrs __tmp_reg__,7
 1059 03c8 00C0      		rjmp .L232
 1060 03ca 2EBD      		out 78-0x20,r18
 1061               	.L234:
 1062 03cc 0DB4      		in __tmp_reg__,77-0x20
 1063 03ce 07FE      		sbrs __tmp_reg__,7
 1064 03d0 00C0      		rjmp .L234
 1065 03d2 409A      		sbi 40-0x20,0
 1067               	.LM87:
 1068 03d4 8091 0000 		lds r24,radio_sem
 1069 03d8 9091 0000 		lds r25,(radio_sem)+1
 1070 03dc 0E94 0000 		call nrk_sem_post
 1071               	/* epilogue: frame size=0 */
 1072 03e0 1F91      		pop r17
 1073 03e2 0F91      		pop r16
 1074 03e4 0895      		ret
 1075               	/* epilogue end (size=3) */
 1076               	/* function rf_set_cca_thresh size 41 (36) */
 1081               	.Lscope19:
 1083               		.stabd	78,0,0
 1087               	.global	rf_polling_rx_packet
 1089               	rf_polling_rx_packet:
 1090               		.stabd	46,0,0
 1092               	.LM88:
 1093               	.LFBB20:
 1094               	/* prologue: frame size=4 */
 1095 03e6 0F93      		push r16
 1096 03e8 1F93      		push r17
 1097 03ea CF93      		push r28
 1098 03ec DF93      		push r29
 1099 03ee CDB7      		in r28,__SP_L__
 1100 03f0 DEB7      		in r29,__SP_H__
 1101 03f2 2497      		sbiw r28,4
 1102 03f4 0FB6      		in __tmp_reg__,__SREG__
 1103 03f6 F894      		cli
 1104 03f8 DEBF      		out __SP_H__,r29
 1105 03fa 0FBE      		out __SREG__,__tmp_reg__
 1106 03fc CDBF      		out __SP_L__,r28
 1107               	/* prologue end (size=12) */
 1108 03fe 182F      		mov r17,r24
 1109 0400 062F      		mov r16,r22
 1111               	.LM89:
 1112 0402 8091 0000 		lds r24,radio_sem
 1113 0406 9091 0000 		lds r25,(radio_sem)+1
 1114 040a 0E94 0000 		call nrk_sem_pend
 1116               	.LM90:
 1117 040e 679B      		sbis 44-0x20,7
 1118 0410 00C0      		rjmp .L244
 1119               	.LBB2:
 1121               	.LM91:
 1122 0412 1092 0000 		sts last_pkt_encrypted,__zero_reg__
 1124               	.LM92:
 1125 0416 679B      		sbis 44-0x20,7
 1126 0418 00C0      		rjmp .L246
 1127 041a 3199      		sbic 38-0x20,1
 1128 041c 00C0      		rjmp .L246
 1130               	.LM93:
 1131 041e 4098      		cbi 40-0x20,0
 1132 0420 8FE7      		ldi r24,lo8(127)
 1133 0422 8EBD      		out 78-0x20,r24
 1134               	.L249:
 1135 0424 0DB4      		in __tmp_reg__,77-0x20
 1136 0426 07FE      		sbrs __tmp_reg__,7
 1137 0428 00C0      		rjmp .L249
 1138 042a 1EBC      		out 78-0x20,__zero_reg__
 1139               	.L251:
 1140 042c 0DB4      		in __tmp_reg__,77-0x20
 1141 042e 07FE      		sbrs __tmp_reg__,7
 1142 0430 00C0      		rjmp .L251
 1143 0432 8EB5      		in r24,78-0x20
 1144 0434 409A      		sbi 40-0x20,0
 1146               	.LM94:
 1147 0436 4098      		cbi 40-0x20,0
 1148 0438 88E0      		ldi r24,lo8(8)
 1149 043a 8EBD      		out 78-0x20,r24
 1150               	.L253:
 1151 043c 0DB4      		in __tmp_reg__,77-0x20
 1152 043e 07FE      		sbrs __tmp_reg__,7
 1153 0440 00C0      		rjmp .L253
 1154 0442 409A      		sbi 40-0x20,0
 1156               	.LM95:
 1157 0444 4098      		cbi 40-0x20,0
 1158 0446 88E0      		ldi r24,lo8(8)
 1159 0448 8EBD      		out 78-0x20,r24
 1160               	.L255:
 1161 044a 0DB4      		in __tmp_reg__,77-0x20
 1162 044c 07FE      		sbrs __tmp_reg__,7
 1163 044e 00C0      		rjmp .L255
 1164 0450 409A      		sbi 40-0x20,0
 1166               	.LM96:
 1167 0452 8091 0000 		lds r24,radio_sem
 1168 0456 9091 0000 		lds r25,(radio_sem)+1
 1169 045a 0E94 0000 		call nrk_sem_post
 1170 045e 8FEF      		ldi r24,lo8(-1)
 1171 0460 9FEF      		ldi r25,hi8(-1)
 1172 0462 00C0      		rjmp .L257
 1173               	.L246:
 1175               	.LM97:
 1176 0464 4098      		cbi 40-0x20,0
 1177 0466 8FE7      		ldi r24,lo8(127)
 1178 0468 8EBD      		out 78-0x20,r24
 1179               	.L258:
 1180 046a 0DB4      		in __tmp_reg__,77-0x20
 1181 046c 07FE      		sbrs __tmp_reg__,7
 1182 046e 00C0      		rjmp .L258
 1183 0470 1EBC      		out 78-0x20,__zero_reg__
 1184               	.L260:
 1185 0472 0DB4      		in __tmp_reg__,77-0x20
 1186 0474 07FE      		sbrs __tmp_reg__,7
 1187 0476 00C0      		rjmp .L260
 1188 0478 4EB5      		in r20,78-0x20
 1189 047a 409A      		sbi 40-0x20,0
 1191               	.LM98:
 1192 047c 4F77      		andi r20,lo8(127)
 1194               	.LM99:
 1195 047e 01F4      		brne .L262
 1197               	.LM100:
 1198 0480 4098      		cbi 40-0x20,0
 1199 0482 8FE7      		ldi r24,lo8(127)
 1200 0484 8EBD      		out 78-0x20,r24
 1201               	.L264:
 1202 0486 0DB4      		in __tmp_reg__,77-0x20
 1203 0488 07FE      		sbrs __tmp_reg__,7
 1204 048a 00C0      		rjmp .L264
 1205 048c 1EBC      		out 78-0x20,__zero_reg__
 1206               	.L266:
 1207 048e 0DB4      		in __tmp_reg__,77-0x20
 1208 0490 07FE      		sbrs __tmp_reg__,7
 1209 0492 00C0      		rjmp .L266
 1210 0494 8EB5      		in r24,78-0x20
 1211 0496 409A      		sbi 40-0x20,0
 1213               	.LM101:
 1214 0498 4098      		cbi 40-0x20,0
 1215 049a 88E0      		ldi r24,lo8(8)
 1216 049c 8EBD      		out 78-0x20,r24
 1217               	.L268:
 1218 049e 0DB4      		in __tmp_reg__,77-0x20
 1219 04a0 07FE      		sbrs __tmp_reg__,7
 1220 04a2 00C0      		rjmp .L268
 1221 04a4 409A      		sbi 40-0x20,0
 1223               	.LM102:
 1224 04a6 4098      		cbi 40-0x20,0
 1225 04a8 88E0      		ldi r24,lo8(8)
 1226 04aa 8EBD      		out 78-0x20,r24
 1227               	.L270:
 1228 04ac 0DB4      		in __tmp_reg__,77-0x20
 1229 04ae 07FE      		sbrs __tmp_reg__,7
 1230 04b0 00C0      		rjmp .L270
 1231 04b2 409A      		sbi 40-0x20,0
 1233               	.LM103:
 1234 04b4 8091 0000 		lds r24,radio_sem
 1235 04b8 9091 0000 		lds r25,(radio_sem)+1
 1236 04bc 0E94 0000 		call nrk_sem_post
 1237 04c0 8EEF      		ldi r24,lo8(-2)
 1238 04c2 9FEF      		ldi r25,hi8(-2)
 1239 04c4 00C0      		rjmp .L257
 1240               	.L262:
 1242               	.LM104:
 1243 04c6 4530      		cpi r20,lo8(5)
 1244 04c8 04F0      		brlt .L272
 1245 04ca E091 0000 		lds r30,rfSettings
 1246 04ce F091 0000 		lds r31,(rfSettings)+1
 1247 04d2 242F      		mov r18,r20
 1248 04d4 3327      		clr r19
 1249 04d6 27FD      		sbrc r18,7
 1250 04d8 3095      		com r19
 1251 04da 2B50      		subi r18,lo8(-(-11))
 1252 04dc 3040      		sbci r19,hi8(-(-11))
 1253 04de 8481      		ldd r24,Z+4
 1254 04e0 9927      		clr r25
 1255 04e2 87FD      		sbrc r24,7
 1256 04e4 9095      		com r25
 1257 04e6 8217      		cp r24,r18
 1258 04e8 9307      		cpc r25,r19
 1259 04ea 04F4      		brge .L274
 1260               	.L272:
 1262               	.LM105:
 1263 04ec 4098      		cbi 40-0x20,0
 1264 04ee 8FE7      		ldi r24,lo8(127)
 1265 04f0 8EBD      		out 78-0x20,r24
 1266               	.L275:
 1267 04f2 0DB4      		in __tmp_reg__,77-0x20
 1268 04f4 07FE      		sbrs __tmp_reg__,7
 1269 04f6 00C0      		rjmp .L275
 1270 04f8 60E0      		ldi r22,lo8(0)
 1271 04fa 70E0      		ldi r23,hi8(0)
 1272               	.LBB3:
 1273 04fc 242F      		mov r18,r20
 1274 04fe 3327      		clr r19
 1275 0500 27FD      		sbrc r18,7
 1276 0502 3095      		com r19
 1277 0504 00C0      		rjmp .L277
 1278               	.L278:
 1279 0506 1EBC      		out 78-0x20,__zero_reg__
 1280               	.L279:
 1281 0508 0DB4      		in __tmp_reg__,77-0x20
 1282 050a 07FE      		sbrs __tmp_reg__,7
 1283 050c 00C0      		rjmp .L279
 1284 050e 6F5F      		subi r22,lo8(-(1))
 1285 0510 7F4F      		sbci r23,hi8(-(1))
 1286               	.L277:
 1287 0512 862F      		mov r24,r22
 1288 0514 9927      		clr r25
 1289 0516 8217      		cp r24,r18
 1290 0518 9307      		cpc r25,r19
 1291 051a 04F4      		brge .L281
 1292 051c 3199      		sbic 38-0x20,1
 1293 051e 00C0      		rjmp .L278
 1294               	.L281:
 1295               	.LBE3:
 1296 0520 409A      		sbi 40-0x20,0
 1298               	.LM106:
 1299 0522 4098      		cbi 40-0x20,0
 1300 0524 8FE7      		ldi r24,lo8(127)
 1301 0526 8EBD      		out 78-0x20,r24
 1302               	.L283:
 1303 0528 0DB4      		in __tmp_reg__,77-0x20
 1304 052a 07FE      		sbrs __tmp_reg__,7
 1305 052c 00C0      		rjmp .L283
 1306 052e 1EBC      		out 78-0x20,__zero_reg__
 1307               	.L285:
 1308 0530 0DB4      		in __tmp_reg__,77-0x20
 1309 0532 07FE      		sbrs __tmp_reg__,7
 1310 0534 00C0      		rjmp .L285
 1311 0536 8EB5      		in r24,78-0x20
 1312 0538 409A      		sbi 40-0x20,0
 1314               	.LM107:
 1315 053a 4098      		cbi 40-0x20,0
 1316 053c 88E0      		ldi r24,lo8(8)
 1317 053e 8EBD      		out 78-0x20,r24
 1318               	.L287:
 1319 0540 0DB4      		in __tmp_reg__,77-0x20
 1320 0542 07FE      		sbrs __tmp_reg__,7
 1321 0544 00C0      		rjmp .L287
 1322 0546 409A      		sbi 40-0x20,0
 1324               	.LM108:
 1325 0548 4098      		cbi 40-0x20,0
 1326 054a 88E0      		ldi r24,lo8(8)
 1327 054c 8EBD      		out 78-0x20,r24
 1328               	.L289:
 1329 054e 0DB4      		in __tmp_reg__,77-0x20
 1330 0550 07FE      		sbrs __tmp_reg__,7
 1331 0552 00C0      		rjmp .L289
 1332 0554 409A      		sbi 40-0x20,0
 1334               	.LM109:
 1335 0556 8091 0000 		lds r24,radio_sem
 1336 055a 9091 0000 		lds r25,(radio_sem)+1
 1337 055e 0E94 0000 		call nrk_sem_post
 1338 0562 8DEF      		ldi r24,lo8(-3)
 1339 0564 9FEF      		ldi r25,hi8(-3)
 1340 0566 00C0      		rjmp .L257
 1341               	.L274:
 1343               	.LM110:
 1344 0568 E091 0000 		lds r30,rfSettings
 1345 056c F091 0000 		lds r31,(rfSettings)+1
 1346 0570 4C50      		subi r20,lo8(-(-12))
 1347 0572 4383      		std Z+3,r20
 1349               	.LM111:
 1350 0574 1123      		tst r17
 1351 0576 01F0      		breq .L291
 1352 0578 E091 0000 		lds r30,rfSettings
 1353 057c F091 0000 		lds r31,(rfSettings)+1
 1354 0580 8381      		ldd r24,Z+3
 1355 0582 9927      		clr r25
 1356 0584 87FD      		sbrc r24,7
 1357 0586 9095      		com r25
 1358 0588 202F      		mov r18,r16
 1359 058a 3327      		clr r19
 1360 058c 8217      		cp r24,r18
 1361 058e 9307      		cpc r25,r19
 1362 0590 01F0      		breq .L291
 1364               	.LM112:
 1365 0592 8091 0000 		lds r24,radio_sem
 1366 0596 9091 0000 		lds r25,(radio_sem)+1
 1367 059a 0E94 0000 		call nrk_sem_post
 1368 059e 8AEF      		ldi r24,lo8(-6)
 1369 05a0 9FEF      		ldi r25,hi8(-6)
 1370 05a2 00C0      		rjmp .L257
 1371               	.L291:
 1373               	.LM113:
 1374 05a4 4098      		cbi 40-0x20,0
 1375 05a6 8FE7      		ldi r24,lo8(127)
 1376 05a8 8EBD      		out 78-0x20,r24
 1377               	.L294:
 1378 05aa 0DB4      		in __tmp_reg__,77-0x20
 1379 05ac 07FE      		sbrs __tmp_reg__,7
 1380 05ae 00C0      		rjmp .L294
 1381 05b0 FE01      		movw r30,r28
 1382 05b2 3196      		adiw r30,1
 1383               	.LBB4:
 1384 05b4 9E01      		movw r18,r28
 1385 05b6 2D5F      		subi r18,lo8(-(3))
 1386 05b8 3F4F      		sbci r19,hi8(-(3))
 1387               	.L296:
 1388 05ba 1EBC      		out 78-0x20,__zero_reg__
 1389               	.L297:
 1390 05bc 0DB4      		in __tmp_reg__,77-0x20
 1391 05be 07FE      		sbrs __tmp_reg__,7
 1392 05c0 00C0      		rjmp .L297
 1393 05c2 8EB5      		in r24,78-0x20
 1394 05c4 8193      		st Z+,r24
 1395 05c6 E217      		cp r30,r18
 1396 05c8 F307      		cpc r31,r19
 1397 05ca 01F4      		brne .L296
 1398               	.LBE4:
 1399 05cc 409A      		sbi 40-0x20,0
 1401               	.LM114:
 1402 05ce E091 0000 		lds r30,rfSettings
 1403 05d2 F091 0000 		lds r31,(rfSettings)+1
 1404 05d6 8981      		ldd r24,Y+1
 1405 05d8 9A81      		ldd r25,Y+2
 1406 05da B5E0      		ldi r27,5
 1407 05dc 9695      	1:	lsr r25
 1408 05de 8795      		ror r24
 1409 05e0 BA95      		dec r27
 1410 05e2 01F4      		brne 1b
 1411 05e4 8170      		andi r24,lo8(1)
 1412 05e6 8783      		std Z+7,r24
 1414               	.LM115:
 1415 05e8 4098      		cbi 40-0x20,0
 1416 05ea 8FE7      		ldi r24,lo8(127)
 1417 05ec 8EBD      		out 78-0x20,r24
 1418               	.L300:
 1419 05ee 0DB4      		in __tmp_reg__,77-0x20
 1420 05f0 07FE      		sbrs __tmp_reg__,7
 1421 05f2 00C0      		rjmp .L300
 1422 05f4 1EBC      		out 78-0x20,__zero_reg__
 1423               	.L302:
 1424 05f6 0DB4      		in __tmp_reg__,77-0x20
 1425 05f8 07FE      		sbrs __tmp_reg__,7
 1426 05fa 00C0      		rjmp .L302
 1427 05fc E091 0000 		lds r30,rfSettings
 1428 0600 F091 0000 		lds r31,(rfSettings)+1
 1429 0604 8EB5      		in r24,78-0x20
 1430 0606 8083      		st Z,r24
 1431 0608 409A      		sbi 40-0x20,0
 1433               	.LM116:
 1434 060a 4098      		cbi 40-0x20,0
 1435 060c 8FE7      		ldi r24,lo8(127)
 1436 060e 8EBD      		out 78-0x20,r24
 1437               	.L304:
 1438 0610 0DB4      		in __tmp_reg__,77-0x20
 1439 0612 07FE      		sbrs __tmp_reg__,7
 1440 0614 00C0      		rjmp .L304
 1441 0616 80E0      		ldi r24,lo8(0)
 1442 0618 00C0      		rjmp .L306
 1443               	.L307:
 1444               	.LBB5:
 1445 061a 1EBC      		out 78-0x20,__zero_reg__
 1446               	.L308:
 1447 061c 0DB4      		in __tmp_reg__,77-0x20
 1448 061e 07FE      		sbrs __tmp_reg__,7
 1449 0620 00C0      		rjmp .L308
 1450 0622 8F5F      		subi r24,lo8(-(1))
 1451 0624 8430      		cpi r24,lo8(4)
 1452 0626 01F0      		breq .L310
 1453               	.L306:
 1454 0628 3199      		sbic 38-0x20,1
 1455 062a 00C0      		rjmp .L307
 1456               	.L310:
 1457               	.LBE5:
 1458 062c 409A      		sbi 40-0x20,0
 1460               	.LM117:
 1461 062e 4098      		cbi 40-0x20,0
 1462 0630 8FE7      		ldi r24,lo8(127)
 1463 0632 8EBD      		out 78-0x20,r24
 1464               	.L311:
 1465 0634 0DB4      		in __tmp_reg__,77-0x20
 1466 0636 07FE      		sbrs __tmp_reg__,7
 1467 0638 00C0      		rjmp .L311
 1468 063a 20E0      		ldi r18,lo8(0)
 1469 063c 30E0      		ldi r19,hi8(0)
 1470               	.L313:
 1471               	.LBB6:
 1472 063e 1EBC      		out 78-0x20,__zero_reg__
 1473               	.L314:
 1474 0640 0DB4      		in __tmp_reg__,77-0x20
 1475 0642 07FE      		sbrs __tmp_reg__,7
 1476 0644 00C0      		rjmp .L314
 1477 0646 E091 0000 		lds r30,rfSettings
 1478 064a F091 0000 		lds r31,(rfSettings)+1
 1479 064e E20F      		add r30,r18
 1480 0650 F31F      		adc r31,r19
 1481 0652 8EB5      		in r24,78-0x20
 1482 0654 8183      		std Z+1,r24
 1483 0656 2F5F      		subi r18,lo8(-(1))
 1484 0658 3F4F      		sbci r19,hi8(-(1))
 1485 065a 2230      		cpi r18,2
 1486 065c 3105      		cpc r19,__zero_reg__
 1487 065e 01F4      		brne .L313
 1488               	.LBE6:
 1489 0660 409A      		sbi 40-0x20,0
 1491               	.LM118:
 1492 0662 8981      		ldd r24,Y+1
 1493 0664 9A81      		ldd r25,Y+2
 1494 0666 83FF      		sbrs r24,3
 1495 0668 00C0      		rjmp .L317
 1496               	.LBB7:
 1498               	.LM119:
 1499 066a 4098      		cbi 40-0x20,0
 1500 066c 8FE7      		ldi r24,lo8(127)
 1501 066e 8EBD      		out 78-0x20,r24
 1502               	.L319:
 1503 0670 0DB4      		in __tmp_reg__,77-0x20
 1504 0672 07FE      		sbrs __tmp_reg__,7
 1505 0674 00C0      		rjmp .L319
 1506 0676 E0E0      		ldi r30,lo8(rx_ctr)
 1507 0678 F0E0      		ldi r31,hi8(rx_ctr)
 1508               	.L321:
 1509               	.LBB8:
 1510 067a 1EBC      		out 78-0x20,__zero_reg__
 1511               	.L322:
 1512 067c 0DB4      		in __tmp_reg__,77-0x20
 1513 067e 07FE      		sbrs __tmp_reg__,7
 1514 0680 00C0      		rjmp .L322
 1515 0682 8EB5      		in r24,78-0x20
 1516 0684 8193      		st Z+,r24
 1517 0686 80E0      		ldi r24,hi8(rx_ctr+4)
 1518 0688 E030      		cpi r30,lo8(rx_ctr+4)
 1519 068a F807      		cpc r31,r24
 1520 068c 01F4      		brne .L321
 1521               	.LBE8:
 1522 068e 409A      		sbi 40-0x20,0
 1524               	.LM120:
 1525 0690 4098      		cbi 40-0x20,0
 1526 0692 89E9      		ldi r24,lo8(-103)
 1527 0694 8EBD      		out 78-0x20,r24
 1528               	.L325:
 1529 0696 0DB4      		in __tmp_reg__,77-0x20
 1530 0698 07FE      		sbrs __tmp_reg__,7
 1531 069a 00C0      		rjmp .L325
 1532 069c 80E8      		ldi r24,lo8(-128)
 1533 069e 8EBD      		out 78-0x20,r24
 1534               	.L327:
 1535 06a0 0DB4      		in __tmp_reg__,77-0x20
 1536 06a2 07FE      		sbrs __tmp_reg__,7
 1537 06a4 00C0      		rjmp .L327
 1538 06a6 92E0      		ldi r25,lo8(2)
 1539               	.L329:
 1540 06a8 9150      		subi r25,lo8(-(-1))
 1541 06aa E92F      		mov r30,r25
 1542 06ac FF27      		clr r31
 1543 06ae E050      		subi r30,lo8(-(rx_ctr))
 1544 06b0 F040      		sbci r31,hi8(-(rx_ctr))
 1545 06b2 8081      		ld r24,Z
 1546 06b4 8EBD      		out 78-0x20,r24
 1547               	.L330:
 1548 06b6 0DB4      		in __tmp_reg__,77-0x20
 1549 06b8 07FE      		sbrs __tmp_reg__,7
 1550 06ba 00C0      		rjmp .L330
 1551 06bc 9923      		tst r25
 1552 06be 01F4      		brne .L329
 1553 06c0 409A      		sbi 40-0x20,0
 1555               	.LM121:
 1556 06c2 4098      		cbi 40-0x20,0
 1557 06c4 8BE9      		ldi r24,lo8(-101)
 1558 06c6 8EBD      		out 78-0x20,r24
 1559               	.L333:
 1560 06c8 0DB4      		in __tmp_reg__,77-0x20
 1561 06ca 07FE      		sbrs __tmp_reg__,7
 1562 06cc 00C0      		rjmp .L333
 1563 06ce 80E8      		ldi r24,lo8(-128)
 1564 06d0 8EBD      		out 78-0x20,r24
 1565               	.L335:
 1566 06d2 0DB4      		in __tmp_reg__,77-0x20
 1567 06d4 07FE      		sbrs __tmp_reg__,7
 1568 06d6 00C0      		rjmp .L335
 1569 06d8 92E0      		ldi r25,lo8(2)
 1570               	.L337:
 1571 06da 9150      		subi r25,lo8(-(-1))
 1572 06dc E92F      		mov r30,r25
 1573 06de FF27      		clr r31
 1574 06e0 E050      		subi r30,lo8(-(rx_ctr+2))
 1575 06e2 F040      		sbci r31,hi8(-(rx_ctr+2))
 1576 06e4 8081      		ld r24,Z
 1577 06e6 8EBD      		out 78-0x20,r24
 1578               	.L338:
 1579 06e8 0DB4      		in __tmp_reg__,77-0x20
 1580 06ea 07FE      		sbrs __tmp_reg__,7
 1581 06ec 00C0      		rjmp .L338
 1582 06ee 9923      		tst r25
 1583 06f0 01F4      		brne .L337
 1584 06f2 409A      		sbi 40-0x20,0
 1586               	.LM122:
 1587 06f4 4098      		cbi 40-0x20,0
 1588 06f6 8CE0      		ldi r24,lo8(12)
 1589 06f8 8EBD      		out 78-0x20,r24
 1590               	.L341:
 1591 06fa 0DB4      		in __tmp_reg__,77-0x20
 1592 06fc 07FE      		sbrs __tmp_reg__,7
 1593 06fe 00C0      		rjmp .L341
 1594 0700 409A      		sbi 40-0x20,0
 1596               	.LM123:
 1597 0702 81E0      		ldi r24,lo8(1)
 1598 0704 8093 0000 		sts last_pkt_encrypted,r24
 1600               	.LM124:
 1601 0708 E091 0000 		lds r30,rfSettings
 1602 070c F091 0000 		lds r31,(rfSettings)+1
 1603 0710 8381      		ldd r24,Z+3
 1604 0712 8450      		subi r24,lo8(-(-4))
 1605 0714 8383      		std Z+3,r24
 1606               	.L317:
 1607               	.LBE7:
 1609               	.LM125:
 1610 0716 4098      		cbi 40-0x20,0
 1611 0718 8FE7      		ldi r24,lo8(127)
 1612 071a 8EBD      		out 78-0x20,r24
 1613               	.L343:
 1614 071c 0DB4      		in __tmp_reg__,77-0x20
 1615 071e 07FE      		sbrs __tmp_reg__,7
 1616 0720 00C0      		rjmp .L343
 1617 0722 40E0      		ldi r20,lo8(0)
 1618 0724 50E0      		ldi r21,hi8(0)
 1619 0726 00C0      		rjmp .L345
 1620               	.L346:
 1621               	.LBB9:
 1622 0728 1EBC      		out 78-0x20,__zero_reg__
 1623               	.L347:
 1624 072a 0DB4      		in __tmp_reg__,77-0x20
 1625 072c 07FE      		sbrs __tmp_reg__,7
 1626 072e 00C0      		rjmp .L347
 1627 0730 E091 0000 		lds r30,rfSettings
 1628 0734 F091 0000 		lds r31,(rfSettings)+1
 1629 0738 0580      		ldd __tmp_reg__,Z+5
 1630 073a F681      		ldd r31,Z+6
 1631 073c E02D      		mov r30,__tmp_reg__
 1632 073e E60F      		add r30,r22
 1633 0740 F11D      		adc r31,__zero_reg__
 1634 0742 8EB5      		in r24,78-0x20
 1635 0744 8083      		st Z,r24
 1636 0746 4F5F      		subi r20,lo8(-(1))
 1637 0748 5F4F      		sbci r21,hi8(-(1))
 1638               	.L345:
 1639 074a 642F      		mov r22,r20
 1640 074c E091 0000 		lds r30,rfSettings
 1641 0750 F091 0000 		lds r31,(rfSettings)+1
 1642 0754 242F      		mov r18,r20
 1643 0756 3327      		clr r19
 1644 0758 8381      		ldd r24,Z+3
 1645 075a 9927      		clr r25
 1646 075c 87FD      		sbrc r24,7
 1647 075e 9095      		com r25
 1648 0760 2817      		cp r18,r24
 1649 0762 3907      		cpc r19,r25
 1650 0764 04F0      		brlt .L346
 1651               	.LBE9:
 1652 0766 409A      		sbi 40-0x20,0
 1654               	.LM126:
 1655 0768 4098      		cbi 40-0x20,0
 1656 076a 8FE7      		ldi r24,lo8(127)
 1657 076c 8EBD      		out 78-0x20,r24
 1658               	.L350:
 1659 076e 0DB4      		in __tmp_reg__,77-0x20
 1660 0770 07FC      		sbrc __tmp_reg__,7
 1661 0772 00C0      		rjmp .L477
 1662 0774 00C0      		rjmp .L350
 1663               	.L352:
 1664               	.LBB10:
 1665 0776 0DB4      		in __tmp_reg__,77-0x20
 1666 0778 07FE      		sbrs __tmp_reg__,7
 1667 077a 00C0      		rjmp .L352
 1668 077c 5EB5      		in r21,78-0x20
 1669               	.LBE10:
 1670 077e 409A      		sbi 40-0x20,0
 1672               	.LM127:
 1673 0780 4098      		cbi 40-0x20,0
 1674 0782 8FE7      		ldi r24,lo8(127)
 1675 0784 8EBD      		out 78-0x20,r24
 1676 0786 00C0      		rjmp .L354
 1677               	.L477:
 1678               	.LBB11:
 1680               	.LM128:
 1681 0788 1EBC      		out 78-0x20,__zero_reg__
 1682 078a 00C0      		rjmp .L352
 1683               	.L354:
 1684               	.LBE11:
 1686               	.LM129:
 1687 078c 0DB4      		in __tmp_reg__,77-0x20
 1688 078e 07FE      		sbrs __tmp_reg__,7
 1689 0790 00C0      		rjmp .L354
 1690 0792 FE01      		movw r30,r28
 1691 0794 3396      		adiw r30,3
 1692               	.LBB12:
 1693 0796 9E01      		movw r18,r28
 1694 0798 2B5F      		subi r18,lo8(-(5))
 1695 079a 3F4F      		sbci r19,hi8(-(5))
 1696               	.L356:
 1697 079c 1EBC      		out 78-0x20,__zero_reg__
 1698               	.L357:
 1699 079e 0DB4      		in __tmp_reg__,77-0x20
 1700 07a0 07FE      		sbrs __tmp_reg__,7
 1701 07a2 00C0      		rjmp .L357
 1702 07a4 8EB5      		in r24,78-0x20
 1703 07a6 8193      		st Z+,r24
 1704 07a8 E217      		cp r30,r18
 1705 07aa F307      		cpc r31,r19
 1706 07ac 01F4      		brne .L356
 1707               	.LBE12:
 1708 07ae 409A      		sbi 40-0x20,0
 1710               	.LM130:
 1711 07b0 E091 0000 		lds r30,rfSettings
 1712 07b4 F091 0000 		lds r31,(rfSettings)+1
 1713 07b8 8B81      		ldd r24,Y+3
 1714 07ba 8087      		std Z+8,r24
 1715 07bc 40E0      		ldi r20,lo8(0)
 1716 07be 20E0      		ldi r18,lo8(0)
 1717 07c0 30E0      		ldi r19,hi8(0)
 1718 07c2 00C0      		rjmp .L360
 1719               	.L361:
 1721               	.LM131:
 1722 07c4 E091 0000 		lds r30,rfSettings
 1723 07c8 F091 0000 		lds r31,(rfSettings)+1
 1724 07cc 8581      		ldd r24,Z+5
 1725 07ce 9681      		ldd r25,Z+6
 1726 07d0 A80F      		add r26,r24
 1727 07d2 B91F      		adc r27,r25
 1728 07d4 8C91      		ld r24,X
 1729 07d6 480F      		add r20,r24
 1730               	.L360:
 1731 07d8 822F      		mov r24,r18
 1733               	.LM132:
 1734 07da E091 0000 		lds r30,rfSettings
 1735 07de F091 0000 		lds r31,(rfSettings)+1
 1736 07e2 2F5F      		subi r18,lo8(-(1))
 1737 07e4 3F4F      		sbci r19,hi8(-(1))
 1738 07e6 A82F      		mov r26,r24
 1739 07e8 BB27      		clr r27
 1740 07ea 8381      		ldd r24,Z+3
 1741 07ec 9927      		clr r25
 1742 07ee 87FD      		sbrc r24,7
 1743 07f0 9095      		com r25
 1744 07f2 A817      		cp r26,r24
 1745 07f4 B907      		cpc r27,r25
 1746 07f6 04F0      		brlt .L361
 1748               	.LM133:
 1749 07f8 4517      		cp r20,r21
 1750 07fa 01F0      		breq .L363
 1752               	.LM134:
 1753 07fc 4098      		cbi 40-0x20,0
 1754 07fe 8FE7      		ldi r24,lo8(127)
 1755 0800 8EBD      		out 78-0x20,r24
 1756               	.L365:
 1757 0802 0DB4      		in __tmp_reg__,77-0x20
 1758 0804 07FE      		sbrs __tmp_reg__,7
 1759 0806 00C0      		rjmp .L365
 1760 0808 1EBC      		out 78-0x20,__zero_reg__
 1761               	.L367:
 1762 080a 0DB4      		in __tmp_reg__,77-0x20
 1763 080c 07FE      		sbrs __tmp_reg__,7
 1764 080e 00C0      		rjmp .L367
 1765 0810 8EB5      		in r24,78-0x20
 1766 0812 409A      		sbi 40-0x20,0
 1768               	.LM135:
 1769 0814 4098      		cbi 40-0x20,0
 1770 0816 88E0      		ldi r24,lo8(8)
 1771 0818 8EBD      		out 78-0x20,r24
 1772               	.L369:
 1773 081a 0DB4      		in __tmp_reg__,77-0x20
 1774 081c 07FE      		sbrs __tmp_reg__,7
 1775 081e 00C0      		rjmp .L369
 1776 0820 409A      		sbi 40-0x20,0
 1778               	.LM136:
 1779 0822 4098      		cbi 40-0x20,0
 1780 0824 88E0      		ldi r24,lo8(8)
 1781 0826 8EBD      		out 78-0x20,r24
 1782               	.L371:
 1783 0828 0DB4      		in __tmp_reg__,77-0x20
 1784 082a 07FE      		sbrs __tmp_reg__,7
 1785 082c 00C0      		rjmp .L371
 1786 082e 409A      		sbi 40-0x20,0
 1788               	.LM137:
 1789 0830 8091 0000 		lds r24,radio_sem
 1790 0834 9091 0000 		lds r25,(radio_sem)+1
 1791 0838 0E94 0000 		call nrk_sem_post
 1792 083c 8CEF      		ldi r24,lo8(-4)
 1793 083e 9FEF      		ldi r25,hi8(-4)
 1794 0840 00C0      		rjmp .L257
 1795               	.L363:
 1797               	.LM138:
 1798 0842 8C81      		ldd r24,Y+4
 1799 0844 87FF      		sbrs r24,7
 1800 0846 00C0      		rjmp .L373
 1802               	.LM139:
 1803 0848 8091 0000 		lds r24,rx_ready
 1804 084c 8F5F      		subi r24,lo8(-(1))
 1805 084e 8093 0000 		sts rx_ready,r24
 1807               	.LM140:
 1808 0852 8091 0000 		lds r24,radio_sem
 1809 0856 9091 0000 		lds r25,(radio_sem)+1
 1810 085a 0E94 0000 		call nrk_sem_post
 1811 085e 81E0      		ldi r24,lo8(1)
 1812 0860 90E0      		ldi r25,hi8(1)
 1813 0862 00C0      		rjmp .L257
 1814               	.L373:
 1816               	.LM141:
 1817 0864 4098      		cbi 40-0x20,0
 1818 0866 8FE7      		ldi r24,lo8(127)
 1819 0868 8EBD      		out 78-0x20,r24
 1820               	.L375:
 1821 086a 0DB4      		in __tmp_reg__,77-0x20
 1822 086c 07FE      		sbrs __tmp_reg__,7
 1823 086e 00C0      		rjmp .L375
 1824 0870 1EBC      		out 78-0x20,__zero_reg__
 1825               	.L377:
 1826 0872 0DB4      		in __tmp_reg__,77-0x20
 1827 0874 07FE      		sbrs __tmp_reg__,7
 1828 0876 00C0      		rjmp .L377
 1829 0878 8EB5      		in r24,78-0x20
 1830 087a 409A      		sbi 40-0x20,0
 1832               	.LM142:
 1833 087c 4098      		cbi 40-0x20,0
 1834 087e 88E0      		ldi r24,lo8(8)
 1835 0880 8EBD      		out 78-0x20,r24
 1836               	.L379:
 1837 0882 0DB4      		in __tmp_reg__,77-0x20
 1838 0884 07FE      		sbrs __tmp_reg__,7
 1839 0886 00C0      		rjmp .L379
 1840 0888 409A      		sbi 40-0x20,0
 1842               	.LM143:
 1843 088a 4098      		cbi 40-0x20,0
 1844 088c 88E0      		ldi r24,lo8(8)
 1845 088e 8EBD      		out 78-0x20,r24
 1846               	.L381:
 1847 0890 0DB4      		in __tmp_reg__,77-0x20
 1848 0892 07FE      		sbrs __tmp_reg__,7
 1849 0894 00C0      		rjmp .L381
 1850 0896 409A      		sbi 40-0x20,0
 1852               	.LM144:
 1853 0898 8091 0000 		lds r24,radio_sem
 1854 089c 9091 0000 		lds r25,(radio_sem)+1
 1855 08a0 0E94 0000 		call nrk_sem_post
 1856 08a4 8BEF      		ldi r24,lo8(-5)
 1857 08a6 9FEF      		ldi r25,hi8(-5)
 1858 08a8 00C0      		rjmp .L257
 1859               	.L244:
 1860               	.LBE2:
 1862               	.LM145:
 1863 08aa 8091 0000 		lds r24,radio_sem
 1864 08ae 9091 0000 		lds r25,(radio_sem)+1
 1865 08b2 0E94 0000 		call nrk_sem_post
 1866 08b6 80E0      		ldi r24,lo8(0)
 1867 08b8 90E0      		ldi r25,hi8(0)
 1868               	.L257:
 1869               	/* epilogue: frame size=4 */
 1870 08ba 2496      		adiw r28,4
 1871 08bc 0FB6      		in __tmp_reg__,__SREG__
 1872 08be F894      		cli
 1873 08c0 DEBF      		out __SP_H__,r29
 1874 08c2 0FBE      		out __SREG__,__tmp_reg__
 1875 08c4 CDBF      		out __SP_L__,r28
 1876 08c6 DF91      		pop r29
 1877 08c8 CF91      		pop r28
 1878 08ca 1F91      		pop r17
 1879 08cc 0F91      		pop r16
 1880 08ce 0895      		ret
 1881               	/* epilogue end (size=11) */
 1882               	/* function rf_polling_rx_packet size 630 (607) */
 1902               	.Lscope20:
 1904               		.stabd	78,0,0
 1906               	.global	rf_rx_off
 1908               	rf_rx_off:
 1909               		.stabd	46,0,0
 1911               	.LM146:
 1912               	.LFBB21:
 1913               	/* prologue: frame size=0 */
 1914               	/* prologue end (size=0) */
 1916               	.LM147:
 1917 08d0 8091 0000 		lds r24,radio_sem
 1918 08d4 9091 0000 		lds r25,(radio_sem)+1
 1919 08d8 0E94 0000 		call nrk_sem_pend
 1921               	.LM148:
 1922 08dc 1092 0000 		sts rfSettings+8,__zero_reg__
 1924               	.LM149:
 1925 08e0 4098      		cbi 40-0x20,0
 1926 08e2 86E0      		ldi r24,lo8(6)
 1927 08e4 8EBD      		out 78-0x20,r24
 1928               	.L491:
 1930               	.LM150:
 1931 08e6 0DB4      		in __tmp_reg__,77-0x20
 1932 08e8 07FE      		sbrs __tmp_reg__,7
 1933 08ea 00C0      		rjmp .L491
 1934 08ec 409A      		sbi 40-0x20,0
 1936               	.LM151:
 1937 08ee 1092 0000 		sts rx_ready,__zero_reg__
 1939               	.LM152:
 1940 08f2 8091 0000 		lds r24,radio_sem
 1941 08f6 9091 0000 		lds r25,(radio_sem)+1
 1942 08fa 0E94 0000 		call nrk_sem_post
 1943               	/* epilogue: frame size=0 */
 1944 08fe 0895      		ret
 1945               	/* epilogue end (size=1) */
 1946               	/* function rf_rx_off size 24 (23) */
 1948               	.Lscope21:
 1950               		.stabd	78,0,0
 1952               	.global	rf_polling_rx_on
 1954               	rf_polling_rx_on:
 1955               		.stabd	46,0,0
 1957               	.LM153:
 1958               	.LFBB22:
 1959               	/* prologue: frame size=0 */
 1960               	/* prologue end (size=0) */
 1962               	.LM154:
 1963 0900 8091 0000 		lds r24,radio_sem
 1964 0904 9091 0000 		lds r25,(radio_sem)+1
 1965 0908 0E94 0000 		call nrk_sem_pend
 1967               	.LM155:
 1968 090c 81E0      		ldi r24,lo8(1)
 1969 090e 8093 0000 		sts rfSettings+8,r24
 1971               	.LM156:
 1972 0912 4098      		cbi 40-0x20,0
 1973 0914 83E0      		ldi r24,lo8(3)
 1974 0916 8EBD      		out 78-0x20,r24
 1975               	.L497:
 1977               	.LM157:
 1978 0918 0DB4      		in __tmp_reg__,77-0x20
 1979 091a 07FE      		sbrs __tmp_reg__,7
 1980 091c 00C0      		rjmp .L497
 1981 091e 409A      		sbi 40-0x20,0
 1983               	.LM158:
 1984 0920 4098      		cbi 40-0x20,0
 1985 0922 88E0      		ldi r24,lo8(8)
 1986 0924 8EBD      		out 78-0x20,r24
 1987               	.L499:
 1988 0926 0DB4      		in __tmp_reg__,77-0x20
 1989 0928 07FE      		sbrs __tmp_reg__,7
 1990 092a 00C0      		rjmp .L499
 1991 092c 409A      		sbi 40-0x20,0
 1993               	.LM159:
 1994 092e 1092 0000 		sts rx_ready,__zero_reg__
 1996               	.LM160:
 1997 0932 8091 0000 		lds r24,radio_sem
 1998 0936 9091 0000 		lds r25,(radio_sem)+1
 1999 093a 0E94 0000 		call nrk_sem_post
 2000               	/* epilogue: frame size=0 */
 2001 093e 0895      		ret
 2002               	/* epilogue end (size=1) */
 2003               	/* function rf_polling_rx_on size 32 (31) */
 2005               	.Lscope22:
 2007               		.stabd	78,0,0
 2009               	.global	rf_rx_on
 2011               	rf_rx_on:
 2012               		.stabd	46,0,0
 2014               	.LM161:
 2015               	.LFBB23:
 2016               	/* prologue: frame size=0 */
 2017               	/* prologue end (size=0) */
 2019               	.LM162:
 2020 0940 8091 0000 		lds r24,radio_sem
 2021 0944 9091 0000 		lds r25,(radio_sem)+1
 2022 0948 0E94 0000 		call nrk_sem_pend
 2024               	.LM163:
 2025 094c 81E0      		ldi r24,lo8(1)
 2026 094e 8093 0000 		sts rfSettings+8,r24
 2028               	.LM164:
 2029 0952 4098      		cbi 40-0x20,0
 2030 0954 83E0      		ldi r24,lo8(3)
 2031 0956 8EBD      		out 78-0x20,r24
 2032               	.L507:
 2034               	.LM165:
 2035 0958 0DB4      		in __tmp_reg__,77-0x20
 2036 095a 07FE      		sbrs __tmp_reg__,7
 2037 095c 00C0      		rjmp .L507
 2038 095e 409A      		sbi 40-0x20,0
 2040               	.LM166:
 2041 0960 4098      		cbi 40-0x20,0
 2042 0962 88E0      		ldi r24,lo8(8)
 2043 0964 8EBD      		out 78-0x20,r24
 2044               	.L509:
 2045 0966 0DB4      		in __tmp_reg__,77-0x20
 2046 0968 07FE      		sbrs __tmp_reg__,7
 2047 096a 00C0      		rjmp .L509
 2048 096c 409A      		sbi 40-0x20,0
 2050               	.LM167:
 2051 096e 1092 0000 		sts rx_ready,__zero_reg__
 2053               	.LM168:
 2054 0972 8091 0000 		lds r24,radio_sem
 2055 0976 9091 0000 		lds r25,(radio_sem)+1
 2056 097a 0E94 0000 		call nrk_sem_post
 2057               	/* epilogue: frame size=0 */
 2058 097e 0895      		ret
 2059               	/* epilogue end (size=1) */
 2060               	/* function rf_rx_on size 32 (31) */
 2062               	.Lscope23:
 2064               		.stabd	78,0,0
 2067               	.global	rf_tx_power
 2069               	rf_tx_power:
 2070               		.stabd	46,0,0
 2072               	.LM169:
 2073               	.LFBB24:
 2074               	/* prologue: frame size=0 */
 2075 0980 1F93      		push r17
 2076               	/* prologue end (size=1) */
 2077 0982 182F      		mov r17,r24
 2079               	.LM170:
 2080 0984 8091 0000 		lds r24,radio_sem
 2081 0988 9091 0000 		lds r25,(radio_sem)+1
 2082 098c 0E94 0000 		call nrk_sem_pend
 2084               	.LM171:
 2085 0990 212F      		mov r18,r17
 2086 0992 3327      		clr r19
 2087 0994 2F71      		andi r18,lo8(31)
 2088 0996 3070      		andi r19,hi8(31)
 2089 0998 206E      		ori r18,lo8(-24352)
 2090 099a 306A      		ori r19,hi8(-24352)
 2092               	.LM172:
 2093 099c 4098      		cbi 40-0x20,0
 2094 099e 85E1      		ldi r24,lo8(21)
 2095 09a0 8EBD      		out 78-0x20,r24
 2096               	.L517:
 2098               	.LM173:
 2099 09a2 0DB4      		in __tmp_reg__,77-0x20
 2100 09a4 07FE      		sbrs __tmp_reg__,7
 2101 09a6 00C0      		rjmp .L517
 2102 09a8 832F      		mov r24,r19
 2103 09aa 9927      		clr r25
 2104 09ac 8EBD      		out 78-0x20,r24
 2105               	.L519:
 2106 09ae 0DB4      		in __tmp_reg__,77-0x20
 2107 09b0 07FE      		sbrs __tmp_reg__,7
 2108 09b2 00C0      		rjmp .L519
 2109 09b4 2EBD      		out 78-0x20,r18
 2110               	.L521:
 2111 09b6 0DB4      		in __tmp_reg__,77-0x20
 2112 09b8 07FE      		sbrs __tmp_reg__,7
 2113 09ba 00C0      		rjmp .L521
 2114 09bc 409A      		sbi 40-0x20,0
 2116               	.LM174:
 2117 09be 8091 0000 		lds r24,radio_sem
 2118 09c2 9091 0000 		lds r25,(radio_sem)+1
 2119 09c6 0E94 0000 		call nrk_sem_post
 2120               	/* epilogue: frame size=0 */
 2121 09ca 1F91      		pop r17
 2122 09cc 0895      		ret
 2123               	/* epilogue end (size=2) */
 2124               	/* function rf_tx_power size 39 (36) */
 2129               	.Lscope24:
 2131               		.stabd	78,0,0
 2134               	.global	rf_tx_packet
 2136               	rf_tx_packet:
 2137               		.stabd	46,0,0
 2139               	.LM175:
 2140               	.LFBB25:
 2141               	/* prologue: frame size=2 */
 2142 09ce EF92      		push r14
 2143 09d0 FF92      		push r15
 2144 09d2 0F93      		push r16
 2145 09d4 1F93      		push r17
 2146 09d6 CF93      		push r28
 2147 09d8 DF93      		push r29
 2148 09da CDB7      		in r28,__SP_L__
 2149 09dc DEB7      		in r29,__SP_H__
 2150 09de 2297      		sbiw r28,2
 2151 09e0 0FB6      		in __tmp_reg__,__SREG__
 2152 09e2 F894      		cli
 2153 09e4 DEBF      		out __SP_H__,r29
 2154 09e6 0FBE      		out __SREG__,__tmp_reg__
 2155 09e8 CDBF      		out __SP_L__,r28
 2156               	/* prologue end (size=14) */
 2157 09ea 8C01      		movw r16,r24
 2159               	.LM176:
 2160 09ec 8091 0000 		lds r24,radio_sem
 2161 09f0 9091 0000 		lds r25,(radio_sem)+1
 2162 09f4 0E94 0000 		call nrk_sem_pend
 2164               	.LM177:
 2165 09f8 5091 0000 		lds r21,security_enable
 2166 09fc 5523      		tst r21
 2167 09fe 01F0      		breq .L531
 2169               	.LM178:
 2170 0a00 4098      		cbi 40-0x20,0
 2171 0a02 8DE0      		ldi r24,lo8(13)
 2172 0a04 8EBD      		out 78-0x20,r24
 2173               	.L533:
 2174 0a06 0DB4      		in __tmp_reg__,77-0x20
 2175 0a08 07FE      		sbrs __tmp_reg__,7
 2176 0a0a 00C0      		rjmp .L533
 2177 0a0c 409A      		sbi 40-0x20,0
 2178               	.L531:
 2180               	.LM179:
 2181 0a0e F801      		movw r30,r16
 2182 0a10 4281      		ldd r20,Z+2
 2183 0a12 642F      		mov r22,r20
 2184 0a14 7727      		clr r23
 2185 0a16 67FD      		sbrc r22,7
 2186 0a18 7095      		com r23
 2187 0a1a A0E0      		ldi r26,lo8(0)
 2188 0a1c 20E0      		ldi r18,lo8(0)
 2189 0a1e 30E0      		ldi r19,hi8(0)
 2190 0a20 00C0      		rjmp .L535
 2191               	.L536:
 2193               	.LM180:
 2194 0a22 F801      		movw r30,r16
 2195 0a24 8381      		ldd r24,Z+3
 2196 0a26 9481      		ldd r25,Z+4
 2197 0a28 E80E      		add r14,r24
 2198 0a2a F91E      		adc r15,r25
 2199 0a2c F701      		movw r30,r14
 2200 0a2e 8081      		ld r24,Z
 2201 0a30 A80F      		add r26,r24
 2202               	.L535:
 2203 0a32 822F      		mov r24,r18
 2204 0a34 2F5F      		subi r18,lo8(-(1))
 2205 0a36 3F4F      		sbci r19,hi8(-(1))
 2207               	.LM181:
 2208 0a38 E82E      		mov r14,r24
 2209 0a3a FF24      		clr r15
 2210 0a3c E616      		cp r14,r22
 2211 0a3e F706      		cpc r15,r23
 2212 0a40 04F0      		brlt .L536
 2214               	.LM182:
 2215 0a42 942F      		mov r25,r20
 2216 0a44 945F      		subi r25,lo8(-(12))
 2218               	.LM183:
 2219 0a46 5111      		cpse r21,__zero_reg__
 2220 0a48 9C5F      		subi r25,lo8(-(4))
 2221               	.L726:
 2223               	.LM184:
 2224 0a4a 6799      		sbic 44-0x20,7
 2225 0a4c 00C0      		rjmp .L726
 2226 0a4e 4E99      		sbic 41-0x20,6
 2227 0a50 00C0      		rjmp .L726
 2229               	.LM185:
 2230               	/* #APP */
 2231 0a52 F894      		cli
 2232               		
 2234               	.LM186:
 2235               	/* #NOAPP */
 2236 0a54 4098      		cbi 40-0x20,0
 2237 0a56 89E0      		ldi r24,lo8(9)
 2238 0a58 8EBD      		out 78-0x20,r24
 2239               	.L542:
 2240 0a5a 0DB4      		in __tmp_reg__,77-0x20
 2241 0a5c 07FE      		sbrs __tmp_reg__,7
 2242 0a5e 00C0      		rjmp .L542
 2243 0a60 409A      		sbi 40-0x20,0
 2245               	.LM187:
 2246 0a62 4098      		cbi 40-0x20,0
 2247 0a64 89E0      		ldi r24,lo8(9)
 2248 0a66 8EBD      		out 78-0x20,r24
 2249               	.L544:
 2250 0a68 0DB4      		in __tmp_reg__,77-0x20
 2251 0a6a 07FE      		sbrs __tmp_reg__,7
 2252 0a6c 00C0      		rjmp .L544
 2253 0a6e 409A      		sbi 40-0x20,0
 2255               	.LM188:
 2256 0a70 4098      		cbi 40-0x20,0
 2257 0a72 8EE3      		ldi r24,lo8(62)
 2258 0a74 8EBD      		out 78-0x20,r24
 2259               	.L546:
 2260 0a76 0DB4      		in __tmp_reg__,77-0x20
 2261 0a78 07FC      		sbrc __tmp_reg__,7
 2262 0a7a 00C0      		rjmp .L688
 2263 0a7c 00C0      		rjmp .L546
 2264               	.L548:
 2265               	.LBB13:
 2266 0a7e 0DB4      		in __tmp_reg__,77-0x20
 2267 0a80 07FC      		sbrc __tmp_reg__,7
 2268 0a82 00C0      		rjmp .L689
 2269 0a84 00C0      		rjmp .L548
 2270               	.L688:
 2271 0a86 9EBD      		out 78-0x20,r25
 2272 0a88 00C0      		rjmp .L548
 2273               	.L550:
 2274               	.LBE13:
 2276               	.LM189:
 2277 0a8a 81E6      		ldi r24,lo8(-30623)
 2278 0a8c 98E8      		ldi r25,hi8(-30623)
 2279 0a8e 9A83      		std Y+2,r25
 2280 0a90 8983      		std Y+1,r24
 2281               	.L551:
 2283               	.LM190:
 2284 0a92 5523      		tst r21
 2285 0a94 01F0      		breq .L552
 2286 0a96 8981      		ldd r24,Y+1
 2287 0a98 9A81      		ldd r25,Y+2
 2288 0a9a 8860      		ori r24,lo8(8)
 2289 0a9c 9A83      		std Y+2,r25
 2290 0a9e 8983      		std Y+1,r24
 2291               	.L552:
 2293               	.LM191:
 2294 0aa0 4098      		cbi 40-0x20,0
 2295 0aa2 8EE3      		ldi r24,lo8(62)
 2296 0aa4 8EBD      		out 78-0x20,r24
 2297               	.L554:
 2298 0aa6 0DB4      		in __tmp_reg__,77-0x20
 2299 0aa8 07FE      		sbrs __tmp_reg__,7
 2300 0aaa 00C0      		rjmp .L554
 2301 0aac FE01      		movw r30,r28
 2302 0aae 3196      		adiw r30,1
 2303               	.LBB14:
 2304 0ab0 9E01      		movw r18,r28
 2305 0ab2 2D5F      		subi r18,lo8(-(3))
 2306 0ab4 3F4F      		sbci r19,hi8(-(3))
 2307               	.L556:
 2308 0ab6 8081      		ld r24,Z
 2309 0ab8 8EBD      		out 78-0x20,r24
 2310               	.L557:
 2311 0aba 0DB4      		in __tmp_reg__,77-0x20
 2312 0abc 07FE      		sbrs __tmp_reg__,7
 2313 0abe 00C0      		rjmp .L557
 2314 0ac0 3196      		adiw r30,1
 2315 0ac2 E217      		cp r30,r18
 2316 0ac4 F307      		cpc r31,r19
 2317 0ac6 01F4      		brne .L556
 2318               	.LBE14:
 2319 0ac8 409A      		sbi 40-0x20,0
 2321               	.LM192:
 2322 0aca 4098      		cbi 40-0x20,0
 2323 0acc 8EE3      		ldi r24,lo8(62)
 2324 0ace 8EBD      		out 78-0x20,r24
 2325               	.L560:
 2326 0ad0 0DB4      		in __tmp_reg__,77-0x20
 2327 0ad2 07FC      		sbrc __tmp_reg__,7
 2328 0ad4 00C0      		rjmp .L693
 2329 0ad6 00C0      		rjmp .L560
 2330               	.L562:
 2331               	.LBB15:
 2332 0ad8 0DB4      		in __tmp_reg__,77-0x20
 2333 0ada 07FC      		sbrc __tmp_reg__,7
 2334 0adc 00C0      		rjmp .L694
 2335 0ade 00C0      		rjmp .L562
 2336               	.L693:
 2337 0ae0 8091 0000 		lds r24,rfSettings+2
 2338 0ae4 8EBD      		out 78-0x20,r24
 2339 0ae6 00C0      		rjmp .L562
 2340               	.L564:
 2341               	.LBE15:
 2343               	.LM193:
 2344 0ae8 0DB4      		in __tmp_reg__,77-0x20
 2345 0aea 07FE      		sbrs __tmp_reg__,7
 2346 0aec 00C0      		rjmp .L564
 2347 0aee 20E0      		ldi r18,lo8(0)
 2348 0af0 30E0      		ldi r19,hi8(0)
 2349               	.L566:
 2350               	.LBB16:
 2351 0af2 F901      		movw r30,r18
 2352 0af4 E050      		subi r30,lo8(-(rfSettings+4))
 2353 0af6 F040      		sbci r31,hi8(-(rfSettings+4))
 2354 0af8 8081      		ld r24,Z
 2355 0afa 8EBD      		out 78-0x20,r24
 2356               	.L567:
 2357 0afc 0DB4      		in __tmp_reg__,77-0x20
 2358 0afe 07FE      		sbrs __tmp_reg__,7
 2359 0b00 00C0      		rjmp .L567
 2360 0b02 2F5F      		subi r18,lo8(-(1))
 2361 0b04 3F4F      		sbci r19,hi8(-(1))
 2362 0b06 2230      		cpi r18,2
 2363 0b08 3105      		cpc r19,__zero_reg__
 2364 0b0a 01F4      		brne .L566
 2365               	.LBE16:
 2366 0b0c 409A      		sbi 40-0x20,0
 2368               	.LM194:
 2369 0b0e 4098      		cbi 40-0x20,0
 2370 0b10 8EE3      		ldi r24,lo8(62)
 2371 0b12 8EBD      		out 78-0x20,r24
 2372               	.L570:
 2373 0b14 0DB4      		in __tmp_reg__,77-0x20
 2374 0b16 07FE      		sbrs __tmp_reg__,7
 2375 0b18 00C0      		rjmp .L570
 2376 0b1a 20E0      		ldi r18,lo8(0)
 2377 0b1c 30E0      		ldi r19,hi8(0)
 2378               	.L572:
 2379               	.LBB17:
 2380 0b1e F801      		movw r30,r16
 2381 0b20 E20F      		add r30,r18
 2382 0b22 F31F      		adc r31,r19
 2383 0b24 8081      		ld r24,Z
 2384 0b26 8EBD      		out 78-0x20,r24
 2385               	.L573:
 2386 0b28 0DB4      		in __tmp_reg__,77-0x20
 2387 0b2a 07FE      		sbrs __tmp_reg__,7
 2388 0b2c 00C0      		rjmp .L573
 2389 0b2e 2F5F      		subi r18,lo8(-(1))
 2390 0b30 3F4F      		sbci r19,hi8(-(1))
 2391 0b32 2230      		cpi r18,2
 2392 0b34 3105      		cpc r19,__zero_reg__
 2393 0b36 01F4      		brne .L572
 2394               	.LBE17:
 2395 0b38 409A      		sbi 40-0x20,0
 2397               	.LM195:
 2398 0b3a 4098      		cbi 40-0x20,0
 2399 0b3c 8EE3      		ldi r24,lo8(62)
 2400 0b3e 8EBD      		out 78-0x20,r24
 2401               	.L576:
 2402 0b40 0DB4      		in __tmp_reg__,77-0x20
 2403 0b42 07FE      		sbrs __tmp_reg__,7
 2404 0b44 00C0      		rjmp .L576
 2405 0b46 20E0      		ldi r18,lo8(0)
 2406 0b48 30E0      		ldi r19,hi8(0)
 2407               	.L578:
 2408               	.LBB18:
 2409 0b4a F901      		movw r30,r18
 2410 0b4c E050      		subi r30,lo8(-(rfSettings+6))
 2411 0b4e F040      		sbci r31,hi8(-(rfSettings+6))
 2412 0b50 8081      		ld r24,Z
 2413 0b52 8EBD      		out 78-0x20,r24
 2414               	.L579:
 2415 0b54 0DB4      		in __tmp_reg__,77-0x20
 2416 0b56 07FE      		sbrs __tmp_reg__,7
 2417 0b58 00C0      		rjmp .L579
 2418 0b5a 2F5F      		subi r18,lo8(-(1))
 2419 0b5c 3F4F      		sbci r19,hi8(-(1))
 2420 0b5e 2230      		cpi r18,2
 2421 0b60 3105      		cpc r19,__zero_reg__
 2422 0b62 01F4      		brne .L578
 2423               	.LBE18:
 2424 0b64 409A      		sbi 40-0x20,0
 2426               	.LM196:
 2427 0b66 5523      		tst r21
 2428 0b68 01F0      		breq .L582
 2430               	.LM197:
 2431 0b6a 4098      		cbi 40-0x20,0
 2432 0b6c 8EE3      		ldi r24,lo8(62)
 2433 0b6e 8EBD      		out 78-0x20,r24
 2434               	.L584:
 2435 0b70 0DB4      		in __tmp_reg__,77-0x20
 2436 0b72 07FE      		sbrs __tmp_reg__,7
 2437 0b74 00C0      		rjmp .L584
 2438 0b76 E0E0      		ldi r30,lo8(tx_ctr)
 2439 0b78 F0E0      		ldi r31,hi8(tx_ctr)
 2440               	.L586:
 2441               	.LBB19:
 2442 0b7a 8081      		ld r24,Z
 2443 0b7c 8EBD      		out 78-0x20,r24
 2444               	.L587:
 2445 0b7e 0DB4      		in __tmp_reg__,77-0x20
 2446 0b80 07FE      		sbrs __tmp_reg__,7
 2447 0b82 00C0      		rjmp .L587
 2448 0b84 3196      		adiw r30,1
 2449 0b86 80E0      		ldi r24,hi8(tx_ctr+4)
 2450 0b88 E030      		cpi r30,lo8(tx_ctr+4)
 2451 0b8a F807      		cpc r31,r24
 2452 0b8c 01F4      		brne .L586
 2453               	.LBE19:
 2454 0b8e 409A      		sbi 40-0x20,0
 2455               	.L582:
 2457               	.LM198:
 2458 0b90 4098      		cbi 40-0x20,0
 2459 0b92 8EE3      		ldi r24,lo8(62)
 2460 0b94 8EBD      		out 78-0x20,r24
 2461               	.L590:
 2462 0b96 0DB4      		in __tmp_reg__,77-0x20
 2463 0b98 07FE      		sbrs __tmp_reg__,7
 2464 0b9a 00C0      		rjmp .L590
 2465 0b9c 20E0      		ldi r18,lo8(0)
 2466 0b9e 30E0      		ldi r19,hi8(0)
 2467 0ba0 00C0      		rjmp .L592
 2468               	.L593:
 2469               	.LBB20:
 2470 0ba2 F801      		movw r30,r16
 2471 0ba4 8381      		ldd r24,Z+3
 2472 0ba6 9481      		ldd r25,Z+4
 2473 0ba8 480F      		add r20,r24
 2474 0baa 591F      		adc r21,r25
 2475 0bac FA01      		movw r30,r20
 2476 0bae 8081      		ld r24,Z
 2477 0bb0 8EBD      		out 78-0x20,r24
 2478               	.L594:
 2479 0bb2 0DB4      		in __tmp_reg__,77-0x20
 2480 0bb4 07FE      		sbrs __tmp_reg__,7
 2481 0bb6 00C0      		rjmp .L594
 2482 0bb8 2F5F      		subi r18,lo8(-(1))
 2483 0bba 3F4F      		sbci r19,hi8(-(1))
 2484               	.L592:
 2485 0bbc 422F      		mov r20,r18
 2486 0bbe 5527      		clr r21
 2487 0bc0 4617      		cp r20,r22
 2488 0bc2 5707      		cpc r21,r23
 2489 0bc4 04F0      		brlt .L593
 2490               	.LBE20:
 2491 0bc6 409A      		sbi 40-0x20,0
 2493               	.LM199:
 2494 0bc8 4098      		cbi 40-0x20,0
 2495 0bca 8EE3      		ldi r24,lo8(62)
 2496 0bcc 8EBD      		out 78-0x20,r24
 2497               	.L597:
 2498 0bce 0DB4      		in __tmp_reg__,77-0x20
 2499 0bd0 07FC      		sbrc __tmp_reg__,7
 2500 0bd2 00C0      		rjmp .L709
 2501 0bd4 00C0      		rjmp .L597
 2502               	.L599:
 2503               	.LBB21:
 2504 0bd6 0DB4      		in __tmp_reg__,77-0x20
 2505 0bd8 07FC      		sbrc __tmp_reg__,7
 2506 0bda 00C0      		rjmp .L710
 2507 0bdc 00C0      		rjmp .L599
 2508               	.L709:
 2509 0bde AEBD      		out 78-0x20,r26
 2510 0be0 00C0      		rjmp .L599
 2511               	.L601:
 2512               	.LBE21:
 2513               	.LBB22:
 2515               	.LM200:
 2516 0be2 8091 0000 		lds r24,rfSettings+8
 2517 0be6 8823      		tst r24
 2518 0be8 01F4      		brne .L642
 2520               	.LM201:
 2521 0bea 4098      		cbi 40-0x20,0
 2522 0bec 83E0      		ldi r24,lo8(3)
 2523 0bee 8EBD      		out 78-0x20,r24
 2524               	.L604:
 2525 0bf0 0DB4      		in __tmp_reg__,77-0x20
 2526 0bf2 07FE      		sbrs __tmp_reg__,7
 2527 0bf4 00C0      		rjmp .L604
 2528 0bf6 409A      		sbi 40-0x20,0
 2529               	.L642:
 2531               	.LM202:
 2532 0bf8 4098      		cbi 40-0x20,0
 2533 0bfa 1EBC      		out 78-0x20,__zero_reg__
 2534               	.L606:
 2535 0bfc 0DB4      		in __tmp_reg__,77-0x20
 2536 0bfe 07FE      		sbrs __tmp_reg__,7
 2537 0c00 00C0      		rjmp .L606
 2538 0c02 8EB5      		in r24,78-0x20
 2539 0c04 409A      		sbi 40-0x20,0
 2541               	.LM203:
 2542 0c06 81FF      		sbrs r24,1
 2543 0c08 00C0      		rjmp .L642
 2544 0c0a 00E0      		ldi r16,lo8(0)
 2545               	.L609:
 2547               	.LM204:
 2548 0c0c 4098      		cbi 40-0x20,0
 2549 0c0e 85E0      		ldi r24,lo8(5)
 2550 0c10 8EBD      		out 78-0x20,r24
 2551               	.L610:
 2552 0c12 0DB4      		in __tmp_reg__,77-0x20
 2553 0c14 07FE      		sbrs __tmp_reg__,7
 2554 0c16 00C0      		rjmp .L610
 2555 0c18 409A      		sbi 40-0x20,0
 2557               	.LM205:
 2558 0c1a 4098      		cbi 40-0x20,0
 2559 0c1c 1EBC      		out 78-0x20,__zero_reg__
 2560               	.L612:
 2561 0c1e 0DB4      		in __tmp_reg__,77-0x20
 2562 0c20 07FE      		sbrs __tmp_reg__,7
 2563 0c22 00C0      		rjmp .L612
 2564 0c24 1EB5      		in r17,78-0x20
 2565 0c26 409A      		sbi 40-0x20,0
 2567               	.LM206:
 2568 0c28 0F5F      		subi r16,lo8(-(1))
 2570               	.LM207:
 2571 0c2a 0536      		cpi r16,lo8(101)
 2572 0c2c 01F4      		brne .L614
 2574               	.LM208:
 2575               	/* #APP */
 2576 0c2e 7894      		sei
 2577               		
 2579               	.LM209:
 2580               	/* #NOAPP */
 2581 0c30 8091 0000 		lds r24,radio_sem
 2582 0c34 9091 0000 		lds r25,(radio_sem)+1
 2583 0c38 0E94 0000 		call nrk_sem_post
 2584 0c3c 80E0      		ldi r24,lo8(0)
 2585 0c3e 90E0      		ldi r25,hi8(0)
 2586 0c40 00C0      		rjmp .L616
 2587               	.L614:
 2589               	.LM210:
 2590 0c42 84E6      		ldi r24,lo8(100)
 2591 0c44 90E0      		ldi r25,hi8(100)
 2592 0c46 0E94 0000 		call halWait
 2594               	.LM211:
 2595 0c4a 13FD      		sbrc r17,3
 2596 0c4c 00C0      		rjmp .L617
 2597 0c4e 00C0      		rjmp .L609
 2598               	.L723:
 2599               	.LBE22:
 2601               	.LM212:
 2602 0c50 4098      		cbi 40-0x20,0
 2603 0c52 84E0      		ldi r24,lo8(4)
 2604 0c54 8EBD      		out 78-0x20,r24
 2605               	.L619:
 2606 0c56 0DB4      		in __tmp_reg__,77-0x20
 2607 0c58 07FE      		sbrs __tmp_reg__,7
 2608 0c5a 00C0      		rjmp .L619
 2609 0c5c 409A      		sbi 40-0x20,0
 2610               	.L617:
 2612               	.LM213:
 2613               	/* #APP */
 2614 0c5e 7894      		sei
 2615               		
 2616               	/* #NOAPP */
 2617               	.L621:
 2619               	.LM214:
 2620 0c60 4E9B      		sbis 41-0x20,6
 2621 0c62 00C0      		rjmp .L621
 2622               	.L643:
 2624               	.LM215:
 2625 0c64 4E99      		sbic 41-0x20,6
 2626 0c66 00C0      		rjmp .L643
 2628               	.LM216:
 2629 0c68 8091 0000 		lds r24,auto_ack_enable
 2630 0c6c 8823      		tst r24
 2631 0c6e 01F0      		breq .L725
 2633               	.LM217:
 2634 0c70 84EA      		ldi r24,lo8(676)
 2635 0c72 92E0      		ldi r25,hi8(676)
 2636 0c74 0E94 0000 		call halWait
 2638               	.LM218:
 2639 0c78 319B      		sbis 38-0x20,1
 2640 0c7a 00C0      		rjmp .L627
 2642               	.LM219:
 2643 0c7c 4098      		cbi 40-0x20,0
 2644 0c7e 8FE7      		ldi r24,lo8(127)
 2645 0c80 8EBD      		out 78-0x20,r24
 2646               	.L629:
 2647 0c82 0DB4      		in __tmp_reg__,77-0x20
 2648 0c84 07FE      		sbrs __tmp_reg__,7
 2649 0c86 00C0      		rjmp .L629
 2650 0c88 1EBC      		out 78-0x20,__zero_reg__
 2651               	.L631:
 2652 0c8a 0DB4      		in __tmp_reg__,77-0x20
 2653 0c8c 07FE      		sbrs __tmp_reg__,7
 2654 0c8e 00C0      		rjmp .L631
 2655 0c90 8EB5      		in r24,78-0x20
 2656 0c92 409A      		sbi 40-0x20,0
 2657               	.L725:
 2658 0c94 11E0      		ldi r17,lo8(1)
 2659 0c96 00C0      		rjmp .L626
 2660               	.L627:
 2662               	.LM220:
 2663 0c98 4098      		cbi 40-0x20,0
 2664 0c9a 88E0      		ldi r24,lo8(8)
 2665 0c9c 8EBD      		out 78-0x20,r24
 2666               	.L633:
 2667 0c9e 0DB4      		in __tmp_reg__,77-0x20
 2668 0ca0 07FE      		sbrs __tmp_reg__,7
 2669 0ca2 00C0      		rjmp .L633
 2670 0ca4 409A      		sbi 40-0x20,0
 2672               	.LM221:
 2673 0ca6 4098      		cbi 40-0x20,0
 2674 0ca8 88E0      		ldi r24,lo8(8)
 2675 0caa 8EBD      		out 78-0x20,r24
 2676               	.L635:
 2677 0cac 0DB4      		in __tmp_reg__,77-0x20
 2678 0cae 07FE      		sbrs __tmp_reg__,7
 2679 0cb0 00C0      		rjmp .L635
 2680 0cb2 409A      		sbi 40-0x20,0
 2681 0cb4 10E0      		ldi r17,lo8(0)
 2682               	.L626:
 2684               	.LM222:
 2685               	/* #APP */
 2686 0cb6 F894      		cli
 2687               		
 2689               	.LM223:
 2690               	/* #NOAPP */
 2691 0cb8 4098      		cbi 40-0x20,0
 2692 0cba 86E0      		ldi r24,lo8(6)
 2693 0cbc 8EBD      		out 78-0x20,r24
 2694               	.L637:
 2695 0cbe 0DB4      		in __tmp_reg__,77-0x20
 2696 0cc0 07FE      		sbrs __tmp_reg__,7
 2697 0cc2 00C0      		rjmp .L637
 2698 0cc4 409A      		sbi 40-0x20,0
 2700               	.LM224:
 2701               	/* #APP */
 2702 0cc6 7894      		sei
 2703               		
 2705               	.LM225:
 2706               	/* #NOAPP */
 2707 0cc8 8091 0000 		lds r24,rfSettings+2
 2708 0ccc 8F5F      		subi r24,lo8(-(1))
 2709 0cce 8093 0000 		sts rfSettings+2,r24
 2711               	.LM226:
 2712 0cd2 8091 0000 		lds r24,radio_sem
 2713 0cd6 9091 0000 		lds r25,(radio_sem)+1
 2714 0cda 0E94 0000 		call nrk_sem_post
 2716               	.LM227:
 2717 0cde 812F      		mov r24,r17
 2718 0ce0 9927      		clr r25
 2719 0ce2 00C0      		rjmp .L616
 2720               	.L689:
 2722               	.LM228:
 2723 0ce4 409A      		sbi 40-0x20,0
 2725               	.LM229:
 2726 0ce6 81E4      		ldi r24,lo8(-30655)
 2727 0ce8 98E8      		ldi r25,hi8(-30655)
 2728 0cea 9A83      		std Y+2,r25
 2729 0cec 8983      		std Y+1,r24
 2731               	.LM230:
 2732 0cee 8091 0000 		lds r24,auto_ack_enable
 2733 0cf2 8823      		tst r24
 2734 0cf4 01F0      		breq .+2
 2735 0cf6 00C0      		rjmp .L550
 2736 0cf8 00C0      		rjmp .L551
 2737               	.L694:
 2739               	.LM231:
 2740 0cfa 409A      		sbi 40-0x20,0
 2742               	.LM232:
 2743 0cfc 4098      		cbi 40-0x20,0
 2744 0cfe 8EE3      		ldi r24,lo8(62)
 2745 0d00 8EBD      		out 78-0x20,r24
 2746 0d02 00C0      		rjmp .L564
 2747               	.L710:
 2749               	.LM233:
 2750 0d04 409A      		sbi 40-0x20,0
 2752               	.LM234:
 2753 0d06 F801      		movw r30,r16
 2754 0d08 8581      		ldd r24,Z+5
 2755 0d0a 8823      		tst r24
 2756 0d0c 01F0      		breq .+2
 2757 0d0e 00C0      		rjmp .L601
 2758 0d10 00C0      		rjmp .L723
 2759               	.L616:
 2760               	/* epilogue: frame size=2 */
 2761 0d12 2296      		adiw r28,2
 2762 0d14 0FB6      		in __tmp_reg__,__SREG__
 2763 0d16 F894      		cli
 2764 0d18 DEBF      		out __SP_H__,r29
 2765 0d1a 0FBE      		out __SREG__,__tmp_reg__
 2766 0d1c CDBF      		out __SP_L__,r28
 2767 0d1e DF91      		pop r29
 2768 0d20 CF91      		pop r28
 2769 0d22 1F91      		pop r17
 2770 0d24 0F91      		pop r16
 2771 0d26 FF90      		pop r15
 2772 0d28 EF90      		pop r14
 2773 0d2a 0895      		ret
 2774               	/* epilogue end (size=13) */
 2775               	/* function rf_tx_packet size 447 (420) */
 2789               	.Lscope25:
 2791               		.stabd	78,0,0
 2797               	.global	rf_tx_tdma_packet
 2799               	rf_tx_tdma_packet:
 2800               		.stabd	46,0,0
 2802               	.LM235:
 2803               	.LFBB26:
 2804               	/* prologue: frame size=2 */
 2805 0d2c 8F92      		push r8
 2806 0d2e 9F92      		push r9
 2807 0d30 BF92      		push r11
 2808 0d32 CF92      		push r12
 2809 0d34 DF92      		push r13
 2810 0d36 EF92      		push r14
 2811 0d38 FF92      		push r15
 2812 0d3a 0F93      		push r16
 2813 0d3c 1F93      		push r17
 2814 0d3e CF93      		push r28
 2815 0d40 DF93      		push r29
 2816 0d42 CDB7      		in r28,__SP_L__
 2817 0d44 DEB7      		in r29,__SP_H__
 2818 0d46 2297      		sbiw r28,2
 2819 0d48 0FB6      		in __tmp_reg__,__SREG__
 2820 0d4a F894      		cli
 2821 0d4c DEBF      		out __SP_H__,r29
 2822 0d4e 0FBE      		out __SREG__,__tmp_reg__
 2823 0d50 CDBF      		out __SP_L__,r28
 2824               	/* prologue end (size=19) */
 2825 0d52 8C01      		movw r16,r24
 2826 0d54 6B01      		movw r12,r22
 2827 0d56 7A01      		movw r14,r20
 2828 0d58 4901      		movw r8,r18
 2830               	.LM236:
 2831 0d5a 8091 0000 		lds r24,radio_sem
 2832 0d5e 9091 0000 		lds r25,(radio_sem)+1
 2833 0d62 0E94 0000 		call nrk_sem_pend
 2835               	.LM237:
 2836 0d66 0E94 0000 		call _nrk_os_timer_get
 2838               	.LM238:
 2839 0d6a 4098      		cbi 40-0x20,0
 2840 0d6c 88E0      		ldi r24,lo8(8)
 2841 0d6e 8EBD      		out 78-0x20,r24
 2842               	.L728:
 2844               	.LM239:
 2845 0d70 0DB4      		in __tmp_reg__,77-0x20
 2846 0d72 07FE      		sbrs __tmp_reg__,7
 2847 0d74 00C0      		rjmp .L728
 2848 0d76 409A      		sbi 40-0x20,0
 2850               	.LM240:
 2851 0d78 4098      		cbi 40-0x20,0
 2852 0d7a 88E0      		ldi r24,lo8(8)
 2853 0d7c 8EBD      		out 78-0x20,r24
 2854               	.L730:
 2855 0d7e 0DB4      		in __tmp_reg__,77-0x20
 2856 0d80 07FE      		sbrs __tmp_reg__,7
 2857 0d82 00C0      		rjmp .L730
 2858 0d84 409A      		sbi 40-0x20,0
 2859               	.L896:
 2861               	.LM241:
 2862 0d86 6799      		sbic 44-0x20,7
 2863 0d88 00C0      		rjmp .L896
 2864 0d8a 4E99      		sbic 41-0x20,6
 2865 0d8c 00C0      		rjmp .L896
 2867               	.LM242:
 2868               	/* #APP */
 2869 0d8e F894      		cli
 2870               		
 2872               	.LM243:
 2873               	/* #NOAPP */
 2874 0d90 4098      		cbi 40-0x20,0
 2875 0d92 89E0      		ldi r24,lo8(9)
 2876 0d94 8EBD      		out 78-0x20,r24
 2877               	.L735:
 2878 0d96 0DB4      		in __tmp_reg__,77-0x20
 2879 0d98 07FE      		sbrs __tmp_reg__,7
 2880 0d9a 00C0      		rjmp .L735
 2881 0d9c 409A      		sbi 40-0x20,0
 2883               	.LM244:
 2884 0d9e 4098      		cbi 40-0x20,0
 2885 0da0 89E0      		ldi r24,lo8(9)
 2886 0da2 8EBD      		out 78-0x20,r24
 2887               	.L737:
 2888 0da4 0DB4      		in __tmp_reg__,77-0x20
 2889 0da6 07FE      		sbrs __tmp_reg__,7
 2890 0da8 00C0      		rjmp .L737
 2891 0daa 409A      		sbi 40-0x20,0
 2893               	.LM245:
 2894 0dac F801      		movw r30,r16
 2895 0dae 6281      		ldd r22,Z+2
 2896 0db0 462F      		mov r20,r22
 2897 0db2 5527      		clr r21
 2898 0db4 47FD      		sbrc r20,7
 2899 0db6 5095      		com r21
 2900 0db8 BB24      		clr r11
 2901 0dba 20E0      		ldi r18,lo8(0)
 2902 0dbc 30E0      		ldi r19,hi8(0)
 2903 0dbe 00C0      		rjmp .L739
 2904               	.L740:
 2906               	.LM246:
 2907 0dc0 F801      		movw r30,r16
 2908 0dc2 8381      		ldd r24,Z+3
 2909 0dc4 9481      		ldd r25,Z+4
 2910 0dc6 A80F      		add r26,r24
 2911 0dc8 B91F      		adc r27,r25
 2912 0dca 8C91      		ld r24,X
 2913 0dcc B80E      		add r11,r24
 2914               	.L739:
 2915 0dce 822F      		mov r24,r18
 2916 0dd0 2F5F      		subi r18,lo8(-(1))
 2917 0dd2 3F4F      		sbci r19,hi8(-(1))
 2919               	.LM247:
 2920 0dd4 A82F      		mov r26,r24
 2921 0dd6 BB27      		clr r27
 2922 0dd8 A417      		cp r26,r20
 2923 0dda B507      		cpc r27,r21
 2924 0ddc 04F0      		brlt .L740
 2926               	.LM248:
 2927 0dde 962F      		mov r25,r22
 2928 0de0 945F      		subi r25,lo8(-(12))
 2930               	.LM249:
 2931 0de2 4098      		cbi 40-0x20,0
 2932 0de4 8EE3      		ldi r24,lo8(62)
 2933 0de6 8EBD      		out 78-0x20,r24
 2934               	.L742:
 2935 0de8 0DB4      		in __tmp_reg__,77-0x20
 2936 0dea 07FC      		sbrc __tmp_reg__,7
 2937 0dec 00C0      		rjmp .L863
 2938 0dee 00C0      		rjmp .L742
 2939               	.L744:
 2940               	.LBB23:
 2941 0df0 0DB4      		in __tmp_reg__,77-0x20
 2942 0df2 07FC      		sbrc __tmp_reg__,7
 2943 0df4 00C0      		rjmp .L864
 2944 0df6 00C0      		rjmp .L744
 2945               	.L863:
 2946 0df8 9EBD      		out 78-0x20,r25
 2947 0dfa 00C0      		rjmp .L744
 2948               	.L746:
 2949 0dfc 81E6      		ldi r24,lo8(-30623)
 2950 0dfe 98E8      		ldi r25,hi8(-30623)
 2951               	.L747:
 2952               	.LBE23:
 2954               	.LM250:
 2955 0e00 9A83      		std Y+2,r25
 2956 0e02 8983      		std Y+1,r24
 2958               	.LM251:
 2959 0e04 4098      		cbi 40-0x20,0
 2960 0e06 8EE3      		ldi r24,lo8(62)
 2961 0e08 8EBD      		out 78-0x20,r24
 2962               	.L748:
 2963 0e0a 0DB4      		in __tmp_reg__,77-0x20
 2964 0e0c 07FE      		sbrs __tmp_reg__,7
 2965 0e0e 00C0      		rjmp .L748
 2966 0e10 FE01      		movw r30,r28
 2967 0e12 3196      		adiw r30,1
 2968               	.LBB24:
 2969 0e14 9E01      		movw r18,r28
 2970 0e16 2D5F      		subi r18,lo8(-(3))
 2971 0e18 3F4F      		sbci r19,hi8(-(3))
 2972               	.L750:
 2973 0e1a 8081      		ld r24,Z
 2974 0e1c 8EBD      		out 78-0x20,r24
 2975               	.L751:
 2976 0e1e 0DB4      		in __tmp_reg__,77-0x20
 2977 0e20 07FE      		sbrs __tmp_reg__,7
 2978 0e22 00C0      		rjmp .L751
 2979 0e24 3196      		adiw r30,1
 2980 0e26 E217      		cp r30,r18
 2981 0e28 F307      		cpc r31,r19
 2982 0e2a 01F4      		brne .L750
 2983               	.LBE24:
 2984 0e2c 409A      		sbi 40-0x20,0
 2986               	.LM252:
 2987 0e2e 4098      		cbi 40-0x20,0
 2988 0e30 8EE3      		ldi r24,lo8(62)
 2989 0e32 8EBD      		out 78-0x20,r24
 2990               	.L754:
 2991 0e34 0DB4      		in __tmp_reg__,77-0x20
 2992 0e36 07FC      		sbrc __tmp_reg__,7
 2993 0e38 00C0      		rjmp .L868
 2994 0e3a 00C0      		rjmp .L754
 2995               	.L756:
 2996               	.LBB25:
 2997 0e3c 0DB4      		in __tmp_reg__,77-0x20
 2998 0e3e 07FC      		sbrc __tmp_reg__,7
 2999 0e40 00C0      		rjmp .L869
 3000 0e42 00C0      		rjmp .L756
 3001               	.L868:
 3002 0e44 8091 0000 		lds r24,rfSettings+2
 3003 0e48 8EBD      		out 78-0x20,r24
 3004 0e4a 00C0      		rjmp .L756
 3005               	.L758:
 3006               	.LBE25:
 3008               	.LM253:
 3009 0e4c 0DB4      		in __tmp_reg__,77-0x20
 3010 0e4e 07FE      		sbrs __tmp_reg__,7
 3011 0e50 00C0      		rjmp .L758
 3012 0e52 20E0      		ldi r18,lo8(0)
 3013 0e54 30E0      		ldi r19,hi8(0)
 3014               	.L760:
 3015               	.LBB26:
 3016 0e56 F901      		movw r30,r18
 3017 0e58 E050      		subi r30,lo8(-(rfSettings+4))
 3018 0e5a F040      		sbci r31,hi8(-(rfSettings+4))
 3019 0e5c 8081      		ld r24,Z
 3020 0e5e 8EBD      		out 78-0x20,r24
 3021               	.L761:
 3022 0e60 0DB4      		in __tmp_reg__,77-0x20
 3023 0e62 07FE      		sbrs __tmp_reg__,7
 3024 0e64 00C0      		rjmp .L761
 3025 0e66 2F5F      		subi r18,lo8(-(1))
 3026 0e68 3F4F      		sbci r19,hi8(-(1))
 3027 0e6a 2230      		cpi r18,2
 3028 0e6c 3105      		cpc r19,__zero_reg__
 3029 0e6e 01F4      		brne .L760
 3030               	.LBE26:
 3031 0e70 409A      		sbi 40-0x20,0
 3033               	.LM254:
 3034 0e72 4098      		cbi 40-0x20,0
 3035 0e74 8EE3      		ldi r24,lo8(62)
 3036 0e76 8EBD      		out 78-0x20,r24
 3037               	.L764:
 3038 0e78 0DB4      		in __tmp_reg__,77-0x20
 3039 0e7a 07FE      		sbrs __tmp_reg__,7
 3040 0e7c 00C0      		rjmp .L764
 3041 0e7e 20E0      		ldi r18,lo8(0)
 3042 0e80 30E0      		ldi r19,hi8(0)
 3043               	.L766:
 3044               	.LBB27:
 3045 0e82 F801      		movw r30,r16
 3046 0e84 E20F      		add r30,r18
 3047 0e86 F31F      		adc r31,r19
 3048 0e88 8081      		ld r24,Z
 3049 0e8a 8EBD      		out 78-0x20,r24
 3050               	.L767:
 3051 0e8c 0DB4      		in __tmp_reg__,77-0x20
 3052 0e8e 07FE      		sbrs __tmp_reg__,7
 3053 0e90 00C0      		rjmp .L767
 3054 0e92 2F5F      		subi r18,lo8(-(1))
 3055 0e94 3F4F      		sbci r19,hi8(-(1))
 3056 0e96 2230      		cpi r18,2
 3057 0e98 3105      		cpc r19,__zero_reg__
 3058 0e9a 01F4      		brne .L766
 3059               	.LBE27:
 3060 0e9c 409A      		sbi 40-0x20,0
 3062               	.LM255:
 3063 0e9e 4098      		cbi 40-0x20,0
 3064 0ea0 8EE3      		ldi r24,lo8(62)
 3065 0ea2 8EBD      		out 78-0x20,r24
 3066               	.L770:
 3067 0ea4 0DB4      		in __tmp_reg__,77-0x20
 3068 0ea6 07FE      		sbrs __tmp_reg__,7
 3069 0ea8 00C0      		rjmp .L770
 3070 0eaa 20E0      		ldi r18,lo8(0)
 3071 0eac 30E0      		ldi r19,hi8(0)
 3072               	.L772:
 3073               	.LBB28:
 3074 0eae F901      		movw r30,r18
 3075 0eb0 E050      		subi r30,lo8(-(rfSettings+6))
 3076 0eb2 F040      		sbci r31,hi8(-(rfSettings+6))
 3077 0eb4 8081      		ld r24,Z
 3078 0eb6 8EBD      		out 78-0x20,r24
 3079               	.L773:
 3080 0eb8 0DB4      		in __tmp_reg__,77-0x20
 3081 0eba 07FE      		sbrs __tmp_reg__,7
 3082 0ebc 00C0      		rjmp .L773
 3083 0ebe 2F5F      		subi r18,lo8(-(1))
 3084 0ec0 3F4F      		sbci r19,hi8(-(1))
 3085 0ec2 2230      		cpi r18,2
 3086 0ec4 3105      		cpc r19,__zero_reg__
 3087 0ec6 01F4      		brne .L772
 3088               	.LBE28:
 3089 0ec8 409A      		sbi 40-0x20,0
 3091               	.LM256:
 3092 0eca B701      		movw r22,r14
 3093 0ecc C601      		movw r24,r12
 3094 0ece 0E94 0000 		call nrk_high_speed_timer_wait
 3096               	.LM257:
 3097 0ed2 F801      		movw r30,r16
 3098 0ed4 8581      		ldd r24,Z+5
 3099 0ed6 8823      		tst r24
 3100 0ed8 01F0      		breq .L776
 3101               	.LBB29:
 3103               	.LM258:
 3104 0eda 8091 0000 		lds r24,rfSettings+8
 3105 0ede 8823      		tst r24
 3106 0ee0 01F4      		brne .L895
 3108               	.LM259:
 3109 0ee2 4098      		cbi 40-0x20,0
 3110 0ee4 83E0      		ldi r24,lo8(3)
 3111 0ee6 8EBD      		out 78-0x20,r24
 3112               	.L781:
 3113 0ee8 0DB4      		in __tmp_reg__,77-0x20
 3114 0eea 07FE      		sbrs __tmp_reg__,7
 3115 0eec 00C0      		rjmp .L781
 3116 0eee 409A      		sbi 40-0x20,0
 3117               	.L895:
 3118 0ef0 EE24      		clr r14
 3119               	.L821:
 3121               	.LM260:
 3122 0ef2 4098      		cbi 40-0x20,0
 3123 0ef4 85E0      		ldi r24,lo8(5)
 3124 0ef6 8EBD      		out 78-0x20,r24
 3125               	.L783:
 3126 0ef8 0DB4      		in __tmp_reg__,77-0x20
 3127 0efa 07FE      		sbrs __tmp_reg__,7
 3128 0efc 00C0      		rjmp .L783
 3129 0efe 409A      		sbi 40-0x20,0
 3131               	.LM261:
 3132 0f00 4098      		cbi 40-0x20,0
 3133 0f02 1EBC      		out 78-0x20,__zero_reg__
 3134               	.L785:
 3135 0f04 0DB4      		in __tmp_reg__,77-0x20
 3136 0f06 07FE      		sbrs __tmp_reg__,7
 3137 0f08 00C0      		rjmp .L785
 3138 0f0a FEB4      		in r15,78-0x20
 3139 0f0c 409A      		sbi 40-0x20,0
 3141               	.LM262:
 3142 0f0e E394      		inc r14
 3144               	.LM263:
 3145 0f10 F5E6      		ldi r31,lo8(101)
 3146 0f12 EF16      		cp r14,r31
 3147 0f14 01F4      		brne .L787
 3149               	.LM264:
 3150               	/* #APP */
 3151 0f16 7894      		sei
 3152               		
 3154               	.LM265:
 3155               	/* #NOAPP */
 3156 0f18 8091 0000 		lds r24,radio_sem
 3157 0f1c 9091 0000 		lds r25,(radio_sem)+1
 3158 0f20 0E94 0000 		call nrk_sem_post
 3159 0f24 80E0      		ldi r24,lo8(0)
 3160 0f26 90E0      		ldi r25,hi8(0)
 3161 0f28 00C0      		rjmp .L789
 3162               	.L787:
 3164               	.LM266:
 3165 0f2a 84E6      		ldi r24,lo8(100)
 3166 0f2c 90E0      		ldi r25,hi8(100)
 3167 0f2e 0E94 0000 		call halWait
 3169               	.LM267:
 3170 0f32 F3FC      		sbrc r15,3
 3171 0f34 00C0      		rjmp .L790
 3172 0f36 00C0      		rjmp .L821
 3173               	.L776:
 3174               	.LBE29:
 3176               	.LM268:
 3177 0f38 4098      		cbi 40-0x20,0
 3178 0f3a 84E0      		ldi r24,lo8(4)
 3179 0f3c 8EBD      		out 78-0x20,r24
 3180               	.L791:
 3181 0f3e 0DB4      		in __tmp_reg__,77-0x20
 3182 0f40 07FE      		sbrs __tmp_reg__,7
 3183 0f42 00C0      		rjmp .L791
 3184 0f44 409A      		sbi 40-0x20,0
 3185               	.L790:
 3187               	.LM269:
 3188 0f46 8091 0000 		lds r24,NRK_DEBUG_0
 3189 0f4a 0E94 0000 		call nrk_gpio_set
 3191               	.LM270:
 3192 0f4e 8091 8400 		lds r24,132
 3193 0f52 9091 8500 		lds r25,(132)+1
 3194 0f56 F401      		movw r30,r8
 3195 0f58 9183      		std Z+1,r25
 3196 0f5a 8083      		st Z,r24
 3198               	.LM271:
 3199 0f5c 4098      		cbi 40-0x20,0
 3200 0f5e 8EE3      		ldi r24,lo8(62)
 3201 0f60 8EBD      		out 78-0x20,r24
 3202               	.L793:
 3203 0f62 0DB4      		in __tmp_reg__,77-0x20
 3204 0f64 07FE      		sbrs __tmp_reg__,7
 3205 0f66 00C0      		rjmp .L793
 3206               	.LBB30:
 3207 0f68 F801      		movw r30,r16
 3208 0f6a 8281      		ldd r24,Z+2
 3209 0f6c 482F      		mov r20,r24
 3210 0f6e 5527      		clr r21
 3211 0f70 47FD      		sbrc r20,7
 3212 0f72 5095      		com r21
 3213 0f74 20E0      		ldi r18,lo8(0)
 3214 0f76 30E0      		ldi r19,hi8(0)
 3215 0f78 00C0      		rjmp .L795
 3216               	.L796:
 3217 0f7a F801      		movw r30,r16
 3218 0f7c 8381      		ldd r24,Z+3
 3219 0f7e 9481      		ldd r25,Z+4
 3220 0f80 A80F      		add r26,r24
 3221 0f82 B91F      		adc r27,r25
 3222 0f84 8C91      		ld r24,X
 3223 0f86 8EBD      		out 78-0x20,r24
 3224               	.L797:
 3225 0f88 0DB4      		in __tmp_reg__,77-0x20
 3226 0f8a 07FE      		sbrs __tmp_reg__,7
 3227 0f8c 00C0      		rjmp .L797
 3228 0f8e 2F5F      		subi r18,lo8(-(1))
 3229 0f90 3F4F      		sbci r19,hi8(-(1))
 3230               	.L795:
 3231 0f92 A22F      		mov r26,r18
 3232 0f94 BB27      		clr r27
 3233 0f96 A417      		cp r26,r20
 3234 0f98 B507      		cpc r27,r21
 3235 0f9a 04F0      		brlt .L796
 3236               	.LBE30:
 3237 0f9c 409A      		sbi 40-0x20,0
 3239               	.LM272:
 3240 0f9e 4098      		cbi 40-0x20,0
 3241 0fa0 8EE3      		ldi r24,lo8(62)
 3242 0fa2 8EBD      		out 78-0x20,r24
 3243               	.L800:
 3244 0fa4 0DB4      		in __tmp_reg__,77-0x20
 3245 0fa6 07FC      		sbrc __tmp_reg__,7
 3246 0fa8 00C0      		rjmp .L885
 3247 0faa 00C0      		rjmp .L800
 3248               	.L802:
 3249               	.LBB31:
 3250 0fac 0DB4      		in __tmp_reg__,77-0x20
 3251 0fae 07FC      		sbrc __tmp_reg__,7
 3252 0fb0 00C0      		rjmp .L886
 3253 0fb2 00C0      		rjmp .L802
 3254               	.L885:
 3255 0fb4 BEBC      		out 78-0x20,r11
 3256 0fb6 00C0      		rjmp .L802
 3257               	.L804:
 3258               	.LBE31:
 3260               	.LM273:
 3261 0fb8 4E9B      		sbis 41-0x20,6
 3262 0fba 00C0      		rjmp .L804
 3264               	.LM274:
 3265               	/* #APP */
 3266 0fbc F894      		cli
 3267               		
 3268               	/* #NOAPP */
 3269               	.L806:
 3271               	.LM275:
 3272 0fbe 4E99      		sbic 41-0x20,6
 3273 0fc0 00C0      		rjmp .L806
 3275               	.LM276:
 3276 0fc2 4098      		cbi 40-0x20,0
 3277 0fc4 88E0      		ldi r24,lo8(8)
 3278 0fc6 8EBD      		out 78-0x20,r24
 3279               	.L808:
 3280 0fc8 0DB4      		in __tmp_reg__,77-0x20
 3281 0fca 07FE      		sbrs __tmp_reg__,7
 3282 0fcc 00C0      		rjmp .L808
 3283 0fce 409A      		sbi 40-0x20,0
 3285               	.LM277:
 3286 0fd0 4098      		cbi 40-0x20,0
 3287 0fd2 88E0      		ldi r24,lo8(8)
 3288 0fd4 8EBD      		out 78-0x20,r24
 3289               	.L810:
 3290 0fd6 0DB4      		in __tmp_reg__,77-0x20
 3291 0fd8 07FE      		sbrs __tmp_reg__,7
 3292 0fda 00C0      		rjmp .L810
 3293 0fdc 409A      		sbi 40-0x20,0
 3295               	.LM278:
 3296 0fde 4098      		cbi 40-0x20,0
 3297 0fe0 89E0      		ldi r24,lo8(9)
 3298 0fe2 8EBD      		out 78-0x20,r24
 3299               	.L812:
 3300 0fe4 0DB4      		in __tmp_reg__,77-0x20
 3301 0fe6 07FE      		sbrs __tmp_reg__,7
 3302 0fe8 00C0      		rjmp .L812
 3303 0fea 409A      		sbi 40-0x20,0
 3305               	.LM279:
 3306 0fec 4098      		cbi 40-0x20,0
 3307 0fee 89E0      		ldi r24,lo8(9)
 3308 0ff0 8EBD      		out 78-0x20,r24
 3309               	.L814:
 3310 0ff2 0DB4      		in __tmp_reg__,77-0x20
 3311 0ff4 07FE      		sbrs __tmp_reg__,7
 3312 0ff6 00C0      		rjmp .L814
 3313 0ff8 409A      		sbi 40-0x20,0
 3315               	.LM280:
 3316 0ffa 4098      		cbi 40-0x20,0
 3317 0ffc 86E0      		ldi r24,lo8(6)
 3318 0ffe 8EBD      		out 78-0x20,r24
 3319               	.L816:
 3320 1000 0DB4      		in __tmp_reg__,77-0x20
 3321 1002 07FE      		sbrs __tmp_reg__,7
 3322 1004 00C0      		rjmp .L816
 3323 1006 409A      		sbi 40-0x20,0
 3325               	.LM281:
 3326               	/* #APP */
 3327 1008 7894      		sei
 3328               		
 3330               	.LM282:
 3331               	/* #NOAPP */
 3332 100a 8091 0000 		lds r24,rfSettings+2
 3333 100e 8F5F      		subi r24,lo8(-(1))
 3334 1010 8093 0000 		sts rfSettings+2,r24
 3336               	.LM283:
 3337 1014 8091 0000 		lds r24,radio_sem
 3338 1018 9091 0000 		lds r25,(radio_sem)+1
 3339 101c 0E94 0000 		call nrk_sem_post
 3340 1020 81E0      		ldi r24,lo8(1)
 3341 1022 90E0      		ldi r25,hi8(1)
 3342 1024 00C0      		rjmp .L789
 3343               	.L864:
 3345               	.LM284:
 3346 1026 409A      		sbi 40-0x20,0
 3348               	.LM285:
 3349 1028 F801      		movw r30,r16
 3350 102a 8681      		ldd r24,Z+6
 3351 102c 8823      		tst r24
 3352 102e 01F0      		breq .+2
 3353 1030 00C0      		rjmp .L746
 3354 1032 81E4      		ldi r24,lo8(-30655)
 3355 1034 98E8      		ldi r25,hi8(-30655)
 3356 1036 00C0      		rjmp .L747
 3357               	.L869:
 3359               	.LM286:
 3360 1038 409A      		sbi 40-0x20,0
 3362               	.LM287:
 3363 103a 4098      		cbi 40-0x20,0
 3364 103c 8EE3      		ldi r24,lo8(62)
 3365 103e 8EBD      		out 78-0x20,r24
 3366 1040 00C0      		rjmp .L758
 3367               	.L886:
 3369               	.LM288:
 3370 1042 409A      		sbi 40-0x20,0
 3371 1044 00C0      		rjmp .L804
 3372               	.L789:
 3373               	/* epilogue: frame size=2 */
 3374 1046 2296      		adiw r28,2
 3375 1048 0FB6      		in __tmp_reg__,__SREG__
 3376 104a F894      		cli
 3377 104c DEBF      		out __SP_H__,r29
 3378 104e 0FBE      		out __SREG__,__tmp_reg__
 3379 1050 CDBF      		out __SP_L__,r28
 3380 1052 DF91      		pop r29
 3381 1054 CF91      		pop r28
 3382 1056 1F91      		pop r17
 3383 1058 0F91      		pop r16
 3384 105a FF90      		pop r15
 3385 105c EF90      		pop r14
 3386 105e DF90      		pop r13
 3387 1060 CF90      		pop r12
 3388 1062 BF90      		pop r11
 3389 1064 9F90      		pop r9
 3390 1066 8F90      		pop r8
 3391 1068 0895      		ret
 3392               	/* epilogue end (size=18) */
 3393               	/* function rf_tx_tdma_packet size 427 (390) */
 3404               	.Lscope26:
 3406               		.stabd	78,0,0
 3409               	.global	rf_addr_decode_set_my_mac
 3411               	rf_addr_decode_set_my_mac:
 3412               		.stabd	46,0,0
 3414               	.LM289:
 3415               	.LFBB27:
 3416               	/* prologue: frame size=2 */
 3417 106a CF93      		push r28
 3418 106c DF93      		push r29
 3419 106e CDB7      		in r28,__SP_L__
 3420 1070 DEB7      		in r29,__SP_H__
 3421 1072 2297      		sbiw r28,2
 3422 1074 0FB6      		in __tmp_reg__,__SREG__
 3423 1076 F894      		cli
 3424 1078 DEBF      		out __SP_H__,r29
 3425 107a 0FBE      		out __SREG__,__tmp_reg__
 3426 107c CDBF      		out __SP_L__,r28
 3427               	/* prologue end (size=10) */
 3428 107e 9A83      		std Y+2,r25
 3429 1080 8983      		std Y+1,r24
 3431               	.LM290:
 3432 1082 9093 0000 		sts (rfSettings+6)+1,r25
 3433 1086 8093 0000 		sts rfSettings+6,r24
 3435               	.LM291:
 3436 108a 84EF      		ldi r24,lo8(500)
 3437 108c 91E0      		ldi r25,hi8(500)
 3438 108e 0E94 0000 		call nrk_spin_wait_us
 3440               	.LM292:
 3441 1092 4098      		cbi 40-0x20,0
 3442 1094 8AEE      		ldi r24,lo8(-22)
 3443 1096 8EBD      		out 78-0x20,r24
 3444               	.L898:
 3446               	.LM293:
 3447 1098 0DB4      		in __tmp_reg__,77-0x20
 3448 109a 07FE      		sbrs __tmp_reg__,7
 3449 109c 00C0      		rjmp .L898
 3450 109e 80E8      		ldi r24,lo8(-128)
 3451 10a0 8EBD      		out 78-0x20,r24
 3452               	.L900:
 3453 10a2 0DB4      		in __tmp_reg__,77-0x20
 3454 10a4 07FE      		sbrs __tmp_reg__,7
 3455 10a6 00C0      		rjmp .L900
 3456 10a8 FE01      		movw r30,r28
 3457 10aa 3196      		adiw r30,1
 3458 10ac 9E01      		movw r18,r28
 3459 10ae 2D5F      		subi r18,lo8(-(3))
 3460 10b0 3F4F      		sbci r19,hi8(-(3))
 3461               	.L902:
 3462 10b2 8081      		ld r24,Z
 3463 10b4 8EBD      		out 78-0x20,r24
 3464               	.L903:
 3465 10b6 0DB4      		in __tmp_reg__,77-0x20
 3466 10b8 07FE      		sbrs __tmp_reg__,7
 3467 10ba 00C0      		rjmp .L903
 3468 10bc 3196      		adiw r30,1
 3469 10be E217      		cp r30,r18
 3470 10c0 F307      		cpc r31,r19
 3471 10c2 01F4      		brne .L902
 3472 10c4 409A      		sbi 40-0x20,0
 3474               	.LM294:
 3475 10c6 84EF      		ldi r24,lo8(500)
 3476 10c8 91E0      		ldi r25,hi8(500)
 3477 10ca 0E94 0000 		call nrk_spin_wait_us
 3478               	/* epilogue: frame size=2 */
 3479 10ce 2296      		adiw r28,2
 3480 10d0 0FB6      		in __tmp_reg__,__SREG__
 3481 10d2 F894      		cli
 3482 10d4 DEBF      		out __SP_H__,r29
 3483 10d6 0FBE      		out __SREG__,__tmp_reg__
 3484 10d8 CDBF      		out __SP_L__,r28
 3485 10da DF91      		pop r29
 3486 10dc CF91      		pop r28
 3487 10de 0895      		ret
 3488               	/* epilogue end (size=9) */
 3489               	/* function rf_addr_decode_set_my_mac size 59 (40) */
 3491               	.Lscope27:
 3493               		.stabd	78,0,0
 3496               	.global	rf_security_set_key
 3498               	rf_security_set_key:
 3499               		.stabd	46,0,0
 3501               	.LM295:
 3502               	.LFBB28:
 3503               	/* prologue: frame size=2 */
 3504 10e0 6F92      		push r6
 3505 10e2 7F92      		push r7
 3506 10e4 8F92      		push r8
 3507 10e6 9F92      		push r9
 3508 10e8 AF92      		push r10
 3509 10ea BF92      		push r11
 3510 10ec CF92      		push r12
 3511 10ee DF92      		push r13
 3512 10f0 EF92      		push r14
 3513 10f2 FF92      		push r15
 3514 10f4 0F93      		push r16
 3515 10f6 1F93      		push r17
 3516 10f8 CF93      		push r28
 3517 10fa DF93      		push r29
 3518 10fc CDB7      		in r28,__SP_L__
 3519 10fe DEB7      		in r29,__SP_H__
 3520 1100 2297      		sbiw r28,2
 3521 1102 0FB6      		in __tmp_reg__,__SREG__
 3522 1104 F894      		cli
 3523 1106 DEBF      		out __SP_H__,r29
 3524 1108 0FBE      		out __SREG__,__tmp_reg__
 3525 110a CDBF      		out __SP_L__,r28
 3526               	/* prologue end (size=22) */
 3527 110c 8C01      		movw r16,r24
 3529               	.LM296:
 3530 110e 84E6      		ldi r24,lo8(100)
 3531 1110 90E0      		ldi r25,hi8(100)
 3532 1112 0E94 0000 		call nrk_spin_wait_us
 3533 1116 7801      		movw r14,r16
 3534 1118 C12C      		mov r12,__zero_reg__
 3535 111a B1E0      		ldi r27,hi8(256)
 3536 111c DB2E      		mov r13,r27
 3538               	.LM297:
 3539 111e 3E01      		movw r6,r28
 3540 1120 0894      		sec
 3541 1122 611C      		adc r6,__zero_reg__
 3542 1124 711C      		adc r7,__zero_reg__
 3543 1126 A3E0      		ldi r26,lo8(3)
 3544 1128 8A2E      		mov r8,r26
 3545 112a 912C      		mov r9,__zero_reg__
 3546 112c 8C0E      		add r8,r28
 3547 112e 9D1E      		adc r9,r29
 3548               	.L916:
 3550               	.LM298:
 3551 1130 F701      		movw r30,r14
 3552 1132 8081      		ld r24,Z
 3553 1134 2181      		ldd r18,Z+1
 3554 1136 3327      		clr r19
 3555 1138 9927      		clr r25
 3556 113a 982F      		mov r25,r24
 3557 113c 8827      		clr r24
 3558 113e 282B      		or r18,r24
 3559 1140 392B      		or r19,r25
 3560 1142 3A83      		std Y+2,r19
 3561 1144 2983      		std Y+1,r18
 3563               	.LM299:
 3564 1146 84E6      		ldi r24,lo8(100)
 3565 1148 90E0      		ldi r25,hi8(100)
 3566 114a 0E94 0000 		call nrk_spin_wait_us
 3568               	.LM300:
 3569 114e 4098      		cbi 40-0x20,0
 3570 1150 8C2D      		mov r24,r12
 3571 1152 8068      		ori r24,lo8(-128)
 3572 1154 8EBD      		out 78-0x20,r24
 3573               	.L917:
 3574 1156 0DB4      		in __tmp_reg__,77-0x20
 3575 1158 07FE      		sbrs __tmp_reg__,7
 3576 115a 00C0      		rjmp .L917
 3577 115c C601      		movw r24,r12
 3578 115e 9595      		asr r25
 3579 1160 8795      		ror r24
 3580 1162 807C      		andi r24,lo8(-64)
 3581 1164 8EBD      		out 78-0x20,r24
 3582               	.L919:
 3583 1166 0DB4      		in __tmp_reg__,77-0x20
 3584 1168 07FE      		sbrs __tmp_reg__,7
 3585 116a 00C0      		rjmp .L919
 3586 116c 8301      		movw r16,r6
 3587 116e 5301      		movw r10,r6
 3588               	.L921:
 3589 1170 F501      		movw r30,r10
 3590 1172 8081      		ld r24,Z
 3591 1174 8EBD      		out 78-0x20,r24
 3592               	.L922:
 3593 1176 0DB4      		in __tmp_reg__,77-0x20
 3594 1178 07FE      		sbrs __tmp_reg__,7
 3595 117a 00C0      		rjmp .L922
 3596 117c 0894      		sec
 3597 117e A11C      		adc r10,__zero_reg__
 3598 1180 B11C      		adc r11,__zero_reg__
 3599 1182 A814      		cp r10,r8
 3600 1184 B904      		cpc r11,r9
 3601 1186 01F4      		brne .L921
 3602 1188 409A      		sbi 40-0x20,0
 3603 118a 0894      		sec
 3604 118c E11C      		adc r14,__zero_reg__
 3605 118e F11C      		adc r15,__zero_reg__
 3606 1190 82E0      		ldi r24,lo8(2)
 3607 1192 90E0      		ldi r25,hi8(2)
 3608 1194 C80E      		add r12,r24
 3609 1196 D91E      		adc r13,r25
 3611               	.LM301:
 3612 1198 90E1      		ldi r25,lo8(272)
 3613 119a C916      		cp r12,r25
 3614 119c 91E0      		ldi r25,hi8(272)
 3615 119e D906      		cpc r13,r25
 3616 11a0 01F4      		brne .L916
 3618               	.LM302:
 3619 11a2 84E6      		ldi r24,lo8(100)
 3620 11a4 90E0      		ldi r25,hi8(100)
 3621 11a6 0E94 0000 		call nrk_spin_wait_us
 3622 11aa 20E1      		ldi r18,lo8(272)
 3623 11ac 31E0      		ldi r19,hi8(272)
 3624 11ae 40E4      		ldi r20,lo8(320)
 3625 11b0 51E0      		ldi r21,hi8(320)
 3626               	.L926:
 3628               	.LM303:
 3629 11b2 1A82      		std Y+2,__zero_reg__
 3630 11b4 1982      		std Y+1,__zero_reg__
 3632               	.LM304:
 3633 11b6 4098      		cbi 40-0x20,0
 3634 11b8 842F      		mov r24,r20
 3635 11ba 8068      		ori r24,lo8(-128)
 3636 11bc 8EBD      		out 78-0x20,r24
 3637               	.L927:
 3638 11be 0DB4      		in __tmp_reg__,77-0x20
 3639 11c0 07FE      		sbrs __tmp_reg__,7
 3640 11c2 00C0      		rjmp .L927
 3641 11c4 CA01      		movw r24,r20
 3642 11c6 9595      		asr r25
 3643 11c8 8795      		ror r24
 3644 11ca 807C      		andi r24,lo8(-64)
 3645 11cc 8EBD      		out 78-0x20,r24
 3646               	.L929:
 3647 11ce 0DB4      		in __tmp_reg__,77-0x20
 3648 11d0 07FE      		sbrs __tmp_reg__,7
 3649 11d2 00C0      		rjmp .L929
 3650 11d4 F801      		movw r30,r16
 3651               	.L931:
 3652 11d6 8081      		ld r24,Z
 3653 11d8 8EBD      		out 78-0x20,r24
 3654               	.L932:
 3655 11da 0DB4      		in __tmp_reg__,77-0x20
 3656 11dc 07FE      		sbrs __tmp_reg__,7
 3657 11de 00C0      		rjmp .L932
 3658 11e0 3196      		adiw r30,1
 3659 11e2 EA15      		cp r30,r10
 3660 11e4 FB05      		cpc r31,r11
 3661 11e6 01F4      		brne .L931
 3662 11e8 409A      		sbi 40-0x20,0
 3664               	.LM305:
 3665 11ea 4098      		cbi 40-0x20,0
 3666 11ec 822F      		mov r24,r18
 3667 11ee 8068      		ori r24,lo8(-128)
 3668 11f0 8EBD      		out 78-0x20,r24
 3669               	.L935:
 3670 11f2 0DB4      		in __tmp_reg__,77-0x20
 3671 11f4 07FE      		sbrs __tmp_reg__,7
 3672 11f6 00C0      		rjmp .L935
 3673 11f8 C901      		movw r24,r18
 3674 11fa 9595      		asr r25
 3675 11fc 8795      		ror r24
 3676 11fe 807C      		andi r24,lo8(-64)
 3677 1200 8EBD      		out 78-0x20,r24
 3678               	.L937:
 3679 1202 0DB4      		in __tmp_reg__,77-0x20
 3680 1204 07FE      		sbrs __tmp_reg__,7
 3681 1206 00C0      		rjmp .L937
 3682 1208 F801      		movw r30,r16
 3683               	.L939:
 3684 120a 8081      		ld r24,Z
 3685 120c 8EBD      		out 78-0x20,r24
 3686               	.L940:
 3687 120e 0DB4      		in __tmp_reg__,77-0x20
 3688 1210 07FE      		sbrs __tmp_reg__,7
 3689 1212 00C0      		rjmp .L940
 3690 1214 3196      		adiw r30,1
 3691 1216 EA15      		cp r30,r10
 3692 1218 FB05      		cpc r31,r11
 3693 121a 01F4      		brne .L939
 3694 121c 409A      		sbi 40-0x20,0
 3695 121e 2E5F      		subi r18,lo8(-(2))
 3696 1220 3F4F      		sbci r19,hi8(-(2))
 3697 1222 4E5F      		subi r20,lo8(-(2))
 3698 1224 5F4F      		sbci r21,hi8(-(2))
 3700               	.LM306:
 3701 1226 E1E0      		ldi r30,hi8(286)
 3702 1228 2E31      		cpi r18,lo8(286)
 3703 122a 3E07      		cpc r19,r30
 3704 122c 01F4      		brne .L926
 3706               	.LM307:
 3707 122e 81E0      		ldi r24,lo8(1)
 3708 1230 90E0      		ldi r25,hi8(1)
 3709 1232 9A83      		std Y+2,r25
 3710 1234 8983      		std Y+1,r24
 3712               	.LM308:
 3713 1236 4098      		cbi 40-0x20,0
 3714 1238 8EEC      		ldi r24,lo8(-50)
 3715 123a 8EBD      		out 78-0x20,r24
 3716               	.L944:
 3717 123c 0DB4      		in __tmp_reg__,77-0x20
 3718 123e 07FE      		sbrs __tmp_reg__,7
 3719 1240 00C0      		rjmp .L944
 3720 1242 80E8      		ldi r24,lo8(-128)
 3721 1244 8EBD      		out 78-0x20,r24
 3722               	.L946:
 3723 1246 0DB4      		in __tmp_reg__,77-0x20
 3724 1248 07FE      		sbrs __tmp_reg__,7
 3725 124a 00C0      		rjmp .L946
 3726 124c F801      		movw r30,r16
 3727               	.L948:
 3728 124e 8081      		ld r24,Z
 3729 1250 8EBD      		out 78-0x20,r24
 3730               	.L949:
 3731 1252 0DB4      		in __tmp_reg__,77-0x20
 3732 1254 07FE      		sbrs __tmp_reg__,7
 3733 1256 00C0      		rjmp .L949
 3734 1258 3196      		adiw r30,1
 3735 125a EA15      		cp r30,r10
 3736 125c FB05      		cpc r31,r11
 3737 125e 01F4      		brne .L948
 3738 1260 409A      		sbi 40-0x20,0
 3740               	.LM309:
 3741 1262 4098      		cbi 40-0x20,0
 3742 1264 8EE9      		ldi r24,lo8(-98)
 3743 1266 8EBD      		out 78-0x20,r24
 3744               	.L952:
 3745 1268 0DB4      		in __tmp_reg__,77-0x20
 3746 126a 07FE      		sbrs __tmp_reg__,7
 3747 126c 00C0      		rjmp .L952
 3748 126e 80E8      		ldi r24,lo8(-128)
 3749 1270 8EBD      		out 78-0x20,r24
 3750               	.L954:
 3751 1272 0DB4      		in __tmp_reg__,77-0x20
 3752 1274 07FE      		sbrs __tmp_reg__,7
 3753 1276 00C0      		rjmp .L954
 3754               	.L960:
 3755 1278 F801      		movw r30,r16
 3756 127a 8081      		ld r24,Z
 3757 127c 8EBD      		out 78-0x20,r24
 3758               	.L956:
 3759 127e 0DB4      		in __tmp_reg__,77-0x20
 3760 1280 07FE      		sbrs __tmp_reg__,7
 3761 1282 00C0      		rjmp .L956
 3762 1284 0F5F      		subi r16,lo8(-(1))
 3763 1286 1F4F      		sbci r17,hi8(-(1))
 3764 1288 0A15      		cp r16,r10
 3765 128a 1B05      		cpc r17,r11
 3766 128c 01F4      		brne .L960
 3767 128e 409A      		sbi 40-0x20,0
 3768               	/* epilogue: frame size=2 */
 3769 1290 2296      		adiw r28,2
 3770 1292 0FB6      		in __tmp_reg__,__SREG__
 3771 1294 F894      		cli
 3772 1296 DEBF      		out __SP_H__,r29
 3773 1298 0FBE      		out __SREG__,__tmp_reg__
 3774 129a CDBF      		out __SP_L__,r28
 3775 129c DF91      		pop r29
 3776 129e CF91      		pop r28
 3777 12a0 1F91      		pop r17
 3778 12a2 0F91      		pop r16
 3779 12a4 FF90      		pop r15
 3780 12a6 EF90      		pop r14
 3781 12a8 DF90      		pop r13
 3782 12aa CF90      		pop r12
 3783 12ac BF90      		pop r11
 3784 12ae AF90      		pop r10
 3785 12b0 9F90      		pop r9
 3786 12b2 8F90      		pop r8
 3787 12b4 7F90      		pop r7
 3788 12b6 6F90      		pop r6
 3789 12b8 0895      		ret
 3790               	/* epilogue end (size=21) */
 3791               	/* function rf_security_set_key size 237 (194) */
 3796               	.Lscope28:
 3798               		.stabd	78,0,0
 3802               	.global	rf_set_rx
 3804               	rf_set_rx:
 3805               		.stabd	46,0,0
 3807               	.LM310:
 3808               	.LFBB29:
 3809               	/* prologue: frame size=0 */
 3810 12ba 1F93      		push r17
 3811 12bc CF93      		push r28
 3812 12be DF93      		push r29
 3813               	/* prologue end (size=3) */
 3814 12c0 EC01      		movw r28,r24
 3815 12c2 162F      		mov r17,r22
 3817               	.LM311:
 3818 12c4 8091 0000 		lds r24,radio_sem
 3819 12c8 9091 0000 		lds r25,(radio_sem)+1
 3820 12cc 0E94 0000 		call nrk_sem_pend
 3822               	.LM312:
 3823 12d0 4098      		cbi 40-0x20,0
 3824 12d2 88E0      		ldi r24,lo8(8)
 3825 12d4 8EBD      		out 78-0x20,r24
 3826               	.L1005:
 3828               	.LM313:
 3829 12d6 0DB4      		in __tmp_reg__,77-0x20
 3830 12d8 07FE      		sbrs __tmp_reg__,7
 3831 12da 00C0      		rjmp .L1005
 3832 12dc 409A      		sbi 40-0x20,0
 3834               	.LM314:
 3835 12de 4098      		cbi 40-0x20,0
 3836 12e0 88E0      		ldi r24,lo8(8)
 3837 12e2 8EBD      		out 78-0x20,r24
 3838               	.L1007:
 3839 12e4 0DB4      		in __tmp_reg__,77-0x20
 3840 12e6 07FE      		sbrs __tmp_reg__,7
 3841 12e8 00C0      		rjmp .L1007
 3842 12ea 409A      		sbi 40-0x20,0
 3844               	.LM315:
 3845 12ec 812F      		mov r24,r17
 3846 12ee 0E94 0000 		call halRfSetChannel
 3848               	.LM316:
 3849 12f2 D093 0000 		sts (rfSettings)+1,r29
 3850 12f6 C093 0000 		sts rfSettings,r28
 3852               	.LM317:
 3853 12fa 8091 0000 		lds r24,radio_sem
 3854 12fe 9091 0000 		lds r25,(radio_sem)+1
 3855 1302 0E94 0000 		call nrk_sem_post
 3856               	/* epilogue: frame size=0 */
 3857 1306 DF91      		pop r29
 3858 1308 CF91      		pop r28
 3859 130a 1F91      		pop r17
 3860 130c 0895      		ret
 3861               	/* epilogue end (size=4) */
 3862               	/* function rf_set_rx size 42 (35) */
 3864               	.Lscope29:
 3866               		.stabd	78,0,0
 3869               	.global	rf_set_channel
 3871               	rf_set_channel:
 3872               		.stabd	46,0,0
 3874               	.LM318:
 3875               	.LFBB30:
 3876               	/* prologue: frame size=0 */
 3877 130e 1F93      		push r17
 3878               	/* prologue end (size=1) */
 3879 1310 182F      		mov r17,r24
 3881               	.LM319:
 3882 1312 8091 0000 		lds r24,radio_sem
 3883 1316 9091 0000 		lds r25,(radio_sem)+1
 3884 131a 0E94 0000 		call nrk_sem_pend
 3886               	.LM320:
 3887 131e 812F      		mov r24,r17
 3888 1320 0E94 0000 		call halRfSetChannel
 3890               	.LM321:
 3891 1324 8091 0000 		lds r24,radio_sem
 3892 1328 9091 0000 		lds r25,(radio_sem)+1
 3893 132c 0E94 0000 		call nrk_sem_post
 3894               	/* epilogue: frame size=0 */
 3895 1330 1F91      		pop r17
 3896 1332 0895      		ret
 3897               	/* epilogue end (size=2) */
 3898               	/* function rf_set_channel size 19 (16) */
 3900               	.Lscope30:
 3902               		.stabd	78,0,0
 3908               	.global	rf_init
 3910               	rf_init:
 3911               		.stabd	46,0,0
 3913               	.LM322:
 3914               	.LFBB31:
 3915               	/* prologue: frame size=2 */
 3916 1334 DF92      		push r13
 3917 1336 EF92      		push r14
 3918 1338 FF92      		push r15
 3919 133a 0F93      		push r16
 3920 133c 1F93      		push r17
 3921 133e CF93      		push r28
 3922 1340 DF93      		push r29
 3923 1342 CDB7      		in r28,__SP_L__
 3924 1344 DEB7      		in r29,__SP_H__
 3925 1346 2297      		sbiw r28,2
 3926 1348 0FB6      		in __tmp_reg__,__SREG__
 3927 134a F894      		cli
 3928 134c DEBF      		out __SP_H__,r29
 3929 134e 0FBE      		out __SREG__,__tmp_reg__
 3930 1350 CDBF      		out __SP_L__,r28
 3931               	/* prologue end (size=15) */
 3932 1352 8C01      		movw r16,r24
 3933 1354 D62E      		mov r13,r22
 3934 1356 5A83      		std Y+2,r21
 3935 1358 4983      		std Y+1,r20
 3936 135a 7901      		movw r14,r18
 3938               	.LM323:
 3939 135c 64E1      		ldi r22,lo8(20)
 3940 135e 81E0      		ldi r24,lo8(1)
 3941 1360 0E94 0000 		call nrk_sem_create
 3942 1364 9093 0000 		sts (radio_sem)+1,r25
 3943 1368 8093 0000 		sts radio_sem,r24
 3945               	.LM324:
 3946 136c 892B      		or r24,r25
 3947 136e 01F4      		brne .L1017
 3949               	.LM325:
 3950 1370 0E94 0000 		call nrk_get_pid
 3951 1374 682F      		mov r22,r24
 3952 1376 8FE0      		ldi r24,lo8(15)
 3953 1378 0E94 0000 		call nrk_kernel_error_add
 3954               	.L1017:
 3956               	.LM326:
 3957 137c 8091 0000 		lds r24,radio_sem
 3958 1380 9091 0000 		lds r25,(radio_sem)+1
 3959 1384 0E94 0000 		call nrk_sem_pend
 3961               	.LM327:
 3962 1388 8F3F      		cpi r24,lo8(-1)
 3963 138a 01F4      		brne .L1019
 3965               	.LM328:
 3966 138c 80E0      		ldi r24,lo8(__c.2674)
 3967 138e 90E0      		ldi r25,hi8(__c.2674)
 3968 1390 0E94 0000 		call nrk_kprintf
 3969               	.L1019:
 3971               	.LM329:
 3972 1394 159A      		sbi 34-0x20,5
 3974               	.LM330:
 3975 1396 88EE      		ldi r24,lo8(1000)
 3976 1398 93E0      		ldi r25,hi8(1000)
 3977 139a 0E94 0000 		call halWait
 3979               	.LM331:
 3980 139e 1698      		cbi 34-0x20,6
 3982               	.LM332:
 3983 13a0 81E0      		ldi r24,lo8(1)
 3984 13a2 90E0      		ldi r25,hi8(1)
 3985 13a4 0E94 0000 		call halWait
 3987               	.LM333:
 3988 13a8 169A      		sbi 34-0x20,6
 3990               	.LM334:
 3991 13aa 84E6      		ldi r24,lo8(100)
 3992 13ac 90E0      		ldi r25,hi8(100)
 3993 13ae 0E94 0000 		call halWait
 3995               	.LM335:
 3996               	/* #APP */
 3997 13b2 F894      		cli
 3998               		
 4000               	.LM336:
 4001               	/* #NOAPP */
 4002 13b4 4098      		cbi 40-0x20,0
 4003 13b6 81E0      		ldi r24,lo8(1)
 4004 13b8 8EBD      		out 78-0x20,r24
 4005               	.L1021:
 4006 13ba 0DB4      		in __tmp_reg__,77-0x20
 4007 13bc 07FE      		sbrs __tmp_reg__,7
 4008 13be 00C0      		rjmp .L1021
 4009 13c0 409A      		sbi 40-0x20,0
 4011               	.LM337:
 4012 13c2 82EE      		ldi r24,lo8(738)
 4013 13c4 92E0      		ldi r25,hi8(738)
 4014 13c6 9093 0000 		sts (mdmctrl0)+1,r25
 4015 13ca 8093 0000 		sts mdmctrl0,r24
 4017               	.LM338:
 4018 13ce 4098      		cbi 40-0x20,0
 4019 13d0 81E1      		ldi r24,lo8(17)
 4020 13d2 8EBD      		out 78-0x20,r24
 4021               	.L1023:
 4022 13d4 0DB4      		in __tmp_reg__,77-0x20
 4023 13d6 07FE      		sbrs __tmp_reg__,7
 4024 13d8 00C0      		rjmp .L1023
 4025 13da 82E0      		ldi r24,lo8(2)
 4026 13dc 8EBD      		out 78-0x20,r24
 4027               	.L1025:
 4028 13de 0DB4      		in __tmp_reg__,77-0x20
 4029 13e0 07FE      		sbrs __tmp_reg__,7
 4030 13e2 00C0      		rjmp .L1025
 4031 13e4 82EE      		ldi r24,lo8(-30)
 4032 13e6 8EBD      		out 78-0x20,r24
 4033               	.L1027:
 4034 13e8 0DB4      		in __tmp_reg__,77-0x20
 4035 13ea 07FE      		sbrs __tmp_reg__,7
 4036 13ec 00C0      		rjmp .L1027
 4037 13ee 409A      		sbi 40-0x20,0
 4039               	.LM339:
 4040 13f0 4098      		cbi 40-0x20,0
 4041 13f2 82E1      		ldi r24,lo8(18)
 4042 13f4 8EBD      		out 78-0x20,r24
 4043               	.L1029:
 4044 13f6 0DB4      		in __tmp_reg__,77-0x20
 4045 13f8 07FE      		sbrs __tmp_reg__,7
 4046 13fa 00C0      		rjmp .L1029
 4047 13fc 85E0      		ldi r24,lo8(5)
 4048 13fe 8EBD      		out 78-0x20,r24
 4049               	.L1031:
 4050 1400 0DB4      		in __tmp_reg__,77-0x20
 4051 1402 07FE      		sbrs __tmp_reg__,7
 4052 1404 00C0      		rjmp .L1031
 4053 1406 1EBC      		out 78-0x20,__zero_reg__
 4054               	.L1033:
 4055 1408 0DB4      		in __tmp_reg__,77-0x20
 4056 140a 07FE      		sbrs __tmp_reg__,7
 4057 140c 00C0      		rjmp .L1033
 4058 140e 409A      		sbi 40-0x20,0
 4060               	.LM340:
 4061 1410 4098      		cbi 40-0x20,0
 4062 1412 8CE1      		ldi r24,lo8(28)
 4063 1414 8EBD      		out 78-0x20,r24
 4064               	.L1035:
 4065 1416 0DB4      		in __tmp_reg__,77-0x20
 4066 1418 07FE      		sbrs __tmp_reg__,7
 4067 141a 00C0      		rjmp .L1035
 4068 141c 1EBC      		out 78-0x20,__zero_reg__
 4069               	.L1037:
 4070 141e 0DB4      		in __tmp_reg__,77-0x20
 4071 1420 07FE      		sbrs __tmp_reg__,7
 4072 1422 00C0      		rjmp .L1037
 4073 1424 8FE7      		ldi r24,lo8(127)
 4074 1426 8EBD      		out 78-0x20,r24
 4075               	.L1039:
 4076 1428 0DB4      		in __tmp_reg__,77-0x20
 4077 142a 07FE      		sbrs __tmp_reg__,7
 4078 142c 00C0      		rjmp .L1039
 4079 142e 409A      		sbi 40-0x20,0
 4081               	.LM341:
 4082 1430 4098      		cbi 40-0x20,0
 4083 1432 89E1      		ldi r24,lo8(25)
 4084 1434 8EBD      		out 78-0x20,r24
 4085               	.L1041:
 4086 1436 0DB4      		in __tmp_reg__,77-0x20
 4087 1438 07FE      		sbrs __tmp_reg__,7
 4088 143a 00C0      		rjmp .L1041
 4089 143c 81E0      		ldi r24,lo8(1)
 4090 143e 8EBD      		out 78-0x20,r24
 4091               	.L1043:
 4092 1440 0DB4      		in __tmp_reg__,77-0x20
 4093 1442 07FE      		sbrs __tmp_reg__,7
 4094 1444 00C0      		rjmp .L1043
 4095 1446 84EC      		ldi r24,lo8(-60)
 4096 1448 8EBD      		out 78-0x20,r24
 4097               	.L1045:
 4098 144a 0DB4      		in __tmp_reg__,77-0x20
 4099 144c 07FE      		sbrs __tmp_reg__,7
 4100 144e 00C0      		rjmp .L1045
 4101 1450 409A      		sbi 40-0x20,0
 4103               	.LM342:
 4104 1452 4098      		cbi 40-0x20,0
 4105 1454 87E1      		ldi r24,lo8(23)
 4106 1456 8EBD      		out 78-0x20,r24
 4107               	.L1047:
 4108 1458 0DB4      		in __tmp_reg__,77-0x20
 4109 145a 07FE      		sbrs __tmp_reg__,7
 4110 145c 00C0      		rjmp .L1047
 4111 145e 8AE1      		ldi r24,lo8(26)
 4112 1460 8EBD      		out 78-0x20,r24
 4113               	.L1049:
 4114 1462 0DB4      		in __tmp_reg__,77-0x20
 4115 1464 07FE      		sbrs __tmp_reg__,7
 4116 1466 00C0      		rjmp .L1049
 4117 1468 86E5      		ldi r24,lo8(86)
 4118 146a 8EBD      		out 78-0x20,r24
 4119               	.L1051:
 4120 146c 0DB4      		in __tmp_reg__,77-0x20
 4121 146e 07FE      		sbrs __tmp_reg__,7
 4122 1470 00C0      		rjmp .L1051
 4123 1472 409A      		sbi 40-0x20,0
 4125               	.LM343:
 4126 1474 84EF      		ldi r24,lo8(500)
 4127 1476 91E0      		ldi r25,hi8(500)
 4128 1478 0E94 0000 		call nrk_spin_wait_us
 4130               	.LM344:
 4131 147c 4098      		cbi 40-0x20,0
 4132 147e 88EE      		ldi r24,lo8(-24)
 4133 1480 8EBD      		out 78-0x20,r24
 4134               	.L1053:
 4135 1482 0DB4      		in __tmp_reg__,77-0x20
 4136 1484 07FE      		sbrs __tmp_reg__,7
 4137 1486 00C0      		rjmp .L1053
 4138 1488 80E8      		ldi r24,lo8(-128)
 4139 148a 8EBD      		out 78-0x20,r24
 4140               	.L1055:
 4141 148c 0DB4      		in __tmp_reg__,77-0x20
 4142 148e 07FE      		sbrs __tmp_reg__,7
 4143 1490 00C0      		rjmp .L1055
 4144 1492 FE01      		movw r30,r28
 4145 1494 3196      		adiw r30,1
 4146 1496 9E01      		movw r18,r28
 4147 1498 2D5F      		subi r18,lo8(-(3))
 4148 149a 3F4F      		sbci r19,hi8(-(3))
 4149               	.L1057:
 4150 149c 8081      		ld r24,Z
 4151 149e 8EBD      		out 78-0x20,r24
 4152               	.L1058:
 4153 14a0 0DB4      		in __tmp_reg__,77-0x20
 4154 14a2 07FE      		sbrs __tmp_reg__,7
 4155 14a4 00C0      		rjmp .L1058
 4156 14a6 3196      		adiw r30,1
 4157 14a8 E217      		cp r30,r18
 4158 14aa F307      		cpc r31,r19
 4159 14ac 01F4      		brne .L1057
 4160 14ae 409A      		sbi 40-0x20,0
 4162               	.LM345:
 4163 14b0 84EF      		ldi r24,lo8(500)
 4164 14b2 91E0      		ldi r25,hi8(500)
 4165 14b4 0E94 0000 		call nrk_spin_wait_us
 4167               	.LM346:
 4168               	/* #APP */
 4169 14b8 7894      		sei
 4170               		
 4172               	.LM347:
 4173               	/* #NOAPP */
 4174 14ba 8D2D      		mov r24,r13
 4175 14bc 0E94 0000 		call halRfSetChannel
 4177               	.LM348:
 4178               	/* #APP */
 4179 14c0 7894      		sei
 4180               		
 4182               	.LM349:
 4183               	/* #NOAPP */
 4184 14c2 1093 0000 		sts (rfSettings)+1,r17
 4185 14c6 0093 0000 		sts rfSettings,r16
 4187               	.LM350:
 4188 14ca 8981      		ldd r24,Y+1
 4189 14cc 9A81      		ldd r25,Y+2
 4190 14ce 9093 0000 		sts (rfSettings+4)+1,r25
 4191 14d2 8093 0000 		sts rfSettings+4,r24
 4193               	.LM351:
 4194 14d6 F092 0000 		sts (rfSettings+6)+1,r15
 4195 14da E092 0000 		sts rfSettings+6,r14
 4197               	.LM352:
 4198 14de 1092 0000 		sts rfSettings+2,__zero_reg__
 4200               	.LM353:
 4201 14e2 1092 0000 		sts rfSettings+8,__zero_reg__
 4203               	.LM354:
 4204 14e6 0E94 0000 		call halRfWaitForCrystalOscillator
 4206               	.LM355:
 4207 14ea 8091 0000 		lds r24,radio_sem
 4208 14ee 9091 0000 		lds r25,(radio_sem)+1
 4209 14f2 0E94 0000 		call nrk_sem_post
 4211               	.LM356:
 4212 14f6 8F3F      		cpi r24,lo8(-1)
 4213 14f8 01F4      		brne .L1061
 4215               	.LM357:
 4216 14fa 80E0      		ldi r24,lo8(__c.2736)
 4217 14fc 90E0      		ldi r25,hi8(__c.2736)
 4218 14fe 0E94 0000 		call nrk_kprintf
 4220               	.LM358:
 4221 1502 82E0      		ldi r24,lo8(2)
 4222 1504 0E94 0000 		call _nrk_errno_set
 4223               	.L1061:
 4225               	.LM359:
 4226 1508 1092 0000 		sts auto_ack_enable,__zero_reg__
 4228               	.LM360:
 4229 150c 1092 0000 		sts security_enable,__zero_reg__
 4231               	.LM361:
 4232 1510 1092 0000 		sts last_pkt_encrypted,__zero_reg__
 4233               	/* epilogue: frame size=2 */
 4234 1514 2296      		adiw r28,2
 4235 1516 0FB6      		in __tmp_reg__,__SREG__
 4236 1518 F894      		cli
 4237 151a DEBF      		out __SP_H__,r29
 4238 151c 0FBE      		out __SREG__,__tmp_reg__
 4239 151e CDBF      		out __SP_L__,r28
 4240 1520 DF91      		pop r29
 4241 1522 CF91      		pop r28
 4242 1524 1F91      		pop r17
 4243 1526 0F91      		pop r16
 4244 1528 FF90      		pop r15
 4245 152a EF90      		pop r14
 4246 152c DF90      		pop r13
 4247 152e 0895      		ret
 4248               	/* epilogue end (size=14) */
 4249               	/* function rf_init size 263 (234) */
 4251               	.Lscope31:
 4253               		.stabd	78,0,0
 4254               		.section	.progmem.data,"a",@progbits
 4257               	__c.2736:
 4258 0000 4343 3234 		.string	"CC2420 ERROR:  Release of semaphore failed\r\n"
 4258      3230 2045 
 4258      5252 4F52 
 4258      3A20 2052 
 4258      656C 6561 
 4261               	__c.2674:
 4262 002d 4343 3234 		.string	"CC2420 ERROR:  Access to semaphore failed\r\n"
 4262      3230 2045 
 4262      5252 4F52 
 4262      3A20 2041 
 4262      6363 6573 
 4263               		.comm _nrk_signal_list,4,1
 4264               		.comm rfSettings,9,1
 4265               		.comm nrk_idle_task_stk,128,1
 4266               		.comm nrk_kernel_stk_ptr,2,1
 4267               		.comm error_task,1,1
 4268               		.comm error_num,1,1
 4269               		.comm _nrk_prev_timer_val,1,1
 4270               		.comm _nrk_time_trigger,1,1
 4271               		.comm app_timer0_callback,2,1
 4272               		.comm app_timer0_prescale,1,1
 4273               		.comm radio_sem,2,1
 4274               		.comm auto_ack_enable,1,1
 4275               		.comm security_enable,1,1
 4276               		.comm last_pkt_encrypted,1,1
 4277               		.comm mdmctrl0,2,1
 4278               		.comm tx_ctr,4,1
 4279               		.comm rx_ctr,4,1
 4280               		.comm rx_ready,1,1
 4281               		.comm tmp_blah,2,1
 4303               		.text
 4305               	.Letext0:
 4306               	/* File "../../../src/radio/cc2420/source/basic_rf.c": code 2752 = 0x0ac0 (2532), prologues 101, ep
DEFINED SYMBOLS
                            *ABS*:00000000 basic_rf.c
     /tmp/ccjb9R9K.s:2      *ABS*:0000003f __SREG__
     /tmp/ccjb9R9K.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccjb9R9K.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccjb9R9K.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccjb9R9K.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccjb9R9K.s:128    .text:00000000 rf_security_last_pkt_status
                            *COM*:00000001 last_pkt_encrypted
     /tmp/ccjb9R9K.s:151    .text:00000008 rf_security_set_ctr_counter
                            *COM*:00000004 tx_ctr
     /tmp/ccjb9R9K.s:261    .text:00000096 rf_security_enable
                            *COM*:00000001 security_enable
     /tmp/ccjb9R9K.s:329    .text:000000e2 rf_security_disable
     /tmp/ccjb9R9K.s:374    .text:0000010a rf_get_sem
                            *COM*:00000002 radio_sem
     /tmp/ccjb9R9K.s:396    .text:00000114 rf_addr_decode_enable
                            *COM*:00000002 mdmctrl0
     /tmp/ccjb9R9K.s:445    .text:0000014a rf_addr_decode_disable
     /tmp/ccjb9R9K.s:494    .text:00000180 rf_auto_ack_enable
                            *COM*:00000001 auto_ack_enable
     /tmp/ccjb9R9K.s:547    .text:000001bc rf_auto_ack_disable
     /tmp/ccjb9R9K.s:599    .text:000001f6 rf_busy
     /tmp/ccjb9R9K.s:630    .text:0000020a rf_rx_check_fifop
     /tmp/ccjb9R9K.s:660    .text:0000021c rf_rx_check_sfd
     /tmp/ccjb9R9K.s:691    .text:00000230 rf_rx_packet
                            *COM*:00000001 rx_ready
     /tmp/ccjb9R9K.s:728    .text:0000024e rf_flush_rx_fifo
     /tmp/ccjb9R9K.s:768    .text:0000026c rf_carrier_off
     /tmp/ccjb9R9K.s:808    .text:00000294 rf_carrier_on
     /tmp/ccjb9R9K.s:848    .text:000002bc rf_data_mode
     /tmp/ccjb9R9K.s:932    .text:00000326 rf_test_mode
     /tmp/ccjb9R9K.s:1019   .text:00000394 rf_set_cca_thresh
     /tmp/ccjb9R9K.s:1089   .text:000003e6 rf_polling_rx_packet
                            *COM*:00000009 rfSettings
                            *COM*:00000004 rx_ctr
     /tmp/ccjb9R9K.s:1908   .text:000008d0 rf_rx_off
     /tmp/ccjb9R9K.s:1954   .text:00000900 rf_polling_rx_on
     /tmp/ccjb9R9K.s:2011   .text:00000940 rf_rx_on
     /tmp/ccjb9R9K.s:2069   .text:00000980 rf_tx_power
     /tmp/ccjb9R9K.s:2136   .text:000009ce rf_tx_packet
     /tmp/ccjb9R9K.s:2799   .text:00000d2c rf_tx_tdma_packet
     /tmp/ccjb9R9K.s:3411   .text:0000106a rf_addr_decode_set_my_mac
     /tmp/ccjb9R9K.s:3498   .text:000010e0 rf_security_set_key
     /tmp/ccjb9R9K.s:3804   .text:000012ba rf_set_rx
     /tmp/ccjb9R9K.s:3871   .text:0000130e rf_set_channel
     /tmp/ccjb9R9K.s:3910   .text:00001334 rf_init
     /tmp/ccjb9R9K.s:4261   .progmem.data:0000002d __c.2674
     /tmp/ccjb9R9K.s:4257   .progmem.data:00000000 __c.2736
                            *COM*:00000004 _nrk_signal_list
                            *COM*:00000080 nrk_idle_task_stk
                            *COM*:00000002 nrk_kernel_stk_ptr
                            *COM*:00000001 error_task
                            *COM*:00000001 error_num
                            *COM*:00000001 _nrk_prev_timer_val
                            *COM*:00000001 _nrk_time_trigger
                            *COM*:00000002 app_timer0_callback
                            *COM*:00000001 app_timer0_prescale
                            *COM*:00000002 tmp_blah

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
nrk_sem_pend
nrk_sem_post
halWait
_nrk_os_timer_get
nrk_high_speed_timer_wait
NRK_DEBUG_0
nrk_gpio_set
nrk_spin_wait_us
halRfSetChannel
nrk_sem_create
nrk_get_pid
nrk_kernel_error_add
nrk_kprintf
halRfWaitForCrystalOscillator
_nrk_errno_set
