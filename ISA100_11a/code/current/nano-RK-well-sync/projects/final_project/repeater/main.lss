
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000061c  00800200  0000844e  000084c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000844e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000013cd  0080081c  00008a6a  00008ade  2**0
                  ALLOC
  3 .stab         00012a38  00000000  00000000  00008ae0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000adb9  00000000  00000000  0001b518  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d2 01 	jmp	0x3a4	; 0x3a4 <__ctors_end>
       4:	0c 94 15 3c 	jmp	0x782a	; 0x782a <__vector_1>
       8:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
       c:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      10:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      14:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      18:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      1c:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      20:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      24:	0c 94 43 3c 	jmp	0x7886	; 0x7886 <__vector_9>
      28:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      2c:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      30:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      34:	0c 94 f6 39 	jmp	0x73ec	; 0x73ec <__vector_13>
      38:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      3c:	0c 94 f6 39 	jmp	0x73ec	; 0x73ec <__vector_13>
      40:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      44:	0c 94 29 3a 	jmp	0x7452	; 0x7452 <__vector_17>
      48:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      4c:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      50:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      54:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      58:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      5c:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      60:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      64:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      68:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      6c:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      70:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      74:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      78:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      7c:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      80:	0c 94 33 3a 	jmp	0x7466	; 0x7466 <__vector_32>
      84:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      88:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      8c:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      90:	0c 94 ef 27 	jmp	0x4fde	; 0x4fde <__vector_36>
      94:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      98:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      9c:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      a0:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      a4:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      a8:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      ac:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      b0:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      b4:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      b8:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      bc:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      c0:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      c4:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      c8:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__bad_interrupt>
      cc:	51 2b       	or	r21, r17
      ce:	57 2b       	or	r21, r23
      d0:	5a 2b       	or	r21, r26
      d2:	5d 2b       	or	r21, r29
      d4:	60 2b       	or	r22, r16
      d6:	63 2b       	or	r22, r19
      d8:	69 2b       	or	r22, r25
      da:	66 2b       	or	r22, r22
      dc:	6c 2b       	or	r22, r28
      de:	6f 2b       	or	r22, r31
      e0:	72 2b       	or	r23, r18
      e2:	78 2b       	or	r23, r24
      e4:	7b 2b       	or	r23, r27
      e6:	7e 2b       	or	r23, r30
      e8:	81 2b       	or	r24, r17
      ea:	75 2b       	or	r23, r21
      ec:	4e 2b       	or	r20, r30
      ee:	54 2b       	or	r21, r20

000000f0 <__c.2627>:
      f0:	43 72 65 61 74 65 20 44 6f 6e 65 0d 0a 00           Create Done...

000000fe <__c.2585>:
      fe:	53 74 61 72 74 69 6e 67 20 75 70 2e 2e 2e 0d 0a     Starting up.....
	...

0000010f <__c.2864>:
     10f:	49 53 41 20 45 52 52 4f 52 3a 20 63 72 65 61 74     ISA ERROR: creat
     11f:	69 6e 67 20 74 78 20 73 69 67 6e 61 6c 20 66 61     ing tx signal fa
     12f:	69 6c 65 64 0d 0a 00                                iled...

00000136 <__c.2862>:
     136:	49 53 41 20 45 52 52 4f 52 3a 20 63 72 65 61 74     ISA ERROR: creat
     146:	69 6e 67 20 72 78 20 73 69 67 6e 61 6c 20 66 61     ing rx signal fa
     156:	69 6c 65 64 0d 0a 00                                iled...

0000015d <__c.2736>:
     15d:	43 43 32 34 32 30 20 45 52 52 4f 52 3a 20 20 52     CC2420 ERROR:  R
     16d:	65 6c 65 61 73 65 20 6f 66 20 73 65 6d 61 70 68     elease of semaph
     17d:	6f 72 65 20 66 61 69 6c 65 64 0d 0a 00              ore failed...

0000018a <__c.2674>:
     18a:	43 43 32 34 32 30 20 45 52 52 4f 52 3a 20 20 41     CC2420 ERROR:  A
     19a:	63 63 65 73 73 20 74 6f 20 73 65 6d 61 70 68 6f     ccess to semapho
     1aa:	72 65 20 66 61 69 6c 65 64 0d 0a 00                 re failed...

000001b6 <__c.2384>:
     1b6:	55 4e 4b 4f 57 4e 00                                UNKOWN.

000001bd <__c.2381>:
     1bd:	46 61 69 6c 65 64 20 74 6f 20 63 72 65 61 74 65     Failed to create
     1cd:	20 53 65 6d 61 70 68 6f 72 65 00                     Semaphore.

000001d8 <__c.2378>:
     1d8:	46 61 69 6c 65 64 20 74 6f 20 63 72 65 61 74 65     Failed to create
     1e8:	20 53 69 67 6e 61 6c 00                              Signal.

000001f0 <__c.2375>:
     1f0:	4b 65 72 6e 65 6c 20 66 75 6e 63 74 69 6f 6e 20     Kernel function 
     200:	6e 6f 74 20 69 6d 70 6c 65 6d 65 6e 74 65 64 00     not implemented.

00000210 <__c.2372>:
     210:	44 65 76 69 63 65 20 44 72 69 76 65 72 20 45 72     Device Driver Er
     220:	72 6f 72 00                                         ror.

00000224 <__c.2369>:
     224:	57 61 74 63 68 64 6f 67 20 52 65 73 74 61 72 74     Watchdog Restart
	...

00000235 <__c.2366>:
     235:	54 69 6d 65 72 20 4f 76 65 72 66 6c 6f 77 00        Timer Overflow.

00000244 <__c.2363>:
     244:	55 6e 68 61 6e 64 6c 65 64 20 49 6e 74 65 72 72     Unhandled Interr
     254:	75 70 74 20 56 65 63 74 6f 72 00                    upt Vector.

0000025f <__c.2360>:
     25f:	4c 6f 77 20 56 6f 6c 74 61 67 65 00                 Low Voltage.

0000026b <__c.2357>:
     26b:	45 78 74 72 61 20 54 61 73 6b 20 73 74 61 72 74     Extra Task start
     27b:	65 64 2c 20 69 73 20 6e 72 6b 5f 63 66 67 2e 68     ed, is nrk_cfg.h
     28b:	20 6f 6b 3f 00                                       ok?.

00000290 <__c.2354>:
     290:	49 64 6c 65 20 6f 72 20 4b 65 72 6e 65 6c 20 53     Idle or Kernel S
     2a0:	74 61 63 6b 20 4f 76 65 72 66 6c 6f 77 00           tack Overflow.

000002ae <__c.2351>:
     2ae:	55 6e 65 78 70 65 63 74 65 64 20 52 65 73 74 61     Unexpected Resta
     2be:	72 74 00                                            rt.

000002c1 <__c.2348>:
     2c1:	44 75 70 6c 69 63 61 74 65 64 20 54 61 73 6b 20     Duplicated Task 
     2d1:	49 44 00                                            ID.

000002d4 <__c.2345>:
     2d4:	53 63 68 65 64 75 6c 65 72 20 4d 69 73 73 65 64     Scheduler Missed
     2e4:	20 57 61 6b 65 75 70 00                              Wakeup.

000002ec <__c.2342>:
     2ec:	54 61 73 6b 20 52 65 73 65 72 76 65 20 56 69 6f     Task Reserve Vio
     2fc:	6c 61 74 65 64 00                                   lated.

00000302 <__c.2339>:
     302:	52 65 73 65 72 76 65 20 45 72 72 6f 72 20 69 6e     Reserve Error in
     312:	20 53 63 68 65 64 75 6c 65 72 00                     Scheduler.

0000031d <__c.2336>:
     31d:	49 6e 76 61 6c 69 64 20 53 74 61 63 6b 20 50 6f     Invalid Stack Po
     32d:	69 6e 74 65 72 00                                   inter.

00000333 <__c.2333>:
     333:	54 61 73 6b 20 53 74 61 63 6b 20 4f 76 65 72 66     Task Stack Overf
     343:	6c 6f 77 00                                         low.

00000347 <__c.2329>:
     347:	53 74 61 63 6b 20 77 61 73 20 6e 6f 74 20 64 65     Stack was not de
     357:	66 69 6e 65 64 20 61 73 20 6c 61 72 67 65 20 65     fined as large e
     367:	6e 6f 75 67 68 21 00                                nough!.

0000036e <__c.2326>:
     36e:	29 3a 20 00                                         ): .

00000372 <__c.2324>:
     372:	2a 4e 52 4b 20 45 52 52 4f 52 28 00                 *NRK ERROR(.

0000037e <__c.2257>:
     37e:	0d 0a 53 54 41 43 4b 20 44 55 4d 50 0d 0a 00        ..STACK DUMP...

0000038d <__c.2047>:
     38d:	45 46 47 65 66 67 00                                EFGefg.

00000394 <__c.2041>:
     394:	20 2b 2d 2e 30 31 32 33 34 35 36 37 38 39 68 00      +-.0123456789h.

000003a4 <__ctors_end>:
     3a4:	11 24       	eor	r1, r1
     3a6:	1f be       	out	0x3f, r1	; 63
     3a8:	cf ef       	ldi	r28, 0xFF	; 255
     3aa:	d1 e2       	ldi	r29, 0x21	; 33
     3ac:	de bf       	out	0x3e, r29	; 62
     3ae:	cd bf       	out	0x3d, r28	; 61

000003b0 <__do_copy_data>:
     3b0:	18 e0       	ldi	r17, 0x08	; 8
     3b2:	a0 e0       	ldi	r26, 0x00	; 0
     3b4:	b2 e0       	ldi	r27, 0x02	; 2
     3b6:	ee e4       	ldi	r30, 0x4E	; 78
     3b8:	f4 e8       	ldi	r31, 0x84	; 132
     3ba:	00 e0       	ldi	r16, 0x00	; 0
     3bc:	0b bf       	out	0x3b, r16	; 59
     3be:	02 c0       	rjmp	.+4      	; 0x3c4 <__do_copy_data+0x14>
     3c0:	07 90       	elpm	r0, Z+
     3c2:	0d 92       	st	X+, r0
     3c4:	ac 31       	cpi	r26, 0x1C	; 28
     3c6:	b1 07       	cpc	r27, r17
     3c8:	d9 f7       	brne	.-10     	; 0x3c0 <__do_copy_data+0x10>

000003ca <__do_clear_bss>:
     3ca:	1b e1       	ldi	r17, 0x1B	; 27
     3cc:	ac e1       	ldi	r26, 0x1C	; 28
     3ce:	b8 e0       	ldi	r27, 0x08	; 8
     3d0:	01 c0       	rjmp	.+2      	; 0x3d4 <.do_clear_bss_start>

000003d2 <.do_clear_bss_loop>:
     3d2:	1d 92       	st	X+, r1

000003d4 <.do_clear_bss_start>:
     3d4:	a9 3e       	cpi	r26, 0xE9	; 233
     3d6:	b1 07       	cpc	r27, r17
     3d8:	e1 f7       	brne	.-8      	; 0x3d2 <.do_clear_bss_loop>
     3da:	0e 94 07 03 	call	0x60e	; 0x60e <main>
     3de:	0c 94 26 42 	jmp	0x844c	; 0x844c <_exit>

000003e2 <__bad_interrupt>:
     3e2:	0c 94 61 3a 	jmp	0x74c2	; 0x74c2 <__vector_default>

000003e6 <nrk_create_taskset>:


void
nrk_create_taskset()
{
  TaskOne.task = Task1;
     3e6:	84 e5       	ldi	r24, 0x54	; 84
     3e8:	92 e0       	ldi	r25, 0x02	; 2
     3ea:	90 93 82 08 	sts	0x0882, r25
     3ee:	80 93 81 08 	sts	0x0881, r24
  TaskOne.Ptos = (void *) &Stack1[NRK_APP_STACKSIZE-1];
     3f2:	8c e9       	ldi	r24, 0x9C	; 156
     3f4:	9a e0       	ldi	r25, 0x0A	; 10
     3f6:	90 93 7e 08 	sts	0x087E, r25
     3fa:	80 93 7d 08 	sts	0x087D, r24
  TaskOne.Pbos = (void *) &Stack1[0];
     3fe:	8d e9       	ldi	r24, 0x9D	; 157
     400:	99 e0       	ldi	r25, 0x09	; 9
     402:	90 93 80 08 	sts	0x0880, r25
     406:	80 93 7f 08 	sts	0x087F, r24
  TaskOne.prio = 2;
     40a:	82 e0       	ldi	r24, 0x02	; 2
     40c:	80 93 84 08 	sts	0x0884, r24
  TaskOne.FirstActivation = TRUE;
     410:	81 e0       	ldi	r24, 0x01	; 1
     412:	80 93 83 08 	sts	0x0883, r24
  TaskOne.Type = BASIC_TASK;
     416:	80 93 85 08 	sts	0x0885, r24
  TaskOne.SchType = PREEMPTIVE;
     41a:	80 93 86 08 	sts	0x0886, r24
  TaskOne.period.secs = 0;
     41e:	10 92 87 08 	sts	0x0887, r1
     422:	10 92 88 08 	sts	0x0888, r1
     426:	10 92 89 08 	sts	0x0889, r1
     42a:	10 92 8a 08 	sts	0x088A, r1
  TaskOne.period.nano_secs = 10*NANOS_PER_MS;
     42e:	80 e8       	ldi	r24, 0x80	; 128
     430:	96 e9       	ldi	r25, 0x96	; 150
     432:	a8 e9       	ldi	r26, 0x98	; 152
     434:	b0 e0       	ldi	r27, 0x00	; 0
     436:	80 93 8b 08 	sts	0x088B, r24
     43a:	90 93 8c 08 	sts	0x088C, r25
     43e:	a0 93 8d 08 	sts	0x088D, r26
     442:	b0 93 8e 08 	sts	0x088E, r27
  TaskOne.cpu_reserve.secs = 0;
     446:	10 92 8f 08 	sts	0x088F, r1
     44a:	10 92 90 08 	sts	0x0890, r1
     44e:	10 92 91 08 	sts	0x0891, r1
     452:	10 92 92 08 	sts	0x0892, r1
  TaskOne.cpu_reserve.nano_secs = 20*NANOS_PER_MS;
     456:	80 e0       	ldi	r24, 0x00	; 0
     458:	9d e2       	ldi	r25, 0x2D	; 45
     45a:	a1 e3       	ldi	r26, 0x31	; 49
     45c:	b1 e0       	ldi	r27, 0x01	; 1
     45e:	80 93 93 08 	sts	0x0893, r24
     462:	90 93 94 08 	sts	0x0894, r25
     466:	a0 93 95 08 	sts	0x0895, r26
     46a:	b0 93 96 08 	sts	0x0896, r27
  TaskOne.offset.secs = 0;
     46e:	10 92 97 08 	sts	0x0897, r1
     472:	10 92 98 08 	sts	0x0898, r1
     476:	10 92 99 08 	sts	0x0899, r1
     47a:	10 92 9a 08 	sts	0x089A, r1
  TaskOne.offset.nano_secs= 50*NANOS_PER_MS;
     47e:	80 e8       	ldi	r24, 0x80	; 128
     480:	90 ef       	ldi	r25, 0xF0	; 240
     482:	aa ef       	ldi	r26, 0xFA	; 250
     484:	b2 e0       	ldi	r27, 0x02	; 2
     486:	80 93 9b 08 	sts	0x089B, r24
     48a:	90 93 9c 08 	sts	0x089C, r25
     48e:	a0 93 9d 08 	sts	0x089D, r26
     492:	b0 93 9e 08 	sts	0x089E, r27
  nrk_activate_task (&TaskOne);
     496:	8c e7       	ldi	r24, 0x7C	; 124
     498:	98 e0       	ldi	r25, 0x08	; 8
     49a:	0e 94 cb 32 	call	0x6596	; 0x6596 <nrk_activate_task>


  nrk_kprintf( PSTR("Create Done\r\n") );
     49e:	80 ef       	ldi	r24, 0xF0	; 240
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	0e 94 dc 27 	call	0x4fb8	; 0x4fb8 <nrk_kprintf>
     4a6:	08 95       	ret

000004a8 <Task1>:
  return 0;
}


void Task1()
{
     4a8:	2f 92       	push	r2
     4aa:	3f 92       	push	r3
     4ac:	4f 92       	push	r4
     4ae:	5f 92       	push	r5
     4b0:	6f 92       	push	r6
     4b2:	7f 92       	push	r7
     4b4:	8f 92       	push	r8
     4b6:	9f 92       	push	r9
     4b8:	af 92       	push	r10
     4ba:	bf 92       	push	r11
     4bc:	cf 92       	push	r12
     4be:	df 92       	push	r13
     4c0:	ef 92       	push	r14
     4c2:	ff 92       	push	r15
     4c4:	0f 93       	push	r16
     4c6:	1f 93       	push	r17
     4c8:	cf 93       	push	r28
     4ca:	df 93       	push	r29
     4cc:	cd b7       	in	r28, 0x3d	; 61
     4ce:	de b7       	in	r29, 0x3e	; 62
     4d0:	22 97       	sbiw	r28, 0x02	; 2
     4d2:	0f b6       	in	r0, 0x3f	; 63
     4d4:	f8 94       	cli
     4d6:	de bf       	out	0x3e, r29	; 62
     4d8:	0f be       	out	0x3f, r0	; 63
     4da:	cd bf       	out	0x3d, r28	; 61

  char c = -1;
  nrk_sig_t uart_rx_signal;
  uint8_t finished = 0;

  printf( "Task1 PID=%d\r\n",nrk_get_pid());
     4dc:	0e 94 cd 30 	call	0x619a	; 0x619a <nrk_get_pid>
     4e0:	99 27       	eor	r25, r25
     4e2:	9f 93       	push	r25
     4e4:	8f 93       	push	r24
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	92 e0       	ldi	r25, 0x02	; 2
     4ea:	9f 93       	push	r25
     4ec:	8f 93       	push	r24
     4ee:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
  
  nrk_led_set(RED_LED);
     4f2:	83 e0       	ldi	r24, 0x03	; 3
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	0e 94 2e 27 	call	0x4e5c	; 0x4e5c <nrk_led_set>

 // isa_set_schedule(ISA_REPEATER, MY_CLK_SRC_ID);

 // isa_set_channel(MY_CHANNEL);

  isa_start();
     4fa:	0e 94 ad 05 	call	0xb5a	; 0xb5a <isa_start>
  
  isa_rx_pkt_set_buffer(rx_buf, RF_MAX_PAYLOAD_SIZE);
     4fe:	64 e7       	ldi	r22, 0x74	; 116
     500:	88 e2       	ldi	r24, 0x28	; 40
     502:	99 e0       	ldi	r25, 0x09	; 9
     504:	0e 94 9d 05 	call	0xb3a	; 0xb3a <isa_rx_pkt_set_buffer>
  
  while(!isa_ready())  nrk_wait_until_next_period(); 
     508:	0f 90       	pop	r0
     50a:	0f 90       	pop	r0
     50c:	0f 90       	pop	r0
     50e:	0f 90       	pop	r0
     510:	02 c0       	rjmp	.+4      	; 0x516 <Task1+0x6e>
     512:	0e 94 8d 32 	call	0x651a	; 0x651a <nrk_wait_until_next_period>
     516:	0e 94 93 05 	call	0xb26	; 0xb26 <isa_ready>
     51a:	88 23       	and	r24, r24
     51c:	d1 f3       	breq	.-12     	; 0x512 <Task1+0x6a>
	else
	    my_tx_slot[i]=tx_slot_from_join[i];
    }	   
  printf("MAIN_TX:%d\r\n",my_tx_slot[0]);*/

  printf("isa start!\n\r");
     51e:	8f e0       	ldi	r24, 0x0F	; 15
     520:	92 e0       	ldi	r25, 0x02	; 2
     522:	9f 93       	push	r25
     524:	8f 93       	push	r24
     526:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
     52a:	10 e0       	ldi	r17, 0x00	; 0
     52c:	0f 90       	pop	r0
     52e:	0f 90       	pop	r0
	  	  }

//nrk_gpio_toggle(NRK_DEBUG_0);
       if( isa_rx_pkt_check()!=0 ) {

	    local_rx_buf=isa_rx_pkt_get(&length, &rssi);
     530:	42 e0       	ldi	r20, 0x02	; 2
     532:	24 2e       	mov	r2, r20
     534:	31 2c       	mov	r3, r1
     536:	2c 0e       	add	r2, r28
     538:	3d 1e       	adc	r3, r29
     53a:	2e 01       	movw	r4, r28
     53c:	08 94       	sec
     53e:	41 1c       	adc	r4, r1
     540:	51 1c       	adc	r5, r1
	//isa_tx_pkt(rx_buf,length,configDHDR(),my_tx_slot[0]);//change forward the message from recipient
	isa_tx_pkt(rx_buf,length,configDHDR(),MY_TX_SLOT);
	isa_wait_until_rx_or_tx ();*/
    	   if (cnt ==0 ){
    		   MESSAGE *message;
    		   	message = &tx_buf[PKT_DATA_START];
     542:	3f ea       	ldi	r19, 0xAF	; 175
     544:	e3 2e       	mov	r14, r19
     546:	3a e0       	ldi	r19, 0x0A	; 10
     548:	f3 2e       	mov	r15, r19
     54a:	22 e3       	ldi	r18, 0x32	; 50
     54c:	62 2e       	mov	r6, r18
     54e:	22 e0       	ldi	r18, 0x02	; 2
     550:	72 2e       	mov	r7, r18
     552:	47 01       	movw	r8, r14
     554:	08 94       	sec
     556:	81 1c       	adc	r8, r1
     558:	91 1c       	adc	r9, r1
     55a:	96 e1       	ldi	r25, 0x16	; 22
     55c:	a9 2e       	mov	r10, r25
     55e:	94 e0       	ldi	r25, 0x04	; 4
     560:	b9 2e       	mov	r11, r25
     562:	89 ef       	ldi	r24, 0xF9	; 249
     564:	c8 2e       	mov	r12, r24
     566:	8f ef       	ldi	r24, 0xFF	; 255
     568:	d8 2e       	mov	r13, r24
     56a:	ce 0c       	add	r12, r14
     56c:	df 1c       	adc	r13, r15
  while(1){


//Spit out log info

	  	  if (txCount % 1000 == 0){
     56e:	20 91 23 08 	lds	r18, 0x0823
     572:	30 91 24 08 	lds	r19, 0x0824
     576:	c9 01       	movw	r24, r18
     578:	68 ee       	ldi	r22, 0xE8	; 232
     57a:	73 e0       	ldi	r23, 0x03	; 3
     57c:	0e 94 92 41 	call	0x8324	; 0x8324 <__udivmodhi4>
     580:	89 2b       	or	r24, r25
     582:	e1 f4       	brne	.+56     	; 0x5bc <Task1+0x114>
	  	printf ("Tx: %d\r\nRX: %d\r\nPL:%d", txCount,rxCount, packetsLost);
     584:	80 91 27 08 	lds	r24, 0x0827
     588:	90 91 28 08 	lds	r25, 0x0828
     58c:	9f 93       	push	r25
     58e:	8f 93       	push	r24
     590:	80 91 25 08 	lds	r24, 0x0825
     594:	90 91 26 08 	lds	r25, 0x0826
     598:	9f 93       	push	r25
     59a:	8f 93       	push	r24
     59c:	3f 93       	push	r19
     59e:	2f 93       	push	r18
     5a0:	8c e1       	ldi	r24, 0x1C	; 28
     5a2:	92 e0       	ldi	r25, 0x02	; 2
     5a4:	9f 93       	push	r25
     5a6:	8f 93       	push	r24
     5a8:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
     5ac:	8d b7       	in	r24, 0x3d	; 61
     5ae:	9e b7       	in	r25, 0x3e	; 62
     5b0:	08 96       	adiw	r24, 0x08	; 8
     5b2:	0f b6       	in	r0, 0x3f	; 63
     5b4:	f8 94       	cli
     5b6:	9e bf       	out	0x3e, r25	; 62
     5b8:	0f be       	out	0x3f, r0	; 63
     5ba:	8d bf       	out	0x3d, r24	; 61
	  	  }

//nrk_gpio_toggle(NRK_DEBUG_0);
       if( isa_rx_pkt_check()!=0 ) {
     5bc:	0e 94 07 06 	call	0xc0e	; 0xc0e <isa_rx_pkt_check>
     5c0:	88 23       	and	r24, r24
     5c2:	31 f0       	breq	.+12     	; 0x5d0 <Task1+0x128>

	    local_rx_buf=isa_rx_pkt_get(&length, &rssi);
     5c4:	b1 01       	movw	r22, r2
     5c6:	c2 01       	movw	r24, r4
     5c8:	0e 94 31 0e 	call	0x1c62	; 0x1c62 <isa_rx_pkt_get>
*/
	    //printf(" Forward message is sent.\n\r");
 	    //printf("pkt length:%d",length);
	    //printf("%d\r\n",cnt++);
	  //  printf( "%c",local_rx_buf[PKT_DATA_START]);
	    isa_rx_pkt_release();
     5cc:	0e 94 0d 06 	call	0xc1a	; 0xc1a <isa_rx_pkt_release>
	/*sprintf( &tx_buf[PKT_DATA_START],local_rx_buf+PKT_DATA_START);
	length=strlen(&rx_buf[PKT_DATA_START])+PKT_DATA_START+1; //change
	//isa_tx_pkt(rx_buf,length,configDHDR(),my_tx_slot[0]);//change forward the message from recipient
	isa_tx_pkt(rx_buf,length,configDHDR(),MY_TX_SLOT);
	isa_wait_until_rx_or_tx ();*/
    	   if (cnt ==0 ){
     5d0:	11 23       	and	r17, r17
     5d2:	c1 f4       	brne	.+48     	; 0x604 <Task1+0x15c>
    		   MESSAGE *message;
    		   	message = &tx_buf[PKT_DATA_START];
    		   	message->type = DUMMY_PAYLOAD;
     5d4:	81 e0       	ldi	r24, 0x01	; 1
     5d6:	80 93 af 0a 	sts	0x0AAF, r24
	sprintf( &message->data,"2");
     5da:	b3 01       	movw	r22, r6
     5dc:	c4 01       	movw	r24, r8
     5de:	0e 94 28 3f 	call	0x7e50	; 0x7e50 <strcpy>
	length=strlen(&tx_buf[PKT_DATA_START])+PKT_DATA_START+2;
     5e2:	f7 01       	movw	r30, r14
     5e4:	01 90       	ld	r0, Z+
     5e6:	00 20       	and	r0, r0
     5e8:	e9 f7       	brne	.-6      	; 0x5e4 <Task1+0x13c>
     5ea:	e0 5b       	subi	r30, 0xB0	; 176
     5ec:	fa 40       	sbci	r31, 0x0A	; 10
     5ee:	e7 5f       	subi	r30, 0xF7	; 247
     5f0:	e9 83       	std	Y+1, r30	; 0x01
	sendPacket(1,0, length, tx_buf, transmitCallback1);
     5f2:	85 01       	movw	r16, r10
     5f4:	96 01       	movw	r18, r12
     5f6:	4e 2f       	mov	r20, r30
     5f8:	60 e0       	ldi	r22, 0x00	; 0
     5fa:	81 e0       	ldi	r24, 0x01	; 1
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	0e 94 23 14 	call	0x2846	; 0x2846 <sendPacket>
     602:	11 e0       	ldi	r17, 0x01	; 1

	/*sprintf( &tx_buf2[PKT_DATA_START],"Hello from slot 2!");
	length=strlen(&tx_buf2[PKT_DATA_START])+PKT_DATA_START+1;
	isa_tx_pkt(tx_buf2,length,configDHDR(),2);
	isa_wait_until_rx_or_tx ();*/
    	   setMatrix();
     604:	0e 94 5d 04 	call	0x8ba	; 0x8ba <setMatrix>
    	     	  nrk_wait_until_next_period();
     608:	0e 94 8d 32 	call	0x651a	; 0x651a <nrk_wait_until_next_period>
     60c:	b0 cf       	rjmp	.-160    	; 0x56e <Task1+0xc6>

0000060e <main>:
	  	isaFreePacket(entry);
}
//*******************************************************************************

int main ()
{
     60e:	cf ef       	ldi	r28, 0xFF	; 255
     610:	d1 e2       	ldi	r29, 0x21	; 33
     612:	de bf       	out	0x3e, r29	; 62
     614:	cd bf       	out	0x3d, r28	; 61
  nrk_setup_ports();
     616:	0e 94 71 23 	call	0x46e2	; 0x46e2 <nrk_setup_ports>
  nrk_setup_uart(UART_BAUDRATE_115K2);
     61a:	87 e0       	ldi	r24, 0x07	; 7
     61c:	90 e0       	ldi	r25, 0x00	; 0
     61e:	0e 94 a6 27 	call	0x4f4c	; 0x4f4c <nrk_setup_uart>

  nrk_kprintf( PSTR("Starting up...\r\n") );
     622:	8e ef       	ldi	r24, 0xFE	; 254
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	0e 94 dc 27 	call	0x4fb8	; 0x4fb8 <nrk_kprintf>
	
  nrk_init();
     62a:	0e 94 64 2a 	call	0x54c8	; 0x54c8 <nrk_init>

  nrk_led_clr(0);
     62e:	80 e0       	ldi	r24, 0x00	; 0
     630:	90 e0       	ldi	r25, 0x00	; 0
     632:	0e 94 11 27 	call	0x4e22	; 0x4e22 <nrk_led_clr>
  nrk_led_clr(1);
     636:	81 e0       	ldi	r24, 0x01	; 1
     638:	90 e0       	ldi	r25, 0x00	; 0
     63a:	0e 94 11 27 	call	0x4e22	; 0x4e22 <nrk_led_clr>
  nrk_led_clr(2);
     63e:	82 e0       	ldi	r24, 0x02	; 2
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	0e 94 11 27 	call	0x4e22	; 0x4e22 <nrk_led_clr>
  nrk_led_clr(3);
     646:	83 e0       	ldi	r24, 0x03	; 3
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	0e 94 11 27 	call	0x4e22	; 0x4e22 <nrk_led_clr>
  nrk_time_set(0,0);
     64e:	20 e0       	ldi	r18, 0x00	; 0
     650:	30 e0       	ldi	r19, 0x00	; 0
     652:	40 e0       	ldi	r20, 0x00	; 0
     654:	50 e0       	ldi	r21, 0x00	; 0
     656:	60 e0       	ldi	r22, 0x00	; 0
     658:	70 e0       	ldi	r23, 0x00	; 0
     65a:	80 e0       	ldi	r24, 0x00	; 0
     65c:	90 e0       	ldi	r25, 0x00	; 0
     65e:	0e 94 2f 34 	call	0x685e	; 0x685e <nrk_time_set>
  
  isa_task_config();
     662:	0e 94 20 06 	call	0xc40	; 0xc40 <isa_task_config>
  isa_set_channel_pattern(1);
     666:	81 e0       	ldi	r24, 0x01	; 1
     668:	90 e0       	ldi	r25, 0x00	; 0
     66a:	0e 94 53 05 	call	0xaa6	; 0xaa6 <isa_set_channel_pattern>
  isa_init (ISA_REPEATER, MY_ID, MY_CLK_SRC_ID);//change
     66e:	41 e0       	ldi	r20, 0x01	; 1
     670:	62 e0       	ldi	r22, 0x02	; 2
     672:	81 e0       	ldi	r24, 0x01	; 1
     674:	0e 94 7f 0d 	call	0x1afe	; 0x1afe <isa_init>
  
  dlmoInit(); 	//Initialize the Data Link Management Object
     678:	0e 94 aa 12 	call	0x2554	; 0x2554 <dlmoInit>

  addNeighbor(1,0,0,0,true,0,0,0);
     67c:	1f 92       	push	r1
     67e:	1f 92       	push	r1
     680:	88 24       	eor	r8, r8
     682:	aa 24       	eor	r10, r10
     684:	a3 94       	inc	r10
     686:	cc 24       	eor	r12, r12
     688:	ee 24       	eor	r14, r14
     68a:	00 e0       	ldi	r16, 0x00	; 0
     68c:	10 e0       	ldi	r17, 0x00	; 0
     68e:	20 e0       	ldi	r18, 0x00	; 0
     690:	30 e0       	ldi	r19, 0x00	; 0
     692:	40 e0       	ldi	r20, 0x00	; 0
     694:	50 e0       	ldi	r21, 0x00	; 0
     696:	60 e0       	ldi	r22, 0x00	; 0
     698:	70 e0       	ldi	r23, 0x00	; 0
     69a:	81 e0       	ldi	r24, 0x01	; 1
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	0e 94 cd 14 	call	0x299a	; 0x299a <addNeighbor>
  addNeighbor(5,0,0,0,false,0,0,0);
     6a2:	1f 92       	push	r1
     6a4:	1f 92       	push	r1
     6a6:	aa 24       	eor	r10, r10
     6a8:	20 e0       	ldi	r18, 0x00	; 0
     6aa:	30 e0       	ldi	r19, 0x00	; 0
     6ac:	40 e0       	ldi	r20, 0x00	; 0
     6ae:	50 e0       	ldi	r21, 0x00	; 0
     6b0:	60 e0       	ldi	r22, 0x00	; 0
     6b2:	70 e0       	ldi	r23, 0x00	; 0
     6b4:	85 e0       	ldi	r24, 0x05	; 5
     6b6:	90 e0       	ldi	r25, 0x00	; 0
     6b8:	0e 94 cd 14 	call	0x299a	; 0x299a <addNeighbor>
  addNeighbor(6,0,0,0,false,0,0,0);
     6bc:	1f 92       	push	r1
     6be:	1f 92       	push	r1
     6c0:	20 e0       	ldi	r18, 0x00	; 0
     6c2:	30 e0       	ldi	r19, 0x00	; 0
     6c4:	40 e0       	ldi	r20, 0x00	; 0
     6c6:	50 e0       	ldi	r21, 0x00	; 0
     6c8:	60 e0       	ldi	r22, 0x00	; 0
     6ca:	70 e0       	ldi	r23, 0x00	; 0
     6cc:	86 e0       	ldi	r24, 0x06	; 6
     6ce:	90 e0       	ldi	r25, 0x00	; 0
     6d0:	0e 94 cd 14 	call	0x299a	; 0x299a <addNeighbor>
  addNeighbor(7,0,0,0,false,0,0,0);
     6d4:	1f 92       	push	r1
     6d6:	1f 92       	push	r1
     6d8:	20 e0       	ldi	r18, 0x00	; 0
     6da:	30 e0       	ldi	r19, 0x00	; 0
     6dc:	40 e0       	ldi	r20, 0x00	; 0
     6de:	50 e0       	ldi	r21, 0x00	; 0
     6e0:	60 e0       	ldi	r22, 0x00	; 0
     6e2:	70 e0       	ldi	r23, 0x00	; 0
     6e4:	87 e0       	ldi	r24, 0x07	; 7
     6e6:	90 e0       	ldi	r25, 0x00	; 0
     6e8:	0e 94 cd 14 	call	0x299a	; 0x299a <addNeighbor>
  addNeighbor(8,0,0,0,false,0,0,0);
     6ec:	1f 92       	push	r1
     6ee:	1f 92       	push	r1
     6f0:	20 e0       	ldi	r18, 0x00	; 0
     6f2:	30 e0       	ldi	r19, 0x00	; 0
     6f4:	40 e0       	ldi	r20, 0x00	; 0
     6f6:	50 e0       	ldi	r21, 0x00	; 0
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	88 e0       	ldi	r24, 0x08	; 8
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	0e 94 cd 14 	call	0x299a	; 0x299a <addNeighbor>
  addNeighbor(9,0,0,0,false,0,0,0);
     704:	1f 92       	push	r1
     706:	1f 92       	push	r1
     708:	20 e0       	ldi	r18, 0x00	; 0
     70a:	30 e0       	ldi	r19, 0x00	; 0
     70c:	40 e0       	ldi	r20, 0x00	; 0
     70e:	50 e0       	ldi	r21, 0x00	; 0
     710:	60 e0       	ldi	r22, 0x00	; 0
     712:	70 e0       	ldi	r23, 0x00	; 0
     714:	89 e0       	ldi	r24, 0x09	; 9
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	0e 94 cd 14 	call	0x299a	; 0x299a <addNeighbor>

  addLink(26,0,0,4,0);//ad
     71c:	24 e0       	ldi	r18, 0x04	; 4
     71e:	40 e0       	ldi	r20, 0x00	; 0
     720:	50 e0       	ldi	r21, 0x00	; 0
     722:	60 e0       	ldi	r22, 0x00	; 0
     724:	70 e0       	ldi	r23, 0x00	; 0
     726:	8a e1       	ldi	r24, 0x1A	; 26
     728:	0e 94 83 15 	call	0x2b06	; 0x2b06 <addLink>
  addLink(4,1,0,1,0);
     72c:	21 e0       	ldi	r18, 0x01	; 1
     72e:	40 e0       	ldi	r20, 0x00	; 0
     730:	50 e0       	ldi	r21, 0x00	; 0
     732:	61 e0       	ldi	r22, 0x01	; 1
     734:	70 e0       	ldi	r23, 0x00	; 0
     736:	84 e0       	ldi	r24, 0x04	; 4
     738:	0e 94 83 15 	call	0x2b06	; 0x2b06 <addLink>
  addLink(7,5,0,1,0);
     73c:	21 e0       	ldi	r18, 0x01	; 1
     73e:	40 e0       	ldi	r20, 0x00	; 0
     740:	50 e0       	ldi	r21, 0x00	; 0
     742:	65 e0       	ldi	r22, 0x05	; 5
     744:	70 e0       	ldi	r23, 0x00	; 0
     746:	87 e0       	ldi	r24, 0x07	; 7
     748:	0e 94 83 15 	call	0x2b06	; 0x2b06 <addLink>
  addLink(8,6,0,1,0);
     74c:	21 e0       	ldi	r18, 0x01	; 1
     74e:	40 e0       	ldi	r20, 0x00	; 0
     750:	50 e0       	ldi	r21, 0x00	; 0
     752:	66 e0       	ldi	r22, 0x06	; 6
     754:	70 e0       	ldi	r23, 0x00	; 0
     756:	88 e0       	ldi	r24, 0x08	; 8
     758:	0e 94 83 15 	call	0x2b06	; 0x2b06 <addLink>
  addLink(9,7,0,1,0);
     75c:	21 e0       	ldi	r18, 0x01	; 1
     75e:	40 e0       	ldi	r20, 0x00	; 0
     760:	50 e0       	ldi	r21, 0x00	; 0
     762:	67 e0       	ldi	r22, 0x07	; 7
     764:	70 e0       	ldi	r23, 0x00	; 0
     766:	89 e0       	ldi	r24, 0x09	; 9
     768:	0e 94 83 15 	call	0x2b06	; 0x2b06 <addLink>
  addLink(10,8,0,1,0);
     76c:	21 e0       	ldi	r18, 0x01	; 1
     76e:	40 e0       	ldi	r20, 0x00	; 0
     770:	50 e0       	ldi	r21, 0x00	; 0
     772:	68 e0       	ldi	r22, 0x08	; 8
     774:	70 e0       	ldi	r23, 0x00	; 0
     776:	8a e0       	ldi	r24, 0x0A	; 10
     778:	0e 94 83 15 	call	0x2b06	; 0x2b06 <addLink>
  addLink(11,9,0,1,0);
     77c:	21 e0       	ldi	r18, 0x01	; 1
     77e:	40 e0       	ldi	r20, 0x00	; 0
     780:	50 e0       	ldi	r21, 0x00	; 0
     782:	69 e0       	ldi	r22, 0x09	; 9
     784:	70 e0       	ldi	r23, 0x00	; 0
     786:	8b e0       	ldi	r24, 0x0B	; 11
     788:	0e 94 83 15 	call	0x2b06	; 0x2b06 <addLink>
  addLink(12,0,0,8,0);//receive from 5
     78c:	28 e0       	ldi	r18, 0x08	; 8
     78e:	40 e0       	ldi	r20, 0x00	; 0
     790:	50 e0       	ldi	r21, 0x00	; 0
     792:	60 e0       	ldi	r22, 0x00	; 0
     794:	70 e0       	ldi	r23, 0x00	; 0
     796:	8c e0       	ldi	r24, 0x0C	; 12
     798:	0e 94 83 15 	call	0x2b06	; 0x2b06 <addLink>
  addLink(13,0,0,8,0);//6
     79c:	28 e0       	ldi	r18, 0x08	; 8
     79e:	40 e0       	ldi	r20, 0x00	; 0
     7a0:	50 e0       	ldi	r21, 0x00	; 0
     7a2:	60 e0       	ldi	r22, 0x00	; 0
     7a4:	70 e0       	ldi	r23, 0x00	; 0
     7a6:	8d e0       	ldi	r24, 0x0D	; 13
     7a8:	0e 94 83 15 	call	0x2b06	; 0x2b06 <addLink>
  addLink(14,0,0,8,0);//7
     7ac:	28 e0       	ldi	r18, 0x08	; 8
     7ae:	40 e0       	ldi	r20, 0x00	; 0
     7b0:	50 e0       	ldi	r21, 0x00	; 0
     7b2:	60 e0       	ldi	r22, 0x00	; 0
     7b4:	70 e0       	ldi	r23, 0x00	; 0
     7b6:	8e e0       	ldi	r24, 0x0E	; 14
     7b8:	0e 94 83 15 	call	0x2b06	; 0x2b06 <addLink>
  addLink(15,0,0,8,0);//8
     7bc:	28 e0       	ldi	r18, 0x08	; 8
     7be:	40 e0       	ldi	r20, 0x00	; 0
     7c0:	50 e0       	ldi	r21, 0x00	; 0
     7c2:	60 e0       	ldi	r22, 0x00	; 0
     7c4:	70 e0       	ldi	r23, 0x00	; 0
     7c6:	8f e0       	ldi	r24, 0x0F	; 15
     7c8:	0e 94 83 15 	call	0x2b06	; 0x2b06 <addLink>
  addLink(16,0,0,8,0);//9
     7cc:	28 e0       	ldi	r18, 0x08	; 8
     7ce:	40 e0       	ldi	r20, 0x00	; 0
     7d0:	50 e0       	ldi	r21, 0x00	; 0
     7d2:	60 e0       	ldi	r22, 0x00	; 0
     7d4:	70 e0       	ldi	r23, 0x00	; 0
     7d6:	80 e1       	ldi	r24, 0x10	; 16
     7d8:	0e 94 83 15 	call	0x2b06	; 0x2b06 <addLink>
  addLink(3,0,0,8,0);//1
     7dc:	28 e0       	ldi	r18, 0x08	; 8
     7de:	40 e0       	ldi	r20, 0x00	; 0
     7e0:	50 e0       	ldi	r21, 0x00	; 0
     7e2:	60 e0       	ldi	r22, 0x00	; 0
     7e4:	70 e0       	ldi	r23, 0x00	; 0
     7e6:	83 e0       	ldi	r24, 0x03	; 3
     7e8:	0e 94 83 15 	call	0x2b06	; 0x2b06 <addLink>
  addLink(25,0,0,8,0);
     7ec:	28 e0       	ldi	r18, 0x08	; 8
     7ee:	40 e0       	ldi	r20, 0x00	; 0
     7f0:	50 e0       	ldi	r21, 0x00	; 0
     7f2:	60 e0       	ldi	r22, 0x00	; 0
     7f4:	70 e0       	ldi	r23, 0x00	; 0
     7f6:	89 e1       	ldi	r24, 0x19	; 25
     7f8:	0e 94 83 15 	call	0x2b06	; 0x2b06 <addLink>
  addLink(27,0,0,8,0);//Ad
     7fc:	28 e0       	ldi	r18, 0x08	; 8
     7fe:	40 e0       	ldi	r20, 0x00	; 0
     800:	50 e0       	ldi	r21, 0x00	; 0
     802:	60 e0       	ldi	r22, 0x00	; 0
     804:	70 e0       	ldi	r23, 0x00	; 0
     806:	8b e1       	ldi	r24, 0x1B	; 27
     808:	0e 94 83 15 	call	0x2b06	; 0x2b06 <addLink>
  configureSlot(22,0, RX, false,0,0,0,0,0, NEIGHBOR);
  configureSlot(23,0, RX, false,0,0,0,0,0, NEIGHBOR);
  configureSlot(24,0, RX, false,0,0,0,0,0, NEIGHBOR);
*/

  nrk_create_taskset ();
     80c:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <nrk_create_taskset>

  nrk_start();
     810:	0e 94 04 2a 	call	0x5408	; 0x5408 <nrk_start>
     814:	8d b7       	in	r24, 0x3d	; 61
     816:	9e b7       	in	r25, 0x3e	; 62
     818:	0c 96       	adiw	r24, 0x0c	; 12
     81a:	0f b6       	in	r0, 0x3f	; 63
     81c:	f8 94       	cli
     81e:	9e bf       	out	0x3e, r25	; 62
     820:	0f be       	out	0x3f, r0	; 63
     822:	8d bf       	out	0x3d, r24	; 61
  
  return 0;
}
     824:	80 e0       	ldi	r24, 0x00	; 0
     826:	90 e0       	ldi	r25, 0x00	; 0
     828:	0c 94 26 42 	jmp	0x844c	; 0x844c <_exit>

0000082c <transmitCallback1>:
nrk_time_t newtime;
nrk_time_t timeout;

//*********************Making a callback function***************************************

void transmitCallback1(ISA_QUEUE *entry , bool status){
     82c:	cf 92       	push	r12
     82e:	df 92       	push	r13
     830:	ef 92       	push	r14
     832:	ff 92       	push	r15
     834:	0f 93       	push	r16
     836:	1f 93       	push	r17
     838:	cf 93       	push	r28
     83a:	df 93       	push	r29
     83c:	6c 01       	movw	r12, r24
uint8_t length;
MESSAGE *message;
DLMO_DROUT *dRout;
	 	message = &tx_buf[PKT_DATA_START];
     83e:	5f ea       	ldi	r21, 0xAF	; 175
     840:	e5 2e       	mov	r14, r21
     842:	5a e0       	ldi	r21, 0x0A	; 10
     844:	f5 2e       	mov	r15, r21
	 	message->type = DUMMY_PAYLOAD;
     846:	81 e0       	ldi	r24, 0x01	; 1
     848:	80 93 af 0a 	sts	0x0AAF, r24
	  sprintf( &message->data,"node" );
     84c:	64 e3       	ldi	r22, 0x34	; 52
     84e:	72 e0       	ldi	r23, 0x02	; 2
     850:	c7 01       	movw	r24, r14
     852:	01 96       	adiw	r24, 0x01	; 1
     854:	0e 94 28 3f 	call	0x7e50	; 0x7e50 <strcpy>
	  length=strlen(&tx_buf[PKT_DATA_START])+PKT_DATA_START+2;
     858:	f7 01       	movw	r30, r14
     85a:	01 90       	ld	r0, Z+
     85c:	00 20       	and	r0, r0
     85e:	e9 f7       	brne	.-6      	; 0x85a <transmitCallback1+0x2e>
     860:	ee 19       	sub	r30, r14
     862:	e8 5f       	subi	r30, 0xF8	; 248
     864:	e6 01       	movw	r28, r12
     866:	8c 81       	ldd	r24, Y+4	; 0x04
     868:	06 e1       	ldi	r16, 0x16	; 22
     86a:	14 e0       	ldi	r17, 0x04	; 4
     86c:	29 ef       	ldi	r18, 0xF9	; 249
     86e:	3f ef       	ldi	r19, 0xFF	; 255
     870:	e2 0e       	add	r14, r18
     872:	f3 1e       	adc	r15, r19
     874:	97 01       	movw	r18, r14
     876:	4e 2f       	mov	r20, r30
     878:	6a 81       	ldd	r22, Y+2	; 0x02
     87a:	99 27       	eor	r25, r25
     87c:	0e 94 23 14 	call	0x2846	; 0x2846 <sendPacket>
	  sendPacket(entry->tx_buf[DEST_INDEX],dRout->GraphId, length, tx_buf, transmitCallback1);
	  	isaFreePacket(entry);
     880:	c6 01       	movw	r24, r12
     882:	0e 94 35 12 	call	0x246a	; 0x246a <isaFreePacket>
     886:	df 91       	pop	r29
     888:	cf 91       	pop	r28
     88a:	1f 91       	pop	r17
     88c:	0f 91       	pop	r16
     88e:	ff 90       	pop	r15
     890:	ef 90       	pop	r14
     892:	df 90       	pop	r13
     894:	cf 90       	pop	r12
     896:	08 95       	ret

00000898 <spiPatternSend>:
  nrk_init();

  nrk_led_clr(0);
  nrk_led_clr(1);
  nrk_led_clr(2);
  nrk_led_clr(3);
     898:	8c 98       	cbi	0x11, 4	; 17
     89a:	8c 9a       	sbi	0x11, 4	; 17
  nrk_time_set(0,0);
  
  isa_task_config();
  isa_set_channel_pattern(1);
     89c:	8e bd       	out	0x2e, r24	; 46
     89e:	0d b4       	in	r0, 0x2d	; 45
     8a0:	07 fe       	sbrs	r0, 7
     8a2:	fd cf       	rjmp	.-6      	; 0x89e <spiPatternSend+0x6>
  isa_init (ISA_REPEATER, MY_ID, MY_CLK_SRC_ID);//change
     8a4:	6e bd       	out	0x2e, r22	; 46
     8a6:	0d b4       	in	r0, 0x2d	; 45
     8a8:	07 fe       	sbrs	r0, 7
     8aa:	fd cf       	rjmp	.-6      	; 0x8a6 <spiPatternSend+0xe>
  
     8ac:	4e bd       	out	0x2e, r20	; 46
     8ae:	0d b4       	in	r0, 0x2d	; 45
     8b0:	07 fe       	sbrs	r0, 7
     8b2:	fd cf       	rjmp	.-6      	; 0x8ae <spiPatternSend+0x16>
  dlmoInit(); 	//Initialize the Data Link Management Object

  addNeighbor(1,0,0,0,true,0,0,0);
     8b4:	8d 9a       	sbi	0x11, 5	; 17
     8b6:	8d 98       	cbi	0x11, 5	; 17
     8b8:	08 95       	ret

000008ba <setMatrix>:
  addLink(9,7,0,1,0);
  addLink(10,8,0,1,0);
  addLink(11,9,0,1,0);
  addLink(12,0,0,8,0);//receive from 5
  addLink(13,0,0,8,0);//6
  addLink(14,0,0,8,0);//7
     8ba:	0f 93       	push	r16
     8bc:	1f 93       	push	r17
     8be:	cf 93       	push	r28
     8c0:	df 93       	push	r29
     8c2:	cd b7       	in	r28, 0x3d	; 61
     8c4:	de b7       	in	r29, 0x3e	; 62
     8c6:	28 97       	sbiw	r28, 0x08	; 8
     8c8:	0f b6       	in	r0, 0x3f	; 63
     8ca:	f8 94       	cli
     8cc:	de bf       	out	0x3e, r29	; 62
     8ce:	0f be       	out	0x3f, r0	; 63
     8d0:	cd bf       	out	0x3d, r28	; 61
  addLink(15,0,0,8,0);//8
  addLink(16,0,0,8,0);//9
  addLink(3,0,0,8,0);//1
  addLink(25,0,0,8,0);
     8d2:	80 91 1c 08 	lds	r24, 0x081C
     8d6:	88 23       	and	r24, r24
     8d8:	09 f4       	brne	.+2      	; 0x8dc <setMatrix+0x22>
     8da:	a3 c0       	rjmp	.+326    	; 0xa22 <setMatrix+0x168>
  addLink(27,0,0,8,0);//Ad
     8dc:	60 91 e1 1b 	lds	r22, 0x1BE1
     8e0:	70 91 e2 1b 	lds	r23, 0x1BE2
     8e4:	80 e7       	ldi	r24, 0x70	; 112
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>

     8ec:	80 91 1d 08 	lds	r24, 0x081D
     8f0:	83 30       	cpi	r24, 0x03	; 3
     8f2:	98 f5       	brcc	.+102    	; 0x95a <setMatrix+0xa0>

     8f4:	80 91 c3 0b 	lds	r24, 0x0BC3
     8f8:	99 27       	eor	r25, r25
     8fa:	0a e1       	ldi	r16, 0x1A	; 26
     8fc:	10 e0       	ldi	r17, 0x00	; 0
     8fe:	80 9f       	mul	r24, r16
     900:	a0 01       	movw	r20, r0
     902:	81 9f       	mul	r24, r17
     904:	50 0d       	add	r21, r0
     906:	90 9f       	mul	r25, r16
     908:	50 0d       	add	r21, r0
     90a:	11 24       	eor	r1, r1
     90c:	fa 01       	movw	r30, r20
     90e:	e7 5c       	subi	r30, 0xC7	; 199
     910:	fd 4f       	sbci	r31, 0xFD	; 253
     912:	81 8d       	ldd	r24, Z+25	; 0x19
     914:	99 27       	eor	r25, r25
     916:	9c 01       	movw	r18, r24
     918:	2f 5f       	subi	r18, 0xFF	; 255
     91a:	3f 4f       	sbci	r19, 0xFF	; 255
     91c:	d9 01       	movw	r26, r18
     91e:	aa 0f       	add	r26, r26
     920:	bb 1f       	adc	r27, r27
     922:	a2 0f       	add	r26, r18
     924:	b3 1f       	adc	r27, r19
     926:	a4 0f       	add	r26, r20
     928:	b5 1f       	adc	r27, r21
     92a:	a7 5c       	subi	r26, 0xC7	; 199
     92c:	bd 4f       	sbci	r27, 0xFD	; 253
     92e:	fc 01       	movw	r30, r24
     930:	ee 0f       	add	r30, r30
     932:	ff 1f       	adc	r31, r31
     934:	e8 0f       	add	r30, r24
     936:	f9 1f       	adc	r31, r25
     938:	e4 0f       	add	r30, r20
     93a:	f5 1f       	adc	r31, r21
     93c:	e7 5c       	subi	r30, 0xC7	; 199
     93e:	fd 4f       	sbci	r31, 0xFD	; 253
     940:	4c 91       	ld	r20, X
     942:	62 81       	ldd	r22, Z+2	; 0x02
     944:	81 81       	ldd	r24, Z+1	; 0x01
     946:	0e 94 4c 04 	call	0x898	; 0x898 <spiPatternSend>
  /*addLink(17,0,0,4,0);//transmit ad
     94a:	80 91 1d 08 	lds	r24, 0x081D
     94e:	8f 5f       	subi	r24, 0xFF	; 255
     950:	80 93 1d 08 	sts	0x081D, r24
  addLink(40,0,0,8,0);//receive ad
     954:	80 91 c3 0b 	lds	r24, 0x0BC3
     958:	2f c0       	rjmp	.+94     	; 0x9b8 <setMatrix+0xfe>
  addLink(18,0,0,8,0);
  addLink(19,0,0,8,0);
  addLink(20,0,0,8,0);
  addLink(21,0,0,8,0);

     95a:	80 91 c4 0b 	lds	r24, 0x0BC4
     95e:	99 27       	eor	r25, r25
     960:	0a e1       	ldi	r16, 0x1A	; 26
     962:	10 e0       	ldi	r17, 0x00	; 0
     964:	80 9f       	mul	r24, r16
     966:	a0 01       	movw	r20, r0
     968:	81 9f       	mul	r24, r17
     96a:	50 0d       	add	r21, r0
     96c:	90 9f       	mul	r25, r16
     96e:	50 0d       	add	r21, r0
     970:	11 24       	eor	r1, r1
     972:	fa 01       	movw	r30, r20
     974:	e7 5c       	subi	r30, 0xC7	; 199
     976:	fd 4f       	sbci	r31, 0xFD	; 253
     978:	81 8d       	ldd	r24, Z+25	; 0x19
     97a:	99 27       	eor	r25, r25
     97c:	9c 01       	movw	r18, r24
     97e:	2f 5f       	subi	r18, 0xFF	; 255
     980:	3f 4f       	sbci	r19, 0xFF	; 255
     982:	d9 01       	movw	r26, r18
     984:	aa 0f       	add	r26, r26
     986:	bb 1f       	adc	r27, r27
     988:	a2 0f       	add	r26, r18
     98a:	b3 1f       	adc	r27, r19
     98c:	a4 0f       	add	r26, r20
     98e:	b5 1f       	adc	r27, r21
     990:	a7 5c       	subi	r26, 0xC7	; 199
     992:	bd 4f       	sbci	r27, 0xFD	; 253
     994:	fc 01       	movw	r30, r24
     996:	ee 0f       	add	r30, r30
     998:	ff 1f       	adc	r31, r31
     99a:	e8 0f       	add	r30, r24
     99c:	f9 1f       	adc	r31, r25
     99e:	e4 0f       	add	r30, r20
     9a0:	f5 1f       	adc	r31, r21
     9a2:	e7 5c       	subi	r30, 0xC7	; 199
     9a4:	fd 4f       	sbci	r31, 0xFD	; 253
     9a6:	4c 91       	ld	r20, X
     9a8:	62 81       	ldd	r22, Z+2	; 0x02
     9aa:	81 81       	ldd	r24, Z+1	; 0x01
     9ac:	0e 94 4c 04 	call	0x898	; 0x898 <spiPatternSend>
  addLink(41,0,0,8,0);//receive from 1
     9b0:	10 92 1d 08 	sts	0x081D, r1
  addLink(42,1,0,1,0);//transmit to 1
     9b4:	80 91 c4 0b 	lds	r24, 0x0BC4
     9b8:	99 27       	eor	r25, r25
     9ba:	80 9f       	mul	r24, r16
     9bc:	f0 01       	movw	r30, r0
     9be:	81 9f       	mul	r24, r17
     9c0:	f0 0d       	add	r31, r0
     9c2:	90 9f       	mul	r25, r16
     9c4:	f0 0d       	add	r31, r0
     9c6:	11 24       	eor	r1, r1
     9c8:	e7 5c       	subi	r30, 0xC7	; 199
     9ca:	fd 4f       	sbci	r31, 0xFD	; 253
     9cc:	81 8d       	ldd	r24, Z+25	; 0x19
     9ce:	8f 5f       	subi	r24, 0xFF	; 255
     9d0:	81 8f       	std	Z+25, r24	; 0x19
  addGraph(1,1,4,0,0);//graph
     9d2:	90 81       	ld	r25, Z
     9d4:	89 17       	cp	r24, r25
     9d6:	08 f0       	brcs	.+2      	; 0x9da <setMatrix+0x120>
     9d8:	11 8e       	std	Z+25, r1	; 0x19
  addLink(5,4,1,1,2);//transmit to 4
  addLink(6,0,0,8,0);//receive from 4*/
     9da:	ce 01       	movw	r24, r28
     9dc:	01 96       	adiw	r24, 0x01	; 1
     9de:	0e 94 a6 35 	call	0x6b4c	; 0x6b4c <nrk_time_get>
  //addLink(26,0,0,4,0);
     9e2:	89 81       	ldd	r24, Y+1	; 0x01
     9e4:	9a 81       	ldd	r25, Y+2	; 0x02
     9e6:	ab 81       	ldd	r26, Y+3	; 0x03
     9e8:	bc 81       	ldd	r27, Y+4	; 0x04
     9ea:	20 91 bb 0b 	lds	r18, 0x0BBB
     9ee:	30 91 bc 0b 	lds	r19, 0x0BBC
     9f2:	40 91 bd 0b 	lds	r20, 0x0BBD
     9f6:	50 91 be 0b 	lds	r21, 0x0BBE
     9fa:	82 1b       	sub	r24, r18
     9fc:	93 0b       	sbc	r25, r19
     9fe:	a4 0b       	sbc	r26, r20
     a00:	b5 0b       	sbc	r27, r21
     a02:	05 97       	sbiw	r24, 0x05	; 5
     a04:	a1 05       	cpc	r26, r1
     a06:	b1 05       	cpc	r27, r1
     a08:	20 f0       	brcs	.+8      	; 0xa12 <setMatrix+0x158>

     a0a:	8c 98       	cbi	0x11, 4	; 17
     a0c:	8c 9a       	sbi	0x11, 4	; 17
 /* addLink(7,5,0,1,0);
     a0e:	10 92 1c 08 	sts	0x081C, r1
  addLink(8,6,0,1,0);
  addLink(9,7,0,1,0);
     a12:	60 91 e1 1b 	lds	r22, 0x1BE1
     a16:	70 91 e2 1b 	lds	r23, 0x1BE2
     a1a:	81 e7       	ldi	r24, 0x71	; 113
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
     a22:	28 96       	adiw	r28, 0x08	; 8
     a24:	0f b6       	in	r0, 0x3f	; 63
     a26:	f8 94       	cli
     a28:	de bf       	out	0x3e, r29	; 62
     a2a:	0f be       	out	0x3f, r0	; 63
     a2c:	cd bf       	out	0x3d, r28	; 61
     a2e:	df 91       	pop	r29
     a30:	cf 91       	pop	r28
     a32:	1f 91       	pop	r17
     a34:	0f 91       	pop	r16
     a36:	08 95       	ret

00000a38 <setNewDisplay>:
  addNeighbor(1,0,0,0,true,0,0,0);
  addNeighbor(5,0,0,0,false,0,0,0);
  addNeighbor(6,0,0,0,false,0,0,0);
  addNeighbor(7,0,0,0,false,0,0,0);
  addNeighbor(8,0,0,0,false,0,0,0);
  addNeighbor(9,0,0,0,false,0,0,0);
     a38:	98 2f       	mov	r25, r24

  addLink(26,0,0,4,0);//ad
  addLink(4,1,0,1,0);
  addLink(7,5,0,1,0);
     a3a:	69 30       	cpi	r22, 0x09	; 9
     a3c:	10 f4       	brcc	.+4      	; 0xa42 <setNewDisplay+0xa>
     a3e:	60 93 c4 0b 	sts	0x0BC4, r22
  addLink(8,6,0,1,0);
     a42:	89 2f       	mov	r24, r25
     a44:	89 50       	subi	r24, 0x09	; 9
     a46:	85 30       	cpi	r24, 0x05	; 5
     a48:	10 f4       	brcc	.+4      	; 0xa4e <setNewDisplay+0x16>
     a4a:	90 93 c3 0b 	sts	0x0BC3, r25
  addLink(9,7,0,1,0);
     a4e:	8b eb       	ldi	r24, 0xBB	; 187
     a50:	9b e0       	ldi	r25, 0x0B	; 11
     a52:	0e 94 a6 35 	call	0x6b4c	; 0x6b4c <nrk_time_get>
  addLink(10,8,0,1,0);
     a56:	81 e0       	ldi	r24, 0x01	; 1
     a58:	80 93 1c 08 	sts	0x081C, r24
     a5c:	08 95       	ret

00000a5e <config_child_list>:
  addLink(16,0,0,8,0);
  addLink(3,0,0,8,0);
  */

  //addGraph(1,3,5,3,4);
 // addLink(2,1,1,1,0);//transmitting on slot 2
     a5e:	21 e0       	ldi	r18, 0x01	; 1
     a60:	30 e0       	ldi	r19, 0x00	; 0
     a62:	40 e0       	ldi	r20, 0x00	; 0
     a64:	50 e0       	ldi	r21, 0x00	; 0
     a66:	04 c0       	rjmp	.+8      	; 0xa70 <config_child_list+0x12>
     a68:	22 0f       	add	r18, r18
     a6a:	33 1f       	adc	r19, r19
     a6c:	44 1f       	adc	r20, r20
     a6e:	55 1f       	adc	r21, r21
     a70:	8a 95       	dec	r24
     a72:	d2 f7       	brpl	.-12     	; 0xa68 <config_child_list+0xa>
     a74:	80 91 2b 08 	lds	r24, 0x082B
     a78:	90 91 2c 08 	lds	r25, 0x082C
     a7c:	a0 91 2d 08 	lds	r26, 0x082D
     a80:	b0 91 2e 08 	lds	r27, 0x082E
     a84:	82 2b       	or	r24, r18
     a86:	93 2b       	or	r25, r19
     a88:	a4 2b       	or	r26, r20
     a8a:	b5 2b       	or	r27, r21
     a8c:	80 93 2b 08 	sts	0x082B, r24
     a90:	90 93 2c 08 	sts	0x082C, r25
     a94:	a0 93 2d 08 	sts	0x082D, r26
     a98:	b0 93 2e 08 	sts	0x082E, r27
     a9c:	08 95       	ret

00000a9e <isa_get_channel>:
  
  return 0;
}


void Task1()
     a9e:	80 91 4b 08 	lds	r24, 0x084B
{

     aa2:	99 27       	eor	r25, r25
     aa4:	08 95       	ret

00000aa6 <isa_set_channel_pattern>:
  uint8_t j, i;
  uint8_t length,slot;
  uint8_t *local_rx_buf;
  uint32_t Score = 0;
     aa6:	81 30       	cpi	r24, 0x01	; 1
     aa8:	19 f0       	breq	.+6      	; 0xab0 <isa_set_channel_pattern+0xa>
     aaa:	83 30       	cpi	r24, 0x03	; 3
     aac:	d9 f5       	brne	.+118    	; 0xb24 <isa_set_channel_pattern+0x7e>
     aae:	31 c0       	rjmp	.+98     	; 0xb12 <isa_set_channel_pattern+0x6c>
  int8_t rssi;
  uint8_t cnt=0;
  //uint8_t tx[3]={2,15,16};
     ab0:	83 e1       	ldi	r24, 0x13	; 19
     ab2:	80 93 26 0c 	sts	0x0C26, r24
  //uint8_t rx[3]={3,18,19};
     ab6:	8c e0       	ldi	r24, 0x0C	; 12
     ab8:	80 93 27 0c 	sts	0x0C27, r24
  //uint8_t my_tx_slot[4];
     abc:	84 e1       	ldi	r24, 0x14	; 20
     abe:	80 93 28 0c 	sts	0x0C28, r24

     ac2:	88 e1       	ldi	r24, 0x18	; 24
     ac4:	80 93 29 0c 	sts	0x0C29, r24

     ac8:	80 e1       	ldi	r24, 0x10	; 16
     aca:	80 93 2a 0c 	sts	0x0C2A, r24
  char c = -1;
     ace:	87 e1       	ldi	r24, 0x17	; 23
     ad0:	80 93 2b 0c 	sts	0x0C2B, r24
  nrk_sig_t uart_rx_signal;
     ad4:	82 e1       	ldi	r24, 0x12	; 18
     ad6:	80 93 2c 0c 	sts	0x0C2C, r24
  uint8_t finished = 0;
     ada:	89 e1       	ldi	r24, 0x19	; 25
     adc:	80 93 2d 0c 	sts	0x0C2D, r24

     ae0:	8e e0       	ldi	r24, 0x0E	; 14
     ae2:	80 93 2e 0c 	sts	0x0C2E, r24
  printf( "Task1 PID=%d\r\n",nrk_get_pid());
     ae6:	85 e1       	ldi	r24, 0x15	; 21
     ae8:	80 93 2f 0c 	sts	0x0C2F, r24
  
     aec:	8b e0       	ldi	r24, 0x0B	; 11
     aee:	80 93 30 0c 	sts	0x0C30, r24
  nrk_led_set(RED_LED);
     af2:	8f e0       	ldi	r24, 0x0F	; 15
     af4:	80 93 31 0c 	sts	0x0C31, r24
  
     af8:	86 e1       	ldi	r24, 0x16	; 22
     afa:	80 93 32 0c 	sts	0x0C32, r24

     afe:	81 e1       	ldi	r24, 0x11	; 17
     b00:	80 93 33 0c 	sts	0x0C33, r24

     b04:	8d e0       	ldi	r24, 0x0D	; 13
     b06:	80 93 34 0c 	sts	0x0C34, r24

     b0a:	8a e1       	ldi	r24, 0x1A	; 26
     b0c:	80 93 35 0c 	sts	0x0C35, r24
     b10:	08 95       	ret
 // isa_set_schedule(ISA_REPEATER, MY_CLK_SRC_ID);

 // isa_set_channel(MY_CHANNEL);
     b12:	8f e0       	ldi	r24, 0x0F	; 15
     b14:	80 93 21 0c 	sts	0x0C21, r24

     b18:	84 e1       	ldi	r24, 0x14	; 20
     b1a:	80 93 22 0c 	sts	0x0C22, r24
  isa_start();
     b1e:	89 e1       	ldi	r24, 0x19	; 25
     b20:	80 93 23 0c 	sts	0x0C23, r24
     b24:	08 95       	ret

00000b26 <isa_ready>:
  while(!isa_ready())  nrk_wait_until_next_period(); 

  /*while(isa_join_ready()!=1) nrk_wait_until_next_period();
    
    for(i=0;i<4;i++){  // set tx slots
	if(tx_slot_from_join[i]==0)
     b26:	80 91 a7 0a 	lds	r24, 0x0AA7
     b2a:	81 30       	cpi	r24, 0x01	; 1
     b2c:	19 f4       	brne	.+6      	; 0xb34 <isa_ready+0xe>
     b2e:	81 e0       	ldi	r24, 0x01	; 1
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	08 95       	ret
     b34:	8f ef       	ldi	r24, 0xFF	; 255
     b36:	9f ef       	ldi	r25, 0xFF	; 255
		break;
	else
	    my_tx_slot[i]=tx_slot_from_join[i];
    }	   
     b38:	08 95       	ret

00000b3a <isa_rx_pkt_set_buffer>:
  printf("MAIN_TX:%d\r\n",my_tx_slot[0]);*/

  printf("isa start!\n\r");

  //i=0;
     b3a:	66 23       	and	r22, r22
     b3c:	59 f0       	breq	.+22     	; 0xb54 <isa_rx_pkt_set_buffer+0x1a>
     b3e:	00 97       	sbiw	r24, 0x00	; 0
     b40:	49 f0       	breq	.+18     	; 0xb54 <isa_rx_pkt_set_buffer+0x1a>
  while(1){
     b42:	90 93 3e 08 	sts	0x083E, r25
     b46:	80 93 3d 08 	sts	0x083D, r24

     b4a:	60 93 3c 08 	sts	0x083C, r22
     b4e:	81 e0       	ldi	r24, 0x01	; 1
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	08 95       	ret

//Spit out log info
     b54:	8f ef       	ldi	r24, 0xFF	; 255
     b56:	9f ef       	ldi	r25, 0xFF	; 255

     b58:	08 95       	ret

00000b5a <isa_start>:
     b5a:	82 e0       	ldi	r24, 0x02	; 2
     b5c:	80 93 a7 0a 	sts	0x0AA7, r24
     b60:	08 95       	ret

00000b62 <configDHDR>:
     b62:	fc 01       	movw	r30, r24
     b64:	24 81       	ldd	r18, Z+4	; 0x04
     b66:	21 30       	cpi	r18, 0x01	; 1
     b68:	11 f4       	brne	.+4      	; 0xb6e <configDHDR+0xc>
     b6a:	81 e8       	ldi	r24, 0x81	; 129
     b6c:	01 c0       	rjmp	.+2      	; 0xb70 <configDHDR+0xe>
     b6e:	81 e0       	ldi	r24, 0x01	; 1
     b70:	98 2f       	mov	r25, r24
     b72:	90 66       	ori	r25, 0x60	; 96
     b74:	24 30       	cpi	r18, 0x04	; 4
     b76:	11 f4       	brne	.+4      	; 0xb7c <configDHDR+0x1a>
     b78:	98 2f       	mov	r25, r24
     b7a:	90 67       	ori	r25, 0x70	; 112
     b7c:	00 84       	ldd	r0, Z+8	; 0x08
     b7e:	f1 85       	ldd	r31, Z+9	; 0x09
     b80:	e0 2d       	mov	r30, r0
     b82:	85 85       	ldd	r24, Z+13	; 0x0d
     b84:	87 fd       	sbrc	r24, 7
     b86:	94 60       	ori	r25, 0x04	; 4
     b88:	89 2f       	mov	r24, r25
     b8a:	99 27       	eor	r25, r25
     b8c:	87 fd       	sbrc	r24, 7
     b8e:	90 95       	com	r25
     b90:	08 95       	ret

00000b92 <configDHR>:
     b92:	88 23       	and	r24, r24
     b94:	11 f0       	breq	.+4      	; 0xb9a <configDHR+0x8>
     b96:	83 e8       	ldi	r24, 0x83	; 131
     b98:	01 c0       	rjmp	.+2      	; 0xb9c <configDHR+0xa>
     b9a:	83 e0       	ldi	r24, 0x03	; 3
     b9c:	62 95       	swap	r22
     b9e:	60 7f       	andi	r22, 0xF0	; 240
     ba0:	86 2b       	or	r24, r22
     ba2:	99 27       	eor	r25, r25
     ba4:	87 fd       	sbrc	r24, 7
     ba6:	90 95       	com	r25
     ba8:	08 95       	ret

00000baa <configAdvDAUX>:
     baa:	8f 92       	push	r8
     bac:	af 92       	push	r10
     bae:	cf 92       	push	r12
     bb0:	ef 92       	push	r14
     bb2:	0f 93       	push	r16
     bb4:	cf 93       	push	r28
     bb6:	df 93       	push	r29
     bb8:	cd b7       	in	r28, 0x3d	; 61
     bba:	de b7       	in	r29, 0x3e	; 62
     bbc:	10 92 04 0c 	sts	0x0C04, r1
     bc0:	9a e0       	ldi	r25, 0x0A	; 10
     bc2:	90 93 0b 0c 	sts	0x0C0B, r25
     bc6:	10 92 0c 0c 	sts	0x0C0C, r1
     bca:	80 93 0d 0c 	sts	0x0C0D, r24
     bce:	60 93 0e 0c 	sts	0x0C0E, r22
     bd2:	40 93 0f 0c 	sts	0x0C0F, r20
     bd6:	10 92 10 0c 	sts	0x0C10, r1
     bda:	20 93 17 0c 	sts	0x0C17, r18
     bde:	00 93 18 0c 	sts	0x0C18, r16
     be2:	e0 92 19 0c 	sts	0x0C19, r14
     be6:	c0 92 1a 0c 	sts	0x0C1A, r12
     bea:	a0 92 1b 0c 	sts	0x0C1B, r10
     bee:	80 92 1c 0c 	sts	0x0C1C, r8
     bf2:	8a 85       	ldd	r24, Y+10	; 0x0a
     bf4:	80 93 1d 0c 	sts	0x0C1D, r24
     bf8:	8b 85       	ldd	r24, Y+11	; 0x0b
     bfa:	80 93 1e 0c 	sts	0x0C1E, r24
     bfe:	df 91       	pop	r29
     c00:	cf 91       	pop	r28
     c02:	0f 91       	pop	r16
     c04:	ef 90       	pop	r14
     c06:	cf 90       	pop	r12
     c08:	af 90       	pop	r10
     c0a:	8f 90       	pop	r8
     c0c:	08 95       	ret

00000c0e <isa_rx_pkt_check>:
     c0e:	80 91 2d 0b 	lds	r24, 0x0B2D
     c12:	99 27       	eor	r25, r25
     c14:	87 fd       	sbrc	r24, 7
     c16:	90 95       	com	r25
     c18:	08 95       	ret

00000c1a <isa_rx_pkt_release>:
     c1a:	10 92 2d 0b 	sts	0x0B2D, r1
     c1e:	10 92 2e 0b 	sts	0x0B2E, r1
     c22:	10 92 2f 0b 	sts	0x0B2F, r1
     c26:	10 92 30 0b 	sts	0x0B30, r1
     c2a:	08 95       	ret

00000c2c <isa_join_ready>:
     c2c:	80 91 22 09 	lds	r24, 0x0922
     c30:	81 30       	cpi	r24, 0x01	; 1
     c32:	19 f4       	brne	.+6      	; 0xc3a <isa_join_ready+0xe>
     c34:	81 e0       	ldi	r24, 0x01	; 1
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	08 95       	ret
     c3a:	8f ef       	ldi	r24, 0xFF	; 255
     c3c:	9f ef       	ldi	r25, 0xFF	; 255
     c3e:	08 95       	ret

00000c40 <isa_task_config>:
     c40:	0f 93       	push	r16
     c42:	1f 93       	push	r17
     c44:	88 e7       	ldi	r24, 0x78	; 120
     c46:	9c e0       	ldi	r25, 0x0C	; 12
     c48:	90 93 5f 08 	sts	0x085F, r25
     c4c:	80 93 5e 08 	sts	0x085E, r24
     c50:	09 e5       	ldi	r16, 0x59	; 89
     c52:	18 e0       	ldi	r17, 0x08	; 8
     c54:	40 e8       	ldi	r20, 0x80	; 128
     c56:	50 e0       	ldi	r21, 0x00	; 0
     c58:	6f e9       	ldi	r22, 0x9F	; 159
     c5a:	78 e0       	ldi	r23, 0x08	; 8
     c5c:	c8 01       	movw	r24, r16
     c5e:	0e 94 1f 3d 	call	0x7a3e	; 0x7a3e <nrk_task_set_stk>
     c62:	84 e1       	ldi	r24, 0x14	; 20
     c64:	80 93 61 08 	sts	0x0861, r24
     c68:	81 e0       	ldi	r24, 0x01	; 1
     c6a:	80 93 60 08 	sts	0x0860, r24
     c6e:	80 93 62 08 	sts	0x0862, r24
     c72:	80 93 63 08 	sts	0x0863, r24
     c76:	10 92 64 08 	sts	0x0864, r1
     c7a:	10 92 65 08 	sts	0x0865, r1
     c7e:	10 92 66 08 	sts	0x0866, r1
     c82:	10 92 67 08 	sts	0x0867, r1
     c86:	80 e8       	ldi	r24, 0x80	; 128
     c88:	96 e9       	ldi	r25, 0x96	; 150
     c8a:	a8 e9       	ldi	r26, 0x98	; 152
     c8c:	b0 e0       	ldi	r27, 0x00	; 0
     c8e:	80 93 68 08 	sts	0x0868, r24
     c92:	90 93 69 08 	sts	0x0869, r25
     c96:	a0 93 6a 08 	sts	0x086A, r26
     c9a:	b0 93 6b 08 	sts	0x086B, r27
     c9e:	10 92 6c 08 	sts	0x086C, r1
     ca2:	10 92 6d 08 	sts	0x086D, r1
     ca6:	10 92 6e 08 	sts	0x086E, r1
     caa:	10 92 6f 08 	sts	0x086F, r1
     cae:	10 92 70 08 	sts	0x0870, r1
     cb2:	10 92 71 08 	sts	0x0871, r1
     cb6:	10 92 72 08 	sts	0x0872, r1
     cba:	10 92 73 08 	sts	0x0873, r1
     cbe:	10 92 74 08 	sts	0x0874, r1
     cc2:	10 92 75 08 	sts	0x0875, r1
     cc6:	10 92 76 08 	sts	0x0876, r1
     cca:	10 92 77 08 	sts	0x0877, r1
     cce:	10 92 78 08 	sts	0x0878, r1
     cd2:	10 92 79 08 	sts	0x0879, r1
     cd6:	10 92 7a 08 	sts	0x087A, r1
     cda:	10 92 7b 08 	sts	0x087B, r1
     cde:	c8 01       	movw	r24, r16
     ce0:	0e 94 cb 32 	call	0x6596	; 0x6596 <nrk_activate_task>
     ce4:	1f 91       	pop	r17
     ce6:	0f 91       	pop	r16
     ce8:	08 95       	ret

00000cea <_isa_init_sync>:
     cea:	cf 92       	push	r12
     cec:	df 92       	push	r13
     cee:	ef 92       	push	r14
     cf0:	ff 92       	push	r15
     cf2:	0f 93       	push	r16
     cf4:	1f 93       	push	r17
     cf6:	cf 93       	push	r28
     cf8:	df 93       	push	r29
     cfa:	ee 24       	eor	r14, r14
     cfc:	ff 24       	eor	r15, r15
     cfe:	88 e3       	ldi	r24, 0x38	; 56
     d00:	c8 2e       	mov	r12, r24
     d02:	88 e0       	ldi	r24, 0x08	; 8
     d04:	d8 2e       	mov	r13, r24
     d06:	e0 91 3d 08 	lds	r30, 0x083D
     d0a:	f0 91 3e 08 	lds	r31, 0x083E
     d0e:	81 e0       	ldi	r24, 0x01	; 1
     d10:	80 83       	st	Z, r24
     d12:	60 91 4b 08 	lds	r22, 0x084B
     d16:	c6 01       	movw	r24, r12
     d18:	0e 94 df 21 	call	0x43be	; 0x43be <rf_set_rx>
     d1c:	0e 94 06 1d 	call	0x3a0c	; 0x3a0c <rf_polling_rx_on>
     d20:	10 92 01 0c 	sts	0x0C01, r1
     d24:	8a ef       	ldi	r24, 0xFA	; 250
     d26:	0e 94 83 39 	call	0x7306	; 0x7306 <_nrk_set_next_wakeup>
     d2a:	80 e0       	ldi	r24, 0x00	; 0
     d2c:	0e 94 68 39 	call	0x72d0	; 0x72d0 <_nrk_os_timer_set>
     d30:	00 e0       	ldi	r16, 0x00	; 0
     d32:	12 c0       	rjmp	.+36     	; 0xd58 <_isa_init_sync+0x6e>
     d34:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
     d38:	08 17       	cp	r16, r24
     d3a:	71 f0       	breq	.+28     	; 0xd58 <_isa_init_sync+0x6e>
     d3c:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
     d40:	08 2f       	mov	r16, r24
     d42:	08 94       	sec
     d44:	e1 1c       	adc	r14, r1
     d46:	f1 1c       	adc	r15, r1
     d48:	81 e1       	ldi	r24, 0x11	; 17
     d4a:	e8 16       	cp	r14, r24
     d4c:	87 e2       	ldi	r24, 0x27	; 39
     d4e:	f8 06       	cpc	r15, r24
     d50:	18 f0       	brcs	.+6      	; 0xd58 <_isa_init_sync+0x6e>
     d52:	ee 24       	eor	r14, r14
     d54:	ff 24       	eor	r15, r15
     d56:	05 c0       	rjmp	.+10     	; 0xd62 <_isa_init_sync+0x78>
     d58:	0e 94 94 19 	call	0x3328	; 0x3328 <rf_rx_check_sfd>
     d5c:	18 2f       	mov	r17, r24
     d5e:	88 23       	and	r24, r24
     d60:	49 f3       	breq	.-46     	; 0xd34 <_isa_init_sync+0x4a>
     d62:	0e 94 3a 39 	call	0x7274	; 0x7274 <_nrk_high_speed_timer_reset>
     d66:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
     d6a:	c8 2f       	mov	r28, r24
     d6c:	dd 27       	eor	r29, r29
     d6e:	24 96       	adiw	r28, 0x04	; 4
     d70:	11 23       	and	r17, r17
     d72:	71 f0       	breq	.+28     	; 0xd90 <_isa_init_sync+0xa6>
     d74:	06 c0       	rjmp	.+12     	; 0xd82 <_isa_init_sync+0x98>
     d76:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
     d7a:	99 27       	eor	r25, r25
     d7c:	c8 17       	cp	r28, r24
     d7e:	d9 07       	cpc	r29, r25
     d80:	38 f0       	brcs	.+14     	; 0xd90 <_isa_init_sync+0xa6>
     d82:	60 e8       	ldi	r22, 0x80	; 128
     d84:	80 e0       	ldi	r24, 0x00	; 0
     d86:	0e 94 79 1a 	call	0x34f2	; 0x34f2 <rf_polling_rx_packet>
     d8a:	18 2f       	mov	r17, r24
     d8c:	88 23       	and	r24, r24
     d8e:	99 f3       	breq	.-26     	; 0xd76 <_isa_init_sync+0x8c>
     d90:	0e 94 ee 1c 	call	0x39dc	; 0x39dc <rf_rx_off>
     d94:	11 30       	cpi	r17, 0x01	; 1
     d96:	09 f0       	breq	.+2      	; 0xd9a <_isa_init_sync+0xb0>
     d98:	b6 cf       	rjmp	.-148    	; 0xd06 <_isa_init_sync+0x1c>
     d9a:	e0 91 3d 08 	lds	r30, 0x083D
     d9e:	f0 91 3e 08 	lds	r31, 0x083E
     da2:	20 81       	ld	r18, Z
     da4:	92 81       	ldd	r25, Z+2	; 0x02
     da6:	80 91 21 09 	lds	r24, 0x0921
     daa:	98 17       	cp	r25, r24
     dac:	09 f0       	breq	.+2      	; 0xdb0 <_isa_init_sync+0xc6>
     dae:	ab cf       	rjmp	.-170    	; 0xd06 <_isa_init_sync+0x1c>
     db0:	24 ff       	sbrs	r18, 4
     db2:	a9 cf       	rjmp	.-174    	; 0xd06 <_isa_init_sync+0x1c>
     db4:	81 e0       	ldi	r24, 0x01	; 1
     db6:	90 e0       	ldi	r25, 0x00	; 0
     db8:	a0 e0       	ldi	r26, 0x00	; 0
     dba:	b0 e0       	ldi	r27, 0x00	; 0
     dbc:	80 93 2d 0b 	sts	0x0B2D, r24
     dc0:	90 93 2e 0b 	sts	0x0B2E, r25
     dc4:	a0 93 2f 0b 	sts	0x0B2F, r26
     dc8:	b0 93 30 0b 	sts	0x0B30, r27
     dcc:	81 81       	ldd	r24, Z+1	; 0x01
     dce:	99 27       	eor	r25, r25
     dd0:	90 93 d5 0b 	sts	0x0BD5, r25
     dd4:	80 93 d4 0b 	sts	0x0BD4, r24
     dd8:	82 e0       	ldi	r24, 0x02	; 2
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	0e 94 f4 26 	call	0x4de8	; 0x4de8 <nrk_led_toggle>
     de0:	60 91 e1 1b 	lds	r22, 0x1BE1
     de4:	70 91 e2 1b 	lds	r23, 0x1BE2
     de8:	89 e6       	ldi	r24, 0x69	; 105
     dea:	90 e0       	ldi	r25, 0x00	; 0
     dec:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
     df0:	10 93 01 0c 	sts	0x0C01, r17
     df4:	10 92 2d 0b 	sts	0x0B2D, r1
     df8:	10 92 2e 0b 	sts	0x0B2E, r1
     dfc:	10 92 2f 0b 	sts	0x0B2F, r1
     e00:	10 92 30 0b 	sts	0x0B30, r1
     e04:	0e 94 5d 39 	call	0x72ba	; 0x72ba <_nrk_os_timer_stop>
     e08:	0e 94 74 39 	call	0x72e8	; 0x72e8 <_nrk_os_timer_reset>
     e0c:	8a e0       	ldi	r24, 0x0A	; 10
     e0e:	0e 94 83 39 	call	0x7306	; 0x7306 <_nrk_set_next_wakeup>
     e12:	87 e0       	ldi	r24, 0x07	; 7
     e14:	0e 94 68 39 	call	0x72d0	; 0x72d0 <_nrk_os_timer_set>
     e18:	61 e1       	ldi	r22, 0x11	; 17
     e1a:	70 e8       	ldi	r23, 0x80	; 128
     e1c:	80 e0       	ldi	r24, 0x00	; 0
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	0e 94 77 3a 	call	0x74ee	; 0x74ee <nrk_high_speed_timer_wait>
     e24:	0e 94 6b 39 	call	0x72d6	; 0x72d6 <_nrk_os_timer_start>
     e28:	e0 91 ba 1b 	lds	r30, 0x1BBA
     e2c:	f0 91 bb 1b 	lds	r31, 0x1BBB
     e30:	8a e0       	ldi	r24, 0x0A	; 10
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	96 8b       	std	Z+22, r25	; 0x16
     e36:	85 8b       	std	Z+21, r24	; 0x15
     e38:	80 91 01 0c 	lds	r24, 0x0C01
     e3c:	99 27       	eor	r25, r25
     e3e:	df 91       	pop	r29
     e40:	cf 91       	pop	r28
     e42:	1f 91       	pop	r17
     e44:	0f 91       	pop	r16
     e46:	ff 90       	pop	r15
     e48:	ef 90       	pop	r14
     e4a:	df 90       	pop	r13
     e4c:	cf 90       	pop	r12
     e4e:	08 95       	ret

00000e50 <_isa_tx>:
     e50:	bf 92       	push	r11
     e52:	cf 92       	push	r12
     e54:	df 92       	push	r13
     e56:	ef 92       	push	r14
     e58:	ff 92       	push	r15
     e5a:	0f 93       	push	r16
     e5c:	1f 93       	push	r17
     e5e:	cf 93       	push	r28
     e60:	df 93       	push	r29
     e62:	cd b7       	in	r28, 0x3d	; 61
     e64:	de b7       	in	r29, 0x3e	; 62
     e66:	27 97       	sbiw	r28, 0x07	; 7
     e68:	0f b6       	in	r0, 0x3f	; 63
     e6a:	f8 94       	cli
     e6c:	de bf       	out	0x3e, r29	; 62
     e6e:	0f be       	out	0x3f, r0	; 63
     e70:	cd bf       	out	0x3d, r28	; 61
     e72:	7c 01       	movw	r14, r24
     e74:	6b 01       	movw	r12, r22
     e76:	81 e0       	ldi	r24, 0x01	; 1
     e78:	80 93 46 08 	sts	0x0846, r24
     e7c:	f7 01       	movw	r30, r14
     e7e:	84 81       	ldd	r24, Z+4	; 0x04
     e80:	81 30       	cpi	r24, 0x01	; 1
     e82:	91 f5       	brne	.+100    	; 0xee8 <_isa_tx+0x98>
     e84:	c7 01       	movw	r24, r14
     e86:	0e 94 55 10 	call	0x20aa	; 0x20aa <getHighPriorityEntry>
     e8a:	00 97       	sbiw	r24, 0x00	; 0
     e8c:	09 f4       	brne	.+2      	; 0xe90 <_isa_tx+0x40>
     e8e:	03 c2       	rjmp	.+1030   	; 0x1296 <_isa_tx+0x446>
     e90:	8c 01       	movw	r16, r24
     e92:	c0 92 d0 0b 	sts	0x0BD0, r12
     e96:	0f 5f       	subi	r16, 0xFF	; 255
     e98:	1f 4f       	sbci	r17, 0xFF	; 255
     e9a:	10 93 45 08 	sts	0x0845, r17
     e9e:	00 93 44 08 	sts	0x0844, r16
     ea2:	f8 01       	movw	r30, r16
     ea4:	82 91       	ld	r24, -Z
     ea6:	8f 01       	movw	r16, r30
     ea8:	80 93 43 08 	sts	0x0843, r24
     eac:	c7 01       	movw	r24, r14
     eae:	0e 94 b1 05 	call	0xb62	; 0xb62 <configDHDR>
     eb2:	f8 2e       	mov	r15, r24
     eb4:	e0 91 44 08 	lds	r30, 0x0844
     eb8:	f0 91 45 08 	lds	r31, 0x0845
     ebc:	80 83       	st	Z, r24
     ebe:	e0 91 44 08 	lds	r30, 0x0844
     ec2:	f0 91 45 08 	lds	r31, 0x0845
     ec6:	87 81       	ldd	r24, Z+7	; 0x07
     ec8:	88 23       	and	r24, r24
     eca:	39 f0       	breq	.+14     	; 0xeda <_isa_tx+0x8a>
     ecc:	e0 91 44 08 	lds	r30, 0x0844
     ed0:	f0 91 45 08 	lds	r31, 0x0845
     ed4:	80 91 2f 08 	lds	r24, 0x082F
     ed8:	82 83       	std	Z+2, r24	; 0x02
     eda:	f8 01       	movw	r30, r16
     edc:	ec 57       	subi	r30, 0x7C	; 124
     ede:	ff 4f       	sbci	r31, 0xFF	; 255
     ee0:	80 81       	ld	r24, Z
     ee2:	8f 5f       	subi	r24, 0xFF	; 255
     ee4:	80 83       	st	Z, r24
     ee6:	2b c0       	rjmp	.+86     	; 0xf3e <_isa_tx+0xee>
     ee8:	84 30       	cpi	r24, 0x04	; 4
     eea:	49 f5       	brne	.+82     	; 0xf3e <_isa_tx+0xee>
     eec:	87 e3       	ldi	r24, 0x37	; 55
     eee:	9c e0       	ldi	r25, 0x0C	; 12
     ef0:	90 93 45 08 	sts	0x0845, r25
     ef4:	80 93 44 08 	sts	0x0844, r24
     ef8:	8b e1       	ldi	r24, 0x1B	; 27
     efa:	80 93 43 08 	sts	0x0843, r24
     efe:	c7 01       	movw	r24, r14
     f00:	0e 94 b1 05 	call	0xb62	; 0xb62 <configDHDR>
     f04:	f8 2e       	mov	r15, r24
     f06:	e0 91 44 08 	lds	r30, 0x0844
     f0a:	f0 91 45 08 	lds	r31, 0x0845
     f0e:	80 83       	st	Z, r24
     f10:	e0 91 44 08 	lds	r30, 0x0844
     f14:	f0 91 45 08 	lds	r31, 0x0845
     f18:	80 91 2f 08 	lds	r24, 0x082F
     f1c:	82 83       	std	Z+2, r24	; 0x02
     f1e:	e0 91 44 08 	lds	r30, 0x0844
     f22:	f0 91 45 08 	lds	r31, 0x0845
     f26:	80 91 d4 0b 	lds	r24, 0x0BD4
     f2a:	90 91 d5 0b 	lds	r25, 0x0BD5
     f2e:	81 83       	std	Z+1, r24	; 0x01
     f30:	e0 91 44 08 	lds	r30, 0x0844
     f34:	f0 91 45 08 	lds	r31, 0x0845
     f38:	e5 81       	ldd	r30, Z+5	; 0x05
     f3a:	ff 27       	eor	r31, r31
     f3c:	10 82       	st	Z, r1
     f3e:	0e 94 3a 39 	call	0x7274	; 0x7274 <_nrk_high_speed_timer_reset>
     f42:	60 e8       	ldi	r22, 0x80	; 128
     f44:	75 e2       	ldi	r23, 0x25	; 37
     f46:	80 e0       	ldi	r24, 0x00	; 0
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	0e 94 77 3a 	call	0x74ee	; 0x74ee <nrk_high_speed_timer_wait>
     f4e:	b0 90 a4 07 	lds	r11, 0x07A4
     f52:	8b 2d       	mov	r24, r11
     f54:	0e 94 78 23 	call	0x46f0	; 0x46f0 <nrk_gpio_set>
     f58:	40 91 4d 08 	lds	r20, 0x084D
     f5c:	50 91 4e 08 	lds	r21, 0x084E
     f60:	60 91 d1 0b 	lds	r22, 0x0BD1
     f64:	70 91 d2 0b 	lds	r23, 0x0BD2
     f68:	2d ef       	ldi	r18, 0xFD	; 253
     f6a:	3b e0       	ldi	r19, 0x0B	; 11
     f6c:	81 e4       	ldi	r24, 0x41	; 65
     f6e:	98 e0       	ldi	r25, 0x08	; 8
     f70:	0e 94 1c 1f 	call	0x3e38	; 0x3e38 <rf_tx_tdma_packet>
     f74:	88 23       	and	r24, r24
     f76:	f1 f0       	breq	.+60     	; 0xfb4 <_isa_tx+0x164>
     f78:	80 91 23 08 	lds	r24, 0x0823
     f7c:	90 91 24 08 	lds	r25, 0x0824
     f80:	01 96       	adiw	r24, 0x01	; 1
     f82:	90 93 24 08 	sts	0x0824, r25
     f86:	80 93 23 08 	sts	0x0823, r24
     f8a:	8b 2d       	mov	r24, r11
     f8c:	0e 94 fd 23 	call	0x47fa	; 0x47fa <nrk_gpio_clr>
     f90:	83 e0       	ldi	r24, 0x03	; 3
     f92:	90 e0       	ldi	r25, 0x00	; 0
     f94:	0e 94 f4 26 	call	0x4de8	; 0x4de8 <nrk_led_toggle>
     f98:	80 91 fd 0b 	lds	r24, 0x0BFD
     f9c:	90 91 fe 0b 	lds	r25, 0x0BFE
     fa0:	20 91 d1 0b 	lds	r18, 0x0BD1
     fa4:	30 91 d2 0b 	lds	r19, 0x0BD2
     fa8:	82 1b       	sub	r24, r18
     faa:	93 0b       	sbc	r25, r19
     fac:	90 93 cc 0b 	sts	0x0BCC, r25
     fb0:	80 93 cb 0b 	sts	0x0BCB, r24
     fb4:	80 91 d3 0b 	lds	r24, 0x0BD3
     fb8:	0e 94 55 2e 	call	0x5caa	; 0x5caa <nrk_event_signal>
     fbc:	f7 fe       	sbrs	r15, 7
     fbe:	6b c1       	rjmp	.+726    	; 0x1296 <_isa_tx+0x446>
     fc0:	0e 94 06 1d 	call	0x3a0c	; 0x3a0c <rf_polling_rx_on>
     fc4:	8b 2d       	mov	r24, r11
     fc6:	0e 94 78 23 	call	0x46f0	; 0x46f0 <nrk_gpio_set>
     fca:	0e 94 3a 39 	call	0x7274	; 0x7274 <_nrk_high_speed_timer_reset>
     fce:	60 e0       	ldi	r22, 0x00	; 0
     fd0:	70 e1       	ldi	r23, 0x10	; 16
     fd2:	80 e0       	ldi	r24, 0x00	; 0
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	0e 94 77 3a 	call	0x74ee	; 0x74ee <nrk_high_speed_timer_wait>
     fda:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
     fde:	89 83       	std	Y+1, r24	; 0x01
     fe0:	89 81       	ldd	r24, Y+1	; 0x01
     fe2:	8e 5f       	subi	r24, 0xFE	; 254
     fe4:	89 83       	std	Y+1, r24	; 0x01
     fe6:	4b c0       	rjmp	.+150    	; 0x107e <_isa_tx+0x22e>
     fe8:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
     fec:	99 81       	ldd	r25, Y+1	; 0x01
     fee:	98 17       	cp	r25, r24
     ff0:	08 f0       	brcs	.+2      	; 0xff4 <_isa_tx+0x1a4>
     ff2:	45 c0       	rjmp	.+138    	; 0x107e <_isa_tx+0x22e>
     ff4:	60 91 d0 0b 	lds	r22, 0x0BD0
     ff8:	86 2f       	mov	r24, r22
     ffa:	99 27       	eor	r25, r25
     ffc:	c8 16       	cp	r12, r24
     ffe:	d9 06       	cpc	r13, r25
    1000:	51 f4       	brne	.+20     	; 0x1016 <_isa_tx+0x1c6>
    1002:	80 91 ac 0c 	lds	r24, 0x0CAC
    1006:	90 91 ad 0c 	lds	r25, 0x0CAD
    100a:	49 96       	adiw	r24, 0x19	; 25
    100c:	90 93 ad 0c 	sts	0x0CAD, r25
    1010:	80 93 ac 0c 	sts	0x0CAC, r24
    1014:	14 c0       	rjmp	.+40     	; 0x103e <_isa_tx+0x1ee>
    1016:	8c 2d       	mov	r24, r12
    1018:	86 1b       	sub	r24, r22
    101a:	20 91 ac 0c 	lds	r18, 0x0CAC
    101e:	30 91 ad 0c 	lds	r19, 0x0CAD
    1022:	48 2f       	mov	r20, r24
    1024:	55 27       	eor	r21, r21
    1026:	47 fd       	sbrc	r20, 7
    1028:	50 95       	com	r21
    102a:	18 16       	cp	r1, r24
    102c:	14 f0       	brlt	.+4      	; 0x1032 <_isa_tx+0x1e2>
    102e:	27 5e       	subi	r18, 0xE7	; 231
    1030:	3f 4f       	sbci	r19, 0xFF	; 255
    1032:	24 0f       	add	r18, r20
    1034:	35 1f       	adc	r19, r21
    1036:	30 93 ad 0c 	sts	0x0CAD, r19
    103a:	20 93 ac 0c 	sts	0x0CAC, r18
    103e:	0e 94 ee 1c 	call	0x39dc	; 0x39dc <rf_rx_off>
    1042:	8b 2d       	mov	r24, r11
    1044:	0e 94 fd 23 	call	0x47fa	; 0x47fa <nrk_gpio_clr>
    1048:	60 91 e1 1b 	lds	r22, 0x1BE1
    104c:	70 91 e2 1b 	lds	r23, 0x1BE2
    1050:	83 e7       	ldi	r24, 0x73	; 115
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
    1058:	80 91 27 08 	lds	r24, 0x0827
    105c:	90 91 28 08 	lds	r25, 0x0828
    1060:	01 96       	adiw	r24, 0x01	; 1
    1062:	90 93 28 08 	sts	0x0828, r25
    1066:	80 93 27 08 	sts	0x0827, r24
    106a:	0c 57       	subi	r16, 0x7C	; 124
    106c:	1f 4f       	sbci	r17, 0xFF	; 255
    106e:	f8 01       	movw	r30, r16
    1070:	80 81       	ld	r24, Z
    1072:	04 58       	subi	r16, 0x84	; 132
    1074:	10 40       	sbci	r17, 0x00	; 0
    1076:	83 30       	cpi	r24, 0x03	; 3
    1078:	08 f4       	brcc	.+2      	; 0x107c <_isa_tx+0x22c>
    107a:	0d c1       	rjmp	.+538    	; 0x1296 <_isa_tx+0x446>
    107c:	33 c0       	rjmp	.+102    	; 0x10e4 <_isa_tx+0x294>
    107e:	0e 94 94 19 	call	0x3328	; 0x3328 <rf_rx_check_sfd>
    1082:	88 23       	and	r24, r24
    1084:	09 f4       	brne	.+2      	; 0x1088 <_isa_tx+0x238>
    1086:	b0 cf       	rjmp	.-160    	; 0xfe8 <_isa_tx+0x198>
    1088:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    108c:	89 83       	std	Y+1, r24	; 0x01
    108e:	89 81       	ldd	r24, Y+1	; 0x01
    1090:	8e 5f       	subi	r24, 0xFE	; 254
    1092:	89 83       	std	Y+1, r24	; 0x01
    1094:	f2 fe       	sbrs	r15, 2
    1096:	33 c0       	rjmp	.+102    	; 0x10fe <_isa_tx+0x2ae>
    1098:	44 e0       	ldi	r20, 0x04	; 4
    109a:	e4 2e       	mov	r14, r20
    109c:	32 c0       	rjmp	.+100    	; 0x1102 <_isa_tx+0x2b2>
    109e:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    10a2:	99 81       	ldd	r25, Y+1	; 0x01
    10a4:	98 17       	cp	r25, r24
    10a6:	68 f5       	brcc	.+90     	; 0x1102 <_isa_tx+0x2b2>
    10a8:	85 ea       	ldi	r24, 0xA5	; 165
    10aa:	93 e0       	ldi	r25, 0x03	; 3
    10ac:	9f 93       	push	r25
    10ae:	8f 93       	push	r24
    10b0:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    10b4:	80 91 27 08 	lds	r24, 0x0827
    10b8:	90 91 28 08 	lds	r25, 0x0828
    10bc:	01 96       	adiw	r24, 0x01	; 1
    10be:	90 93 28 08 	sts	0x0828, r25
    10c2:	80 93 27 08 	sts	0x0827, r24
    10c6:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    10ca:	80 93 c6 0b 	sts	0x0BC6, r24
    10ce:	0c 57       	subi	r16, 0x7C	; 124
    10d0:	1f 4f       	sbci	r17, 0xFF	; 255
    10d2:	f8 01       	movw	r30, r16
    10d4:	80 81       	ld	r24, Z
    10d6:	04 58       	subi	r16, 0x84	; 132
    10d8:	10 40       	sbci	r17, 0x00	; 0
    10da:	0f 90       	pop	r0
    10dc:	0f 90       	pop	r0
    10de:	83 30       	cpi	r24, 0x03	; 3
    10e0:	09 f0       	breq	.+2      	; 0x10e4 <_isa_tx+0x294>
    10e2:	d9 c0       	rjmp	.+434    	; 0x1296 <_isa_tx+0x446>
    10e4:	f8 01       	movw	r30, r16
    10e6:	e9 58       	subi	r30, 0x89	; 137
    10e8:	ff 4f       	sbci	r31, 0xFF	; 255
    10ea:	80 81       	ld	r24, Z
    10ec:	91 81       	ldd	r25, Z+1	; 0x01
    10ee:	89 2b       	or	r24, r25
    10f0:	09 f4       	brne	.+2      	; 0x10f4 <_isa_tx+0x2a4>
    10f2:	c7 c0       	rjmp	.+398    	; 0x1282 <_isa_tx+0x432>
    10f4:	01 90       	ld	r0, Z+
    10f6:	f0 81       	ld	r31, Z
    10f8:	e0 2d       	mov	r30, r0
    10fa:	60 e0       	ldi	r22, 0x00	; 0
    10fc:	ca c0       	rjmp	.+404    	; 0x1292 <_isa_tx+0x442>
    10fe:	32 e0       	ldi	r19, 0x02	; 2
    1100:	e3 2e       	mov	r14, r19
    1102:	6e 2d       	mov	r22, r14
    1104:	81 e0       	ldi	r24, 0x01	; 1
    1106:	0e 94 79 1a 	call	0x34f2	; 0x34f2 <rf_polling_rx_packet>
    110a:	f8 2e       	mov	r15, r24
    110c:	88 23       	and	r24, r24
    110e:	39 f2       	breq	.-114    	; 0x109e <_isa_tx+0x24e>
    1110:	f1 e0       	ldi	r31, 0x01	; 1
    1112:	8f 17       	cp	r24, r31
    1114:	01 f1       	breq	.+64     	; 0x1156 <_isa_tx+0x306>
    1116:	60 91 e1 1b 	lds	r22, 0x1BE1
    111a:	70 91 e2 1b 	lds	r23, 0x1BE2
    111e:	86 e6       	ldi	r24, 0x66	; 102
    1120:	90 e0       	ldi	r25, 0x00	; 0
    1122:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
    1126:	80 91 25 0c 	lds	r24, 0x0C25
    112a:	99 27       	eor	r25, r25
    112c:	9f 93       	push	r25
    112e:	8f 93       	push	r24
    1130:	86 ec       	ldi	r24, 0xC6	; 198
    1132:	93 e0       	ldi	r25, 0x03	; 3
    1134:	9f 93       	push	r25
    1136:	8f 93       	push	r24
    1138:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    113c:	80 91 27 08 	lds	r24, 0x0827
    1140:	90 91 28 08 	lds	r25, 0x0828
    1144:	01 96       	adiw	r24, 0x01	; 1
    1146:	90 93 28 08 	sts	0x0828, r25
    114a:	80 93 27 08 	sts	0x0827, r24
    114e:	0f 90       	pop	r0
    1150:	0f 90       	pop	r0
    1152:	0f 90       	pop	r0
    1154:	0f 90       	pop	r0
    1156:	0e 94 ee 1c 	call	0x39dc	; 0x39dc <rf_rx_off>
    115a:	8b 2d       	mov	r24, r11
    115c:	0e 94 fd 23 	call	0x47fa	; 0x47fa <nrk_gpio_clr>
    1160:	81 e0       	ldi	r24, 0x01	; 1
    1162:	f8 16       	cp	r15, r24
    1164:	09 f0       	breq	.+2      	; 0x1168 <_isa_tx+0x318>
    1166:	97 c0       	rjmp	.+302    	; 0x1296 <_isa_tx+0x446>
    1168:	80 91 25 08 	lds	r24, 0x0825
    116c:	90 91 26 08 	lds	r25, 0x0826
    1170:	01 96       	adiw	r24, 0x01	; 1
    1172:	90 93 26 08 	sts	0x0826, r25
    1176:	80 93 25 08 	sts	0x0825, r24
    117a:	e0 91 3d 08 	lds	r30, 0x083D
    117e:	f0 91 3e 08 	lds	r31, 0x083E
    1182:	80 81       	ld	r24, Z
    1184:	80 93 ab 0c 	sts	0x0CAB, r24
    1188:	10 92 ad 0c 	sts	0x0CAD, r1
    118c:	10 92 ac 0c 	sts	0x0CAC, r1
    1190:	87 ff       	sbrs	r24, 7
    1192:	64 c0       	rjmp	.+200    	; 0x125c <_isa_tx+0x40c>
    1194:	81 81       	ldd	r24, Z+1	; 0x01
    1196:	99 27       	eor	r25, r25
    1198:	98 2f       	mov	r25, r24
    119a:	88 27       	eor	r24, r24
    119c:	22 81       	ldd	r18, Z+2	; 0x02
    119e:	33 27       	eor	r19, r19
    11a0:	82 2b       	or	r24, r18
    11a2:	93 2b       	or	r25, r19
    11a4:	90 93 ce 0b 	sts	0x0BCE, r25
    11a8:	80 93 cd 0b 	sts	0x0BCD, r24
    11ac:	80 e0       	ldi	r24, 0x00	; 0
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	0e 94 f4 26 	call	0x4de8	; 0x4de8 <nrk_led_toggle>
    11b4:	80 91 cd 0b 	lds	r24, 0x0BCD
    11b8:	90 91 ce 0b 	lds	r25, 0x0BCE
    11bc:	20 91 cb 0b 	lds	r18, 0x0BCB
    11c0:	30 91 cc 0b 	lds	r19, 0x0BCC
    11c4:	82 1b       	sub	r24, r18
    11c6:	93 0b       	sbc	r25, r19
    11c8:	88 57       	subi	r24, 0x78	; 120
    11ca:	95 40       	sbci	r25, 0x05	; 5
    11cc:	9f 83       	std	Y+7, r25	; 0x07
    11ce:	8e 83       	std	Y+6, r24	; 0x06
    11d0:	82 e3       	ldi	r24, 0x32	; 50
    11d2:	89 83       	std	Y+1, r24	; 0x01
    11d4:	8e 81       	ldd	r24, Y+6	; 0x06
    11d6:	9f 81       	ldd	r25, Y+7	; 0x07
    11d8:	97 fd       	sbrc	r25, 7
    11da:	2d c0       	rjmp	.+90     	; 0x1236 <_isa_tx+0x3e6>
    11dc:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    11e0:	8b 83       	std	Y+3, r24	; 0x03
    11e2:	8e 81       	ldd	r24, Y+6	; 0x06
    11e4:	9f 81       	ldd	r25, Y+7	; 0x07
    11e6:	2d e9       	ldi	r18, 0x9D	; 157
    11e8:	3c e1       	ldi	r19, 0x1C	; 28
    11ea:	6d e9       	ldi	r22, 0x9D	; 157
    11ec:	7c e1       	ldi	r23, 0x1C	; 28
    11ee:	0e 94 a6 41 	call	0x834c	; 0x834c <__divmodhi4>
    11f2:	6f 5f       	subi	r22, 0xFF	; 255
    11f4:	6a 83       	std	Y+2, r22	; 0x02
    11f6:	8e 81       	ldd	r24, Y+6	; 0x06
    11f8:	9f 81       	ldd	r25, Y+7	; 0x07
    11fa:	6d e9       	ldi	r22, 0x9D	; 157
    11fc:	7c e1       	ldi	r23, 0x1C	; 28
    11fe:	0e 94 a6 41 	call	0x834c	; 0x834c <__divmodhi4>
    1202:	28 1b       	sub	r18, r24
    1204:	39 0b       	sbc	r19, r25
    1206:	3d 83       	std	Y+5, r19	; 0x05
    1208:	2c 83       	std	Y+4, r18	; 0x04
    120a:	0e 94 5d 39 	call	0x72ba	; 0x72ba <_nrk_os_timer_stop>
    120e:	0e 94 3a 39 	call	0x7274	; 0x7274 <_nrk_high_speed_timer_reset>
    1212:	6c 81       	ldd	r22, Y+4	; 0x04
    1214:	7d 81       	ldd	r23, Y+5	; 0x05
    1216:	80 e0       	ldi	r24, 0x00	; 0
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	0e 94 77 3a 	call	0x74ee	; 0x74ee <nrk_high_speed_timer_wait>
    121e:	9b 81       	ldd	r25, Y+3	; 0x03
    1220:	8a 81       	ldd	r24, Y+2	; 0x02
    1222:	89 0f       	add	r24, r25
    1224:	0e 94 68 39 	call	0x72d0	; 0x72d0 <_nrk_os_timer_set>
    1228:	0e 94 6b 39 	call	0x72d6	; 0x72d6 <_nrk_os_timer_start>
    122c:	82 e3       	ldi	r24, 0x32	; 50
    122e:	90 e0       	ldi	r25, 0x00	; 0
    1230:	0e 94 2c 39 	call	0x7258	; 0x7258 <nrk_spin_wait_us>
    1234:	13 c0       	rjmp	.+38     	; 0x125c <_isa_tx+0x40c>
    1236:	8e 81       	ldd	r24, Y+6	; 0x06
    1238:	9f 81       	ldd	r25, Y+7	; 0x07
    123a:	97 ff       	sbrs	r25, 7
    123c:	0f c0       	rjmp	.+30     	; 0x125c <_isa_tx+0x40c>
    123e:	0e 94 5d 39 	call	0x72ba	; 0x72ba <_nrk_os_timer_stop>
    1242:	0e 94 3a 39 	call	0x7274	; 0x7274 <_nrk_high_speed_timer_reset>
    1246:	6e 81       	ldd	r22, Y+6	; 0x06
    1248:	7f 81       	ldd	r23, Y+7	; 0x07
    124a:	70 95       	com	r23
    124c:	61 95       	neg	r22
    124e:	7f 4f       	sbci	r23, 0xFF	; 255
    1250:	80 e0       	ldi	r24, 0x00	; 0
    1252:	90 e0       	ldi	r25, 0x00	; 0
    1254:	0e 94 77 3a 	call	0x74ee	; 0x74ee <nrk_high_speed_timer_wait>
    1258:	0e 94 6b 39 	call	0x72d6	; 0x72d6 <_nrk_os_timer_start>
    125c:	0c 57       	subi	r16, 0x7C	; 124
    125e:	1f 4f       	sbci	r17, 0xFF	; 255
    1260:	f8 01       	movw	r30, r16
    1262:	80 81       	ld	r24, Z
    1264:	04 58       	subi	r16, 0x84	; 132
    1266:	10 40       	sbci	r17, 0x00	; 0
    1268:	83 30       	cpi	r24, 0x03	; 3
    126a:	21 f0       	breq	.+8      	; 0x1274 <_isa_tx+0x424>
    126c:	80 91 ab 0c 	lds	r24, 0x0CAB
    1270:	80 73       	andi	r24, 0x30	; 48
    1272:	89 f4       	brne	.+34     	; 0x1296 <_isa_tx+0x446>
    1274:	f8 01       	movw	r30, r16
    1276:	e9 58       	subi	r30, 0x89	; 137
    1278:	ff 4f       	sbci	r31, 0xFF	; 255
    127a:	80 81       	ld	r24, Z
    127c:	91 81       	ldd	r25, Z+1	; 0x01
    127e:	89 2b       	or	r24, r25
    1280:	21 f4       	brne	.+8      	; 0x128a <_isa_tx+0x43a>
    1282:	c8 01       	movw	r24, r16
    1284:	0e 94 35 12 	call	0x246a	; 0x246a <isaFreePacket>
    1288:	06 c0       	rjmp	.+12     	; 0x1296 <_isa_tx+0x446>
    128a:	01 90       	ld	r0, Z+
    128c:	f0 81       	ld	r31, Z
    128e:	e0 2d       	mov	r30, r0
    1290:	61 e0       	ldi	r22, 0x01	; 1
    1292:	c8 01       	movw	r24, r16
    1294:	09 95       	icall
    1296:	27 96       	adiw	r28, 0x07	; 7
    1298:	0f b6       	in	r0, 0x3f	; 63
    129a:	f8 94       	cli
    129c:	de bf       	out	0x3e, r29	; 62
    129e:	0f be       	out	0x3f, r0	; 63
    12a0:	cd bf       	out	0x3d, r28	; 61
    12a2:	df 91       	pop	r29
    12a4:	cf 91       	pop	r28
    12a6:	1f 91       	pop	r17
    12a8:	0f 91       	pop	r16
    12aa:	ff 90       	pop	r15
    12ac:	ef 90       	pop	r14
    12ae:	df 90       	pop	r13
    12b0:	cf 90       	pop	r12
    12b2:	bf 90       	pop	r11
    12b4:	08 95       	ret

000012b6 <_isa_rx>:
    12b6:	8f 92       	push	r8
    12b8:	9f 92       	push	r9
    12ba:	af 92       	push	r10
    12bc:	bf 92       	push	r11
    12be:	cf 92       	push	r12
    12c0:	df 92       	push	r13
    12c2:	ef 92       	push	r14
    12c4:	ff 92       	push	r15
    12c6:	0f 93       	push	r16
    12c8:	1f 93       	push	r17
    12ca:	cf 93       	push	r28
    12cc:	df 93       	push	r29
    12ce:	cd b7       	in	r28, 0x3d	; 61
    12d0:	de b7       	in	r29, 0x3e	; 62
    12d2:	21 97       	sbiw	r28, 0x01	; 1
    12d4:	0f b6       	in	r0, 0x3f	; 63
    12d6:	f8 94       	cli
    12d8:	de bf       	out	0x3e, r29	; 62
    12da:	0f be       	out	0x3f, r0	; 63
    12dc:	cd bf       	out	0x3d, r28	; 61
    12de:	60 91 4b 08 	lds	r22, 0x084B
    12e2:	88 e3       	ldi	r24, 0x38	; 56
    12e4:	98 e0       	ldi	r25, 0x08	; 8
    12e6:	0e 94 df 21 	call	0x43be	; 0x43be <rf_set_rx>
    12ea:	0e 94 06 1d 	call	0x3a0c	; 0x3a0c <rf_polling_rx_on>
    12ee:	00 91 ae 07 	lds	r16, 0x07AE
    12f2:	80 2f       	mov	r24, r16
    12f4:	0e 94 78 23 	call	0x46f0	; 0x46f0 <nrk_gpio_set>
    12f8:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    12fc:	89 83       	std	Y+1, r24	; 0x01
    12fe:	89 81       	ldd	r24, Y+1	; 0x01
    1300:	8c 5f       	subi	r24, 0xFC	; 252
    1302:	89 83       	std	Y+1, r24	; 0x01
    1304:	0b c0       	rjmp	.+22     	; 0x131c <_isa_rx+0x66>
    1306:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    130a:	99 81       	ldd	r25, Y+1	; 0x01
    130c:	98 17       	cp	r25, r24
    130e:	30 f4       	brcc	.+12     	; 0x131c <_isa_rx+0x66>
    1310:	80 2f       	mov	r24, r16
    1312:	0e 94 fd 23 	call	0x47fa	; 0x47fa <nrk_gpio_clr>
    1316:	0e 94 ee 1c 	call	0x39dc	; 0x39dc <rf_rx_off>
    131a:	a9 c2       	rjmp	.+1362   	; 0x186e <_isa_rx+0x5b8>
    131c:	0e 94 94 19 	call	0x3328	; 0x3328 <rf_rx_check_sfd>
    1320:	88 23       	and	r24, r24
    1322:	89 f3       	breq	.-30     	; 0x1306 <_isa_rx+0x50>
    1324:	0e 94 42 39 	call	0x7284	; 0x7284 <_nrk_high_speed_timer_get>
    1328:	90 93 03 0c 	sts	0x0C03, r25
    132c:	80 93 02 0c 	sts	0x0C02, r24
    1330:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    1334:	89 83       	std	Y+1, r24	; 0x01
    1336:	89 81       	ldd	r24, Y+1	; 0x01
    1338:	8b 5f       	subi	r24, 0xFB	; 251
    133a:	89 83       	std	Y+1, r24	; 0x01
    133c:	0c c0       	rjmp	.+24     	; 0x1356 <_isa_rx+0xa0>
    133e:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    1342:	99 81       	ldd	r25, Y+1	; 0x01
    1344:	98 17       	cp	r25, r24
    1346:	38 f4       	brcc	.+14     	; 0x1356 <_isa_rx+0xa0>
    1348:	85 ea       	ldi	r24, 0xA5	; 165
    134a:	93 e0       	ldi	r25, 0x03	; 3
    134c:	9f 93       	push	r25
    134e:	8f 93       	push	r24
    1350:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    1354:	ec c0       	rjmp	.+472    	; 0x152e <_isa_rx+0x278>
    1356:	60 e8       	ldi	r22, 0x80	; 128
    1358:	80 e0       	ldi	r24, 0x00	; 0
    135a:	0e 94 79 1a 	call	0x34f2	; 0x34f2 <rf_polling_rx_packet>
    135e:	18 2f       	mov	r17, r24
    1360:	88 23       	and	r24, r24
    1362:	69 f3       	breq	.-38     	; 0x133e <_isa_rx+0x88>
    1364:	80 2f       	mov	r24, r16
    1366:	0e 94 fd 23 	call	0x47fa	; 0x47fa <nrk_gpio_clr>
    136a:	0e 94 ee 1c 	call	0x39dc	; 0x39dc <rf_rx_off>
    136e:	11 30       	cpi	r17, 0x01	; 1
    1370:	09 f4       	brne	.+2      	; 0x1374 <_isa_rx+0xbe>
    1372:	5b c2       	rjmp	.+1206   	; 0x182a <_isa_rx+0x574>
    1374:	60 91 e1 1b 	lds	r22, 0x1BE1
    1378:	70 91 e2 1b 	lds	r23, 0x1BE2
    137c:	82 e6       	ldi	r24, 0x62	; 98
    137e:	90 e0       	ldi	r25, 0x00	; 0
    1380:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
    1384:	80 91 25 0c 	lds	r24, 0x0C25
    1388:	99 27       	eor	r25, r25
    138a:	9f 93       	push	r25
    138c:	8f 93       	push	r24
    138e:	85 ed       	ldi	r24, 0xD5	; 213
    1390:	93 e0       	ldi	r25, 0x03	; 3
    1392:	9f 93       	push	r25
    1394:	8f 93       	push	r24
    1396:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    139a:	3d c2       	rjmp	.+1146   	; 0x1816 <_isa_rx+0x560>
    139c:	99 27       	eor	r25, r25
    139e:	0e 94 df 12 	call	0x25be	; 0x25be <addCandidate>
    13a2:	8f 3f       	cpi	r24, 0xFF	; 255
    13a4:	09 f0       	breq	.+2      	; 0x13a8 <_isa_rx+0xf2>
    13a6:	1e c2       	rjmp	.+1084   	; 0x17e4 <_isa_rx+0x52e>
    13a8:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <printIsaError>
    13ac:	1b c2       	rjmp	.+1078   	; 0x17e4 <_isa_rx+0x52e>
    13ae:	af 2c       	mov	r10, r15
    13b0:	bb 24       	eor	r11, r11
    13b2:	17 fd       	sbrc	r17, 7
    13b4:	02 c0       	rjmp	.+4      	; 0x13ba <_isa_rx+0x104>
    13b6:	ee 24       	eor	r14, r14
    13b8:	58 c0       	rjmp	.+176    	; 0x146a <_isa_rx+0x1b4>
    13ba:	80 91 23 08 	lds	r24, 0x0823
    13be:	90 91 24 08 	lds	r25, 0x0824
    13c2:	01 96       	adiw	r24, 0x01	; 1
    13c4:	90 93 24 08 	sts	0x0824, r25
    13c8:	80 93 23 08 	sts	0x0823, r24
    13cc:	cf 01       	movw	r24, r30
    13ce:	0e 94 c0 0e 	call	0x1d80	; 0x1d80 <isTransmitLinkPresent>
    13d2:	e8 2e       	mov	r14, r24
    13d4:	88 23       	and	r24, r24
    13d6:	49 f4       	brne	.+18     	; 0x13ea <_isa_rx+0x134>
    13d8:	80 91 ae 0c 	lds	r24, 0x0CAE
    13dc:	90 91 af 0c 	lds	r25, 0x0CAF
    13e0:	8a 15       	cp	r24, r10
    13e2:	9b 05       	cpc	r25, r11
    13e4:	11 f0       	breq	.+4      	; 0x13ea <_isa_rx+0x134>
    13e6:	63 e0       	ldi	r22, 0x03	; 3
    13e8:	01 c0       	rjmp	.+2      	; 0x13ec <_isa_rx+0x136>
    13ea:	60 e0       	ldi	r22, 0x00	; 0
    13ec:	81 2f       	mov	r24, r17
    13ee:	84 70       	andi	r24, 0x04	; 4
    13f0:	0e 94 c9 05 	call	0xb92	; 0xb92 <configDHR>
    13f4:	80 93 ab 0c 	sts	0x0CAB, r24
    13f8:	80 93 1c 0b 	sts	0x0B1C, r24
    13fc:	8c e1       	ldi	r24, 0x1C	; 28
    13fe:	9b e0       	ldi	r25, 0x0B	; 11
    1400:	90 93 56 08 	sts	0x0856, r25
    1404:	80 93 55 08 	sts	0x0855, r24
    1408:	82 fe       	sbrs	r8, 2
    140a:	18 c0       	rjmp	.+48     	; 0x143c <_isa_rx+0x186>
    140c:	80 91 02 0c 	lds	r24, 0x0C02
    1410:	90 91 03 0c 	lds	r25, 0x0C03
    1414:	20 91 d1 0b 	lds	r18, 0x0BD1
    1418:	30 91 d2 0b 	lds	r19, 0x0BD2
    141c:	82 1b       	sub	r24, r18
    141e:	93 0b       	sbc	r25, r19
    1420:	90 93 ce 0b 	sts	0x0BCE, r25
    1424:	80 93 cd 0b 	sts	0x0BCD, r24
    1428:	89 2f       	mov	r24, r25
    142a:	99 27       	eor	r25, r25
    142c:	80 93 1d 0b 	sts	0x0B1D, r24
    1430:	80 91 cd 0b 	lds	r24, 0x0BCD
    1434:	80 93 1e 0b 	sts	0x0B1E, r24
    1438:	84 e0       	ldi	r24, 0x04	; 4
    143a:	01 c0       	rjmp	.+2      	; 0x143e <_isa_rx+0x188>
    143c:	82 e0       	ldi	r24, 0x02	; 2
    143e:	80 93 54 08 	sts	0x0854, r24
    1442:	80 2f       	mov	r24, r16
    1444:	0e 94 78 23 	call	0x46f0	; 0x46f0 <nrk_gpio_set>
    1448:	40 91 4d 08 	lds	r20, 0x084D
    144c:	50 91 4e 08 	lds	r21, 0x084E
    1450:	60 91 d1 0b 	lds	r22, 0x0BD1
    1454:	70 91 d2 0b 	lds	r23, 0x0BD2
    1458:	2d ef       	ldi	r18, 0xFD	; 253
    145a:	3b e0       	ldi	r19, 0x0B	; 11
    145c:	82 e5       	ldi	r24, 0x52	; 82
    145e:	98 e0       	ldi	r25, 0x08	; 8
    1460:	0e 94 1c 1f 	call	0x3e38	; 0x3e38 <rf_tx_tdma_packet>
    1464:	80 2f       	mov	r24, r16
    1466:	0e 94 fd 23 	call	0x47fa	; 0x47fa <nrk_gpio_clr>
    146a:	d6 01       	movw	r26, r12
    146c:	17 96       	adiw	r26, 0x07	; 7
    146e:	f6 01       	movw	r30, r12
    1470:	87 81       	ldd	r24, Z+7	; 0x07
    1472:	81 30       	cpi	r24, 0x01	; 1
    1474:	91 f5       	brne	.+100    	; 0x14da <_isa_rx+0x224>
    1476:	80 91 ae 0c 	lds	r24, 0x0CAE
    147a:	90 91 af 0c 	lds	r25, 0x0CAF
    147e:	a8 16       	cp	r10, r24
    1480:	b9 06       	cpc	r11, r25
    1482:	79 f4       	brne	.+30     	; 0x14a2 <_isa_rx+0x1ec>
    1484:	e0 91 3d 08 	lds	r30, 0x083D
    1488:	f0 91 3e 08 	lds	r31, 0x083E
    148c:	82 81       	ldd	r24, Z+2	; 0x02
    148e:	6f 01       	movw	r12, r30
    1490:	ee 24       	eor	r14, r14
    1492:	00 e0       	ldi	r16, 0x00	; 0
    1494:	20 e0       	ldi	r18, 0x00	; 0
    1496:	40 e0       	ldi	r20, 0x00	; 0
    1498:	b5 01       	movw	r22, r10
    149a:	99 27       	eor	r25, r25
    149c:	0e 94 20 14 	call	0x2840	; 0x2840 <dd_data_indication>
    14a0:	e6 c1       	rjmp	.+972    	; 0x186e <_isa_rx+0x5b8>
    14a2:	ee 20       	and	r14, r14
    14a4:	a9 f0       	breq	.+42     	; 0x14d0 <_isa_rx+0x21a>
    14a6:	20 91 3d 08 	lds	r18, 0x083D
    14aa:	30 91 3e 08 	lds	r19, 0x083E
    14ae:	40 91 3b 08 	lds	r20, 0x083B
    14b2:	55 27       	eor	r21, r21
    14b4:	47 fd       	sbrc	r20, 7
    14b6:	50 95       	com	r21
    14b8:	00 e0       	ldi	r16, 0x00	; 0
    14ba:	10 e0       	ldi	r17, 0x00	; 0
    14bc:	60 e0       	ldi	r22, 0x00	; 0
    14be:	70 e0       	ldi	r23, 0x00	; 0
    14c0:	c5 01       	movw	r24, r10
    14c2:	0e 94 60 13 	call	0x26c0	; 0x26c0 <enQueue>
    14c6:	bf 92       	push	r11
    14c8:	af 92       	push	r10
    14ca:	82 ee       	ldi	r24, 0xE2	; 226
    14cc:	93 e0       	ldi	r25, 0x03	; 3
    14ce:	97 c1       	rjmp	.+814    	; 0x17fe <_isa_rx+0x548>
    14d0:	bf 92       	push	r11
    14d2:	af 92       	push	r10
    14d4:	8b ef       	ldi	r24, 0xFB	; 251
    14d6:	93 e0       	ldi	r25, 0x03	; 3
    14d8:	92 c1       	rjmp	.+804    	; 0x17fe <_isa_rx+0x548>
    14da:	82 30       	cpi	r24, 0x02	; 2
    14dc:	09 f0       	breq	.+2      	; 0x14e0 <_isa_rx+0x22a>
    14de:	4d c0       	rjmp	.+154    	; 0x157a <_isa_rx+0x2c4>
    14e0:	80 91 ae 0c 	lds	r24, 0x0CAE
    14e4:	90 91 af 0c 	lds	r25, 0x0CAF
    14e8:	a8 16       	cp	r10, r24
    14ea:	b9 06       	cpc	r11, r25
    14ec:	19 f5       	brne	.+70     	; 0x1534 <_isa_rx+0x27e>
    14ee:	1f 92       	push	r1
    14f0:	1f 92       	push	r1
    14f2:	88 24       	eor	r8, r8
    14f4:	aa 24       	eor	r10, r10
    14f6:	cc 24       	eor	r12, r12
    14f8:	ee 24       	eor	r14, r14
    14fa:	00 e0       	ldi	r16, 0x00	; 0
    14fc:	10 e0       	ldi	r17, 0x00	; 0
    14fe:	20 e0       	ldi	r18, 0x00	; 0
    1500:	30 e0       	ldi	r19, 0x00	; 0
    1502:	40 e0       	ldi	r20, 0x00	; 0
    1504:	50 e0       	ldi	r21, 0x00	; 0
    1506:	60 e0       	ldi	r22, 0x00	; 0
    1508:	70 e0       	ldi	r23, 0x00	; 0
    150a:	fd 01       	movw	r30, r26
    150c:	81 81       	ldd	r24, Z+1	; 0x01
    150e:	92 81       	ldd	r25, Z+2	; 0x02
    1510:	0e 94 cd 14 	call	0x299a	; 0x299a <addNeighbor>
    1514:	10 92 2d 0b 	sts	0x0B2D, r1
    1518:	10 92 2e 0b 	sts	0x0B2E, r1
    151c:	10 92 2f 0b 	sts	0x0B2F, r1
    1520:	10 92 30 0b 	sts	0x0B30, r1
    1524:	fa 94       	dec	r15
    1526:	6f 2d       	mov	r22, r15
    1528:	8c e0       	ldi	r24, 0x0C	; 12
    152a:	0e 94 1c 05 	call	0xa38	; 0xa38 <setNewDisplay>
    152e:	0f 90       	pop	r0
    1530:	0f 90       	pop	r0
    1532:	9d c1       	rjmp	.+826    	; 0x186e <_isa_rx+0x5b8>
    1534:	ee 20       	and	r14, r14
    1536:	e1 f0       	breq	.+56     	; 0x1570 <_isa_rx+0x2ba>
    1538:	20 91 3d 08 	lds	r18, 0x083D
    153c:	30 91 3e 08 	lds	r19, 0x083E
    1540:	40 91 3b 08 	lds	r20, 0x083B
    1544:	55 27       	eor	r21, r21
    1546:	47 fd       	sbrc	r20, 7
    1548:	50 95       	com	r21
    154a:	00 e0       	ldi	r16, 0x00	; 0
    154c:	10 e0       	ldi	r17, 0x00	; 0
    154e:	60 e0       	ldi	r22, 0x00	; 0
    1550:	70 e0       	ldi	r23, 0x00	; 0
    1552:	c5 01       	movw	r24, r10
    1554:	0e 94 60 13 	call	0x26c0	; 0x26c0 <enQueue>
    1558:	10 92 2d 0b 	sts	0x0B2D, r1
    155c:	10 92 2e 0b 	sts	0x0B2E, r1
    1560:	10 92 2f 0b 	sts	0x0B2F, r1
    1564:	10 92 30 0b 	sts	0x0B30, r1
    1568:	fa 94       	dec	r15
    156a:	6f 2d       	mov	r22, r15
    156c:	8c e0       	ldi	r24, 0x0C	; 12
    156e:	00 c1       	rjmp	.+512    	; 0x1770 <_isa_rx+0x4ba>
    1570:	bf 92       	push	r11
    1572:	af 92       	push	r10
    1574:	85 e3       	ldi	r24, 0x35	; 53
    1576:	94 e0       	ldi	r25, 0x04	; 4
    1578:	42 c1       	rjmp	.+644    	; 0x17fe <_isa_rx+0x548>
    157a:	83 30       	cpi	r24, 0x03	; 3
    157c:	d9 f5       	brne	.+118    	; 0x15f4 <_isa_rx+0x33e>
    157e:	80 91 ae 0c 	lds	r24, 0x0CAE
    1582:	90 91 af 0c 	lds	r25, 0x0CAF
    1586:	a8 16       	cp	r10, r24
    1588:	b9 06       	cpc	r11, r25
    158a:	89 f4       	brne	.+34     	; 0x15ae <_isa_rx+0x2f8>
    158c:	d6 01       	movw	r26, r12
    158e:	18 96       	adiw	r26, 0x08	; 8
    1590:	fd 01       	movw	r30, r26
    1592:	06 81       	ldd	r16, Z+6	; 0x06
    1594:	17 81       	ldd	r17, Z+7	; 0x07
    1596:	24 81       	ldd	r18, Z+4	; 0x04
    1598:	35 81       	ldd	r19, Z+5	; 0x05
    159a:	42 81       	ldd	r20, Z+2	; 0x02
    159c:	53 81       	ldd	r21, Z+3	; 0x03
    159e:	f6 01       	movw	r30, r12
    15a0:	80 85       	ldd	r24, Z+8	; 0x08
    15a2:	fd 01       	movw	r30, r26
    15a4:	61 81       	ldd	r22, Z+1	; 0x01
    15a6:	99 27       	eor	r25, r25
    15a8:	0e 94 46 14 	call	0x288c	; 0x288c <addGraph>
    15ac:	12 c0       	rjmp	.+36     	; 0x15d2 <_isa_rx+0x31c>
    15ae:	ee 20       	and	r14, r14
    15b0:	e1 f0       	breq	.+56     	; 0x15ea <_isa_rx+0x334>
    15b2:	20 91 3d 08 	lds	r18, 0x083D
    15b6:	30 91 3e 08 	lds	r19, 0x083E
    15ba:	40 91 3b 08 	lds	r20, 0x083B
    15be:	55 27       	eor	r21, r21
    15c0:	47 fd       	sbrc	r20, 7
    15c2:	50 95       	com	r21
    15c4:	00 e0       	ldi	r16, 0x00	; 0
    15c6:	10 e0       	ldi	r17, 0x00	; 0
    15c8:	60 e0       	ldi	r22, 0x00	; 0
    15ca:	70 e0       	ldi	r23, 0x00	; 0
    15cc:	c5 01       	movw	r24, r10
    15ce:	0e 94 60 13 	call	0x26c0	; 0x26c0 <enQueue>
    15d2:	10 92 2d 0b 	sts	0x0B2D, r1
    15d6:	10 92 2e 0b 	sts	0x0B2E, r1
    15da:	10 92 2f 0b 	sts	0x0B2F, r1
    15de:	10 92 30 0b 	sts	0x0B30, r1
    15e2:	fa 94       	dec	r15
    15e4:	6f 2d       	mov	r22, r15
    15e6:	89 e0       	ldi	r24, 0x09	; 9
    15e8:	c3 c0       	rjmp	.+390    	; 0x1770 <_isa_rx+0x4ba>
    15ea:	bf 92       	push	r11
    15ec:	af 92       	push	r10
    15ee:	81 e7       	ldi	r24, 0x71	; 113
    15f0:	94 e0       	ldi	r25, 0x04	; 4
    15f2:	05 c1       	rjmp	.+522    	; 0x17fe <_isa_rx+0x548>
    15f4:	84 30       	cpi	r24, 0x04	; 4
    15f6:	b9 f5       	brne	.+110    	; 0x1666 <_isa_rx+0x3b0>
    15f8:	80 91 ae 0c 	lds	r24, 0x0CAE
    15fc:	90 91 af 0c 	lds	r25, 0x0CAF
    1600:	a8 16       	cp	r10, r24
    1602:	b9 06       	cpc	r11, r25
    1604:	69 f4       	brne	.+26     	; 0x1620 <_isa_rx+0x36a>
    1606:	f6 01       	movw	r30, r12
    1608:	38 96       	adiw	r30, 0x08	; 8
    160a:	43 81       	ldd	r20, Z+3	; 0x03
    160c:	55 27       	eor	r21, r21
    160e:	61 81       	ldd	r22, Z+1	; 0x01
    1610:	72 81       	ldd	r23, Z+2	; 0x02
    1612:	05 81       	ldd	r16, Z+5	; 0x05
    1614:	24 81       	ldd	r18, Z+4	; 0x04
    1616:	f6 01       	movw	r30, r12
    1618:	80 85       	ldd	r24, Z+8	; 0x08
    161a:	0e 94 83 15 	call	0x2b06	; 0x2b06 <addLink>
    161e:	12 c0       	rjmp	.+36     	; 0x1644 <_isa_rx+0x38e>
    1620:	ee 20       	and	r14, r14
    1622:	e1 f0       	breq	.+56     	; 0x165c <_isa_rx+0x3a6>
    1624:	20 91 3d 08 	lds	r18, 0x083D
    1628:	30 91 3e 08 	lds	r19, 0x083E
    162c:	40 91 3b 08 	lds	r20, 0x083B
    1630:	55 27       	eor	r21, r21
    1632:	47 fd       	sbrc	r20, 7
    1634:	50 95       	com	r21
    1636:	00 e0       	ldi	r16, 0x00	; 0
    1638:	10 e0       	ldi	r17, 0x00	; 0
    163a:	60 e0       	ldi	r22, 0x00	; 0
    163c:	70 e0       	ldi	r23, 0x00	; 0
    163e:	c5 01       	movw	r24, r10
    1640:	0e 94 60 13 	call	0x26c0	; 0x26c0 <enQueue>
    1644:	10 92 2d 0b 	sts	0x0B2D, r1
    1648:	10 92 2e 0b 	sts	0x0B2E, r1
    164c:	10 92 2f 0b 	sts	0x0B2F, r1
    1650:	10 92 30 0b 	sts	0x0B30, r1
    1654:	fa 94       	dec	r15
    1656:	6f 2d       	mov	r22, r15
    1658:	8b e0       	ldi	r24, 0x0B	; 11
    165a:	8a c0       	rjmp	.+276    	; 0x1770 <_isa_rx+0x4ba>
    165c:	bf 92       	push	r11
    165e:	af 92       	push	r10
    1660:	83 ea       	ldi	r24, 0xA3	; 163
    1662:	94 e0       	ldi	r25, 0x04	; 4
    1664:	cc c0       	rjmp	.+408    	; 0x17fe <_isa_rx+0x548>
    1666:	88 23       	and	r24, r24
    1668:	09 f0       	breq	.+2      	; 0x166c <_isa_rx+0x3b6>
    166a:	85 c0       	rjmp	.+266    	; 0x1776 <_isa_rx+0x4c0>
    166c:	80 91 27 09 	lds	r24, 0x0927
    1670:	e0 91 3d 08 	lds	r30, 0x083D
    1674:	f0 91 3e 08 	lds	r31, 0x083E
    1678:	82 30       	cpi	r24, 0x02	; 2
    167a:	09 f0       	breq	.+2      	; 0x167e <_isa_rx+0x3c8>
    167c:	5b c0       	rjmp	.+182    	; 0x1734 <_isa_rx+0x47e>
    167e:	82 81       	ldd	r24, Z+2	; 0x02
    1680:	99 27       	eor	r25, r25
    1682:	9f 93       	push	r25
    1684:	8f 93       	push	r24
    1686:	89 ed       	ldi	r24, 0xD9	; 217
    1688:	94 e0       	ldi	r25, 0x04	; 4
    168a:	9f 93       	push	r25
    168c:	8f 93       	push	r24
    168e:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    1692:	b6 01       	movw	r22, r12
    1694:	68 5f       	subi	r22, 0xF8	; 248
    1696:	7f 4f       	sbci	r23, 0xFF	; 255
    1698:	d6 01       	movw	r26, r12
    169a:	19 96       	adiw	r26, 0x09	; 9
    169c:	e0 91 3d 08 	lds	r30, 0x083D
    16a0:	f0 91 3e 08 	lds	r31, 0x083E
    16a4:	e2 81       	ldd	r30, Z+2	; 0x02
    16a6:	ff 27       	eor	r31, r31
    16a8:	ee 0f       	add	r30, r30
    16aa:	ff 1f       	adc	r31, r31
    16ac:	e6 52       	subi	r30, 0x26	; 38
    16ae:	f4 4f       	sbci	r31, 0xF4	; 244
    16b0:	11 82       	std	Z+1, r1	; 0x01
    16b2:	10 82       	st	Z, r1
    16b4:	40 e0       	ldi	r20, 0x00	; 0
    16b6:	50 e0       	ldi	r21, 0x00	; 0
    16b8:	0f 90       	pop	r0
    16ba:	0f 90       	pop	r0
    16bc:	0f 90       	pop	r0
    16be:	0f 90       	pop	r0
    16c0:	19 c0       	rjmp	.+50     	; 0x16f4 <_isa_rx+0x43e>
    16c2:	e0 91 3d 08 	lds	r30, 0x083D
    16c6:	f0 91 3e 08 	lds	r31, 0x083E
    16ca:	e2 81       	ldd	r30, Z+2	; 0x02
    16cc:	ff 27       	eor	r31, r31
    16ce:	ee 0f       	add	r30, r30
    16d0:	ff 1f       	adc	r31, r31
    16d2:	e6 52       	subi	r30, 0x26	; 38
    16d4:	f4 4f       	sbci	r31, 0xF4	; 244
    16d6:	21 e0       	ldi	r18, 0x01	; 1
    16d8:	30 e0       	ldi	r19, 0x00	; 0
    16da:	0c 90       	ld	r0, X
    16dc:	02 c0       	rjmp	.+4      	; 0x16e2 <_isa_rx+0x42c>
    16de:	22 0f       	add	r18, r18
    16e0:	33 1f       	adc	r19, r19
    16e2:	0a 94       	dec	r0
    16e4:	e2 f7       	brpl	.-8      	; 0x16de <_isa_rx+0x428>
    16e6:	80 81       	ld	r24, Z
    16e8:	91 81       	ldd	r25, Z+1	; 0x01
    16ea:	82 2b       	or	r24, r18
    16ec:	93 2b       	or	r25, r19
    16ee:	91 83       	std	Z+1, r25	; 0x01
    16f0:	80 83       	st	Z, r24
    16f2:	14 96       	adiw	r26, 0x04	; 4
    16f4:	94 2f       	mov	r25, r20
    16f6:	4f 5f       	subi	r20, 0xFF	; 255
    16f8:	5f 4f       	sbci	r21, 0xFF	; 255
    16fa:	fb 01       	movw	r30, r22
    16fc:	80 81       	ld	r24, Z
    16fe:	98 17       	cp	r25, r24
    1700:	00 f3       	brcs	.-64     	; 0x16c2 <_isa_rx+0x40c>
    1702:	60 91 e1 1b 	lds	r22, 0x1BE1
    1706:	70 91 e2 1b 	lds	r23, 0x1BE2
    170a:	8a e0       	ldi	r24, 0x0A	; 10
    170c:	90 e0       	ldi	r25, 0x00	; 0
    170e:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
    1712:	60 91 e1 1b 	lds	r22, 0x1BE1
    1716:	70 91 e2 1b 	lds	r23, 0x1BE2
    171a:	8d e0       	ldi	r24, 0x0D	; 13
    171c:	90 e0       	ldi	r25, 0x00	; 0
    171e:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
    1722:	60 91 e1 1b 	lds	r22, 0x1BE1
    1726:	70 91 e2 1b 	lds	r23, 0x1BE2
    172a:	8e e6       	ldi	r24, 0x6E	; 110
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
    1732:	58 c0       	rjmp	.+176    	; 0x17e4 <_isa_rx+0x52e>
    1734:	40 91 3b 08 	lds	r20, 0x083B
    1738:	55 27       	eor	r21, r21
    173a:	47 fd       	sbrc	r20, 7
    173c:	50 95       	com	r21
    173e:	80 91 21 09 	lds	r24, 0x0921
    1742:	00 e0       	ldi	r16, 0x00	; 0
    1744:	10 e0       	ldi	r17, 0x00	; 0
    1746:	9f 01       	movw	r18, r30
    1748:	60 e0       	ldi	r22, 0x00	; 0
    174a:	70 e0       	ldi	r23, 0x00	; 0
    174c:	99 27       	eor	r25, r25
    174e:	0e 94 60 13 	call	0x26c0	; 0x26c0 <enQueue>
    1752:	10 92 2d 0b 	sts	0x0B2D, r1
    1756:	10 92 2e 0b 	sts	0x0B2E, r1
    175a:	10 92 2f 0b 	sts	0x0B2F, r1
    175e:	10 92 30 0b 	sts	0x0B30, r1
    1762:	e0 91 3d 08 	lds	r30, 0x083D
    1766:	f0 91 3e 08 	lds	r31, 0x083E
    176a:	62 81       	ldd	r22, Z+2	; 0x02
    176c:	61 50       	subi	r22, 0x01	; 1
    176e:	8d e0       	ldi	r24, 0x0D	; 13
    1770:	0e 94 1c 05 	call	0xa38	; 0xa38 <setNewDisplay>
    1774:	7c c0       	rjmp	.+248    	; 0x186e <_isa_rx+0x5b8>
    1776:	85 30       	cpi	r24, 0x05	; 5
    1778:	09 f0       	breq	.+2      	; 0x177c <_isa_rx+0x4c6>
    177a:	52 c0       	rjmp	.+164    	; 0x1820 <_isa_rx+0x56a>
    177c:	e0 91 3d 08 	lds	r30, 0x083D
    1780:	f0 91 3e 08 	lds	r31, 0x083E
    1784:	82 81       	ldd	r24, Z+2	; 0x02
    1786:	99 27       	eor	r25, r25
    1788:	9f 93       	push	r25
    178a:	8f 93       	push	r24
    178c:	8b ef       	ldi	r24, 0xFB	; 251
    178e:	94 e0       	ldi	r25, 0x04	; 4
    1790:	9f 93       	push	r25
    1792:	8f 93       	push	r24
    1794:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    1798:	0f 90       	pop	r0
    179a:	0f 90       	pop	r0
    179c:	0f 90       	pop	r0
    179e:	0f 90       	pop	r0
    17a0:	80 91 ae 0c 	lds	r24, 0x0CAE
    17a4:	90 91 af 0c 	lds	r25, 0x0CAF
    17a8:	a8 16       	cp	r10, r24
    17aa:	b9 06       	cpc	r11, r25
    17ac:	19 f4       	brne	.+6      	; 0x17b4 <_isa_rx+0x4fe>
    17ae:	0e 94 55 12 	call	0x24aa	; 0x24aa <flushCandidateEntries>
    17b2:	18 c0       	rjmp	.+48     	; 0x17e4 <_isa_rx+0x52e>
    17b4:	80 91 3d 08 	lds	r24, 0x083D
    17b8:	90 91 3e 08 	lds	r25, 0x083E
    17bc:	0e 94 c0 0e 	call	0x1d80	; 0x1d80 <isTransmitLinkPresent>
    17c0:	88 23       	and	r24, r24
    17c2:	c9 f0       	breq	.+50     	; 0x17f6 <_isa_rx+0x540>
    17c4:	20 91 3d 08 	lds	r18, 0x083D
    17c8:	30 91 3e 08 	lds	r19, 0x083E
    17cc:	40 91 3b 08 	lds	r20, 0x083B
    17d0:	55 27       	eor	r21, r21
    17d2:	47 fd       	sbrc	r20, 7
    17d4:	50 95       	com	r21
    17d6:	00 e0       	ldi	r16, 0x00	; 0
    17d8:	10 e0       	ldi	r17, 0x00	; 0
    17da:	60 e0       	ldi	r22, 0x00	; 0
    17dc:	70 e0       	ldi	r23, 0x00	; 0
    17de:	c5 01       	movw	r24, r10
    17e0:	0e 94 60 13 	call	0x26c0	; 0x26c0 <enQueue>
    17e4:	10 92 2d 0b 	sts	0x0B2D, r1
    17e8:	10 92 2e 0b 	sts	0x0B2E, r1
    17ec:	10 92 2f 0b 	sts	0x0B2F, r1
    17f0:	10 92 30 0b 	sts	0x0B30, r1
    17f4:	3c c0       	rjmp	.+120    	; 0x186e <_isa_rx+0x5b8>
    17f6:	bf 92       	push	r11
    17f8:	af 92       	push	r10
    17fa:	8f e1       	ldi	r24, 0x1F	; 31
    17fc:	95 e0       	ldi	r25, 0x05	; 5
    17fe:	9f 93       	push	r25
    1800:	8f 93       	push	r24
    1802:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    1806:	10 92 2d 0b 	sts	0x0B2D, r1
    180a:	10 92 2e 0b 	sts	0x0B2E, r1
    180e:	10 92 2f 0b 	sts	0x0B2F, r1
    1812:	10 92 30 0b 	sts	0x0B30, r1
    1816:	0f 90       	pop	r0
    1818:	0f 90       	pop	r0
    181a:	0f 90       	pop	r0
    181c:	0f 90       	pop	r0
    181e:	27 c0       	rjmp	.+78     	; 0x186e <_isa_rx+0x5b8>
    1820:	85 e5       	ldi	r24, 0x55	; 85
    1822:	95 e0       	ldi	r25, 0x05	; 5
    1824:	0e 94 c1 3f 	call	0x7f82	; 0x7f82 <puts>
    1828:	22 c0       	rjmp	.+68     	; 0x186e <_isa_rx+0x5b8>
    182a:	80 91 25 08 	lds	r24, 0x0825
    182e:	90 91 26 08 	lds	r25, 0x0826
    1832:	01 96       	adiw	r24, 0x01	; 1
    1834:	90 93 26 08 	sts	0x0826, r25
    1838:	80 93 25 08 	sts	0x0825, r24
    183c:	81 e0       	ldi	r24, 0x01	; 1
    183e:	90 e0       	ldi	r25, 0x00	; 0
    1840:	0e 94 f4 26 	call	0x4de8	; 0x4de8 <nrk_led_toggle>
    1844:	c0 90 3d 08 	lds	r12, 0x083D
    1848:	d0 90 3e 08 	lds	r13, 0x083E
    184c:	f6 01       	movw	r30, r12
    184e:	f3 80       	ldd	r15, Z+3	; 0x03
    1850:	10 81       	ld	r17, Z
    1852:	80 91 c5 0b 	lds	r24, 0x0BC5
    1856:	0e 94 55 2e 	call	0x5caa	; 0x5caa <nrk_event_signal>
    185a:	e0 91 3d 08 	lds	r30, 0x083D
    185e:	f0 91 3e 08 	lds	r31, 0x083E
    1862:	82 81       	ldd	r24, Z+2	; 0x02
    1864:	81 2e       	mov	r8, r17
    1866:	99 24       	eor	r9, r9
    1868:	84 fe       	sbrs	r8, 4
    186a:	a1 cd       	rjmp	.-1214   	; 0x13ae <_isa_rx+0xf8>
    186c:	97 cd       	rjmp	.-1234   	; 0x139c <_isa_rx+0xe6>
    186e:	21 96       	adiw	r28, 0x01	; 1
    1870:	0f b6       	in	r0, 0x3f	; 63
    1872:	f8 94       	cli
    1874:	de bf       	out	0x3e, r29	; 62
    1876:	0f be       	out	0x3f, r0	; 63
    1878:	cd bf       	out	0x3d, r28	; 61
    187a:	df 91       	pop	r29
    187c:	cf 91       	pop	r28
    187e:	1f 91       	pop	r17
    1880:	0f 91       	pop	r16
    1882:	ff 90       	pop	r15
    1884:	ef 90       	pop	r14
    1886:	df 90       	pop	r13
    1888:	cf 90       	pop	r12
    188a:	bf 90       	pop	r11
    188c:	af 90       	pop	r10
    188e:	9f 90       	pop	r9
    1890:	8f 90       	pop	r8
    1892:	08 95       	ret

00001894 <isa_wait_until_rx_or_tx>:
	    local_rx_buf=isa_rx_pkt_get(&length, &rssi);

	    //printf("length is %d, rssi is %d.\n\r",length,rssi);
	    //local_rx_buf[PKT_DATA_START+length-2]='\0';
	    //printf("RX[%d]",slot);
	    /*for(i=PKT_DATA_START; i<length-1; i++ )
    1894:	80 91 c5 0b 	lds	r24, 0x0BC5
    1898:	0e 94 4d 2d 	call	0x5a9a	; 0x5a9a <nrk_signal_register>
		printf( "%c",local_rx_buf[i]);*/
    189c:	80 91 d3 0b 	lds	r24, 0x0BD3
    18a0:	0e 94 4d 2d 	call	0x5a9a	; 0x5a9a <nrk_signal_register>
	    //printf("\r\n");
    18a4:	21 e0       	ldi	r18, 0x01	; 1
    18a6:	30 e0       	ldi	r19, 0x00	; 0
    18a8:	40 e0       	ldi	r20, 0x00	; 0
    18aa:	50 e0       	ldi	r21, 0x00	; 0
    18ac:	ca 01       	movw	r24, r20
    18ae:	b9 01       	movw	r22, r18
    18b0:	00 90 d3 0b 	lds	r0, 0x0BD3
    18b4:	04 c0       	rjmp	.+8      	; 0x18be <isa_wait_until_rx_or_tx+0x2a>
    18b6:	66 0f       	add	r22, r22
    18b8:	77 1f       	adc	r23, r23
    18ba:	88 1f       	adc	r24, r24
    18bc:	99 1f       	adc	r25, r25
    18be:	0a 94       	dec	r0
    18c0:	d2 f7       	brpl	.-12     	; 0x18b6 <isa_wait_until_rx_or_tx+0x22>
    18c2:	00 90 c5 0b 	lds	r0, 0x0BC5
    18c6:	04 c0       	rjmp	.+8      	; 0x18d0 <isa_wait_until_rx_or_tx+0x3c>
    18c8:	22 0f       	add	r18, r18
    18ca:	33 1f       	adc	r19, r19
    18cc:	44 1f       	adc	r20, r20
    18ce:	55 1f       	adc	r21, r21
    18d0:	0a 94       	dec	r0
    18d2:	d2 f7       	brpl	.-12     	; 0x18c8 <isa_wait_until_rx_or_tx+0x34>
    18d4:	62 2b       	or	r22, r18
    18d6:	73 2b       	or	r23, r19
    18d8:	84 2b       	or	r24, r20
    18da:	95 2b       	or	r25, r21
    18dc:	0e 94 a7 2f 	call	0x5f4e	; 0x5f4e <nrk_event_wait>
	    //sprintf( &tx_buf[PKT_DATA_START],"Hello Mingzhe!");
	    //length=strlen(&tx_buf[PKT_DATA_START])+PKT_DATA_START+1;
    18e0:	81 e0       	ldi	r24, 0x01	; 1
    18e2:	90 e0       	ldi	r25, 0x00	; 0
    18e4:	08 95       	ret

000018e6 <isa_set_channel>:
  configureSlot(7,5,TX_NO_ADV,false,1,1,5,0,0,GRAPH_NEIGHBOR);
 // configureSlot(5, 1, TX_NO_ADV, true,0,0,0,0,0, NEIGHBOR);
  //configureSlot(2,3, RX, false,0,0,0,0,0, NEIGHBOR);
  //configureSlot(7,10,ADV,false,0,0,0,0,0, NEIGHBOR);
  //configureSlot(6,3, RX, false,0,0,0,0,0, NEIGHBOR);
  configureSlot(11,0, RX, false,0,0,0,0,0, NEIGHBOR);
    18e6:	80 93 4b 08 	sts	0x084B, r24
  configureSlot(8,0, RX, false,0,0,0,0,0, NEIGHBOR);
    18ea:	0e 94 09 22 	call	0x4412	; 0x4412 <rf_set_channel>
    18ee:	08 95       	ret

000018f0 <isa_nw_task>:
    18f0:	cf 92       	push	r12
    18f2:	df 92       	push	r13
    18f4:	ef 92       	push	r14
    18f6:	ff 92       	push	r15
    18f8:	0f 93       	push	r16
    18fa:	1f 93       	push	r17
    18fc:	cf 93       	push	r28
    18fe:	df 93       	push	r29
    1900:	10 92 a7 0a 	sts	0x0AA7, r1
    1904:	0e 94 8d 32 	call	0x651a	; 0x651a <nrk_wait_until_next_period>
    1908:	80 91 a7 0a 	lds	r24, 0x0AA7
    190c:	88 23       	and	r24, r24
    190e:	d1 f3       	breq	.-12     	; 0x1904 <isa_nw_task+0x14>
    1910:	81 e0       	ldi	r24, 0x01	; 1
    1912:	80 93 a7 0a 	sts	0x0AA7, r24
    1916:	00 91 a4 07 	lds	r16, 0x07A4
    191a:	ee 24       	eor	r14, r14
    191c:	ff 24       	eor	r15, r15
    191e:	3b e6       	ldi	r19, 0x6B	; 107
    1920:	c3 2e       	mov	r12, r19
    1922:	35 e0       	ldi	r19, 0x05	; 5
    1924:	d3 2e       	mov	r13, r19
    1926:	0e 94 3a 39 	call	0x7274	; 0x7274 <_nrk_high_speed_timer_reset>
    192a:	0e 94 42 39 	call	0x7284	; 0x7284 <_nrk_high_speed_timer_get>
    192e:	90 93 d2 0b 	sts	0x0BD2, r25
    1932:	80 93 d1 0b 	sts	0x0BD1, r24
    1936:	80 2f       	mov	r24, r16
    1938:	0e 94 78 23 	call	0x46f0	; 0x46f0 <nrk_gpio_set>
    193c:	80 2f       	mov	r24, r16
    193e:	0e 94 fd 23 	call	0x47fa	; 0x47fa <nrk_gpio_clr>
    1942:	80 91 d4 0b 	lds	r24, 0x0BD4
    1946:	90 91 d5 0b 	lds	r25, 0x0BD5
    194a:	90 93 00 0c 	sts	0x0C00, r25
    194e:	80 93 ff 0b 	sts	0x0BFF, r24
    1952:	80 91 d4 0b 	lds	r24, 0x0BD4
    1956:	90 91 d5 0b 	lds	r25, 0x0BD5
    195a:	87 39       	cpi	r24, 0x97	; 151
    195c:	91 05       	cpc	r25, r1
    195e:	a8 f0       	brcs	.+42     	; 0x198a <isa_nw_task+0x9a>
    1960:	80 91 d4 0b 	lds	r24, 0x0BD4
    1964:	90 91 d5 0b 	lds	r25, 0x0BD5
    1968:	62 e3       	ldi	r22, 0x32	; 50
    196a:	70 e0       	ldi	r23, 0x00	; 0
    196c:	0e 94 92 41 	call	0x8324	; 0x8324 <__udivmodhi4>
    1970:	90 93 d5 0b 	sts	0x0BD5, r25
    1974:	80 93 d4 0b 	sts	0x0BD4, r24
    1978:	80 91 c9 0b 	lds	r24, 0x0BC9
    197c:	90 91 ca 0b 	lds	r25, 0x0BCA
    1980:	01 96       	adiw	r24, 0x01	; 1
    1982:	90 93 ca 0b 	sts	0x0BCA, r25
    1986:	80 93 c9 0b 	sts	0x0BC9, r24
    198a:	20 91 d4 0b 	lds	r18, 0x0BD4
    198e:	30 91 d5 0b 	lds	r19, 0x0BD5
    1992:	80 91 01 0c 	lds	r24, 0x0C01
    1996:	81 30       	cpi	r24, 0x01	; 1
    1998:	71 f5       	brne	.+92     	; 0x19f6 <isa_nw_task+0x106>
    199a:	c9 01       	movw	r24, r18
    199c:	62 e3       	ldi	r22, 0x32	; 50
    199e:	70 e0       	ldi	r23, 0x00	; 0
    19a0:	0e 94 92 41 	call	0x8324	; 0x8324 <__udivmodhi4>
    19a4:	ec 01       	movw	r28, r24
    19a6:	18 2f       	mov	r17, r24
    19a8:	e0 91 1e 08 	lds	r30, 0x081E
    19ac:	ee 0d       	add	r30, r14
    19ae:	e0 93 1e 08 	sts	0x081E, r30
    19b2:	ff 27       	eor	r31, r31
    19b4:	ef 70       	andi	r30, 0x0F	; 15
    19b6:	f0 70       	andi	r31, 0x00	; 0
    19b8:	ea 5d       	subi	r30, 0xDA	; 218
    19ba:	f3 4f       	sbci	r31, 0xF3	; 243
    19bc:	80 81       	ld	r24, Z
    19be:	80 93 25 0c 	sts	0x0C25, r24
    19c2:	0e 94 73 0c 	call	0x18e6	; 0x18e6 <isa_set_channel>
    19c6:	8c 2f       	mov	r24, r28
    19c8:	0e 94 2d 13 	call	0x265a	; 0x265a <findLink>
    19cc:	fc 01       	movw	r30, r24
    19ce:	89 2b       	or	r24, r25
    19d0:	01 f1       	breq	.+64     	; 0x1a12 <isa_nw_task+0x122>
    19d2:	84 81       	ldd	r24, Z+4	; 0x04
    19d4:	88 30       	cpi	r24, 0x08	; 8
    19d6:	29 f4       	brne	.+10     	; 0x19e2 <isa_nw_task+0xf2>
    19d8:	6c 2f       	mov	r22, r28
    19da:	cf 01       	movw	r24, r30
    19dc:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <_isa_rx>
    19e0:	18 c0       	rjmp	.+48     	; 0x1a12 <isa_nw_task+0x122>
    19e2:	81 30       	cpi	r24, 0x01	; 1
    19e4:	11 f0       	breq	.+4      	; 0x19ea <isa_nw_task+0xfa>
    19e6:	84 30       	cpi	r24, 0x04	; 4
    19e8:	a1 f4       	brne	.+40     	; 0x1a12 <isa_nw_task+0x122>
    19ea:	61 2f       	mov	r22, r17
    19ec:	77 27       	eor	r23, r23
    19ee:	cf 01       	movw	r24, r30
    19f0:	0e 94 28 07 	call	0xe50	; 0xe50 <_isa_tx>
    19f4:	0e c0       	rjmp	.+28     	; 0x1a12 <isa_nw_task+0x122>
    19f6:	80 91 27 09 	lds	r24, 0x0927
    19fa:	82 30       	cpi	r24, 0x02	; 2
    19fc:	39 f0       	breq	.+14     	; 0x1a0c <isa_nw_task+0x11c>
    19fe:	10 92 22 08 	sts	0x0822, r1
    1a02:	10 92 21 08 	sts	0x0821, r1
    1a06:	0e 94 75 06 	call	0xcea	; 0xcea <_isa_init_sync>
    1a0a:	01 c0       	rjmp	.+2      	; 0x1a0e <isa_nw_task+0x11e>
    1a0c:	81 e0       	ldi	r24, 0x01	; 1
    1a0e:	80 93 01 0c 	sts	0x0C01, r24
    1a12:	20 91 ac 0c 	lds	r18, 0x0CAC
    1a16:	30 91 ad 0c 	lds	r19, 0x0CAD
    1a1a:	80 91 74 05 	lds	r24, 0x0574
    1a1e:	90 91 75 05 	lds	r25, 0x0575
    1a22:	28 17       	cp	r18, r24
    1a24:	39 07       	cpc	r19, r25
    1a26:	88 f1       	brcs	.+98     	; 0x1a8a <isa_nw_task+0x19a>
    1a28:	80 91 27 09 	lds	r24, 0x0927
    1a2c:	82 30       	cpi	r24, 0x02	; 2
    1a2e:	69 f1       	breq	.+90     	; 0x1a8a <isa_nw_task+0x19a>
    1a30:	10 92 01 0c 	sts	0x0C01, r1
    1a34:	10 92 ad 0c 	sts	0x0CAD, r1
    1a38:	10 92 ac 0c 	sts	0x0CAC, r1
    1a3c:	10 92 d5 0b 	sts	0x0BD5, r1
    1a40:	10 92 d4 0b 	sts	0x0BD4, r1
    1a44:	80 91 1f 09 	lds	r24, 0x091F
    1a48:	90 91 20 09 	lds	r25, 0x0920
    1a4c:	01 96       	adiw	r24, 0x01	; 1
    1a4e:	90 93 20 09 	sts	0x0920, r25
    1a52:	80 93 1f 09 	sts	0x091F, r24
    1a56:	80 91 2f 08 	lds	r24, 0x082F
    1a5a:	81 30       	cpi	r24, 0x01	; 1
    1a5c:	49 f0       	breq	.+18     	; 0x1a70 <isa_nw_task+0x180>
    1a5e:	e0 91 21 09 	lds	r30, 0x0921
    1a62:	e0 93 1e 08 	sts	0x081E, r30
    1a66:	ff 27       	eor	r31, r31
    1a68:	ea 5d       	subi	r30, 0xDA	; 218
    1a6a:	f3 4f       	sbci	r31, 0xF3	; 243
    1a6c:	80 81       	ld	r24, Z
    1a6e:	04 c0       	rjmp	.+8      	; 0x1a78 <isa_nw_task+0x188>
    1a70:	10 92 1e 08 	sts	0x081E, r1
    1a74:	80 91 26 0c 	lds	r24, 0x0C26
    1a78:	80 93 25 0c 	sts	0x0C25, r24
    1a7c:	80 91 25 0c 	lds	r24, 0x0C25
    1a80:	0e 94 73 0c 	call	0x18e6	; 0x18e6 <isa_set_channel>
    1a84:	ee 24       	eor	r14, r14
    1a86:	ff 24       	eor	r15, r15
    1a88:	4e cf       	rjmp	.-356    	; 0x1926 <isa_nw_task+0x36>
    1a8a:	80 91 d4 0b 	lds	r24, 0x0BD4
    1a8e:	90 91 d5 0b 	lds	r25, 0x0BD5
    1a92:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <isa_get_slots_until_next_wakeup>
    1a96:	7c 01       	movw	r14, r24
    1a98:	80 91 d4 0b 	lds	r24, 0x0BD4
    1a9c:	90 91 d5 0b 	lds	r25, 0x0BD5
    1aa0:	8e 0d       	add	r24, r14
    1aa2:	9f 1d       	adc	r25, r15
    1aa4:	90 93 d5 0b 	sts	0x0BD5, r25
    1aa8:	80 93 d4 0b 	sts	0x0BD4, r24
    1aac:	80 e0       	ldi	r24, 0x00	; 0
    1aae:	90 e0       	ldi	r25, 0x00	; 0
    1ab0:	0e 94 11 27 	call	0x4e22	; 0x4e22 <nrk_led_clr>
    1ab4:	10 92 cc 0b 	sts	0x0BCC, r1
    1ab8:	10 92 cb 0b 	sts	0x0BCB, r1
    1abc:	80 91 27 09 	lds	r24, 0x0927
    1ac0:	82 30       	cpi	r24, 0x02	; 2
    1ac2:	a9 f0       	breq	.+42     	; 0x1aee <isa_nw_task+0x1fe>
    1ac4:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <isDiscoveryAlertDue>
    1ac8:	88 23       	and	r24, r24
    1aca:	89 f0       	breq	.+34     	; 0x1aee <isa_nw_task+0x1fe>
    1acc:	0e 94 c7 13 	call	0x278e	; 0x278e <sendAdv>
    1ad0:	8f 3f       	cpi	r24, 0xFF	; 255
    1ad2:	11 f4       	brne	.+4      	; 0x1ad8 <isa_nw_task+0x1e8>
    1ad4:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <printIsaError>
    1ad8:	c6 01       	movw	r24, r12
    1ada:	0e 94 c1 3f 	call	0x7f82	; 0x7f82 <puts>
    1ade:	0e 94 75 12 	call	0x24ea	; 0x24ea <updateLastSentTime>
    1ae2:	60 91 ae 0c 	lds	r22, 0x0CAE
    1ae6:	61 50       	subi	r22, 0x01	; 1
    1ae8:	8d e0       	ldi	r24, 0x0D	; 13
    1aea:	0e 94 1c 05 	call	0xa38	; 0xa38 <setNewDisplay>
    1aee:	c7 01       	movw	r24, r14
    1af0:	0e 94 5a 32 	call	0x64b4	; 0x64b4 <nrk_wait_until_next_n_periods>
    1af4:	80 e0       	ldi	r24, 0x00	; 0
    1af6:	90 e0       	ldi	r25, 0x00	; 0
    1af8:	0e 94 2e 27 	call	0x4e5c	; 0x4e5c <nrk_led_set>
    1afc:	14 cf       	rjmp	.-472    	; 0x1926 <isa_nw_task+0x36>

00001afe <isa_init>:
	    //printf("%d\r\n",cnt++);
	  //  printf( "%c",local_rx_buf[PKT_DATA_START]);
	    isa_rx_pkt_release();
	   // printf("\r\n");

	}
    1afe:	ff 92       	push	r15
    1b00:	0f 93       	push	r16
    1b02:	1f 93       	push	r17
    1b04:	f8 2e       	mov	r15, r24
    1b06:	16 2f       	mov	r17, r22
    1b08:	04 2f       	mov	r16, r20

    //   if(isa_tx_pkt_check(MY_TX_SLOT)!=0){
       	  // printf("Pending TX\r\n");
    //   	}
    1b0a:	0e 94 c4 2c 	call	0x5988	; 0x5988 <nrk_signal_create>
    1b0e:	80 93 c5 0b 	sts	0x0BC5, r24
   //    else{
    1b12:	8f 3f       	cpi	r24, 0xFF	; 255
    1b14:	19 f4       	brne	.+6      	; 0x1b1c <isa_init+0x1e>
	/*sprintf( &tx_buf[PKT_DATA_START],local_rx_buf+PKT_DATA_START);
    1b16:	86 e3       	ldi	r24, 0x36	; 54
    1b18:	91 e0       	ldi	r25, 0x01	; 1
    1b1a:	08 c0       	rjmp	.+16     	; 0x1b2c <isa_init+0x2e>
	length=strlen(&rx_buf[PKT_DATA_START])+PKT_DATA_START+1; //change
	//isa_tx_pkt(rx_buf,length,configDHDR(),my_tx_slot[0]);//change forward the message from recipient
	isa_tx_pkt(rx_buf,length,configDHDR(),MY_TX_SLOT);
	isa_wait_until_rx_or_tx ();*/
    1b1c:	0e 94 c4 2c 	call	0x5988	; 0x5988 <nrk_signal_create>
    1b20:	80 93 d3 0b 	sts	0x0BD3, r24
    	   if (cnt ==0 ){
    1b24:	8f 3f       	cpi	r24, 0xFF	; 255
    1b26:	79 f4       	brne	.+30     	; 0x1b46 <isa_init+0x48>
    		   MESSAGE *message;
    1b28:	8f e0       	ldi	r24, 0x0F	; 15
    1b2a:	91 e0       	ldi	r25, 0x01	; 1
    1b2c:	0e 94 dc 27 	call	0x4fb8	; 0x4fb8 <nrk_kprintf>
    		   	message = &tx_buf[PKT_DATA_START];
    1b30:	e0 91 ba 1b 	lds	r30, 0x1BBA
    1b34:	f0 91 bb 1b 	lds	r31, 0x1BBB
    1b38:	60 85       	ldd	r22, Z+8	; 0x08
    1b3a:	8e e0       	ldi	r24, 0x0E	; 14
    1b3c:	0e 94 bd 2b 	call	0x577a	; 0x577a <nrk_kernel_error_add>
    1b40:	8f ef       	ldi	r24, 0xFF	; 255
    1b42:	90 e0       	ldi	r25, 0x00	; 0
    1b44:	70 c0       	rjmp	.+224    	; 0x1c26 <isa_init+0x128>
    		   	message->type = DUMMY_PAYLOAD;
	sprintf( &message->data,"2");
	length=strlen(&tx_buf[PKT_DATA_START])+PKT_DATA_START+2;
	sendPacket(1,0, length, tx_buf, transmitCallback1);
	//sendPacket(5,0, length, tx_buf, transmitCallback1);
    1b46:	10 92 3e 08 	sts	0x083E, r1
    1b4a:	10 92 3d 08 	sts	0x083D, r1
	//sendPacket(6, length, tx_buf, transmitCallback1);
    1b4e:	10 92 3c 08 	sts	0x083C, r1
    	cnt++;
    	   }

    1b52:	0e 94 36 39 	call	0x726c	; 0x726c <_nrk_high_speed_timer_start>
	/*sprintf( &tx_buf2[PKT_DATA_START],"Hello from slot 2!");
	length=strlen(&tx_buf2[PKT_DATA_START])+PKT_DATA_START+1;
	isa_tx_pkt(tx_buf2,length,configDHDR(),2);
    1b56:	10 92 ca 0b 	sts	0x0BCA, r1
    1b5a:	10 92 c9 0b 	sts	0x0BC9, r1
	isa_wait_until_rx_or_tx ();*/
    1b5e:	84 e6       	ldi	r24, 0x64	; 100
    1b60:	90 e0       	ldi	r25, 0x00	; 0
    1b62:	90 93 d5 0b 	sts	0x0BD5, r25
    1b66:	80 93 d4 0b 	sts	0x0BD4, r24
    	   setMatrix();
    1b6a:	10 92 01 0c 	sts	0x0C01, r1
    	     	  nrk_wait_until_next_period();
    1b6e:	10 92 22 09 	sts	0x0922, r1
    //   }
    1b72:	10 92 ad 0c 	sts	0x0CAD, r1
    1b76:	10 92 ac 0c 	sts	0x0CAC, r1
    //	   nrk_terminate_task();
    1b7a:	f0 92 27 09 	sts	0x0927, r15
     //  isa_wait_until_rx_or_tx ();
    1b7e:	10 93 2f 08 	sts	0x082F, r17
      // 	putchar('\n');
    1b82:	81 2f       	mov	r24, r17
    1b84:	99 27       	eor	r25, r25
    1b86:	90 93 af 0c 	sts	0x0CAF, r25
    1b8a:	80 93 ae 0c 	sts	0x0CAE, r24
      // 	putchar('\r');
    1b8e:	00 93 21 09 	sts	0x0921, r16
  }
    1b92:	10 92 2d 0b 	sts	0x0B2D, r1
    1b96:	10 92 2e 0b 	sts	0x0B2E, r1
    1b9a:	10 92 2f 0b 	sts	0x0B2F, r1
    1b9e:	10 92 30 0b 	sts	0x0B30, r1
  

    1ba2:	84 e6       	ldi	r24, 0x64	; 100
    1ba4:	80 93 51 08 	sts	0x0851, r24
}
    1ba8:	80 e4       	ldi	r24, 0x40	; 64
    1baa:	9f e1       	ldi	r25, 0x1F	; 31
    1bac:	90 93 50 08 	sts	0x0850, r25
    1bb0:	80 93 4f 08 	sts	0x084F, r24

    1bb4:	80 ea       	ldi	r24, 0xA0	; 160
    1bb6:	9f e0       	ldi	r25, 0x0F	; 15
    1bb8:	90 93 4e 08 	sts	0x084E, r25
    1bbc:	80 93 4d 08 	sts	0x084D, r24

    1bc0:	8f e0       	ldi	r24, 0x0F	; 15
    1bc2:	80 93 4b 08 	sts	0x084B, r24

    1bc6:	81 e8       	ldi	r24, 0x81	; 129
    1bc8:	99 e1       	ldi	r25, 0x19	; 25
    1bca:	90 93 4a 08 	sts	0x084A, r25
    1bce:	80 93 49 08 	sts	0x0849, r24
  TaskOne.task = Task1;
  TaskOne.Ptos = (void *) &Stack1[NRK_APP_STACKSIZE-1];
  TaskOne.Pbos = (void *) &Stack1[0];
  TaskOne.prio = 2;
  TaskOne.FirstActivation = TRUE;
  TaskOne.Type = BASIC_TASK;
    1bd2:	21 e8       	ldi	r18, 0x81	; 129
    1bd4:	39 e1       	ldi	r19, 0x19	; 25
    1bd6:	41 e2       	ldi	r20, 0x21	; 33
    1bd8:	54 e2       	ldi	r21, 0x24	; 36
    1bda:	6f e0       	ldi	r22, 0x0F	; 15
    1bdc:	88 e3       	ldi	r24, 0x38	; 56
    1bde:	98 e0       	ldi	r25, 0x08	; 8
    1be0:	0e 94 1c 22 	call	0x4438	; 0x4438 <rf_init>
  TaskOne.SchType = PREEMPTIVE;
  TaskOne.period.secs = 0;
    1be4:	81 e0       	ldi	r24, 0x01	; 1
    1be6:	80 93 cf 0b 	sts	0x0BCF, r24
  TaskOne.period.nano_secs = 10*NANOS_PER_MS;
  TaskOne.cpu_reserve.secs = 0;
  TaskOne.cpu_reserve.nano_secs = 20*NANOS_PER_MS;
  TaskOne.offset.secs = 0;
    1bea:	10 92 fa 0b 	sts	0x0BFA, r1
  TaskOne.offset.nano_secs= 50*NANOS_PER_MS;
    1bee:	11 30       	cpi	r17, 0x01	; 1
    1bf0:	41 f0       	breq	.+16     	; 0x1c02 <isa_init+0x104>
  nrk_activate_task (&TaskOne);
    1bf2:	00 93 1e 08 	sts	0x081E, r16

    1bf6:	e0 2f       	mov	r30, r16
    1bf8:	ff 27       	eor	r31, r31
    1bfa:	ea 5d       	subi	r30, 0xDA	; 218
    1bfc:	f3 4f       	sbci	r31, 0xF3	; 243
    1bfe:	80 81       	ld	r24, Z
    1c00:	04 c0       	rjmp	.+8      	; 0x1c0a <isa_init+0x10c>

  nrk_kprintf( PSTR("Create Done\r\n") );
    1c02:	10 92 1e 08 	sts	0x081E, r1
}
    1c06:	80 91 26 0c 	lds	r24, 0x0C26
    1c0a:	80 93 25 0c 	sts	0x0C25, r24


    1c0e:	80 91 25 0c 	lds	r24, 0x0C25
    1c12:	0e 94 73 0c 	call	0x18e6	; 0x18e6 <isa_set_channel>
    1c16:	10 92 20 09 	sts	0x0920, r1
    1c1a:	10 92 1f 09 	sts	0x091F, r1
    1c1e:	0e 94 aa 12 	call	0x2554	; 0x2554 <dlmoInit>
    1c22:	81 e0       	ldi	r24, 0x01	; 1
    1c24:	90 e0       	ldi	r25, 0x00	; 0
    1c26:	1f 91       	pop	r17
    1c28:	0f 91       	pop	r16
    1c2a:	ff 90       	pop	r15
    1c2c:	08 95       	ret

00001c2e <isa_wait_until_rx_pkt>:
//Spit out log info

	  	  if (txCount % 1000 == 0){
	  	printf ("Tx: %d\r\nRX: %d\r\nPL:%d", txCount,rxCount, packetsLost);
	  	  }

    1c2e:	80 91 c5 0b 	lds	r24, 0x0BC5
    1c32:	0e 94 4d 2d 	call	0x5a9a	; 0x5a9a <nrk_signal_register>
//nrk_gpio_toggle(NRK_DEBUG_0);
    1c36:	80 91 2d 0b 	lds	r24, 0x0B2D
    1c3a:	88 23       	and	r24, r24
    1c3c:	79 f4       	brne	.+30     	; 0x1c5c <isa_wait_until_rx_pkt+0x2e>
       if( isa_rx_pkt_check()!=0 ) {

    1c3e:	61 e0       	ldi	r22, 0x01	; 1
    1c40:	70 e0       	ldi	r23, 0x00	; 0
    1c42:	80 e0       	ldi	r24, 0x00	; 0
    1c44:	90 e0       	ldi	r25, 0x00	; 0
    1c46:	00 90 c5 0b 	lds	r0, 0x0BC5
    1c4a:	04 c0       	rjmp	.+8      	; 0x1c54 <isa_wait_until_rx_pkt+0x26>
    1c4c:	66 0f       	add	r22, r22
    1c4e:	77 1f       	adc	r23, r23
    1c50:	88 1f       	adc	r24, r24
    1c52:	99 1f       	adc	r25, r25
    1c54:	0a 94       	dec	r0
    1c56:	d2 f7       	brpl	.-12     	; 0x1c4c <isa_wait_until_rx_pkt+0x1e>
    1c58:	0e 94 a7 2f 	call	0x5f4e	; 0x5f4e <nrk_event_wait>
	    local_rx_buf=isa_rx_pkt_get(&length, &rssi);

    1c5c:	81 e0       	ldi	r24, 0x01	; 1
    1c5e:	90 e0       	ldi	r25, 0x00	; 0
    1c60:	08 95       	ret

00001c62 <isa_rx_pkt_get>:
    1c62:	fc 01       	movw	r30, r24
    1c64:	db 01       	movw	r26, r22
    1c66:	80 91 2d 0b 	lds	r24, 0x0B2D
    1c6a:	88 23       	and	r24, r24
    1c6c:	29 f4       	brne	.+10     	; 0x1c78 <isa_rx_pkt_get+0x16>
    1c6e:	10 82       	st	Z, r1
    1c70:	1c 92       	st	X, r1
    1c72:	80 e0       	ldi	r24, 0x00	; 0
    1c74:	90 e0       	ldi	r25, 0x00	; 0
    1c76:	08 95       	ret
    1c78:	80 91 3b 08 	lds	r24, 0x083B
    1c7c:	80 83       	st	Z, r24
    1c7e:	80 91 40 08 	lds	r24, 0x0840
    1c82:	8c 93       	st	X, r24
    1c84:	80 91 3d 08 	lds	r24, 0x083D
    1c88:	90 91 3e 08 	lds	r25, 0x083E
    1c8c:	08 95       	ret

00001c8e <setIsaError>:



void setIsaError(uint8_t value)
{
	isaError = value;
    1c8e:	80 93 2a 08 	sts	0x082A, r24
    1c92:	08 95       	ret

00001c94 <getIsaError>:
}

uint8_t getIsaError ()
{
    1c94:	80 91 2a 08 	lds	r24, 0x082A
	return isaError;
}
    1c98:	99 27       	eor	r25, r25
    1c9a:	08 95       	ret

00001c9c <printIsaError>:

void printIsaError()
{
	switch(isaError)
    1c9c:	80 91 2a 08 	lds	r24, 0x082A
    1ca0:	83 30       	cpi	r24, 0x03	; 3
    1ca2:	a1 f0       	breq	.+40     	; 0x1ccc <printIsaError+0x30>
    1ca4:	84 30       	cpi	r24, 0x04	; 4
    1ca6:	28 f4       	brcc	.+10     	; 0x1cb2 <printIsaError+0x16>
    1ca8:	81 30       	cpi	r24, 0x01	; 1
    1caa:	51 f0       	breq	.+20     	; 0x1cc0 <printIsaError+0x24>
    1cac:	82 30       	cpi	r24, 0x02	; 2
    1cae:	d1 f4       	brne	.+52     	; 0x1ce4 <printIsaError+0x48>
    1cb0:	0a c0       	rjmp	.+20     	; 0x1cc6 <printIsaError+0x2a>
    1cb2:	85 30       	cpi	r24, 0x05	; 5
    1cb4:	89 f0       	breq	.+34     	; 0x1cd8 <printIsaError+0x3c>
    1cb6:	85 30       	cpi	r24, 0x05	; 5
    1cb8:	60 f0       	brcs	.+24     	; 0x1cd2 <printIsaError+0x36>
    1cba:	86 30       	cpi	r24, 0x06	; 6
    1cbc:	99 f4       	brne	.+38     	; 0x1ce4 <printIsaError+0x48>
    1cbe:	0f c0       	rjmp	.+30     	; 0x1cde <printIsaError+0x42>
	{
	case LINK_CAPACITY_ERROR :
	printf ("ISA_ERROR : LINK_CAPACITY_ERROR \n\r" );
    1cc0:	86 e7       	ldi	r24, 0x76	; 118
    1cc2:	95 e0       	ldi	r25, 0x05	; 5
    1cc4:	11 c0       	rjmp	.+34     	; 0x1ce8 <printIsaError+0x4c>
	break;
	case NEIGHBOR_CAPACITY_ERROR :
		printf ("ISA_ERROR : NEIGHBOR_CAPACITY_ERROR\n\r" );
    1cc6:	89 e9       	ldi	r24, 0x99	; 153
    1cc8:	95 e0       	ldi	r25, 0x05	; 5
    1cca:	0e c0       	rjmp	.+28     	; 0x1ce8 <printIsaError+0x4c>
		break;
	case TRANSMIT_QUEUE_CAPACITY_ERROR :
		printf ("ISA_ERROR : TRANSMIT_QUEUE_CAPACITY_ERROR\n\r" );
    1ccc:	8f eb       	ldi	r24, 0xBF	; 191
    1cce:	95 e0       	ldi	r25, 0x05	; 5
    1cd0:	0b c0       	rjmp	.+22     	; 0x1ce8 <printIsaError+0x4c>
		break;
	case MAX_PAYLOAD_ERROR :
		printf ("ISA_ERROR : MAX_PAYLOAD_ERROR\n\r");
    1cd2:	8b ee       	ldi	r24, 0xEB	; 235
    1cd4:	95 e0       	ldi	r25, 0x05	; 5
    1cd6:	08 c0       	rjmp	.+16     	; 0x1ce8 <printIsaError+0x4c>
		break;
	case CANDIDATE_CAPACITY_ERROR :
		printf ("ISA_ERROR : CANDIDATE CAPACITY ERROR\n\r");
    1cd8:	8b e0       	ldi	r24, 0x0B	; 11
    1cda:	96 e0       	ldi	r25, 0x06	; 6
    1cdc:	05 c0       	rjmp	.+10     	; 0x1ce8 <printIsaError+0x4c>
		break;
	case GRAPH_CAPACITY_ERROR :
			printf ("ISA_ERROR : GRAPH CAPACITY ERROR\n\r");
    1cde:	82 e3       	ldi	r24, 0x32	; 50
    1ce0:	96 e0       	ldi	r25, 0x06	; 6
    1ce2:	02 c0       	rjmp	.+4      	; 0x1ce8 <printIsaError+0x4c>
			break;
	default: printf ("Unknown ISA_ERROR");
    1ce4:	85 e5       	ldi	r24, 0x55	; 85
    1ce6:	96 e0       	ldi	r25, 0x06	; 6
    1ce8:	9f 93       	push	r25
    1cea:	8f 93       	push	r24
    1cec:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    1cf0:	0f 90       	pop	r0
    1cf2:	0f 90       	pop	r0
    1cf4:	08 95       	ret

00001cf6 <findGraph>:

  //addGraph(1,3,5,3,4);
 // addLink(2,1,1,1,0);//transmitting on slot 2
 // addLink(10,1,1,8,0); //receiving on slot 10
 // addLink(1,1,1,8,0);//receiving on slot 1

    1cf6:	ac 01       	movw	r20, r24
    1cf8:	20 e0       	ldi	r18, 0x00	; 0
    1cfa:	30 e0       	ldi	r19, 0x00	; 0
/*
  configureSlot(2, 1, TX_NO_ADV, true,0,0,0,0,0,NEIGHBOR);
  configureSlot(7,5,TX_NO_ADV,false,1,1,5,0,0,GRAPH_NEIGHBOR);
    1cfc:	f9 01       	movw	r30, r18
    1cfe:	ee 0f       	add	r30, r30
    1d00:	ff 1f       	adc	r31, r31
    1d02:	c9 01       	movw	r24, r18
    1d04:	73 e0       	ldi	r23, 0x03	; 3
    1d06:	88 0f       	add	r24, r24
    1d08:	99 1f       	adc	r25, r25
    1d0a:	7a 95       	dec	r23
    1d0c:	e1 f7       	brne	.-8      	; 0x1d06 <findGraph+0x10>
    1d0e:	e8 0f       	add	r30, r24
    1d10:	f9 1f       	adc	r31, r25
    1d12:	e0 56       	subi	r30, 0x60	; 96
    1d14:	f1 4f       	sbci	r31, 0xF1	; 241
    1d16:	80 81       	ld	r24, Z
    1d18:	91 81       	ldd	r25, Z+1	; 0x01
    1d1a:	48 17       	cp	r20, r24
    1d1c:	59 07       	cpc	r21, r25
    1d1e:	39 f4       	brne	.+14     	; 0x1d2e <findGraph+0x38>
    1d20:	8a e0       	ldi	r24, 0x0A	; 10
    1d22:	28 9f       	mul	r18, r24
    1d24:	c0 01       	movw	r24, r0
    1d26:	11 24       	eor	r1, r1
    1d28:	80 56       	subi	r24, 0x60	; 96
    1d2a:	91 4f       	sbci	r25, 0xF1	; 241
    1d2c:	08 95       	ret
    1d2e:	2f 5f       	subi	r18, 0xFF	; 255
    1d30:	3f 4f       	sbci	r19, 0xFF	; 255
  //addGraph(1,3,5,3,4);
 // addLink(2,1,1,1,0);//transmitting on slot 2
 // addLink(10,1,1,8,0); //receiving on slot 10
 // addLink(1,1,1,8,0);//receiving on slot 1

/*
    1d32:	2a 30       	cpi	r18, 0x0A	; 10
    1d34:	31 05       	cpc	r19, r1
    1d36:	11 f7       	brne	.-60     	; 0x1cfc <findGraph+0x6>
    1d38:	80 e0       	ldi	r24, 0x00	; 0
    1d3a:	90 e0       	ldi	r25, 0x00	; 0
  configureSlot(2, 1, TX_NO_ADV, true,0,0,0,0,0,NEIGHBOR);
  configureSlot(7,5,TX_NO_ADV,false,1,1,5,0,0,GRAPH_NEIGHBOR);
 // configureSlot(5, 1, TX_NO_ADV, true,0,0,0,0,0, NEIGHBOR);
  //configureSlot(2,3, RX, false,0,0,0,0,0, NEIGHBOR);
  //configureSlot(7,10,ADV,false,0,0,0,0,0, NEIGHBOR);
    1d3c:	08 95       	ret

00001d3e <findNeighbor>:
  //configureSlot(6,3, RX, false,0,0,0,0,0, NEIGHBOR);
  configureSlot(11,0, RX, false,0,0,0,0,0, NEIGHBOR);
    1d3e:	ac 01       	movw	r20, r24
    1d40:	20 e0       	ldi	r18, 0x00	; 0
    1d42:	30 e0       	ldi	r19, 0x00	; 0
  configureSlot(8,0, RX, false,0,0,0,0,0, NEIGHBOR);

  configureSlot(19,0,ADV,false,0,0,0,0,0,NEIGHBOR);
    1d44:	f9 01       	movw	r30, r18
    1d46:	b4 e0       	ldi	r27, 0x04	; 4
    1d48:	ee 0f       	add	r30, r30
    1d4a:	ff 1f       	adc	r31, r31
    1d4c:	ba 95       	dec	r27
    1d4e:	e1 f7       	brne	.-8      	; 0x1d48 <findNeighbor+0xa>
    1d50:	e2 0f       	add	r30, r18
    1d52:	f3 1f       	adc	r31, r19
    1d54:	ec 5f       	subi	r30, 0xFC	; 252
    1d56:	f0 4f       	sbci	r31, 0xF0	; 240
    1d58:	81 81       	ldd	r24, Z+1	; 0x01
    1d5a:	92 81       	ldd	r25, Z+2	; 0x02
    1d5c:	48 17       	cp	r20, r24
    1d5e:	59 07       	cpc	r21, r25
    1d60:	39 f4       	brne	.+14     	; 0x1d70 <findNeighbor+0x32>
    1d62:	81 e1       	ldi	r24, 0x11	; 17
    1d64:	28 9f       	mul	r18, r24
    1d66:	c0 01       	movw	r24, r0
    1d68:	11 24       	eor	r1, r1
    1d6a:	8c 5f       	subi	r24, 0xFC	; 252
    1d6c:	90 4f       	sbci	r25, 0xF0	; 240
    1d6e:	08 95       	ret
    1d70:	2f 5f       	subi	r18, 0xFF	; 255
    1d72:	3f 4f       	sbci	r19, 0xFF	; 255
 // configureSlot(5, 1, TX_NO_ADV, true,0,0,0,0,0, NEIGHBOR);
  //configureSlot(2,3, RX, false,0,0,0,0,0, NEIGHBOR);
  //configureSlot(7,10,ADV,false,0,0,0,0,0, NEIGHBOR);
  //configureSlot(6,3, RX, false,0,0,0,0,0, NEIGHBOR);
  configureSlot(11,0, RX, false,0,0,0,0,0, NEIGHBOR);
  configureSlot(8,0, RX, false,0,0,0,0,0, NEIGHBOR);
    1d74:	20 31       	cpi	r18, 0x10	; 16
    1d76:	31 05       	cpc	r19, r1
    1d78:	29 f7       	brne	.-54     	; 0x1d44 <findNeighbor+0x6>
    1d7a:	80 e0       	ldi	r24, 0x00	; 0
    1d7c:	90 e0       	ldi	r25, 0x00	; 0

  configureSlot(19,0,ADV,false,0,0,0,0,0,NEIGHBOR);
  configureSlot(20,0, RX, false,0,0,0,0,0, NEIGHBOR);
  configureSlot(21,0, RX, false,0,0,0,0,0, NEIGHBOR);
  configureSlot(22,0, RX, false,0,0,0,0,0, NEIGHBOR);
    1d7e:	08 95       	ret

00001d80 <isTransmitLinkPresent>:
  TaskOne.prio = 2;
  TaskOne.FirstActivation = TRUE;
  TaskOne.Type = BASIC_TASK;
  TaskOne.SchType = PREEMPTIVE;
  TaskOne.period.secs = 0;
  TaskOne.period.nano_secs = 10*NANOS_PER_MS;
    1d80:	0f 93       	push	r16
    1d82:	1f 93       	push	r17
    1d84:	cf 93       	push	r28
    1d86:	df 93       	push	r29
    1d88:	ec 01       	movw	r28, r24
  TaskOne.cpu_reserve.secs = 0;
  TaskOne.cpu_reserve.nano_secs = 20*NANOS_PER_MS;
  TaskOne.offset.secs = 0;
  TaskOne.offset.nano_secs= 50*NANOS_PER_MS;
  nrk_activate_task (&TaskOne);
    1d8a:	8c 01       	movw	r16, r24
    1d8c:	0c 5f       	subi	r16, 0xFC	; 252
    1d8e:	1f 4f       	sbci	r17, 0xFF	; 255
    1d90:	60 e0       	ldi	r22, 0x00	; 0
    1d92:	70 e0       	ldi	r23, 0x00	; 0


  nrk_kprintf( PSTR("Create Done\r\n") );
}

    1d94:	cb 01       	movw	r24, r22
    1d96:	88 0f       	add	r24, r24
    1d98:	99 1f       	adc	r25, r25
    1d9a:	dc 01       	movw	r26, r24
    1d9c:	23 e0       	ldi	r18, 0x03	; 3
    1d9e:	aa 0f       	add	r26, r26
    1da0:	bb 1f       	adc	r27, r27
    1da2:	2a 95       	dec	r18
    1da4:	e1 f7       	brne	.-8      	; 0x1d9e <isTransmitLinkPresent+0x1e>
    1da6:	a8 0f       	add	r26, r24
    1da8:	b9 1f       	adc	r27, r25
    1daa:	a0 55       	subi	r26, 0x50	; 80
    1dac:	b3 4f       	sbci	r27, 0xF3	; 243
    1dae:	fd 01       	movw	r30, r26
    1db0:	97 81       	ldd	r25, Z+7	; 0x07

    1db2:	8c 91       	ld	r24, X
    1db4:	88 23       	and	r24, r24
    1db6:	59 f1       	breq	.+86     	; 0x1e0e <isTransmitLinkPresent+0x8e>
    1db8:	84 81       	ldd	r24, Z+4	; 0x04
    1dba:	81 30       	cpi	r24, 0x01	; 1
    1dbc:	41 f5       	brne	.+80     	; 0x1e0e <isTransmitLinkPresent+0x8e>
  nrk_activate_task (&TaskOne);


  nrk_kprintf( PSTR("Create Done\r\n") );
}

    1dbe:	49 2f       	mov	r20, r25
    1dc0:	40 73       	andi	r20, 0x30	; 48

    1dc2:	42 95       	swap	r20
    1dc4:	4f 70       	andi	r20, 0x0F	; 15
    1dc6:	20 85       	ldd	r18, Z+8	; 0x08
    1dc8:	31 85       	ldd	r19, Z+9	; 0x09
    1dca:	8b 81       	ldd	r24, Y+3	; 0x03
    1dcc:	99 27       	eor	r25, r25
    1dce:	f9 01       	movw	r30, r18
    1dd0:	21 81       	ldd	r18, Z+1	; 0x01
    1dd2:	32 81       	ldd	r19, Z+2	; 0x02
    1dd4:	28 17       	cp	r18, r24
    1dd6:	39 07       	cpc	r19, r25
    1dd8:	21 f4       	brne	.+8      	; 0x1de2 <isTransmitLinkPresent+0x62>
    1dda:	44 23       	and	r20, r20
    1ddc:	09 f1       	breq	.+66     	; 0x1e20 <isTransmitLinkPresent+0xa0>
    1dde:	42 30       	cpi	r20, 0x02	; 2
    1de0:	f9 f0       	breq	.+62     	; 0x1e20 <isTransmitLinkPresent+0xa0>
    1de2:	fd 01       	movw	r30, r26
    1de4:	82 85       	ldd	r24, Z+10	; 0x0a
    1de6:	93 85       	ldd	r25, Z+11	; 0x0b
    1de8:	fc 01       	movw	r30, r24
    1dea:	80 81       	ld	r24, Z
    1dec:	91 81       	ldd	r25, Z+1	; 0x01
    1dee:	89 2b       	or	r24, r25
    1df0:	71 f0       	breq	.+28     	; 0x1e0e <isTransmitLinkPresent+0x8e>
    1df2:	fd 01       	movw	r30, r26
    1df4:	a2 85       	ldd	r26, Z+10	; 0x0a
    1df6:	b3 85       	ldd	r27, Z+11	; 0x0b
    1df8:	f8 01       	movw	r30, r16
    1dfa:	82 81       	ldd	r24, Z+2	; 0x02
    1dfc:	99 27       	eor	r25, r25
    1dfe:	2d 91       	ld	r18, X+
    1e00:	3c 91       	ld	r19, X
    1e02:	28 17       	cp	r18, r24
    1e04:	39 07       	cpc	r19, r25
    1e06:	19 f4       	brne	.+6      	; 0x1e0e <isTransmitLinkPresent+0x8e>
    1e08:	41 50       	subi	r20, 0x01	; 1
    1e0a:	42 30       	cpi	r20, 0x02	; 2
    1e0c:	48 f0       	brcs	.+18     	; 0x1e20 <isTransmitLinkPresent+0xa0>
    1e0e:	6f 5f       	subi	r22, 0xFF	; 255
    1e10:	7f 4f       	sbci	r23, 0xFF	; 255
  TaskOne.cpu_reserve.nano_secs = 20*NANOS_PER_MS;
  TaskOne.offset.secs = 0;
  TaskOne.offset.nano_secs= 50*NANOS_PER_MS;
  nrk_activate_task (&TaskOne);


    1e12:	64 31       	cpi	r22, 0x14	; 20
    1e14:	71 05       	cpc	r23, r1
    1e16:	09 f0       	breq	.+2      	; 0x1e1a <isTransmitLinkPresent+0x9a>
    1e18:	bd cf       	rjmp	.-134    	; 0x1d94 <isTransmitLinkPresent+0x14>
    1e1a:	80 e0       	ldi	r24, 0x00	; 0
    1e1c:	90 e0       	ldi	r25, 0x00	; 0
    1e1e:	02 c0       	rjmp	.+4      	; 0x1e24 <isTransmitLinkPresent+0xa4>
    1e20:	81 e0       	ldi	r24, 0x01	; 1
    1e22:	90 e0       	ldi	r25, 0x00	; 0
    1e24:	df 91       	pop	r29
    1e26:	cf 91       	pop	r28
    1e28:	1f 91       	pop	r17
    1e2a:	0f 91       	pop	r16
    1e2c:	08 95       	ret

00001e2e <isa_get_slots_until_next_wakeup>:
    1e2e:	2f 92       	push	r2
    1e30:	3f 92       	push	r3
    1e32:	4f 92       	push	r4
    1e34:	5f 92       	push	r5
    1e36:	6f 92       	push	r6
    1e38:	7f 92       	push	r7
    1e3a:	8f 92       	push	r8
    1e3c:	9f 92       	push	r9
    1e3e:	af 92       	push	r10
    1e40:	bf 92       	push	r11
    1e42:	cf 92       	push	r12
    1e44:	df 92       	push	r13
    1e46:	ef 92       	push	r14
    1e48:	ff 92       	push	r15
    1e4a:	0f 93       	push	r16
    1e4c:	1f 93       	push	r17
    1e4e:	cf 93       	push	r28
    1e50:	df 93       	push	r29
    1e52:	cd b7       	in	r28, 0x3d	; 61
    1e54:	de b7       	in	r29, 0x3e	; 62
    1e56:	2e 97       	sbiw	r28, 0x0e	; 14
    1e58:	0f b6       	in	r0, 0x3f	; 63
    1e5a:	f8 94       	cli
    1e5c:	de bf       	out	0x3e, r29	; 62
    1e5e:	0f be       	out	0x3f, r0	; 63
    1e60:	cd bf       	out	0x3d, r28	; 61
    1e62:	62 e3       	ldi	r22, 0x32	; 50
    1e64:	70 e0       	ldi	r23, 0x00	; 0
    1e66:	0e 94 92 41 	call	0x8324	; 0x8324 <__udivmodhi4>
    1e6a:	89 83       	std	Y+1, r24	; 0x01
    1e6c:	28 2f       	mov	r18, r24
    1e6e:	33 27       	eor	r19, r19
    1e70:	3c 87       	std	Y+12, r19	; 0x0c
    1e72:	2b 87       	std	Y+11, r18	; 0x0b
    1e74:	89 01       	movw	r16, r18
    1e76:	0f 5f       	subi	r16, 0xFF	; 255
    1e78:	1f 4f       	sbci	r17, 0xFF	; 255
    1e7a:	21 e0       	ldi	r18, 0x01	; 1
    1e7c:	30 e0       	ldi	r19, 0x00	; 0
    1e7e:	40 e0       	ldi	r20, 0x00	; 0
    1e80:	50 e0       	ldi	r21, 0x00	; 0
    1e82:	60 e0       	ldi	r22, 0x00	; 0
    1e84:	70 e0       	ldi	r23, 0x00	; 0
    1e86:	80 e0       	ldi	r24, 0x00	; 0
    1e88:	90 e0       	ldi	r25, 0x00	; 0
    1e8a:	0e 94 99 3e 	call	0x7d32	; 0x7d32 <__ashldi3>
    1e8e:	22 2e       	mov	r2, r18
    1e90:	33 2e       	mov	r3, r19
    1e92:	44 2e       	mov	r4, r20
    1e94:	55 2e       	mov	r5, r21
    1e96:	66 2e       	mov	r6, r22
    1e98:	77 2e       	mov	r7, r23
    1e9a:	88 2e       	mov	r8, r24
    1e9c:	99 2e       	mov	r9, r25
    1e9e:	39 81       	ldd	r19, Y+1	; 0x01
    1ea0:	3f 5f       	subi	r19, 0xFF	; 255
    1ea2:	3a 83       	std	Y+2, r19	; 0x02
    1ea4:	80 91 24 0e 	lds	r24, 0x0E24
    1ea8:	8b 83       	std	Y+3, r24	; 0x03
    1eaa:	90 91 25 0e 	lds	r25, 0x0E25
    1eae:	9c 83       	std	Y+4, r25	; 0x04
    1eb0:	e0 91 26 0e 	lds	r30, 0x0E26
    1eb4:	ed 83       	std	Y+5, r30	; 0x05
    1eb6:	f0 91 27 0e 	lds	r31, 0x0E27
    1eba:	fe 83       	std	Y+6, r31	; 0x06
    1ebc:	20 91 28 0e 	lds	r18, 0x0E28
    1ec0:	2f 83       	std	Y+7, r18	; 0x07
    1ec2:	30 91 29 0e 	lds	r19, 0x0E29
    1ec6:	38 87       	std	Y+8, r19	; 0x08
    1ec8:	80 91 2a 0e 	lds	r24, 0x0E2A
    1ecc:	89 87       	std	Y+9, r24	; 0x09
    1ece:	90 91 2b 0e 	lds	r25, 0x0E2B
    1ed2:	9a 87       	std	Y+10, r25	; 0x0a
    1ed4:	37 c0       	rjmp	.+110    	; 0x1f44 <isa_get_slots_until_next_wakeup+0x116>
    1ed6:	2b 81       	ldd	r18, Y+3	; 0x03
    1ed8:	22 21       	and	r18, r2
    1eda:	3c 81       	ldd	r19, Y+4	; 0x04
    1edc:	33 21       	and	r19, r3
    1ede:	4d 81       	ldd	r20, Y+5	; 0x05
    1ee0:	44 21       	and	r20, r4
    1ee2:	5e 81       	ldd	r21, Y+6	; 0x06
    1ee4:	55 21       	and	r21, r5
    1ee6:	6f 81       	ldd	r22, Y+7	; 0x07
    1ee8:	66 21       	and	r22, r6
    1eea:	78 85       	ldd	r23, Y+8	; 0x08
    1eec:	77 21       	and	r23, r7
    1eee:	89 85       	ldd	r24, Y+9	; 0x09
    1ef0:	88 21       	and	r24, r8
    1ef2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ef4:	99 21       	and	r25, r9
    1ef6:	e2 2f       	mov	r30, r18
    1ef8:	e3 2b       	or	r30, r19
    1efa:	e4 2b       	or	r30, r20
    1efc:	e5 2b       	or	r30, r21
    1efe:	e6 2b       	or	r30, r22
    1f00:	e7 2b       	or	r30, r23
    1f02:	e8 2b       	or	r30, r24
    1f04:	e9 2b       	or	r30, r25
    1f06:	41 f0       	breq	.+16     	; 0x1f18 <isa_get_slots_until_next_wakeup+0xea>
    1f08:	ea 81       	ldd	r30, Y+2	; 0x02
    1f0a:	8e 2f       	mov	r24, r30
    1f0c:	99 27       	eor	r25, r25
    1f0e:	2b 85       	ldd	r18, Y+11	; 0x0b
    1f10:	3c 85       	ldd	r19, Y+12	; 0x0c
    1f12:	82 1b       	sub	r24, r18
    1f14:	93 0b       	sbc	r25, r19
    1f16:	64 c0       	rjmp	.+200    	; 0x1fe0 <isa_get_slots_until_next_wakeup+0x1b2>
    1f18:	01 e0       	ldi	r16, 0x01	; 1
    1f1a:	22 2d       	mov	r18, r2
    1f1c:	33 2d       	mov	r19, r3
    1f1e:	44 2d       	mov	r20, r4
    1f20:	55 2d       	mov	r21, r5
    1f22:	66 2d       	mov	r22, r6
    1f24:	77 2d       	mov	r23, r7
    1f26:	88 2d       	mov	r24, r8
    1f28:	99 2d       	mov	r25, r9
    1f2a:	0e 94 99 3e 	call	0x7d32	; 0x7d32 <__ashldi3>
    1f2e:	22 2e       	mov	r2, r18
    1f30:	33 2e       	mov	r3, r19
    1f32:	44 2e       	mov	r4, r20
    1f34:	55 2e       	mov	r5, r21
    1f36:	66 2e       	mov	r6, r22
    1f38:	77 2e       	mov	r7, r23
    1f3a:	88 2e       	mov	r8, r24
    1f3c:	99 2e       	mov	r9, r25
    1f3e:	3a 81       	ldd	r19, Y+2	; 0x02
    1f40:	3f 5f       	subi	r19, 0xFF	; 255
    1f42:	3a 83       	std	Y+2, r19	; 0x02
    1f44:	8a 81       	ldd	r24, Y+2	; 0x02
    1f46:	82 33       	cpi	r24, 0x32	; 50
    1f48:	30 f2       	brcs	.-116    	; 0x1ed6 <isa_get_slots_until_next_wakeup+0xa8>
    1f4a:	22 24       	eor	r2, r2
    1f4c:	23 94       	inc	r2
    1f4e:	33 24       	eor	r3, r3
    1f50:	44 24       	eor	r4, r4
    1f52:	55 24       	eor	r5, r5
    1f54:	66 24       	eor	r6, r6
    1f56:	77 24       	eor	r7, r7
    1f58:	88 24       	eor	r8, r8
    1f5a:	99 24       	eor	r9, r9
    1f5c:	1e 86       	std	Y+14, r1	; 0x0e
    1f5e:	1d 86       	std	Y+13, r1	; 0x0d
    1f60:	ad 85       	ldd	r26, Y+13	; 0x0d
    1f62:	2b 81       	ldd	r18, Y+3	; 0x03
    1f64:	22 21       	and	r18, r2
    1f66:	3c 81       	ldd	r19, Y+4	; 0x04
    1f68:	33 21       	and	r19, r3
    1f6a:	4d 81       	ldd	r20, Y+5	; 0x05
    1f6c:	44 21       	and	r20, r4
    1f6e:	5e 81       	ldd	r21, Y+6	; 0x06
    1f70:	55 21       	and	r21, r5
    1f72:	6f 81       	ldd	r22, Y+7	; 0x07
    1f74:	66 21       	and	r22, r6
    1f76:	78 85       	ldd	r23, Y+8	; 0x08
    1f78:	77 21       	and	r23, r7
    1f7a:	89 85       	ldd	r24, Y+9	; 0x09
    1f7c:	88 21       	and	r24, r8
    1f7e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f80:	99 21       	and	r25, r9
    1f82:	e2 2f       	mov	r30, r18
    1f84:	e3 2b       	or	r30, r19
    1f86:	e4 2b       	or	r30, r20
    1f88:	e5 2b       	or	r30, r21
    1f8a:	e6 2b       	or	r30, r22
    1f8c:	e7 2b       	or	r30, r23
    1f8e:	e8 2b       	or	r30, r24
    1f90:	e9 2b       	or	r30, r25
    1f92:	49 f0       	breq	.+18     	; 0x1fa6 <isa_get_slots_until_next_wakeup+0x178>
    1f94:	82 e3       	ldi	r24, 0x32	; 50
    1f96:	90 e0       	ldi	r25, 0x00	; 0
    1f98:	eb 85       	ldd	r30, Y+11	; 0x0b
    1f9a:	fc 85       	ldd	r31, Y+12	; 0x0c
    1f9c:	8e 1b       	sub	r24, r30
    1f9e:	9f 0b       	sbc	r25, r31
    1fa0:	8a 0f       	add	r24, r26
    1fa2:	91 1d       	adc	r25, r1
    1fa4:	1d c0       	rjmp	.+58     	; 0x1fe0 <isa_get_slots_until_next_wakeup+0x1b2>
    1fa6:	2d 85       	ldd	r18, Y+13	; 0x0d
    1fa8:	3e 85       	ldd	r19, Y+14	; 0x0e
    1faa:	2f 5f       	subi	r18, 0xFF	; 255
    1fac:	3f 4f       	sbci	r19, 0xFF	; 255
    1fae:	3e 87       	std	Y+14, r19	; 0x0e
    1fb0:	2d 87       	std	Y+13, r18	; 0x0d
    1fb2:	39 81       	ldd	r19, Y+1	; 0x01
    1fb4:	32 17       	cp	r19, r18
    1fb6:	a0 f0       	brcs	.+40     	; 0x1fe0 <isa_get_slots_until_next_wakeup+0x1b2>
    1fb8:	01 e0       	ldi	r16, 0x01	; 1
    1fba:	22 2d       	mov	r18, r2
    1fbc:	33 2d       	mov	r19, r3
    1fbe:	44 2d       	mov	r20, r4
    1fc0:	55 2d       	mov	r21, r5
    1fc2:	66 2d       	mov	r22, r6
    1fc4:	77 2d       	mov	r23, r7
    1fc6:	88 2d       	mov	r24, r8
    1fc8:	99 2d       	mov	r25, r9
    1fca:	0e 94 99 3e 	call	0x7d32	; 0x7d32 <__ashldi3>
    1fce:	22 2e       	mov	r2, r18
    1fd0:	33 2e       	mov	r3, r19
    1fd2:	44 2e       	mov	r4, r20
    1fd4:	55 2e       	mov	r5, r21
    1fd6:	66 2e       	mov	r6, r22
    1fd8:	77 2e       	mov	r7, r23
    1fda:	88 2e       	mov	r8, r24
    1fdc:	99 2e       	mov	r9, r25
    1fde:	c0 cf       	rjmp	.-128    	; 0x1f60 <isa_get_slots_until_next_wakeup+0x132>
    1fe0:	2e 96       	adiw	r28, 0x0e	; 14
    1fe2:	0f b6       	in	r0, 0x3f	; 63
    1fe4:	f8 94       	cli
    1fe6:	de bf       	out	0x3e, r29	; 62
    1fe8:	0f be       	out	0x3f, r0	; 63
    1fea:	cd bf       	out	0x3d, r28	; 61
    1fec:	df 91       	pop	r29
    1fee:	cf 91       	pop	r28
    1ff0:	1f 91       	pop	r17
    1ff2:	0f 91       	pop	r16
    1ff4:	ff 90       	pop	r15
    1ff6:	ef 90       	pop	r14
    1ff8:	df 90       	pop	r13
    1ffa:	cf 90       	pop	r12
    1ffc:	bf 90       	pop	r11
    1ffe:	af 90       	pop	r10
    2000:	9f 90       	pop	r9
    2002:	8f 90       	pop	r8
    2004:	7f 90       	pop	r7
    2006:	6f 90       	pop	r6
    2008:	5f 90       	pop	r5
    200a:	4f 90       	pop	r4
    200c:	3f 90       	pop	r3
    200e:	2f 90       	pop	r2
    2010:	08 95       	ret

00002012 <isLinkNeigborApplicable>:
    2012:	0f 93       	push	r16
    2014:	1f 93       	push	r17
    2016:	cf 93       	push	r28
    2018:	df 93       	push	r29
    201a:	fc 01       	movw	r30, r24
    201c:	ec 57       	subi	r30, 0x7C	; 124
    201e:	ff 4f       	sbci	r31, 0xFF	; 255
    2020:	80 81       	ld	r24, Z
    2022:	fb 01       	movw	r30, r22
    2024:	c2 85       	ldd	r28, Z+10	; 0x0a
    2026:	d3 85       	ldd	r29, Z+11	; 0x0b
    2028:	88 23       	and	r24, r24
    202a:	69 f0       	breq	.+26     	; 0x2046 <isLinkNeigborApplicable+0x34>
    202c:	8a 81       	ldd	r24, Y+2	; 0x02
    202e:	48 2f       	mov	r20, r24
    2030:	55 27       	eor	r21, r21
    2032:	40 77       	andi	r20, 0x70	; 112
    2034:	50 70       	andi	r21, 0x00	; 0
    2036:	f4 e0       	ldi	r31, 0x04	; 4
    2038:	55 95       	asr	r21
    203a:	47 95       	ror	r20
    203c:	fa 95       	dec	r31
    203e:	e1 f7       	brne	.-8      	; 0x2038 <isLinkNeigborApplicable+0x26>
    2040:	00 e0       	ldi	r16, 0x00	; 0
    2042:	10 e0       	ldi	r17, 0x00	; 0
    2044:	26 c0       	rjmp	.+76     	; 0x2092 <isLinkNeigborApplicable+0x80>
    2046:	40 e0       	ldi	r20, 0x00	; 0
    2048:	50 e0       	ldi	r21, 0x00	; 0
    204a:	fb 01       	movw	r30, r22
    204c:	a0 85       	ldd	r26, Z+8	; 0x08
    204e:	b1 85       	ldd	r27, Z+9	; 0x09
    2050:	2c 81       	ldd	r18, Y+4	; 0x04
    2052:	3d 81       	ldd	r19, Y+5	; 0x05
    2054:	fd 01       	movw	r30, r26
    2056:	81 81       	ldd	r24, Z+1	; 0x01
    2058:	92 81       	ldd	r25, Z+2	; 0x02
    205a:	28 17       	cp	r18, r24
    205c:	39 07       	cpc	r19, r25
    205e:	11 f4       	brne	.+4      	; 0x2064 <isLinkNeigborApplicable+0x52>
    2060:	41 e0       	ldi	r20, 0x01	; 1
    2062:	50 e0       	ldi	r21, 0x00	; 0
    2064:	ca 01       	movw	r24, r20
    2066:	1c c0       	rjmp	.+56     	; 0x20a0 <isLinkNeigborApplicable+0x8e>
    2068:	0f 5f       	subi	r16, 0xFF	; 255
    206a:	1f 4f       	sbci	r17, 0xFF	; 255
    206c:	aa 0f       	add	r26, r26
    206e:	bb 1f       	adc	r27, r27
    2070:	ac 0f       	add	r26, r28
    2072:	bd 1f       	adc	r27, r29
    2074:	fb 01       	movw	r30, r22
    2076:	80 85       	ldd	r24, Z+8	; 0x08
    2078:	91 85       	ldd	r25, Z+9	; 0x09
    207a:	fd 01       	movw	r30, r26
    207c:	24 81       	ldd	r18, Z+4	; 0x04
    207e:	35 81       	ldd	r19, Z+5	; 0x05
    2080:	fc 01       	movw	r30, r24
    2082:	81 81       	ldd	r24, Z+1	; 0x01
    2084:	92 81       	ldd	r25, Z+2	; 0x02
    2086:	28 17       	cp	r18, r24
    2088:	39 07       	cpc	r19, r25
    208a:	19 f4       	brne	.+6      	; 0x2092 <isLinkNeigborApplicable+0x80>
    208c:	81 e0       	ldi	r24, 0x01	; 1
    208e:	90 e0       	ldi	r25, 0x00	; 0
    2090:	07 c0       	rjmp	.+14     	; 0x20a0 <isLinkNeigborApplicable+0x8e>
    2092:	a0 2f       	mov	r26, r16
    2094:	bb 27       	eor	r27, r27
    2096:	a4 17       	cp	r26, r20
    2098:	b5 07       	cpc	r27, r21
    209a:	34 f3       	brlt	.-52     	; 0x2068 <isLinkNeigborApplicable+0x56>
    209c:	80 e0       	ldi	r24, 0x00	; 0
    209e:	90 e0       	ldi	r25, 0x00	; 0
    20a0:	df 91       	pop	r29
    20a2:	cf 91       	pop	r28
    20a4:	1f 91       	pop	r17
    20a6:	0f 91       	pop	r16
    20a8:	08 95       	ret

000020aa <getHighPriorityEntry>:
    20aa:	2f 92       	push	r2
    20ac:	3f 92       	push	r3
    20ae:	4f 92       	push	r4
    20b0:	5f 92       	push	r5
    20b2:	6f 92       	push	r6
    20b4:	7f 92       	push	r7
    20b6:	8f 92       	push	r8
    20b8:	9f 92       	push	r9
    20ba:	af 92       	push	r10
    20bc:	bf 92       	push	r11
    20be:	cf 92       	push	r12
    20c0:	df 92       	push	r13
    20c2:	ef 92       	push	r14
    20c4:	ff 92       	push	r15
    20c6:	0f 93       	push	r16
    20c8:	1f 93       	push	r17
    20ca:	cf 93       	push	r28
    20cc:	df 93       	push	r29
    20ce:	cd b7       	in	r28, 0x3d	; 61
    20d0:	de b7       	in	r29, 0x3e	; 62
    20d2:	27 97       	sbiw	r28, 0x07	; 7
    20d4:	0f b6       	in	r0, 0x3f	; 63
    20d6:	f8 94       	cli
    20d8:	de bf       	out	0x3e, r29	; 62
    20da:	0f be       	out	0x3f, r0	; 63
    20dc:	cd bf       	out	0x3d, r28	; 61
    20de:	2c 01       	movw	r4, r24
    20e0:	fc 01       	movw	r30, r24
    20e2:	77 80       	ldd	r7, Z+7	; 0x07
    20e4:	f0 e3       	ldi	r31, 0x30	; 48
    20e6:	7f 22       	and	r7, r31
    20e8:	76 94       	lsr	r7
    20ea:	76 94       	lsr	r7
    20ec:	76 94       	lsr	r7
    20ee:	76 94       	lsr	r7
    20f0:	09 f0       	breq	.+2      	; 0x20f4 <getHighPriorityEntry+0x4a>
    20f2:	c5 c0       	rjmp	.+394    	; 0x227e <__stack+0x7f>
    20f4:	1d 82       	std	Y+5, r1	; 0x05
    20f6:	f2 01       	movw	r30, r4
    20f8:	a0 85       	ldd	r26, Z+8	; 0x08
    20fa:	b1 85       	ldd	r27, Z+9	; 0x09
    20fc:	10 97       	sbiw	r26, 0x00	; 0
    20fe:	09 f4       	brne	.+2      	; 0x2102 <getHighPriorityEntry+0x58>
    2100:	97 c1       	rjmp	.+814    	; 0x2430 <__stack+0x231>
    2102:	8c 91       	ld	r24, X
    2104:	88 23       	and	r24, r24
    2106:	09 f4       	brne	.+2      	; 0x210a <getHighPriorityEntry+0x60>
    2108:	93 c1       	rjmp	.+806    	; 0x2430 <__stack+0x231>
    210a:	fd 01       	movw	r30, r26
    210c:	c1 80       	ldd	r12, Z+1	; 0x01
    210e:	d2 80       	ldd	r13, Z+2	; 0x02
    2110:	40 e0       	ldi	r20, 0x00	; 0
    2112:	20 e0       	ldi	r18, 0x00	; 0
    2114:	30 e0       	ldi	r19, 0x00	; 0
    2116:	60 e0       	ldi	r22, 0x00	; 0
    2118:	70 e0       	ldi	r23, 0x00	; 0
    211a:	85 e8       	ldi	r24, 0x85	; 133
    211c:	90 e0       	ldi	r25, 0x00	; 0
    211e:	28 9f       	mul	r18, r24
    2120:	30 01       	movw	r6, r0
    2122:	29 9f       	mul	r18, r25
    2124:	70 0c       	add	r7, r0
    2126:	38 9f       	mul	r19, r24
    2128:	70 0c       	add	r7, r0
    212a:	11 24       	eor	r1, r1
    212c:	84 e1       	ldi	r24, 0x14	; 20
    212e:	90 e1       	ldi	r25, 0x10	; 16
    2130:	68 0e       	add	r6, r24
    2132:	79 1e       	adc	r7, r25
    2134:	a6 e7       	ldi	r26, 0x76	; 118
    2136:	b0 e0       	ldi	r27, 0x00	; 0
    2138:	6a 0e       	add	r6, r26
    213a:	7b 1e       	adc	r7, r27
    213c:	f3 01       	movw	r30, r6
    213e:	80 81       	ld	r24, Z
    2140:	aa e8       	ldi	r26, 0x8A	; 138
    2142:	bf ef       	ldi	r27, 0xFF	; 255
    2144:	6a 0e       	add	r6, r26
    2146:	7b 1e       	adc	r7, r27
    2148:	88 23       	and	r24, r24
    214a:	09 f4       	brne	.+2      	; 0x214e <getHighPriorityEntry+0xa4>
    214c:	8c c0       	rjmp	.+280    	; 0x2266 <__stack+0x67>
    214e:	e5 e7       	ldi	r30, 0x75	; 117
    2150:	f0 e0       	ldi	r31, 0x00	; 0
    2152:	6e 0e       	add	r6, r30
    2154:	7f 1e       	adc	r7, r31
    2156:	d3 01       	movw	r26, r6
    2158:	8c 91       	ld	r24, X
    215a:	eb e8       	ldi	r30, 0x8B	; 139
    215c:	ff ef       	ldi	r31, 0xFF	; 255
    215e:	6e 0e       	add	r6, r30
    2160:	7f 1e       	adc	r7, r31
    2162:	88 23       	and	r24, r24
    2164:	09 f4       	brne	.+2      	; 0x2168 <getHighPriorityEntry+0xbe>
    2166:	7f c0       	rjmp	.+254    	; 0x2266 <__stack+0x67>
    2168:	8a e7       	ldi	r24, 0x7A	; 122
    216a:	90 e0       	ldi	r25, 0x00	; 0
    216c:	68 0e       	add	r6, r24
    216e:	79 1e       	adc	r7, r25
    2170:	d3 01       	movw	r26, r6
    2172:	8d 91       	ld	r24, X+
    2174:	9c 91       	ld	r25, X
    2176:	e6 e8       	ldi	r30, 0x86	; 134
    2178:	ff ef       	ldi	r31, 0xFF	; 255
    217a:	6e 0e       	add	r6, r30
    217c:	7f 1e       	adc	r7, r31
    217e:	8c 15       	cp	r24, r12
    2180:	9d 05       	cpc	r25, r13
    2182:	09 f0       	breq	.+2      	; 0x2186 <getHighPriorityEntry+0xdc>
    2184:	70 c0       	rjmp	.+224    	; 0x2266 <__stack+0x67>
    2186:	44 23       	and	r20, r20
    2188:	f9 f4       	brne	.+62     	; 0x21c8 <getHighPriorityEntry+0x11e>
    218a:	89 e7       	ldi	r24, 0x79	; 121
    218c:	90 e0       	ldi	r25, 0x00	; 0
    218e:	68 0e       	add	r6, r24
    2190:	79 1e       	adc	r7, r25
    2192:	d3 01       	movw	r26, r6
    2194:	bc 91       	ld	r27, X
    2196:	bd 83       	std	Y+5, r27	; 0x05
    2198:	fb 01       	movw	r30, r22
    219a:	ec 5e       	subi	r30, 0xEC	; 236
    219c:	ff 4e       	sbci	r31, 0xEF	; 239
    219e:	fc 83       	std	Y+4, r31	; 0x04
    21a0:	eb 83       	std	Y+3, r30	; 0x03
    21a2:	87 e0       	ldi	r24, 0x07	; 7
    21a4:	90 e0       	ldi	r25, 0x00	; 0
    21a6:	68 0e       	add	r6, r24
    21a8:	79 1e       	adc	r7, r25
    21aa:	d3 01       	movw	r26, r6
    21ac:	8d 90       	ld	r8, X+
    21ae:	9d 90       	ld	r9, X+
    21b0:	ad 90       	ld	r10, X+
    21b2:	bc 90       	ld	r11, X
    21b4:	f3 01       	movw	r30, r6
    21b6:	12 91       	ld	r17, -Z
    21b8:	02 91       	ld	r16, -Z
    21ba:	f2 90       	ld	r15, -Z
    21bc:	e2 90       	ld	r14, -Z
    21be:	3f 01       	movw	r6, r30
    21c0:	84 e8       	ldi	r24, 0x84	; 132
    21c2:	9f ef       	ldi	r25, 0xFF	; 255
    21c4:	68 0e       	add	r6, r24
    21c6:	79 1e       	adc	r7, r25
    21c8:	d3 01       	movw	r26, r6
    21ca:	a7 58       	subi	r26, 0x87	; 135
    21cc:	bf 4f       	sbci	r27, 0xFF	; 255
    21ce:	8c 91       	ld	r24, X
    21d0:	9d 81       	ldd	r25, Y+5	; 0x05
    21d2:	98 17       	cp	r25, r24
    21d4:	40 f1       	brcs	.+80     	; 0x2226 <__stack+0x27>
    21d6:	8c 91       	ld	r24, X
    21d8:	98 17       	cp	r25, r24
    21da:	09 f0       	breq	.+2      	; 0x21de <getHighPriorityEntry+0x134>
    21dc:	43 c0       	rjmp	.+134    	; 0x2264 <__stack+0x65>
    21de:	a3 01       	movw	r20, r6
    21e0:	44 58       	subi	r20, 0x84	; 132
    21e2:	5f 4f       	sbci	r21, 0xFF	; 255
    21e4:	fa 01       	movw	r30, r20
    21e6:	80 81       	ld	r24, Z
    21e8:	91 81       	ldd	r25, Z+1	; 0x01
    21ea:	a2 81       	ldd	r26, Z+2	; 0x02
    21ec:	b3 81       	ldd	r27, Z+3	; 0x03
    21ee:	8e 15       	cp	r24, r14
    21f0:	9f 05       	cpc	r25, r15
    21f2:	a0 07       	cpc	r26, r16
    21f4:	b1 07       	cpc	r27, r17
    21f6:	b8 f0       	brcs	.+46     	; 0x2226 <__stack+0x27>
    21f8:	80 81       	ld	r24, Z
    21fa:	91 81       	ldd	r25, Z+1	; 0x01
    21fc:	a2 81       	ldd	r26, Z+2	; 0x02
    21fe:	b3 81       	ldd	r27, Z+3	; 0x03
    2200:	e8 16       	cp	r14, r24
    2202:	f9 06       	cpc	r15, r25
    2204:	0a 07       	cpc	r16, r26
    2206:	1b 07       	cpc	r17, r27
    2208:	69 f5       	brne	.+90     	; 0x2264 <__stack+0x65>
    220a:	80 e8       	ldi	r24, 0x80	; 128
    220c:	90 e0       	ldi	r25, 0x00	; 0
    220e:	68 0e       	add	r6, r24
    2210:	79 1e       	adc	r7, r25
    2212:	f3 01       	movw	r30, r6
    2214:	80 81       	ld	r24, Z
    2216:	91 81       	ldd	r25, Z+1	; 0x01
    2218:	a2 81       	ldd	r26, Z+2	; 0x02
    221a:	b3 81       	ldd	r27, Z+3	; 0x03
    221c:	88 15       	cp	r24, r8
    221e:	99 05       	cpc	r25, r9
    2220:	aa 05       	cpc	r26, r10
    2222:	bb 05       	cpc	r27, r11
    2224:	f8 f4       	brcc	.+62     	; 0x2264 <__stack+0x65>
    2226:	85 e8       	ldi	r24, 0x85	; 133
    2228:	90 e0       	ldi	r25, 0x00	; 0
    222a:	28 9f       	mul	r18, r24
    222c:	d0 01       	movw	r26, r0
    222e:	29 9f       	mul	r18, r25
    2230:	b0 0d       	add	r27, r0
    2232:	38 9f       	mul	r19, r24
    2234:	b0 0d       	add	r27, r0
    2236:	11 24       	eor	r1, r1
    2238:	ac 5e       	subi	r26, 0xEC	; 236
    223a:	bf 4e       	sbci	r27, 0xEF	; 239
    223c:	a7 58       	subi	r26, 0x87	; 135
    223e:	bf 4f       	sbci	r27, 0xFF	; 255
    2240:	fc 91       	ld	r31, X
    2242:	fd 83       	std	Y+5, r31	; 0x05
    2244:	cb 01       	movw	r24, r22
    2246:	8c 5e       	subi	r24, 0xEC	; 236
    2248:	9f 4e       	sbci	r25, 0xEF	; 239
    224a:	9c 83       	std	Y+4, r25	; 0x04
    224c:	8b 83       	std	Y+3, r24	; 0x03
    224e:	17 96       	adiw	r26, 0x07	; 7
    2250:	8d 90       	ld	r8, X+
    2252:	9d 90       	ld	r9, X+
    2254:	ad 90       	ld	r10, X+
    2256:	bc 90       	ld	r11, X
    2258:	13 97       	sbiw	r26, 0x03	; 3
    225a:	fd 01       	movw	r30, r26
    225c:	12 91       	ld	r17, -Z
    225e:	02 91       	ld	r16, -Z
    2260:	f2 90       	ld	r15, -Z
    2262:	e2 90       	ld	r14, -Z
    2264:	41 e0       	ldi	r20, 0x01	; 1
    2266:	2f 5f       	subi	r18, 0xFF	; 255
    2268:	3f 4f       	sbci	r19, 0xFF	; 255
    226a:	6b 57       	subi	r22, 0x7B	; 123
    226c:	7f 4f       	sbci	r23, 0xFF	; 255
    226e:	24 31       	cpi	r18, 0x14	; 20
    2270:	31 05       	cpc	r19, r1
    2272:	09 f0       	breq	.+2      	; 0x2276 <__stack+0x77>
    2274:	52 cf       	rjmp	.-348    	; 0x211a <getHighPriorityEntry+0x70>
    2276:	44 23       	and	r20, r20
    2278:	09 f0       	breq	.+2      	; 0x227c <__stack+0x7d>
    227a:	dc c0       	rjmp	.+440    	; 0x2434 <__stack+0x235>
    227c:	d9 c0       	rjmp	.+434    	; 0x2430 <__stack+0x231>
    227e:	87 2d       	mov	r24, r7
    2280:	81 50       	subi	r24, 0x01	; 1
    2282:	82 30       	cpi	r24, 0x02	; 2
    2284:	08 f0       	brcs	.+2      	; 0x2288 <__stack+0x89>
    2286:	d3 c0       	rjmp	.+422    	; 0x242e <__stack+0x22f>
    2288:	f2 01       	movw	r30, r4
    228a:	a2 85       	ldd	r26, Z+10	; 0x0a
    228c:	b3 85       	ldd	r27, Z+11	; 0x0b
    228e:	10 97       	sbiw	r26, 0x00	; 0
    2290:	21 f0       	breq	.+8      	; 0x229a <__stack+0x9b>
    2292:	8d 91       	ld	r24, X+
    2294:	9c 91       	ld	r25, X
    2296:	89 2b       	or	r24, r25
    2298:	29 f4       	brne	.+10     	; 0x22a4 <__stack+0xa5>
    229a:	f2 e0       	ldi	r31, 0x02	; 2
    229c:	7f 16       	cp	r7, r31
    229e:	09 f0       	breq	.+2      	; 0x22a2 <__stack+0xa3>
    22a0:	c7 c0       	rjmp	.+398    	; 0x2430 <__stack+0x231>
    22a2:	28 cf       	rjmp	.-432    	; 0x20f4 <getHighPriorityEntry+0x4a>
    22a4:	1d 82       	std	Y+5, r1	; 0x05
    22a6:	66 24       	eor	r6, r6
    22a8:	22 24       	eor	r2, r2
    22aa:	33 24       	eor	r3, r3
    22ac:	1a 82       	std	Y+2, r1	; 0x02
    22ae:	19 82       	std	Y+1, r1	; 0x01
    22b0:	85 e8       	ldi	r24, 0x85	; 133
    22b2:	90 e0       	ldi	r25, 0x00	; 0
    22b4:	28 9e       	mul	r2, r24
    22b6:	f0 01       	movw	r30, r0
    22b8:	29 9e       	mul	r2, r25
    22ba:	f0 0d       	add	r31, r0
    22bc:	38 9e       	mul	r3, r24
    22be:	f0 0d       	add	r31, r0
    22c0:	11 24       	eor	r1, r1
    22c2:	9f 01       	movw	r18, r30
    22c4:	2c 5e       	subi	r18, 0xEC	; 236
    22c6:	3f 4e       	sbci	r19, 0xEF	; 239
    22c8:	2a 58       	subi	r18, 0x8A	; 138
    22ca:	3f 4f       	sbci	r19, 0xFF	; 255
    22cc:	d9 01       	movw	r26, r18
    22ce:	8c 91       	ld	r24, X
    22d0:	a6 57       	subi	r26, 0x76	; 118
    22d2:	b0 40       	sbci	r27, 0x00	; 0
    22d4:	bf 83       	std	Y+7, r27	; 0x07
    22d6:	ae 83       	std	Y+6, r26	; 0x06
    22d8:	88 23       	and	r24, r24
    22da:	09 f4       	brne	.+2      	; 0x22de <__stack+0xdf>
    22dc:	94 c0       	rjmp	.+296    	; 0x2406 <__stack+0x207>
    22de:	ab 58       	subi	r26, 0x8B	; 139
    22e0:	bf 4f       	sbci	r27, 0xFF	; 255
    22e2:	8c 91       	ld	r24, X
    22e4:	a5 57       	subi	r26, 0x75	; 117
    22e6:	b0 40       	sbci	r27, 0x00	; 0
    22e8:	bf 83       	std	Y+7, r27	; 0x07
    22ea:	ae 83       	std	Y+6, r26	; 0x06
    22ec:	88 23       	and	r24, r24
    22ee:	09 f4       	brne	.+2      	; 0x22f2 <__stack+0xf3>
    22f0:	8a c0       	rjmp	.+276    	; 0x2406 <__stack+0x207>
    22f2:	e7 5e       	subi	r30, 0xE7	; 231
    22f4:	ff 4e       	sbci	r31, 0xEF	; 239
    22f6:	82 81       	ldd	r24, Z+2	; 0x02
    22f8:	88 23       	and	r24, r24
    22fa:	09 f4       	brne	.+2      	; 0x22fe <__stack+0xff>
    22fc:	84 c0       	rjmp	.+264    	; 0x2406 <__stack+0x207>
    22fe:	99 27       	eor	r25, r25
    2300:	f2 01       	movw	r30, r4
    2302:	a2 85       	ldd	r26, Z+10	; 0x0a
    2304:	b3 85       	ldd	r27, Z+11	; 0x0b
    2306:	2d 91       	ld	r18, X+
    2308:	3c 91       	ld	r19, X
    230a:	82 17       	cp	r24, r18
    230c:	93 07       	cpc	r25, r19
    230e:	09 f0       	breq	.+2      	; 0x2312 <__stack+0x113>
    2310:	7a c0       	rjmp	.+244    	; 0x2406 <__stack+0x207>
    2312:	c9 80       	ldd	r12, Y+1	; 0x01
    2314:	da 80       	ldd	r13, Y+2	; 0x02
    2316:	24 e1       	ldi	r18, 0x14	; 20
    2318:	30 e1       	ldi	r19, 0x10	; 16
    231a:	c2 0e       	add	r12, r18
    231c:	d3 1e       	adc	r13, r19
    231e:	b2 01       	movw	r22, r4
    2320:	c6 01       	movw	r24, r12
    2322:	0e 94 09 10 	call	0x2012	; 0x2012 <isLinkNeigborApplicable>
    2326:	88 23       	and	r24, r24
    2328:	09 f4       	brne	.+2      	; 0x232c <__stack+0x12d>
    232a:	6d c0       	rjmp	.+218    	; 0x2406 <__stack+0x207>
    232c:	66 20       	and	r6, r6
    232e:	c9 f4       	brne	.+50     	; 0x2362 <__stack+0x163>
    2330:	8e 81       	ldd	r24, Y+6	; 0x06
    2332:	9f 81       	ldd	r25, Y+7	; 0x07
    2334:	87 58       	subi	r24, 0x87	; 135
    2336:	9f 4f       	sbci	r25, 0xFF	; 255
    2338:	9f 83       	std	Y+7, r25	; 0x07
    233a:	8e 83       	std	Y+6, r24	; 0x06
    233c:	dc 01       	movw	r26, r24
    233e:	bc 91       	ld	r27, X
    2340:	bd 83       	std	Y+5, r27	; 0x05
    2342:	dc 82       	std	Y+4, r13	; 0x04
    2344:	cb 82       	std	Y+3, r12	; 0x03
    2346:	07 96       	adiw	r24, 0x07	; 7
    2348:	fc 01       	movw	r30, r24
    234a:	80 80       	ld	r8, Z
    234c:	91 80       	ldd	r9, Z+1	; 0x01
    234e:	a2 80       	ldd	r10, Z+2	; 0x02
    2350:	b3 80       	ldd	r11, Z+3	; 0x03
    2352:	12 91       	ld	r17, -Z
    2354:	02 91       	ld	r16, -Z
    2356:	f2 90       	ld	r15, -Z
    2358:	e2 90       	ld	r14, -Z
    235a:	ec 57       	subi	r30, 0x7C	; 124
    235c:	f0 40       	sbci	r31, 0x00	; 0
    235e:	ff 83       	std	Y+7, r31	; 0x07
    2360:	ee 83       	std	Y+6, r30	; 0x06
    2362:	ae 81       	ldd	r26, Y+6	; 0x06
    2364:	bf 81       	ldd	r27, Y+7	; 0x07
    2366:	a7 58       	subi	r26, 0x87	; 135
    2368:	bf 4f       	sbci	r27, 0xFF	; 255
    236a:	8c 91       	ld	r24, X
    236c:	fd 81       	ldd	r31, Y+5	; 0x05
    236e:	f8 17       	cp	r31, r24
    2370:	40 f1       	brcs	.+80     	; 0x23c2 <__stack+0x1c3>
    2372:	8c 91       	ld	r24, X
    2374:	f8 17       	cp	r31, r24
    2376:	09 f0       	breq	.+2      	; 0x237a <__stack+0x17b>
    2378:	44 c0       	rjmp	.+136    	; 0x2402 <__stack+0x203>
    237a:	ee 81       	ldd	r30, Y+6	; 0x06
    237c:	ff 81       	ldd	r31, Y+7	; 0x07
    237e:	e4 58       	subi	r30, 0x84	; 132
    2380:	ff 4f       	sbci	r31, 0xFF	; 255
    2382:	80 81       	ld	r24, Z
    2384:	91 81       	ldd	r25, Z+1	; 0x01
    2386:	a2 81       	ldd	r26, Z+2	; 0x02
    2388:	b3 81       	ldd	r27, Z+3	; 0x03
    238a:	8e 15       	cp	r24, r14
    238c:	9f 05       	cpc	r25, r15
    238e:	a0 07       	cpc	r26, r16
    2390:	b1 07       	cpc	r27, r17
    2392:	b8 f0       	brcs	.+46     	; 0x23c2 <__stack+0x1c3>
    2394:	80 81       	ld	r24, Z
    2396:	91 81       	ldd	r25, Z+1	; 0x01
    2398:	a2 81       	ldd	r26, Z+2	; 0x02
    239a:	b3 81       	ldd	r27, Z+3	; 0x03
    239c:	e8 16       	cp	r14, r24
    239e:	f9 06       	cpc	r15, r25
    23a0:	0a 07       	cpc	r16, r26
    23a2:	1b 07       	cpc	r17, r27
    23a4:	71 f5       	brne	.+92     	; 0x2402 <__stack+0x203>
    23a6:	2e 81       	ldd	r18, Y+6	; 0x06
    23a8:	3f 81       	ldd	r19, Y+7	; 0x07
    23aa:	20 58       	subi	r18, 0x80	; 128
    23ac:	3f 4f       	sbci	r19, 0xFF	; 255
    23ae:	f9 01       	movw	r30, r18
    23b0:	80 81       	ld	r24, Z
    23b2:	91 81       	ldd	r25, Z+1	; 0x01
    23b4:	a2 81       	ldd	r26, Z+2	; 0x02
    23b6:	b3 81       	ldd	r27, Z+3	; 0x03
    23b8:	88 15       	cp	r24, r8
    23ba:	99 05       	cpc	r25, r9
    23bc:	aa 05       	cpc	r26, r10
    23be:	bb 05       	cpc	r27, r11
    23c0:	00 f5       	brcc	.+64     	; 0x2402 <__stack+0x203>
    23c2:	85 e8       	ldi	r24, 0x85	; 133
    23c4:	90 e0       	ldi	r25, 0x00	; 0
    23c6:	28 9e       	mul	r2, r24
    23c8:	d0 01       	movw	r26, r0
    23ca:	29 9e       	mul	r2, r25
    23cc:	b0 0d       	add	r27, r0
    23ce:	38 9e       	mul	r3, r24
    23d0:	b0 0d       	add	r27, r0
    23d2:	11 24       	eor	r1, r1
    23d4:	ac 5e       	subi	r26, 0xEC	; 236
    23d6:	bf 4e       	sbci	r27, 0xEF	; 239
    23d8:	a7 58       	subi	r26, 0x87	; 135
    23da:	bf 4f       	sbci	r27, 0xFF	; 255
    23dc:	fc 91       	ld	r31, X
    23de:	fd 83       	std	Y+5, r31	; 0x05
    23e0:	29 81       	ldd	r18, Y+1	; 0x01
    23e2:	3a 81       	ldd	r19, Y+2	; 0x02
    23e4:	2c 5e       	subi	r18, 0xEC	; 236
    23e6:	3f 4e       	sbci	r19, 0xEF	; 239
    23e8:	3c 83       	std	Y+4, r19	; 0x04
    23ea:	2b 83       	std	Y+3, r18	; 0x03
    23ec:	17 96       	adiw	r26, 0x07	; 7
    23ee:	8d 90       	ld	r8, X+
    23f0:	9d 90       	ld	r9, X+
    23f2:	ad 90       	ld	r10, X+
    23f4:	bc 90       	ld	r11, X
    23f6:	13 97       	sbiw	r26, 0x03	; 3
    23f8:	fd 01       	movw	r30, r26
    23fa:	12 91       	ld	r17, -Z
    23fc:	02 91       	ld	r16, -Z
    23fe:	f2 90       	ld	r15, -Z
    2400:	e2 90       	ld	r14, -Z
    2402:	66 24       	eor	r6, r6
    2404:	63 94       	inc	r6
    2406:	08 94       	sec
    2408:	21 1c       	adc	r2, r1
    240a:	31 1c       	adc	r3, r1
    240c:	89 81       	ldd	r24, Y+1	; 0x01
    240e:	9a 81       	ldd	r25, Y+2	; 0x02
    2410:	8b 57       	subi	r24, 0x7B	; 123
    2412:	9f 4f       	sbci	r25, 0xFF	; 255
    2414:	9a 83       	std	Y+2, r25	; 0x02
    2416:	89 83       	std	Y+1, r24	; 0x01
    2418:	94 e1       	ldi	r25, 0x14	; 20
    241a:	29 16       	cp	r2, r25
    241c:	31 04       	cpc	r3, r1
    241e:	09 f0       	breq	.+2      	; 0x2422 <__stack+0x223>
    2420:	47 cf       	rjmp	.-370    	; 0x22b0 <__stack+0xb1>
    2422:	66 20       	and	r6, r6
    2424:	39 f4       	brne	.+14     	; 0x2434 <__stack+0x235>
    2426:	a2 e0       	ldi	r26, 0x02	; 2
    2428:	7a 16       	cp	r7, r26
    242a:	11 f4       	brne	.+4      	; 0x2430 <__stack+0x231>
    242c:	64 ce       	rjmp	.-824    	; 0x20f6 <getHighPriorityEntry+0x4c>
    242e:	04 c0       	rjmp	.+8      	; 0x2438 <__stack+0x239>
    2430:	1c 82       	std	Y+4, r1	; 0x04
    2432:	1b 82       	std	Y+3, r1	; 0x03
    2434:	8b 81       	ldd	r24, Y+3	; 0x03
    2436:	9c 81       	ldd	r25, Y+4	; 0x04
    2438:	27 96       	adiw	r28, 0x07	; 7
    243a:	0f b6       	in	r0, 0x3f	; 63
    243c:	f8 94       	cli
    243e:	de bf       	out	0x3e, r29	; 62
    2440:	0f be       	out	0x3f, r0	; 63
    2442:	cd bf       	out	0x3d, r28	; 61
    2444:	df 91       	pop	r29
    2446:	cf 91       	pop	r28
    2448:	1f 91       	pop	r17
    244a:	0f 91       	pop	r16
    244c:	ff 90       	pop	r15
    244e:	ef 90       	pop	r14
    2450:	df 90       	pop	r13
    2452:	cf 90       	pop	r12
    2454:	bf 90       	pop	r11
    2456:	af 90       	pop	r10
    2458:	9f 90       	pop	r9
    245a:	8f 90       	pop	r8
    245c:	7f 90       	pop	r7
    245e:	6f 90       	pop	r6
    2460:	5f 90       	pop	r5
    2462:	4f 90       	pop	r4
    2464:	3f 90       	pop	r3
    2466:	2f 90       	pop	r2
    2468:	08 95       	ret

0000246a <isaFreePacket>:
    246a:	fc 01       	movw	r30, r24
    246c:	ea 58       	subi	r30, 0x8A	; 138
    246e:	ff 4f       	sbci	r31, 0xFF	; 255
    2470:	10 82       	st	Z, r1
    2472:	12 92       	st	-Z, r1
    2474:	32 96       	adiw	r30, 0x02	; 2
    2476:	11 82       	std	Z+1, r1	; 0x01
    2478:	10 82       	st	Z, r1
    247a:	80 91 88 1a 	lds	r24, 0x1A88
    247e:	81 50       	subi	r24, 0x01	; 1
    2480:	80 93 88 1a 	sts	0x1A88, r24
    2484:	08 95       	ret

00002486 <clearCandidateTable>:
    2486:	10 92 bb 1a 	sts	0x1ABB, r1
    248a:	80 e0       	ldi	r24, 0x00	; 0
    248c:	90 e0       	ldi	r25, 0x00	; 0
    248e:	fc 01       	movw	r30, r24
    2490:	ee 0f       	add	r30, r30
    2492:	ff 1f       	adc	r31, r31
    2494:	ee 0f       	add	r30, r30
    2496:	ff 1f       	adc	r31, r31
    2498:	e5 54       	subi	r30, 0x45	; 69
    249a:	f5 4e       	sbci	r31, 0xE5	; 229
    249c:	12 82       	std	Z+2, r1	; 0x02
    249e:	11 82       	std	Z+1, r1	; 0x01
    24a0:	01 96       	adiw	r24, 0x01	; 1
    24a2:	84 31       	cpi	r24, 0x14	; 20
    24a4:	91 05       	cpc	r25, r1
    24a6:	99 f7       	brne	.-26     	; 0x248e <clearCandidateTable+0x8>
    24a8:	08 95       	ret

000024aa <flushCandidateEntries>:
    24aa:	cf 93       	push	r28
    24ac:	df 93       	push	r29
    24ae:	20 e0       	ldi	r18, 0x00	; 0
    24b0:	30 e0       	ldi	r19, 0x00	; 0
    24b2:	0f c0       	rjmp	.+30     	; 0x24d2 <flushCandidateEntries+0x28>
    24b4:	ff 27       	eor	r31, r31
    24b6:	ee 0f       	add	r30, r30
    24b8:	ff 1f       	adc	r31, r31
    24ba:	ee 0f       	add	r30, r30
    24bc:	ff 1f       	adc	r31, r31
    24be:	df 01       	movw	r26, r30
    24c0:	a5 54       	subi	r26, 0x45	; 69
    24c2:	b5 4e       	sbci	r27, 0xE5	; 229
    24c4:	ed 01       	movw	r28, r26
    24c6:	1a 82       	std	Y+2, r1	; 0x02
    24c8:	19 82       	std	Y+1, r1	; 0x01
    24ca:	e1 54       	subi	r30, 0x41	; 65
    24cc:	f5 4e       	sbci	r31, 0xE5	; 229
    24ce:	10 82       	st	Z, r1
    24d0:	1b 82       	std	Y+3, r1	; 0x03
    24d2:	e2 2f       	mov	r30, r18
    24d4:	80 91 bb 1a 	lds	r24, 0x1ABB
    24d8:	2f 5f       	subi	r18, 0xFF	; 255
    24da:	3f 4f       	sbci	r19, 0xFF	; 255
    24dc:	e8 17       	cp	r30, r24
    24de:	50 f3       	brcs	.-44     	; 0x24b4 <flushCandidateEntries+0xa>
    24e0:	10 92 bb 1a 	sts	0x1ABB, r1
    24e4:	df 91       	pop	r29
    24e6:	cf 91       	pop	r28
    24e8:	08 95       	ret

000024ea <updateLastSentTime>:
    24ea:	8c e1       	ldi	r24, 0x1C	; 28
    24ec:	9e e0       	ldi	r25, 0x0E	; 14
    24ee:	0e 94 a6 35 	call	0x6b4c	; 0x6b4c <nrk_time_get>
    24f2:	08 95       	ret

000024f4 <isDiscoveryAlertDue>:
    24f4:	cf 93       	push	r28
    24f6:	df 93       	push	r29
    24f8:	cd b7       	in	r28, 0x3d	; 61
    24fa:	de b7       	in	r29, 0x3e	; 62
    24fc:	28 97       	sbiw	r28, 0x08	; 8
    24fe:	0f b6       	in	r0, 0x3f	; 63
    2500:	f8 94       	cli
    2502:	de bf       	out	0x3e, r29	; 62
    2504:	0f be       	out	0x3f, r0	; 63
    2506:	cd bf       	out	0x3d, r28	; 61
    2508:	ce 01       	movw	r24, r28
    250a:	01 96       	adiw	r24, 0x01	; 1
    250c:	0e 94 a6 35 	call	0x6b4c	; 0x6b4c <nrk_time_get>
    2510:	60 e0       	ldi	r22, 0x00	; 0
    2512:	70 e0       	ldi	r23, 0x00	; 0
    2514:	89 81       	ldd	r24, Y+1	; 0x01
    2516:	9a 81       	ldd	r25, Y+2	; 0x02
    2518:	ab 81       	ldd	r26, Y+3	; 0x03
    251a:	bc 81       	ldd	r27, Y+4	; 0x04
    251c:	20 91 1c 0e 	lds	r18, 0x0E1C
    2520:	30 91 1d 0e 	lds	r19, 0x0E1D
    2524:	40 91 1e 0e 	lds	r20, 0x0E1E
    2528:	50 91 1f 0e 	lds	r21, 0x0E1F
    252c:	82 1b       	sub	r24, r18
    252e:	93 0b       	sbc	r25, r19
    2530:	a4 0b       	sbc	r26, r20
    2532:	b5 0b       	sbc	r27, r21
    2534:	cd 97       	sbiw	r24, 0x3d	; 61
    2536:	a1 05       	cpc	r26, r1
    2538:	b1 05       	cpc	r27, r1
    253a:	10 f0       	brcs	.+4      	; 0x2540 <isDiscoveryAlertDue+0x4c>
    253c:	61 e0       	ldi	r22, 0x01	; 1
    253e:	70 e0       	ldi	r23, 0x00	; 0
    2540:	cb 01       	movw	r24, r22
    2542:	28 96       	adiw	r28, 0x08	; 8
    2544:	0f b6       	in	r0, 0x3f	; 63
    2546:	f8 94       	cli
    2548:	de bf       	out	0x3e, r29	; 62
    254a:	0f be       	out	0x3f, r0	; 63
    254c:	cd bf       	out	0x3d, r28	; 61
    254e:	df 91       	pop	r29
    2550:	cf 91       	pop	r28
    2552:	08 95       	ret

00002554 <dlmoInit>:
  addLink(13,0,0,8,0);//6
  addLink(14,0,0,8,0);//7
  addLink(15,0,0,8,0);//8
  addLink(16,0,0,8,0);//9
  addLink(3,0,0,8,0);//1
  addLink(25,0,0,8,0);
    2554:	20 e0       	ldi	r18, 0x00	; 0
    2556:	30 e0       	ldi	r19, 0x00	; 0
  addLink(27,0,0,8,0);//Ad


  /*addLink(17,0,0,4,0);//transmit ad
  addLink(40,0,0,8,0);//receive ad
  addLink(18,0,0,8,0);
    2558:	f9 01       	movw	r30, r18
    255a:	ee 0f       	add	r30, r30
    255c:	ff 1f       	adc	r31, r31
    255e:	cf 01       	movw	r24, r30
    2560:	43 e0       	ldi	r20, 0x03	; 3
    2562:	88 0f       	add	r24, r24
    2564:	99 1f       	adc	r25, r25
    2566:	4a 95       	dec	r20
    2568:	e1 f7       	brne	.-8      	; 0x2562 <dlmoInit+0xe>
    256a:	e8 0f       	add	r30, r24
    256c:	f9 1f       	adc	r31, r25
    256e:	e0 55       	subi	r30, 0x50	; 80
    2570:	f3 4f       	sbci	r31, 0xF3	; 243
    2572:	10 82       	st	Z, r1
    2574:	2f 5f       	subi	r18, 0xFF	; 255
    2576:	3f 4f       	sbci	r19, 0xFF	; 255
  addLink(16,0,0,8,0);//9
  addLink(3,0,0,8,0);//1
  addLink(25,0,0,8,0);
  addLink(27,0,0,8,0);//Ad


    2578:	24 31       	cpi	r18, 0x14	; 20
    257a:	31 05       	cpc	r19, r1
    257c:	69 f7       	brne	.-38     	; 0x2558 <dlmoInit+0x4>
    257e:	80 e0       	ldi	r24, 0x00	; 0
    2580:	90 e0       	ldi	r25, 0x00	; 0
  addLink(19,0,0,8,0);
  addLink(20,0,0,8,0);
  addLink(21,0,0,8,0);

  addLink(41,0,0,8,0);//receive from 1
  addLink(42,1,0,1,0);//transmit to 1
    2582:	fc 01       	movw	r30, r24
    2584:	24 e0       	ldi	r18, 0x04	; 4
    2586:	ee 0f       	add	r30, r30
    2588:	ff 1f       	adc	r31, r31
    258a:	2a 95       	dec	r18
    258c:	e1 f7       	brne	.-8      	; 0x2586 <dlmoInit+0x32>
    258e:	e8 0f       	add	r30, r24
    2590:	f9 1f       	adc	r31, r25
    2592:	ec 5f       	subi	r30, 0xFC	; 252
    2594:	f0 4f       	sbci	r31, 0xF0	; 240
    2596:	10 82       	st	Z, r1
    2598:	01 96       	adiw	r24, 0x01	; 1
  addLink(40,0,0,8,0);//receive ad
  addLink(18,0,0,8,0);
  addLink(19,0,0,8,0);
  addLink(20,0,0,8,0);
  addLink(21,0,0,8,0);

    259a:	80 31       	cpi	r24, 0x10	; 16
    259c:	91 05       	cpc	r25, r1
    259e:	89 f7       	brne	.-30     	; 0x2582 <dlmoInit+0x2e>
  addLink(41,0,0,8,0);//receive from 1
  addLink(42,1,0,1,0);//transmit to 1
  addGraph(1,1,4,0,0);//graph
  addLink(5,4,1,1,2);//transmit to 4
  addLink(6,0,0,8,0);//receive from 4*/
  //addLink(26,0,0,4,0);
    25a0:	10 92 88 1a 	sts	0x1A88, r1
  addLink(11,9,0,1,0);

  addLink(12,0,0,8,0);
  addLink(13,0,0,8,0);
  addLink(14,0,0,8,0);
  addLink(15,0,0,8,0);
    25a4:	10 92 18 0e 	sts	0x0E18, r1
  addLink(16,0,0,8,0);
    25a8:	8c e3       	ldi	r24, 0x3C	; 60
    25aa:	90 e0       	ldi	r25, 0x00	; 0
    25ac:	90 93 1b 0e 	sts	0x0E1B, r25
    25b0:	80 93 1a 0e 	sts	0x0E1A, r24
  addLink(3,0,0,8,0);
  */

    25b4:	8c e1       	ldi	r24, 0x1C	; 28
    25b6:	9e e0       	ldi	r25, 0x0E	; 14
    25b8:	0e 94 a6 35 	call	0x6b4c	; 0x6b4c <nrk_time_get>
    25bc:	08 95       	ret

000025be <addCandidate>:
    25be:	ac 01       	movw	r20, r24
    25c0:	20 e0       	ldi	r18, 0x00	; 0
    25c2:	30 e0       	ldi	r19, 0x00	; 0
    25c4:	11 c0       	rjmp	.+34     	; 0x25e8 <addCandidate+0x2a>
    25c6:	ff 27       	eor	r31, r31
    25c8:	ee 0f       	add	r30, r30
    25ca:	ff 1f       	adc	r31, r31
    25cc:	ee 0f       	add	r30, r30
    25ce:	ff 1f       	adc	r31, r31
    25d0:	e5 54       	subi	r30, 0x45	; 69
    25d2:	f5 4e       	sbci	r31, 0xE5	; 229
    25d4:	81 81       	ldd	r24, Z+1	; 0x01
    25d6:	92 81       	ldd	r25, Z+2	; 0x02
    25d8:	2f 5f       	subi	r18, 0xFF	; 255
    25da:	3f 4f       	sbci	r19, 0xFF	; 255
    25dc:	84 17       	cp	r24, r20
    25de:	95 07       	cpc	r25, r21
    25e0:	19 f4       	brne	.+6      	; 0x25e8 <addCandidate+0x2a>
    25e2:	81 e0       	ldi	r24, 0x01	; 1
    25e4:	90 e0       	ldi	r25, 0x00	; 0
    25e6:	08 95       	ret
    25e8:	e2 2f       	mov	r30, r18
    25ea:	80 91 bb 1a 	lds	r24, 0x1ABB
    25ee:	28 17       	cp	r18, r24
    25f0:	50 f3       	brcs	.-44     	; 0x25c6 <addCandidate+0x8>
    25f2:	80 91 bb 1a 	lds	r24, 0x1ABB
    25f6:	84 31       	cpi	r24, 0x14	; 20
    25f8:	30 f0       	brcs	.+12     	; 0x2606 <addCandidate+0x48>
    25fa:	85 e0       	ldi	r24, 0x05	; 5
    25fc:	0e 94 47 0e 	call	0x1c8e	; 0x1c8e <setIsaError>
    2600:	8f ef       	ldi	r24, 0xFF	; 255
    2602:	9f ef       	ldi	r25, 0xFF	; 255
    2604:	08 95       	ret
    2606:	e0 91 bb 1a 	lds	r30, 0x1ABB
    260a:	ff 27       	eor	r31, r31
    260c:	ee 0f       	add	r30, r30
    260e:	ff 1f       	adc	r31, r31
    2610:	ee 0f       	add	r30, r30
    2612:	ff 1f       	adc	r31, r31
    2614:	e5 54       	subi	r30, 0x45	; 69
    2616:	f5 4e       	sbci	r31, 0xE5	; 229
    2618:	52 83       	std	Z+2, r21	; 0x02
    261a:	41 83       	std	Z+1, r20	; 0x01
    261c:	80 91 bb 1a 	lds	r24, 0x1ABB
    2620:	8f 5f       	subi	r24, 0xFF	; 255
    2622:	80 93 bb 1a 	sts	0x1ABB, r24
    2626:	80 91 bb 1a 	lds	r24, 0x1ABB
    262a:	99 27       	eor	r25, r25
    262c:	01 97       	sbiw	r24, 0x01	; 1
    262e:	9f 93       	push	r25
    2630:	8f 93       	push	r24
    2632:	5f 93       	push	r21
    2634:	4f 93       	push	r20
    2636:	87 e6       	ldi	r24, 0x67	; 103
    2638:	96 e0       	ldi	r25, 0x06	; 6
    263a:	9f 93       	push	r25
    263c:	8f 93       	push	r24
    263e:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    2642:	81 e0       	ldi	r24, 0x01	; 1
    2644:	90 e0       	ldi	r25, 0x00	; 0
    2646:	2d b7       	in	r18, 0x3d	; 61
    2648:	3e b7       	in	r19, 0x3e	; 62
    264a:	2a 5f       	subi	r18, 0xFA	; 250
    264c:	3f 4f       	sbci	r19, 0xFF	; 255
    264e:	0f b6       	in	r0, 0x3f	; 63
    2650:	f8 94       	cli
    2652:	3e bf       	out	0x3e, r19	; 62
    2654:	0f be       	out	0x3f, r0	; 63
    2656:	2d bf       	out	0x3d, r18	; 61
    2658:	08 95       	ret

0000265a <findLink>:
    		   MESSAGE *message;
    		   	message = &tx_buf[PKT_DATA_START];
    		   	message->type = DUMMY_PAYLOAD;
	sprintf( &message->data,"2");
	length=strlen(&tx_buf[PKT_DATA_START])+PKT_DATA_START+2;
	sendPacket(1,0, length, tx_buf, transmitCallback1);
    265a:	48 2f       	mov	r20, r24
    265c:	20 e0       	ldi	r18, 0x00	; 0
    265e:	30 e0       	ldi	r19, 0x00	; 0
	//sendPacket(5,0, length, tx_buf, transmitCallback1);
	//sendPacket(6, length, tx_buf, transmitCallback1);
    	cnt++;
    	   }

	/*sprintf( &tx_buf2[PKT_DATA_START],"Hello from slot 2!");
    2660:	c9 01       	movw	r24, r18
    2662:	88 0f       	add	r24, r24
    2664:	99 1f       	adc	r25, r25
    2666:	fc 01       	movw	r30, r24
    2668:	a3 e0       	ldi	r26, 0x03	; 3
    266a:	ee 0f       	add	r30, r30
    266c:	ff 1f       	adc	r31, r31
    266e:	aa 95       	dec	r26
    2670:	e1 f7       	brne	.-8      	; 0x266a <findLink+0x10>
    2672:	e8 0f       	add	r30, r24
    2674:	f9 1f       	adc	r31, r25
    2676:	e0 55       	subi	r30, 0x50	; 80
    2678:	f3 4f       	sbci	r31, 0xF3	; 243
    267a:	80 81       	ld	r24, Z
    267c:	88 23       	and	r24, r24
    267e:	51 f0       	breq	.+20     	; 0x2694 <findLink+0x3a>
    2680:	80 89       	ldd	r24, Z+16	; 0x10
    2682:	84 17       	cp	r24, r20
    2684:	39 f4       	brne	.+14     	; 0x2694 <findLink+0x3a>
	length=strlen(&tx_buf2[PKT_DATA_START])+PKT_DATA_START+1;
    2686:	82 e1       	ldi	r24, 0x12	; 18
    2688:	28 9f       	mul	r18, r24
    268a:	c0 01       	movw	r24, r0
    268c:	11 24       	eor	r1, r1
    268e:	80 55       	subi	r24, 0x50	; 80
    2690:	93 4f       	sbci	r25, 0xF3	; 243
    2692:	08 95       	ret
    2694:	2f 5f       	subi	r18, 0xFF	; 255
    2696:	3f 4f       	sbci	r19, 0xFF	; 255
	length=strlen(&tx_buf[PKT_DATA_START])+PKT_DATA_START+2;
	sendPacket(1,0, length, tx_buf, transmitCallback1);
	//sendPacket(5,0, length, tx_buf, transmitCallback1);
	//sendPacket(6, length, tx_buf, transmitCallback1);
    	cnt++;
    	   }
    2698:	24 31       	cpi	r18, 0x14	; 20
    269a:	31 05       	cpc	r19, r1
    269c:	09 f7       	brne	.-62     	; 0x2660 <findLink+0x6>

	/*sprintf( &tx_buf2[PKT_DATA_START],"Hello from slot 2!");
	length=strlen(&tx_buf2[PKT_DATA_START])+PKT_DATA_START+1;
	isa_tx_pkt(tx_buf2,length,configDHDR(),2);
	isa_wait_until_rx_or_tx ();*/
    	   setMatrix();
    269e:	84 2f       	mov	r24, r20
    26a0:	99 27       	eor	r25, r25
    26a2:	9f 93       	push	r25
    26a4:	8f 93       	push	r24
    26a6:	8b e8       	ldi	r24, 0x8B	; 139
    26a8:	96 e0       	ldi	r25, 0x06	; 6
    26aa:	9f 93       	push	r25
    26ac:	8f 93       	push	r24
    26ae:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    26b2:	80 e0       	ldi	r24, 0x00	; 0
    26b4:	90 e0       	ldi	r25, 0x00	; 0
    26b6:	0f 90       	pop	r0
    26b8:	0f 90       	pop	r0
    26ba:	0f 90       	pop	r0
    26bc:	0f 90       	pop	r0
    	     	  nrk_wait_until_next_period();
    //   }
    26be:	08 95       	ret

000026c0 <enQueue>:
    26c0:	cf 92       	push	r12
    26c2:	df 92       	push	r13
    26c4:	ef 92       	push	r14
    26c6:	ff 92       	push	r15
    26c8:	0f 93       	push	r16
    26ca:	1f 93       	push	r17
    26cc:	cf 93       	push	r28
    26ce:	df 93       	push	r29
    26d0:	7c 01       	movw	r14, r24
    26d2:	56 2f       	mov	r21, r22
    26d4:	b9 01       	movw	r22, r18
    26d6:	80 91 88 1a 	lds	r24, 0x1A88
    26da:	85 31       	cpi	r24, 0x15	; 21
    26dc:	10 f0       	brcs	.+4      	; 0x26e2 <enQueue+0x22>
    26de:	83 e0       	ldi	r24, 0x03	; 3
    26e0:	03 c0       	rjmp	.+6      	; 0x26e8 <enQueue+0x28>
    26e2:	44 37       	cpi	r20, 0x74	; 116
    26e4:	20 f0       	brcs	.+8      	; 0x26ee <enQueue+0x2e>
    26e6:	84 e0       	ldi	r24, 0x04	; 4
    26e8:	0e 94 47 0e 	call	0x1c8e	; 0x1c8e <setIsaError>
    26ec:	45 c0       	rjmp	.+138    	; 0x2778 <enQueue+0xb8>
    26ee:	a0 e0       	ldi	r26, 0x00	; 0
    26f0:	b0 e0       	ldi	r27, 0x00	; 0
    26f2:	85 e8       	ldi	r24, 0x85	; 133
    26f4:	90 e0       	ldi	r25, 0x00	; 0
    26f6:	a8 9f       	mul	r26, r24
    26f8:	60 01       	movw	r12, r0
    26fa:	a9 9f       	mul	r26, r25
    26fc:	d0 0c       	add	r13, r0
    26fe:	b8 9f       	mul	r27, r24
    2700:	d0 0c       	add	r13, r0
    2702:	11 24       	eor	r1, r1
    2704:	f6 01       	movw	r30, r12
    2706:	ec 5e       	subi	r30, 0xEC	; 236
    2708:	ff 4e       	sbci	r31, 0xEF	; 239
    270a:	9f 01       	movw	r18, r30
    270c:	2a 58       	subi	r18, 0x8A	; 138
    270e:	3f 4f       	sbci	r19, 0xFF	; 255
    2710:	e9 01       	movw	r28, r18
    2712:	88 81       	ld	r24, Y
    2714:	88 23       	and	r24, r24
    2716:	09 f5       	brne	.+66     	; 0x275a <enQueue+0x9a>
    2718:	40 83       	st	Z, r20
    271a:	e7 58       	subi	r30, 0x87	; 135
    271c:	ff 4f       	sbci	r31, 0xFF	; 255
    271e:	50 83       	st	Z, r21
    2720:	34 97       	sbiw	r30, 0x04	; 4
    2722:	81 e0       	ldi	r24, 0x01	; 1
    2724:	80 83       	st	Z, r24
    2726:	88 83       	st	Y, r24
    2728:	35 96       	adiw	r30, 0x05	; 5
    272a:	f1 82       	std	Z+1, r15	; 0x01
    272c:	e0 82       	st	Z, r14
    272e:	33 97       	sbiw	r30, 0x03	; 3
    2730:	11 83       	std	Z+1, r17	; 0x01
    2732:	00 83       	st	Z, r16
    2734:	3d 96       	adiw	r30, 0x0d	; 13
    2736:	10 82       	st	Z, r1
    2738:	55 27       	eor	r21, r21
    273a:	c6 01       	movw	r24, r12
    273c:	8b 5e       	subi	r24, 0xEB	; 235
    273e:	9f 4e       	sbci	r25, 0xEF	; 239
    2740:	0e 94 1f 3f 	call	0x7e3e	; 0x7e3e <memcpy>
    2744:	c6 01       	movw	r24, r12
    2746:	80 57       	subi	r24, 0x70	; 112
    2748:	9f 4e       	sbci	r25, 0xEF	; 239
    274a:	0e 94 a6 35 	call	0x6b4c	; 0x6b4c <nrk_time_get>
    274e:	80 91 88 1a 	lds	r24, 0x1A88
    2752:	8f 5f       	subi	r24, 0xFF	; 255
    2754:	80 93 88 1a 	sts	0x1A88, r24
    2758:	08 c0       	rjmp	.+16     	; 0x276a <enQueue+0xaa>
    275a:	8a 2f       	mov	r24, r26
    275c:	8f 5f       	subi	r24, 0xFF	; 255
    275e:	11 96       	adiw	r26, 0x01	; 1
    2760:	a4 31       	cpi	r26, 0x14	; 20
    2762:	b1 05       	cpc	r27, r1
    2764:	31 f6       	brne	.-116    	; 0x26f2 <enQueue+0x32>
    2766:	84 31       	cpi	r24, 0x14	; 20
    2768:	19 f0       	breq	.+6      	; 0x2770 <enQueue+0xb0>
    276a:	81 e0       	ldi	r24, 0x01	; 1
    276c:	90 e0       	ldi	r25, 0x00	; 0
    276e:	06 c0       	rjmp	.+12     	; 0x277c <enQueue+0xbc>
    2770:	81 eb       	ldi	r24, 0xB1	; 177
    2772:	96 e0       	ldi	r25, 0x06	; 6
    2774:	0e 94 c1 3f 	call	0x7f82	; 0x7f82 <puts>
    2778:	8f ef       	ldi	r24, 0xFF	; 255
    277a:	9f ef       	ldi	r25, 0xFF	; 255
    277c:	df 91       	pop	r29
    277e:	cf 91       	pop	r28
    2780:	1f 91       	pop	r17
    2782:	0f 91       	pop	r16
    2784:	ff 90       	pop	r15
    2786:	ef 90       	pop	r14
    2788:	df 90       	pop	r13
    278a:	cf 90       	pop	r12
    278c:	08 95       	ret

0000278e <sendAdv>:
    278e:	ef 92       	push	r14
    2790:	ff 92       	push	r15
    2792:	0f 93       	push	r16
    2794:	1f 93       	push	r17
    2796:	40 91 bb 1a 	lds	r20, 0x1ABB
    279a:	04 2f       	mov	r16, r20
    279c:	11 27       	eor	r17, r17
    279e:	00 0f       	add	r16, r16
    27a0:	11 1f       	adc	r17, r17
    27a2:	00 0f       	add	r16, r16
    27a4:	11 1f       	adc	r17, r17
    27a6:	40 2f       	mov	r20, r16
    27a8:	4f 5f       	subi	r20, 0xFF	; 255
    27aa:	13 e3       	ldi	r17, 0x33	; 51
    27ac:	e1 2e       	mov	r14, r17
    27ae:	1e e0       	ldi	r17, 0x0E	; 14
    27b0:	f1 2e       	mov	r15, r17
    27b2:	10 92 33 0e 	sts	0x0E33, r1
    27b6:	55 27       	eor	r21, r21
    27b8:	6b eb       	ldi	r22, 0xBB	; 187
    27ba:	7a e1       	ldi	r23, 0x1A	; 26
    27bc:	c7 01       	movw	r24, r14
    27be:	01 96       	adiw	r24, 0x01	; 1
    27c0:	0e 94 1f 3f 	call	0x7e3e	; 0x7e3e <memcpy>
    27c4:	80 91 21 09 	lds	r24, 0x0921
    27c8:	80 93 2f 0e 	sts	0x0E2F, r24
    27cc:	90 91 ae 0c 	lds	r25, 0x0CAE
    27d0:	90 93 2e 0e 	sts	0x0E2E, r25
    27d4:	40 2f       	mov	r20, r16
    27d6:	47 5f       	subi	r20, 0xF7	; 247
    27d8:	29 ef       	ldi	r18, 0xF9	; 249
    27da:	3f ef       	ldi	r19, 0xFF	; 255
    27dc:	e2 0e       	add	r14, r18
    27de:	f3 1e       	adc	r15, r19
    27e0:	00 e0       	ldi	r16, 0x00	; 0
    27e2:	10 e0       	ldi	r17, 0x00	; 0
    27e4:	97 01       	movw	r18, r14
    27e6:	60 e0       	ldi	r22, 0x00	; 0
    27e8:	99 27       	eor	r25, r25
    27ea:	0e 94 60 13 	call	0x26c0	; 0x26c0 <enQueue>
    27ee:	99 27       	eor	r25, r25
    27f0:	87 fd       	sbrc	r24, 7
    27f2:	90 95       	com	r25
    27f4:	1f 91       	pop	r17
    27f6:	0f 91       	pop	r16
    27f8:	ff 90       	pop	r15
    27fa:	ef 90       	pop	r14
    27fc:	08 95       	ret

000027fe <dd_data_request>:
    27fe:	8f 92       	push	r8
    2800:	9f 92       	push	r9
    2802:	af 92       	push	r10
    2804:	cf 92       	push	r12
    2806:	0f 93       	push	r16
    2808:	1f 93       	push	r17
    280a:	cf 93       	push	r28
    280c:	df 93       	push	r29
    280e:	cd b7       	in	r28, 0x3d	; 61
    2810:	de b7       	in	r29, 0x3e	; 62
    2812:	cb 01       	movw	r24, r22
    2814:	64 2f       	mov	r22, r20
    2816:	4a 2d       	mov	r20, r10
    2818:	f4 01       	movw	r30, r8
    281a:	83 83       	std	Z+3, r24	; 0x03
    281c:	c6 82       	std	Z+6, r12	; 0x06
    281e:	0b 85       	ldd	r16, Y+11	; 0x0b
    2820:	1c 85       	ldd	r17, Y+12	; 0x0c
    2822:	94 01       	movw	r18, r8
    2824:	0e 94 60 13 	call	0x26c0	; 0x26c0 <enQueue>
    2828:	99 27       	eor	r25, r25
    282a:	87 fd       	sbrc	r24, 7
    282c:	90 95       	com	r25
    282e:	df 91       	pop	r29
    2830:	cf 91       	pop	r28
    2832:	1f 91       	pop	r17
    2834:	0f 91       	pop	r16
    2836:	cf 90       	pop	r12
    2838:	af 90       	pop	r10
    283a:	9f 90       	pop	r9
    283c:	8f 90       	pop	r8
    283e:	08 95       	ret

00002840 <dd_data_indication>:
    2840:	0e 94 0d 06 	call	0xc1a	; 0xc1a <isa_rx_pkt_release>
    2844:	08 95       	ret

00002846 <sendPacket>:
    2846:	8f 92       	push	r8
    2848:	9f 92       	push	r9
    284a:	af 92       	push	r10
    284c:	cf 92       	push	r12
    284e:	ef 92       	push	r14
    2850:	0f 93       	push	r16
    2852:	1f 93       	push	r17
    2854:	1f 93       	push	r17
    2856:	0f 93       	push	r16
    2858:	49 01       	movw	r8, r18
    285a:	a4 2e       	mov	r10, r20
    285c:	c6 2e       	mov	r12, r22
    285e:	ee 24       	eor	r14, r14
    2860:	00 e0       	ldi	r16, 0x00	; 0
    2862:	20 e0       	ldi	r18, 0x00	; 0
    2864:	40 e0       	ldi	r20, 0x00	; 0
    2866:	bc 01       	movw	r22, r24
    2868:	80 e0       	ldi	r24, 0x00	; 0
    286a:	90 e0       	ldi	r25, 0x00	; 0
    286c:	0e 94 ff 13 	call	0x27fe	; 0x27fe <dd_data_request>
    2870:	0f 90       	pop	r0
    2872:	0f 90       	pop	r0
    2874:	8f 3f       	cpi	r24, 0xFF	; 255
    2876:	11 f4       	brne	.+4      	; 0x287c <sendPacket+0x36>
    2878:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <printIsaError>
    287c:	1f 91       	pop	r17
    287e:	0f 91       	pop	r16
    2880:	ef 90       	pop	r14
    2882:	cf 90       	pop	r12
    2884:	af 90       	pop	r10
    2886:	9f 90       	pop	r9
    2888:	8f 90       	pop	r8
    288a:	08 95       	ret

0000288c <addGraph>:
    288c:	6f 92       	push	r6
    288e:	7f 92       	push	r7
    2890:	8f 92       	push	r8
    2892:	9f 92       	push	r9
    2894:	af 92       	push	r10
    2896:	bf 92       	push	r11
    2898:	df 92       	push	r13
    289a:	ef 92       	push	r14
    289c:	ff 92       	push	r15
    289e:	0f 93       	push	r16
    28a0:	1f 93       	push	r17
    28a2:	cf 93       	push	r28
    28a4:	df 93       	push	r29
    28a6:	7c 01       	movw	r14, r24
    28a8:	d6 2e       	mov	r13, r22
    28aa:	5a 01       	movw	r10, r20
    28ac:	49 01       	movw	r8, r18
    28ae:	38 01       	movw	r6, r16
    28b0:	10 e0       	ldi	r17, 0x00	; 0
    28b2:	20 e0       	ldi	r18, 0x00	; 0
    28b4:	c0 e0       	ldi	r28, 0x00	; 0
    28b6:	d0 e0       	ldi	r29, 0x00	; 0
    28b8:	fe 01       	movw	r30, r28
    28ba:	ee 0f       	add	r30, r30
    28bc:	ff 1f       	adc	r31, r31
    28be:	ce 01       	movw	r24, r28
    28c0:	43 e0       	ldi	r20, 0x03	; 3
    28c2:	88 0f       	add	r24, r24
    28c4:	99 1f       	adc	r25, r25
    28c6:	4a 95       	dec	r20
    28c8:	e1 f7       	brne	.-8      	; 0x28c2 <addGraph+0x36>
    28ca:	e8 0f       	add	r30, r24
    28cc:	f9 1f       	adc	r31, r25
    28ce:	e0 56       	subi	r30, 0x60	; 96
    28d0:	f1 4f       	sbci	r31, 0xF1	; 241
    28d2:	80 81       	ld	r24, Z
    28d4:	91 81       	ldd	r25, Z+1	; 0x01
    28d6:	e8 16       	cp	r14, r24
    28d8:	f9 06       	cpc	r15, r25
    28da:	51 f4       	brne	.+20     	; 0x28f0 <addGraph+0x64>
    28dc:	ff 92       	push	r15
    28de:	ef 92       	push	r14
    28e0:	84 ec       	ldi	r24, 0xC4	; 196
    28e2:	96 e0       	ldi	r25, 0x06	; 6
    28e4:	9f 93       	push	r25
    28e6:	8f 93       	push	r24
    28e8:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    28ec:	1c 2f       	mov	r17, r28
    28ee:	20 c0       	rjmp	.+64     	; 0x2930 <addGraph+0xa4>
    28f0:	80 81       	ld	r24, Z
    28f2:	91 81       	ldd	r25, Z+1	; 0x01
    28f4:	89 2b       	or	r24, r25
    28f6:	21 f4       	brne	.+8      	; 0x2900 <addGraph+0x74>
    28f8:	22 23       	and	r18, r18
    28fa:	11 f4       	brne	.+4      	; 0x2900 <addGraph+0x74>
    28fc:	1c 2f       	mov	r17, r28
    28fe:	21 e0       	ldi	r18, 0x01	; 1
    2900:	21 96       	adiw	r28, 0x01	; 1
    2902:	ca 30       	cpi	r28, 0x0A	; 10
    2904:	d1 05       	cpc	r29, r1
    2906:	c1 f6       	brne	.-80     	; 0x28b8 <addGraph+0x2c>
    2908:	22 23       	and	r18, r18
    290a:	41 f4       	brne	.+16     	; 0x291c <addGraph+0x90>
    290c:	86 e0       	ldi	r24, 0x06	; 6
    290e:	0e 94 47 0e 	call	0x1c8e	; 0x1c8e <setIsaError>
    2912:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <printIsaError>
    2916:	80 e0       	ldi	r24, 0x00	; 0
    2918:	90 e0       	ldi	r25, 0x00	; 0
    291a:	31 c0       	rjmp	.+98     	; 0x297e <addGraph+0xf2>
    291c:	81 2f       	mov	r24, r17
    291e:	99 27       	eor	r25, r25
    2920:	9f 93       	push	r25
    2922:	8f 93       	push	r24
    2924:	89 ee       	ldi	r24, 0xE9	; 233
    2926:	96 e0       	ldi	r25, 0x06	; 6
    2928:	9f 93       	push	r25
    292a:	8f 93       	push	r24
    292c:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    2930:	0f 90       	pop	r0
    2932:	0f 90       	pop	r0
    2934:	0f 90       	pop	r0
    2936:	0f 90       	pop	r0
    2938:	e1 2f       	mov	r30, r17
    293a:	ff 27       	eor	r31, r31
    293c:	cf 01       	movw	r24, r30
    293e:	33 e0       	ldi	r19, 0x03	; 3
    2940:	88 0f       	add	r24, r24
    2942:	99 1f       	adc	r25, r25
    2944:	3a 95       	dec	r19
    2946:	e1 f7       	brne	.-8      	; 0x2940 <addGraph+0xb4>
    2948:	ee 0f       	add	r30, r30
    294a:	ff 1f       	adc	r31, r31
    294c:	e8 0f       	add	r30, r24
    294e:	f9 1f       	adc	r31, r25
    2950:	e0 56       	subi	r30, 0x60	; 96
    2952:	f1 4f       	sbci	r31, 0xF1	; 241
    2954:	f1 82       	std	Z+1, r15	; 0x01
    2956:	e0 82       	st	Z, r14
    2958:	82 81       	ldd	r24, Z+2	; 0x02
    295a:	dd 0c       	add	r13, r13
    295c:	dd 0c       	add	r13, r13
    295e:	dd 0c       	add	r13, r13
    2960:	dd 0c       	add	r13, r13
    2962:	8d 29       	or	r24, r13
    2964:	82 83       	std	Z+2, r24	; 0x02
    2966:	b5 82       	std	Z+5, r11	; 0x05
    2968:	a4 82       	std	Z+4, r10	; 0x04
    296a:	97 82       	std	Z+7, r9	; 0x07
    296c:	86 82       	std	Z+6, r8	; 0x06
    296e:	71 86       	std	Z+9, r7	; 0x09
    2970:	60 86       	std	Z+8, r6	; 0x08
    2972:	8a e0       	ldi	r24, 0x0A	; 10
    2974:	18 9f       	mul	r17, r24
    2976:	c0 01       	movw	r24, r0
    2978:	11 24       	eor	r1, r1
    297a:	80 56       	subi	r24, 0x60	; 96
    297c:	91 4f       	sbci	r25, 0xF1	; 241
    297e:	df 91       	pop	r29
    2980:	cf 91       	pop	r28
    2982:	1f 91       	pop	r17
    2984:	0f 91       	pop	r16
    2986:	ff 90       	pop	r15
    2988:	ef 90       	pop	r14
    298a:	df 90       	pop	r13
    298c:	bf 90       	pop	r11
    298e:	af 90       	pop	r10
    2990:	9f 90       	pop	r9
    2992:	8f 90       	pop	r8
    2994:	7f 90       	pop	r7
    2996:	6f 90       	pop	r6
    2998:	08 95       	ret

0000299a <addNeighbor>:
    299a:	6f 92       	push	r6
    299c:	7f 92       	push	r7
    299e:	8f 92       	push	r8
    29a0:	af 92       	push	r10
    29a2:	cf 92       	push	r12
    29a4:	ef 92       	push	r14
    29a6:	ff 92       	push	r15
    29a8:	0f 93       	push	r16
    29aa:	1f 93       	push	r17
    29ac:	cf 93       	push	r28
    29ae:	df 93       	push	r29
    29b0:	cd b7       	in	r28, 0x3d	; 61
    29b2:	de b7       	in	r29, 0x3e	; 62
    29b4:	28 97       	sbiw	r28, 0x08	; 8
    29b6:	0f b6       	in	r0, 0x3f	; 63
    29b8:	f8 94       	cli
    29ba:	de bf       	out	0x3e, r29	; 62
    29bc:	0f be       	out	0x3f, r0	; 63
    29be:	cd bf       	out	0x3d, r28	; 61
    29c0:	3c 01       	movw	r6, r24
    29c2:	09 83       	std	Y+1, r16	; 0x01
    29c4:	1a 83       	std	Y+2, r17	; 0x02
    29c6:	2b 83       	std	Y+3, r18	; 0x03
    29c8:	3c 83       	std	Y+4, r19	; 0x04
    29ca:	4d 83       	std	Y+5, r20	; 0x05
    29cc:	5e 83       	std	Y+6, r21	; 0x06
    29ce:	6f 83       	std	Y+7, r22	; 0x07
    29d0:	78 87       	std	Y+8, r23	; 0x08
    29d2:	ff 24       	eor	r15, r15
    29d4:	20 e0       	ldi	r18, 0x00	; 0
    29d6:	00 e0       	ldi	r16, 0x00	; 0
    29d8:	10 e0       	ldi	r17, 0x00	; 0
    29da:	30 2f       	mov	r19, r16
    29dc:	f8 01       	movw	r30, r16
    29de:	a4 e0       	ldi	r26, 0x04	; 4
    29e0:	ee 0f       	add	r30, r30
    29e2:	ff 1f       	adc	r31, r31
    29e4:	aa 95       	dec	r26
    29e6:	e1 f7       	brne	.-8      	; 0x29e0 <addNeighbor+0x46>
    29e8:	e0 0f       	add	r30, r16
    29ea:	f1 1f       	adc	r31, r17
    29ec:	ec 5f       	subi	r30, 0xFC	; 252
    29ee:	f0 4f       	sbci	r31, 0xF0	; 240
    29f0:	81 81       	ldd	r24, Z+1	; 0x01
    29f2:	92 81       	ldd	r25, Z+2	; 0x02
    29f4:	68 16       	cp	r6, r24
    29f6:	79 06       	cpc	r7, r25
    29f8:	69 f4       	brne	.+26     	; 0x2a14 <addNeighbor+0x7a>
    29fa:	80 81       	ld	r24, Z
    29fc:	88 23       	and	r24, r24
    29fe:	51 f0       	breq	.+20     	; 0x2a14 <addNeighbor+0x7a>
    2a00:	7f 92       	push	r7
    2a02:	6f 92       	push	r6
    2a04:	83 e0       	ldi	r24, 0x03	; 3
    2a06:	97 e0       	ldi	r25, 0x07	; 7
    2a08:	9f 93       	push	r25
    2a0a:	8f 93       	push	r24
    2a0c:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    2a10:	f0 2e       	mov	r15, r16
    2a12:	2a c0       	rjmp	.+84     	; 0x2a68 <addNeighbor+0xce>
    2a14:	f8 01       	movw	r30, r16
    2a16:	74 e0       	ldi	r23, 0x04	; 4
    2a18:	ee 0f       	add	r30, r30
    2a1a:	ff 1f       	adc	r31, r31
    2a1c:	7a 95       	dec	r23
    2a1e:	e1 f7       	brne	.-8      	; 0x2a18 <addNeighbor+0x7e>
    2a20:	e0 0f       	add	r30, r16
    2a22:	f1 1f       	adc	r31, r17
    2a24:	ec 5f       	subi	r30, 0xFC	; 252
    2a26:	f0 4f       	sbci	r31, 0xF0	; 240
    2a28:	80 81       	ld	r24, Z
    2a2a:	88 23       	and	r24, r24
    2a2c:	21 f4       	brne	.+8      	; 0x2a36 <addNeighbor+0x9c>
    2a2e:	22 23       	and	r18, r18
    2a30:	11 f4       	brne	.+4      	; 0x2a36 <addNeighbor+0x9c>
    2a32:	f3 2e       	mov	r15, r19
    2a34:	21 e0       	ldi	r18, 0x01	; 1
    2a36:	0f 5f       	subi	r16, 0xFF	; 255
    2a38:	1f 4f       	sbci	r17, 0xFF	; 255
    2a3a:	00 31       	cpi	r16, 0x10	; 16
    2a3c:	11 05       	cpc	r17, r1
    2a3e:	69 f6       	brne	.-102    	; 0x29da <addNeighbor+0x40>
    2a40:	22 23       	and	r18, r18
    2a42:	41 f4       	brne	.+16     	; 0x2a54 <addNeighbor+0xba>
    2a44:	82 e0       	ldi	r24, 0x02	; 2
    2a46:	0e 94 47 0e 	call	0x1c8e	; 0x1c8e <setIsaError>
    2a4a:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <printIsaError>
    2a4e:	80 e0       	ldi	r24, 0x00	; 0
    2a50:	90 e0       	ldi	r25, 0x00	; 0
    2a52:	47 c0       	rjmp	.+142    	; 0x2ae2 <addNeighbor+0x148>
    2a54:	8f 2d       	mov	r24, r15
    2a56:	99 27       	eor	r25, r25
    2a58:	9f 93       	push	r25
    2a5a:	8f 93       	push	r24
    2a5c:	8c e2       	ldi	r24, 0x2C	; 44
    2a5e:	97 e0       	ldi	r25, 0x07	; 7
    2a60:	9f 93       	push	r25
    2a62:	8f 93       	push	r24
    2a64:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    2a68:	0f 90       	pop	r0
    2a6a:	0f 90       	pop	r0
    2a6c:	0f 90       	pop	r0
    2a6e:	0f 90       	pop	r0
    2a70:	8f 2d       	mov	r24, r15
    2a72:	99 27       	eor	r25, r25
    2a74:	dc 01       	movw	r26, r24
    2a76:	64 e0       	ldi	r22, 0x04	; 4
    2a78:	aa 0f       	add	r26, r26
    2a7a:	bb 1f       	adc	r27, r27
    2a7c:	6a 95       	dec	r22
    2a7e:	e1 f7       	brne	.-8      	; 0x2a78 <addNeighbor+0xde>
    2a80:	a8 0f       	add	r26, r24
    2a82:	b9 1f       	adc	r27, r25
    2a84:	ac 5f       	subi	r26, 0xFC	; 252
    2a86:	b0 4f       	sbci	r27, 0xF0	; 240
    2a88:	fd 01       	movw	r30, r26
    2a8a:	72 82       	std	Z+2, r7	; 0x02
    2a8c:	61 82       	std	Z+1, r6	; 0x01
    2a8e:	81 e0       	ldi	r24, 0x01	; 1
    2a90:	8c 93       	st	X, r24
    2a92:	9d 01       	movw	r18, r26
    2a94:	2d 5f       	subi	r18, 0xFD	; 253
    2a96:	3f 4f       	sbci	r19, 0xFF	; 255
    2a98:	89 81       	ldd	r24, Y+1	; 0x01
    2a9a:	83 83       	std	Z+3, r24	; 0x03
    2a9c:	8a 81       	ldd	r24, Y+2	; 0x02
    2a9e:	f9 01       	movw	r30, r18
    2aa0:	81 83       	std	Z+1, r24	; 0x01
    2aa2:	8b 81       	ldd	r24, Y+3	; 0x03
    2aa4:	82 83       	std	Z+2, r24	; 0x02
    2aa6:	8c 81       	ldd	r24, Y+4	; 0x04
    2aa8:	83 83       	std	Z+3, r24	; 0x03
    2aaa:	8d 81       	ldd	r24, Y+5	; 0x05
    2aac:	84 83       	std	Z+4, r24	; 0x04
    2aae:	8e 81       	ldd	r24, Y+6	; 0x06
    2ab0:	85 83       	std	Z+5, r24	; 0x05
    2ab2:	8f 81       	ldd	r24, Y+7	; 0x07
    2ab4:	86 83       	std	Z+6, r24	; 0x06
    2ab6:	88 85       	ldd	r24, Y+8	; 0x08
    2ab8:	87 83       	std	Z+7, r24	; 0x07
    2aba:	fd 01       	movw	r30, r26
    2abc:	e3 86       	std	Z+11, r14	; 0x0b
    2abe:	c4 86       	std	Z+12, r12	; 0x0c
    2ac0:	aa 20       	and	r10, r10
    2ac2:	19 f0       	breq	.+6      	; 0x2aca <addNeighbor+0x130>
    2ac4:	85 85       	ldd	r24, Z+13	; 0x0d
    2ac6:	80 68       	ori	r24, 0x80	; 128
    2ac8:	85 87       	std	Z+13, r24	; 0x0d
    2aca:	fd 01       	movw	r30, r26
    2acc:	86 86       	std	Z+14, r8	; 0x0e
    2ace:	8e 89       	ldd	r24, Y+22	; 0x16
    2ad0:	87 87       	std	Z+15, r24	; 0x0f
    2ad2:	8f 89       	ldd	r24, Y+23	; 0x17
    2ad4:	80 8b       	std	Z+16, r24	; 0x10
    2ad6:	81 e1       	ldi	r24, 0x11	; 17
    2ad8:	f8 9e       	mul	r15, r24
    2ada:	c0 01       	movw	r24, r0
    2adc:	11 24       	eor	r1, r1
    2ade:	8c 5f       	subi	r24, 0xFC	; 252
    2ae0:	90 4f       	sbci	r25, 0xF0	; 240
    2ae2:	28 96       	adiw	r28, 0x08	; 8
    2ae4:	0f b6       	in	r0, 0x3f	; 63
    2ae6:	f8 94       	cli
    2ae8:	de bf       	out	0x3e, r29	; 62
    2aea:	0f be       	out	0x3f, r0	; 63
    2aec:	cd bf       	out	0x3d, r28	; 61
    2aee:	df 91       	pop	r29
    2af0:	cf 91       	pop	r28
    2af2:	1f 91       	pop	r17
    2af4:	0f 91       	pop	r16
    2af6:	ff 90       	pop	r15
    2af8:	ef 90       	pop	r14
    2afa:	cf 90       	pop	r12
    2afc:	af 90       	pop	r10
    2afe:	8f 90       	pop	r8
    2b00:	7f 90       	pop	r7
    2b02:	6f 90       	pop	r6
    2b04:	08 95       	ret

00002b06 <addLink>:
  char c = -1;
  nrk_sig_t uart_rx_signal;
  uint8_t finished = 0;

  printf( "Task1 PID=%d\r\n",nrk_get_pid());
  
    2b06:	6f 92       	push	r6
    2b08:	7f 92       	push	r7
    2b0a:	8f 92       	push	r8
    2b0c:	9f 92       	push	r9
    2b0e:	af 92       	push	r10
    2b10:	bf 92       	push	r11
    2b12:	cf 92       	push	r12
    2b14:	df 92       	push	r13
    2b16:	ef 92       	push	r14
    2b18:	ff 92       	push	r15
    2b1a:	0f 93       	push	r16
    2b1c:	1f 93       	push	r17
    2b1e:	cf 93       	push	r28
    2b20:	df 93       	push	r29
    2b22:	a8 2e       	mov	r10, r24
    2b24:	eb 01       	movw	r28, r22
    2b26:	7a 01       	movw	r14, r20
    2b28:	d2 2e       	mov	r13, r18
    2b2a:	60 2e       	mov	r6, r16
  nrk_led_set(RED_LED);
  



 // isa_set_schedule(ISA_REPEATER, MY_CLK_SRC_ID);
    2b2c:	8e e3       	ldi	r24, 0x3E	; 62
    2b2e:	8a 15       	cp	r24, r10
    2b30:	28 f4       	brcc	.+10     	; 0x2b3c <addLink+0x36>

    2b32:	89 e4       	ldi	r24, 0x49	; 73
    2b34:	97 e0       	ldi	r25, 0x07	; 7
    2b36:	0e 94 c1 3f 	call	0x7f82	; 0x7f82 <puts>
    2b3a:	ed c0       	rjmp	.+474    	; 0x2d16 <addLink+0x210>
    2b3c:	0f ef       	ldi	r16, 0xFF	; 255
    2b3e:	20 e0       	ldi	r18, 0x00	; 0
    2b40:	30 e0       	ldi	r19, 0x00	; 0
    2b42:	72 2e       	mov	r7, r18
 // isa_set_channel(MY_CHANNEL);

  isa_start();
  
  isa_rx_pkt_set_buffer(rx_buf, RF_MAX_PAYLOAD_SIZE);
  
    2b44:	0f 3f       	cpi	r16, 0xFF	; 255
    2b46:	89 f4       	brne	.+34     	; 0x2b6a <addLink+0x64>
    2b48:	f9 01       	movw	r30, r18
    2b4a:	ee 0f       	add	r30, r30
    2b4c:	ff 1f       	adc	r31, r31
    2b4e:	cf 01       	movw	r24, r30
    2b50:	63 e0       	ldi	r22, 0x03	; 3
    2b52:	88 0f       	add	r24, r24
    2b54:	99 1f       	adc	r25, r25
    2b56:	6a 95       	dec	r22
    2b58:	e1 f7       	brne	.-8      	; 0x2b52 <addLink+0x4c>
    2b5a:	e8 0f       	add	r30, r24
    2b5c:	f9 1f       	adc	r31, r25
    2b5e:	e0 55       	subi	r30, 0x50	; 80
    2b60:	f3 4f       	sbci	r31, 0xF3	; 243
    2b62:	80 81       	ld	r24, Z
    2b64:	88 23       	and	r24, r24
    2b66:	09 f4       	brne	.+2      	; 0x2b6a <addLink+0x64>
    2b68:	02 2f       	mov	r16, r18
  while(!isa_ready())  nrk_wait_until_next_period(); 
    2b6a:	f9 01       	movw	r30, r18
    2b6c:	ee 0f       	add	r30, r30
    2b6e:	ff 1f       	adc	r31, r31
    2b70:	cf 01       	movw	r24, r30
    2b72:	43 e0       	ldi	r20, 0x03	; 3
    2b74:	88 0f       	add	r24, r24
    2b76:	99 1f       	adc	r25, r25
    2b78:	4a 95       	dec	r20
    2b7a:	e1 f7       	brne	.-8      	; 0x2b74 <addLink+0x6e>
    2b7c:	e8 0f       	add	r30, r24
    2b7e:	f9 1f       	adc	r31, r25
    2b80:	e0 55       	subi	r30, 0x50	; 80
    2b82:	f3 4f       	sbci	r31, 0xF3	; 243
    2b84:	80 89       	ldd	r24, Z+16	; 0x10
    2b86:	8a 15       	cp	r24, r10
    2b88:	81 f4       	brne	.+32     	; 0x2baa <addLink+0xa4>

    2b8a:	8a 2d       	mov	r24, r10
    2b8c:	99 27       	eor	r25, r25
    2b8e:	9f 93       	push	r25
    2b90:	8f 93       	push	r24
    2b92:	83 e6       	ldi	r24, 0x63	; 99
    2b94:	97 e0       	ldi	r25, 0x07	; 7
    2b96:	9f 93       	push	r25
    2b98:	8f 93       	push	r24
    2b9a:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
  /*while(isa_join_ready()!=1) nrk_wait_until_next_period();
    2b9e:	07 2d       	mov	r16, r7
    
    2ba0:	0f 90       	pop	r0
    2ba2:	0f 90       	pop	r0
    2ba4:	0f 90       	pop	r0
    2ba6:	0f 90       	pop	r0
    2ba8:	10 c0       	rjmp	.+32     	; 0x2bca <addLink+0xc4>
    2baa:	73 94       	inc	r7
    2bac:	2f 5f       	subi	r18, 0xFF	; 255
    2bae:	3f 4f       	sbci	r19, 0xFF	; 255
 // isa_set_schedule(ISA_REPEATER, MY_CLK_SRC_ID);

 // isa_set_channel(MY_CHANNEL);

  isa_start();
  
    2bb0:	24 31       	cpi	r18, 0x14	; 20
    2bb2:	31 05       	cpc	r19, r1
    2bb4:	31 f6       	brne	.-116    	; 0x2b42 <addLink+0x3c>
  /*while(isa_join_ready()!=1) nrk_wait_until_next_period();
    
    for(i=0;i<4;i++){  // set tx slots
	if(tx_slot_from_join[i]==0)
		break;
	else
    2bb6:	0f 3f       	cpi	r16, 0xFF	; 255
    2bb8:	41 f4       	brne	.+16     	; 0x2bca <addLink+0xc4>
	    my_tx_slot[i]=tx_slot_from_join[i];
    }	   
  printf("MAIN_TX:%d\r\n",my_tx_slot[0]);*/
    2bba:	81 e0       	ldi	r24, 0x01	; 1
    2bbc:	0e 94 47 0e 	call	0x1c8e	; 0x1c8e <setIsaError>

    2bc0:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <printIsaError>
    2bc4:	8f ef       	ldi	r24, 0xFF	; 255
    2bc6:	9f ef       	ldi	r25, 0xFF	; 255
    2bc8:	a6 c0       	rjmp	.+332    	; 0x2d16 <addLink+0x210>

  //i=0;
  while(1){


//Spit out log info
    2bca:	e1 e0       	ldi	r30, 0x01	; 1
    2bcc:	de 16       	cp	r13, r30
    2bce:	19 f0       	breq	.+6      	; 0x2bd6 <addLink+0xd0>
    2bd0:	88 24       	eor	r8, r8
    2bd2:	99 24       	eor	r9, r9
    2bd4:	0c c0       	rjmp	.+24     	; 0x2bee <addLink+0xe8>

	  	  if (txCount % 1000 == 0){
	  	printf ("Tx: %d\r\nRX: %d\r\nPL:%d", txCount,rxCount, packetsLost);
    2bd6:	20 97       	sbiw	r28, 0x00	; 0
    2bd8:	19 f4       	brne	.+6      	; 0x2be0 <addLink+0xda>
    2bda:	88 24       	eor	r8, r8
    2bdc:	99 24       	eor	r9, r9
    2bde:	04 c0       	rjmp	.+8      	; 0x2be8 <addLink+0xe2>
	  	  }

    2be0:	ce 01       	movw	r24, r28
    2be2:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <findNeighbor>
    2be6:	4c 01       	movw	r8, r24
//nrk_gpio_toggle(NRK_DEBUG_0);
       if( isa_rx_pkt_check()!=0 ) {

    2be8:	e1 14       	cp	r14, r1
    2bea:	f1 04       	cpc	r15, r1
    2bec:	19 f4       	brne	.+6      	; 0x2bf4 <addLink+0xee>
    2bee:	c0 e0       	ldi	r28, 0x00	; 0
    2bf0:	d0 e0       	ldi	r29, 0x00	; 0
    2bf2:	04 c0       	rjmp	.+8      	; 0x2bfc <addLink+0xf6>
	    local_rx_buf=isa_rx_pkt_get(&length, &rssi);

    2bf4:	c7 01       	movw	r24, r14
    2bf6:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <findGraph>
    2bfa:	ec 01       	movw	r28, r24
	    //printf("length is %d, rssi is %d.\n\r",length,rssi);
	    //local_rx_buf[PKT_DATA_START+length-2]='\0';
	    //printf("RX[%d]",slot);
	    /*for(i=PKT_DATA_START; i<length-1; i++ )
    2bfc:	11 27       	eor	r17, r17
    2bfe:	07 fd       	sbrc	r16, 7
    2c00:	10 95       	com	r17
    2c02:	1f 93       	push	r17
    2c04:	0f 93       	push	r16
    2c06:	8a e8       	ldi	r24, 0x8A	; 138
    2c08:	97 e0       	ldi	r25, 0x07	; 7
    2c0a:	9f 93       	push	r25
    2c0c:	8f 93       	push	r24
    2c0e:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
		printf( "%c",local_rx_buf[i]);*/
    2c12:	00 0f       	add	r16, r16
    2c14:	11 1f       	adc	r17, r17
    2c16:	d8 01       	movw	r26, r16
    2c18:	83 e0       	ldi	r24, 0x03	; 3
    2c1a:	aa 0f       	add	r26, r26
    2c1c:	bb 1f       	adc	r27, r27
    2c1e:	8a 95       	dec	r24
    2c20:	e1 f7       	brne	.-8      	; 0x2c1a <addLink+0x114>
    2c22:	a0 0f       	add	r26, r16
    2c24:	b1 1f       	adc	r27, r17
    2c26:	a0 55       	subi	r26, 0x50	; 80
    2c28:	b3 4f       	sbci	r27, 0xF3	; 243
    2c2a:	81 e0       	ldi	r24, 0x01	; 1
    2c2c:	8c 93       	st	X, r24
	    //printf("\r\n");
    2c2e:	fd 01       	movw	r30, r26
    2c30:	91 86       	std	Z+9, r9	; 0x09
    2c32:	80 86       	std	Z+8, r8	; 0x08
	    //sprintf( &tx_buf[PKT_DATA_START],"Hello Mingzhe!");
    2c34:	d3 87       	std	Z+11, r29	; 0x0b
    2c36:	c2 87       	std	Z+10, r28	; 0x0a
	    //length=strlen(&tx_buf[PKT_DATA_START])+PKT_DATA_START+1;
    2c38:	d4 82       	std	Z+4, r13	; 0x04
	    //isa_tx_pkt(tx_buf,length,configDHDR(),MY_TX_SLOT);
/*
	    length=strlen(&rx_buf[PKT_DATA_START])+PKT_DATA_START+1; //change
    2c3a:	a0 8a       	std	Z+16, r10	; 0x10
	    isa_tx_pkt(rx_buf,length,configDHDR(8),MY_TX_SLOT1);//change forward the message from recipient
    2c3c:	d3 87       	std	Z+11, r29	; 0x0b
    2c3e:	c2 87       	std	Z+10, r28	; 0x0a
*/
    2c40:	e7 2d       	mov	r30, r7
    2c42:	ff 27       	eor	r31, r31
    2c44:	ee 0f       	add	r30, r30
    2c46:	ff 1f       	adc	r31, r31
    2c48:	cf 01       	movw	r24, r30
    2c4a:	13 e0       	ldi	r17, 0x03	; 3
    2c4c:	88 0f       	add	r24, r24
    2c4e:	99 1f       	adc	r25, r25
    2c50:	1a 95       	dec	r17
    2c52:	e1 f7       	brne	.-8      	; 0x2c4c <addLink+0x146>
    2c54:	e8 0f       	add	r30, r24
    2c56:	f9 1f       	adc	r31, r25
    2c58:	e0 55       	subi	r30, 0x50	; 80
    2c5a:	f3 4f       	sbci	r31, 0xF3	; 243
    2c5c:	87 81       	ldd	r24, Z+7	; 0x07
    2c5e:	66 0c       	add	r6, r6
    2c60:	66 0c       	add	r6, r6
    2c62:	66 0c       	add	r6, r6
    2c64:	66 0c       	add	r6, r6
    2c66:	86 29       	or	r24, r6
    2c68:	fd 01       	movw	r30, r26
    2c6a:	87 83       	std	Z+7, r24	; 0x07
	    //printf(" Forward message is sent.\n\r");
 	    //printf("pkt length:%d",length);
	    //printf("%d\r\n",cnt++);
    2c6c:	0f 90       	pop	r0
    2c6e:	0f 90       	pop	r0
    2c70:	0f 90       	pop	r0
    2c72:	0f 90       	pop	r0
    2c74:	f7 e1       	ldi	r31, 0x17	; 23
    2c76:	af 16       	cp	r10, r31
    2c78:	41 f4       	brne	.+16     	; 0x2c8a <addLink+0x184>
    2c7a:	60 91 e1 1b 	lds	r22, 0x1BE1
    2c7e:	70 91 e2 1b 	lds	r23, 0x1BE2
    2c82:	88 e7       	ldi	r24, 0x78	; 120
    2c84:	90 e0       	ldi	r25, 0x00	; 0
    2c86:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
	  //  printf( "%c",local_rx_buf[PKT_DATA_START]);
    2c8a:	0a 2d       	mov	r16, r10
    2c8c:	11 27       	eor	r17, r17
    2c8e:	21 e0       	ldi	r18, 0x01	; 1
    2c90:	30 e0       	ldi	r19, 0x00	; 0
    2c92:	40 e0       	ldi	r20, 0x00	; 0
    2c94:	50 e0       	ldi	r21, 0x00	; 0
    2c96:	60 e0       	ldi	r22, 0x00	; 0
    2c98:	70 e0       	ldi	r23, 0x00	; 0
    2c9a:	80 e0       	ldi	r24, 0x00	; 0
    2c9c:	90 e0       	ldi	r25, 0x00	; 0
    2c9e:	0e 94 99 3e 	call	0x7d32	; 0x7d32 <__ashldi3>
    2ca2:	a2 2e       	mov	r10, r18
    2ca4:	b3 2e       	mov	r11, r19
    2ca6:	c4 2e       	mov	r12, r20
    2ca8:	d5 2e       	mov	r13, r21
    2caa:	e6 2e       	mov	r14, r22
    2cac:	f7 2e       	mov	r15, r23
    2cae:	08 2f       	mov	r16, r24
    2cb0:	19 2f       	mov	r17, r25
    2cb2:	e0 91 24 0e 	lds	r30, 0x0E24
    2cb6:	f0 91 25 0e 	lds	r31, 0x0E25
    2cba:	a0 91 26 0e 	lds	r26, 0x0E26
    2cbe:	b0 91 27 0e 	lds	r27, 0x0E27
    2cc2:	90 90 28 0e 	lds	r9, 0x0E28
    2cc6:	80 90 29 0e 	lds	r8, 0x0E29
    2cca:	70 90 2a 0e 	lds	r7, 0x0E2A
    2cce:	60 90 2b 0e 	lds	r6, 0x0E2B
    2cd2:	2e 2f       	mov	r18, r30
    2cd4:	2a 29       	or	r18, r10
    2cd6:	3f 2f       	mov	r19, r31
    2cd8:	3b 29       	or	r19, r11
    2cda:	4a 2f       	mov	r20, r26
    2cdc:	4c 29       	or	r20, r12
    2cde:	5b 2f       	mov	r21, r27
    2ce0:	5d 29       	or	r21, r13
    2ce2:	69 2d       	mov	r22, r9
    2ce4:	6e 29       	or	r22, r14
    2ce6:	78 2d       	mov	r23, r8
    2ce8:	7f 29       	or	r23, r15
    2cea:	87 2d       	mov	r24, r7
    2cec:	80 2b       	or	r24, r16
    2cee:	96 2d       	mov	r25, r6
    2cf0:	91 2b       	or	r25, r17
    2cf2:	20 93 24 0e 	sts	0x0E24, r18
    2cf6:	30 93 25 0e 	sts	0x0E25, r19
    2cfa:	40 93 26 0e 	sts	0x0E26, r20
    2cfe:	50 93 27 0e 	sts	0x0E27, r21
    2d02:	60 93 28 0e 	sts	0x0E28, r22
    2d06:	70 93 29 0e 	sts	0x0E29, r23
    2d0a:	80 93 2a 0e 	sts	0x0E2A, r24
    2d0e:	90 93 2b 0e 	sts	0x0E2B, r25
    2d12:	81 e0       	ldi	r24, 0x01	; 1
    2d14:	90 e0       	ldi	r25, 0x00	; 0
    2d16:	df 91       	pop	r29
    2d18:	cf 91       	pop	r28
    2d1a:	1f 91       	pop	r17
    2d1c:	0f 91       	pop	r16
    2d1e:	ff 90       	pop	r15
    2d20:	ef 90       	pop	r14
    2d22:	df 90       	pop	r13
    2d24:	cf 90       	pop	r12
    2d26:	bf 90       	pop	r11
    2d28:	af 90       	pop	r10
    2d2a:	9f 90       	pop	r9
    2d2c:	8f 90       	pop	r8
    2d2e:	7f 90       	pop	r7
    2d30:	6f 90       	pop	r6
    2d32:	08 95       	ret

00002d34 <init_adc>:
    2d34:	ea e7       	ldi	r30, 0x7A	; 122
    2d36:	f0 e0       	ldi	r31, 0x00	; 0
    2d38:	83 e0       	ldi	r24, 0x03	; 3
    2d3a:	80 83       	st	Z, r24
    2d3c:	ac e7       	ldi	r26, 0x7C	; 124
    2d3e:	b0 e0       	ldi	r27, 0x00	; 0
    2d40:	80 e4       	ldi	r24, 0x40	; 64
    2d42:	8c 93       	st	X, r24
    2d44:	80 81       	ld	r24, Z
    2d46:	80 68       	ori	r24, 0x80	; 128
    2d48:	80 83       	st	Z, r24
    2d4a:	10 92 0d 1b 	sts	0x1B0D, r1
    2d4e:	8c 91       	ld	r24, X
    2d50:	80 7e       	andi	r24, 0xE0	; 224
    2d52:	8c 93       	st	X, r24
    2d54:	9c 91       	ld	r25, X
    2d56:	8c 91       	ld	r24, X
    2d58:	80 7e       	andi	r24, 0xE0	; 224
    2d5a:	89 2b       	or	r24, r25
    2d5c:	8c 93       	st	X, r24
    2d5e:	08 95       	ret

00002d60 <delay>:
    2d60:	88 ec       	ldi	r24, 0xC8	; 200
    2d62:	90 e0       	ldi	r25, 0x00	; 0
    2d64:	0e 94 2c 39 	call	0x7258	; 0x7258 <nrk_spin_wait_us>
    2d68:	08 95       	ret

00002d6a <get_adc_val>:
    2d6a:	80 91 7a 00 	lds	r24, 0x007A
    2d6e:	80 64       	ori	r24, 0x40	; 64
    2d70:	80 93 7a 00 	sts	0x007A, r24
    2d74:	80 91 7a 00 	lds	r24, 0x007A
    2d78:	84 ff       	sbrs	r24, 4
    2d7a:	fc cf       	rjmp	.-8      	; 0x2d74 <get_adc_val+0xa>
    2d7c:	0e 94 b0 16 	call	0x2d60	; 0x2d60 <delay>
    2d80:	20 91 78 00 	lds	r18, 0x0078
    2d84:	33 27       	eor	r19, r19
    2d86:	80 91 79 00 	lds	r24, 0x0079
    2d8a:	99 27       	eor	r25, r25
    2d8c:	98 2f       	mov	r25, r24
    2d8e:	88 27       	eor	r24, r24
    2d90:	82 2b       	or	r24, r18
    2d92:	93 2b       	or	r25, r19
    2d94:	08 95       	ret

00002d96 <read_voltage_status>:

	/*sprintf( &tx_buf2[PKT_DATA_START],"Hello from slot 2!");
	length=strlen(&tx_buf2[PKT_DATA_START])+PKT_DATA_START+1;
	isa_tx_pkt(tx_buf2,length,configDHDR(),2);
	isa_wait_until_rx_or_tx ();*/
    	   setMatrix();
    2d96:	ff 92       	push	r15
    2d98:	0f 93       	push	r16
    2d9a:	1f 93       	push	r17
    2d9c:	cf 93       	push	r28
    2d9e:	df 93       	push	r29
    2da0:	cd b7       	in	r28, 0x3d	; 61
    2da2:	de b7       	in	r29, 0x3e	; 62
    2da4:	22 97       	sbiw	r28, 0x02	; 2
    2da6:	0f b6       	in	r0, 0x3f	; 63
    2da8:	f8 94       	cli
    2daa:	de bf       	out	0x3e, r29	; 62
    2dac:	0f be       	out	0x3f, r0	; 63
    2dae:	cd bf       	out	0x3d, r28	; 61
    	     	  nrk_wait_until_next_period();
    //   }
    //	   nrk_terminate_task();
     //  isa_wait_until_rx_or_tx ();
      // 	putchar('\n');
    2db0:	0e 94 0b 19 	call	0x3216	; 0x3216 <rf_get_sem>
    2db4:	8c 01       	movw	r16, r24
      // 	putchar('\r');
  }
  
    2db6:	00 97       	sbiw	r24, 0x00	; 0
    2db8:	11 f0       	breq	.+4      	; 0x2dbe <read_voltage_status+0x28>

    2dba:	0e 94 53 2f 	call	0x5ea6	; 0x5ea6 <nrk_sem_pend>
}


    2dbe:	15 9a       	sbi	0x02, 5	; 2
    2dc0:	ff 24       	eor	r15, r15

void
nrk_create_taskset()
{
  TaskOne.task = Task1;
  TaskOne.Ptos = (void *) &Stack1[NRK_APP_STACKSIZE-1];
    2dc2:	8f 2d       	mov	r24, r15
    2dc4:	80 62       	ori	r24, 0x20	; 32
    2dc6:	99 27       	eor	r25, r25
    2dc8:	9a 83       	std	Y+2, r25	; 0x02
    2dca:	89 83       	std	Y+1, r24	; 0x01
  TaskOne.Pbos = (void *) &Stack1[0];
    2dcc:	40 98       	cbi	0x08, 0	; 8
    2dce:	8b e1       	ldi	r24, 0x1B	; 27
    2dd0:	8e bd       	out	0x2e, r24	; 46
    2dd2:	0d b4       	in	r0, 0x2d	; 45
    2dd4:	07 fe       	sbrs	r0, 7
    2dd6:	fd cf       	rjmp	.-6      	; 0x2dd2 <read_voltage_status+0x3c>
    2dd8:	89 81       	ldd	r24, Y+1	; 0x01
    2dda:	9a 81       	ldd	r25, Y+2	; 0x02
    2ddc:	89 2f       	mov	r24, r25
    2dde:	99 27       	eor	r25, r25
    2de0:	8e bd       	out	0x2e, r24	; 46
    2de2:	0d b4       	in	r0, 0x2d	; 45
    2de4:	07 fe       	sbrs	r0, 7
    2de6:	fd cf       	rjmp	.-6      	; 0x2de2 <read_voltage_status+0x4c>
    2de8:	89 81       	ldd	r24, Y+1	; 0x01
    2dea:	9a 81       	ldd	r25, Y+2	; 0x02
    2dec:	8e bd       	out	0x2e, r24	; 46
    2dee:	0d b4       	in	r0, 0x2d	; 45
    2df0:	07 fe       	sbrs	r0, 7
    2df2:	fd cf       	rjmp	.-6      	; 0x2dee <read_voltage_status+0x58>
    2df4:	40 9a       	sbi	0x08, 0	; 8
  TaskOne.prio = 2;
    2df6:	82 e0       	ldi	r24, 0x02	; 2
    2df8:	90 e0       	ldi	r25, 0x00	; 0
    2dfa:	0e 94 2c 39 	call	0x7258	; 0x7258 <nrk_spin_wait_us>
  TaskOne.FirstActivation = TRUE;
    2dfe:	40 98       	cbi	0x08, 0	; 8
    2e00:	8b e5       	ldi	r24, 0x5B	; 91
    2e02:	8e bd       	out	0x2e, r24	; 46
    2e04:	0d b4       	in	r0, 0x2d	; 45
    2e06:	07 fe       	sbrs	r0, 7
    2e08:	fd cf       	rjmp	.-6      	; 0x2e04 <read_voltage_status+0x6e>
    2e0a:	1e bc       	out	0x2e, r1	; 46
    2e0c:	0d b4       	in	r0, 0x2d	; 45
    2e0e:	07 fe       	sbrs	r0, 7
    2e10:	fd cf       	rjmp	.-6      	; 0x2e0c <read_voltage_status+0x76>
    2e12:	8e b5       	in	r24, 0x2e	; 46
    2e14:	99 27       	eor	r25, r25
    2e16:	98 2f       	mov	r25, r24
    2e18:	88 27       	eor	r24, r24
    2e1a:	9a 83       	std	Y+2, r25	; 0x02
    2e1c:	89 83       	std	Y+1, r24	; 0x01
    2e1e:	1e bc       	out	0x2e, r1	; 46
    2e20:	0d b4       	in	r0, 0x2d	; 45
    2e22:	07 fe       	sbrs	r0, 7
    2e24:	fd cf       	rjmp	.-6      	; 0x2e20 <read_voltage_status+0x8a>
    2e26:	89 81       	ldd	r24, Y+1	; 0x01
    2e28:	9a 81       	ldd	r25, Y+2	; 0x02
    2e2a:	2e b5       	in	r18, 0x2e	; 46
    2e2c:	33 27       	eor	r19, r19
    2e2e:	28 2b       	or	r18, r24
    2e30:	39 2b       	or	r19, r25
    2e32:	3a 83       	std	Y+2, r19	; 0x02
    2e34:	29 83       	std	Y+1, r18	; 0x01
    2e36:	40 9a       	sbi	0x08, 0	; 8
  TaskOne.Type = BASIC_TASK;
    2e38:	89 81       	ldd	r24, Y+1	; 0x01
    2e3a:	9a 81       	ldd	r25, Y+2	; 0x02
    2e3c:	86 fd       	sbrc	r24, 6
    2e3e:	05 c0       	rjmp	.+10     	; 0x2e4a <read_voltage_status+0xb4>
  TaskOne.SchType = PREEMPTIVE;
    2e40:	f3 94       	inc	r15



void
nrk_create_taskset()
{
    2e42:	2f e1       	ldi	r18, 0x1F	; 31
    2e44:	f2 16       	cp	r15, r18
    2e46:	09 f0       	breq	.+2      	; 0x2e4a <read_voltage_status+0xb4>
    2e48:	bc cf       	rjmp	.-136    	; 0x2dc2 <read_voltage_status+0x2c>
  TaskOne.prio = 2;
  TaskOne.FirstActivation = TRUE;
  TaskOne.Type = BASIC_TASK;
  TaskOne.SchType = PREEMPTIVE;
  TaskOne.period.secs = 0;
  TaskOne.period.nano_secs = 10*NANOS_PER_MS;
    2e4a:	01 15       	cp	r16, r1
    2e4c:	11 05       	cpc	r17, r1
    2e4e:	19 f0       	breq	.+6      	; 0x2e56 <read_voltage_status+0xc0>
  TaskOne.cpu_reserve.secs = 0;
    2e50:	c8 01       	movw	r24, r16
    2e52:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
  TaskOne.cpu_reserve.nano_secs = 20*NANOS_PER_MS;
    2e56:	ff 20       	and	r15, r15
    2e58:	c9 f4       	brne	.+50     	; 0x2e8c <read_voltage_status+0xf6>
  TaskOne.offset.secs = 0;
  TaskOne.offset.nano_secs= 50*NANOS_PER_MS;
    2e5a:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <get_adc_val>
    2e5e:	9a 83       	std	Y+2, r25	; 0x02
    2e60:	89 83       	std	Y+1, r24	; 0x01
  nrk_activate_task (&TaskOne);

    2e62:	89 81       	ldd	r24, Y+1	; 0x01
    2e64:	9a 81       	ldd	r25, Y+2	; 0x02
    2e66:	8f 3a       	cpi	r24, 0xAF	; 175
    2e68:	91 05       	cpc	r25, r1
    2e6a:	30 f0       	brcs	.+12     	; 0x2e78 <read_voltage_status+0xe2>
    2e6c:	89 81       	ldd	r24, Y+1	; 0x01
    2e6e:	9a 81       	ldd	r25, Y+2	; 0x02
    2e70:	8e 5a       	subi	r24, 0xAE	; 174
    2e72:	90 40       	sbci	r25, 0x00	; 0
    2e74:	9a 83       	std	Y+2, r25	; 0x02
    2e76:	89 83       	std	Y+1, r24	; 0x01

    2e78:	89 81       	ldd	r24, Y+1	; 0x01
    2e7a:	9a 81       	ldd	r25, Y+2	; 0x02
    2e7c:	8a 54       	subi	r24, 0x4A	; 74
    2e7e:	91 40       	sbci	r25, 0x01	; 1
    2e80:	98 f4       	brcc	.+38     	; 0x2ea8 <read_voltage_status+0x112>
    2e82:	8a e4       	ldi	r24, 0x4A	; 74
    2e84:	91 e0       	ldi	r25, 0x01	; 1
    2e86:	9a 83       	std	Y+2, r25	; 0x02
    2e88:	89 83       	std	Y+1, r24	; 0x01
    2e8a:	0e c0       	rjmp	.+28     	; 0x2ea8 <read_voltage_status+0x112>
  nrk_kprintf( PSTR("Create Done\r\n") );
}
    2e8c:	2d e7       	ldi	r18, 0x7D	; 125
    2e8e:	f2 9e       	mul	r15, r18
    2e90:	90 01       	movw	r18, r0
    2e92:	11 24       	eor	r1, r1
    2e94:	88 e2       	ldi	r24, 0x28	; 40
    2e96:	93 e2       	ldi	r25, 0x23	; 35
    2e98:	82 1b       	sub	r24, r18
    2e9a:	93 0b       	sbc	r25, r19
    2e9c:	6b e1       	ldi	r22, 0x1B	; 27
    2e9e:	70 e0       	ldi	r23, 0x00	; 0
    2ea0:	0e 94 a6 41 	call	0x834c	; 0x834c <__divmodhi4>
    2ea4:	7a 83       	std	Y+2, r23	; 0x02
    2ea6:	69 83       	std	Y+1, r22	; 0x01


    2ea8:	89 81       	ldd	r24, Y+1	; 0x01
    2eaa:	9a 81       	ldd	r25, Y+2	; 0x02
    2eac:	22 96       	adiw	r28, 0x02	; 2
    2eae:	0f b6       	in	r0, 0x3f	; 63
    2eb0:	f8 94       	cli
    2eb2:	de bf       	out	0x3e, r29	; 62
    2eb4:	0f be       	out	0x3f, r0	; 63
    2eb6:	cd bf       	out	0x3d, r28	; 61
    2eb8:	df 91       	pop	r29
    2eba:	cf 91       	pop	r28
    2ebc:	1f 91       	pop	r17
    2ebe:	0f 91       	pop	r16
    2ec0:	ff 90       	pop	r15
    2ec2:	08 95       	ret

00002ec4 <dev_manager_ff_sensors>:
  addLink(16,0,0,8,0);//9
  addLink(3,0,0,8,0);//1
  addLink(25,0,0,8,0);
  addLink(27,0,0,8,0);//Ad


    2ec4:	cf 92       	push	r12
    2ec6:	df 92       	push	r13
    2ec8:	ef 92       	push	r14
    2eca:	ff 92       	push	r15
    2ecc:	0f 93       	push	r16
    2ece:	1f 93       	push	r17
    2ed0:	cf 93       	push	r28
    2ed2:	df 93       	push	r29
    2ed4:	98 2f       	mov	r25, r24
    2ed6:	ea 01       	movw	r28, r20
    2ed8:	12 2f       	mov	r17, r18
  /*addLink(17,0,0,4,0);//transmit ad
  addLink(40,0,0,8,0);//receive ad
  addLink(18,0,0,8,0);
  addLink(19,0,0,8,0);
  addLink(20,0,0,8,0);
  addLink(21,0,0,8,0);
    2eda:	82 30       	cpi	r24, 0x02	; 2
    2edc:	09 f4       	brne	.+2      	; 0x2ee0 <dev_manager_ff_sensors+0x1c>
    2ede:	81 c0       	rjmp	.+258    	; 0x2fe2 <dev_manager_ff_sensors+0x11e>
    2ee0:	83 30       	cpi	r24, 0x03	; 3
    2ee2:	30 f4       	brcc	.+12     	; 0x2ef0 <dev_manager_ff_sensors+0x2c>
    2ee4:	88 23       	and	r24, r24
    2ee6:	71 f0       	breq	.+28     	; 0x2f04 <dev_manager_ff_sensors+0x40>
    2ee8:	81 30       	cpi	r24, 0x01	; 1
    2eea:	09 f0       	breq	.+2      	; 0x2eee <dev_manager_ff_sensors+0x2a>
    2eec:	d2 c0       	rjmp	.+420    	; 0x3092 <dev_manager_ff_sensors+0x1ce>
    2eee:	10 c0       	rjmp	.+32     	; 0x2f10 <dev_manager_ff_sensors+0x4c>
    2ef0:	84 30       	cpi	r24, 0x04	; 4
    2ef2:	09 f4       	brne	.+2      	; 0x2ef6 <dev_manager_ff_sensors+0x32>
    2ef4:	81 c0       	rjmp	.+258    	; 0x2ff8 <dev_manager_ff_sensors+0x134>
    2ef6:	84 30       	cpi	r24, 0x04	; 4
    2ef8:	08 f4       	brcc	.+2      	; 0x2efc <dev_manager_ff_sensors+0x38>
    2efa:	77 c0       	rjmp	.+238    	; 0x2fea <dev_manager_ff_sensors+0x126>
    2efc:	85 30       	cpi	r24, 0x05	; 5
    2efe:	09 f0       	breq	.+2      	; 0x2f02 <dev_manager_ff_sensors+0x3e>
    2f00:	c8 c0       	rjmp	.+400    	; 0x3092 <dev_manager_ff_sensors+0x1ce>
    2f02:	2d c0       	rjmp	.+90     	; 0x2f5e <dev_manager_ff_sensors+0x9a>

  addLink(41,0,0,8,0);//receive from 1
  addLink(42,1,0,1,0);//transmit to 1
  addGraph(1,1,4,0,0);//graph
    2f04:	80 e8       	ldi	r24, 0x80	; 128
    2f06:	80 bb       	out	0x10, r24	; 16
  addLink(5,4,1,1,2);//transmit to 4
    2f08:	8f 9a       	sbi	0x11, 7	; 17
  addLink(6,0,0,8,0);//receive from 4*/
    2f0a:	0e 94 9a 16 	call	0x2d34	; 0x2d34 <init_adc>
    2f0e:	6a c0       	rjmp	.+212    	; 0x2fe4 <dev_manager_ff_sensors+0x120>
  //addLink(26,0,0,4,0);

 /* addLink(7,5,0,1,0);
  addLink(8,6,0,1,0);
  addLink(9,7,0,1,0);
    2f10:	80 91 0c 1b 	lds	r24, 0x1B0C
    2f14:	81 30       	cpi	r24, 0x01	; 1
    2f16:	09 f4       	brne	.+2      	; 0x2f1a <dev_manager_ff_sensors+0x56>
    2f18:	c3 c0       	rjmp	.+390    	; 0x30a0 <dev_manager_ff_sensors+0x1dc>
  addLink(10,8,0,1,0);
    2f1a:	90 93 0c 1b 	sts	0x1B0C, r25
  addLink(11,9,0,1,0);
    2f1e:	77 27       	eor	r23, r23
    2f20:	60 ff       	sbrs	r22, 0
    2f22:	13 c0       	rjmp	.+38     	; 0x2f4a <dev_manager_ff_sensors+0x86>

  addLink(12,0,0,8,0);
  addLink(13,0,0,8,0);
    2f24:	8f 98       	cbi	0x11, 7	; 17
  addLink(14,0,0,8,0);
    2f26:	10 92 0d 1b 	sts	0x1B0D, r1
  addLink(15,0,0,8,0);
    2f2a:	80 91 7c 00 	lds	r24, 0x007C
    2f2e:	80 7e       	andi	r24, 0xE0	; 224
    2f30:	80 93 7c 00 	sts	0x007C, r24
    2f34:	90 91 7c 00 	lds	r25, 0x007C
    2f38:	80 91 7c 00 	lds	r24, 0x007C
    2f3c:	80 7e       	andi	r24, 0xE0	; 224
    2f3e:	89 2b       	or	r24, r25
    2f40:	80 93 7c 00 	sts	0x007C, r24
  addLink(16,0,0,8,0);
    2f44:	88 ee       	ldi	r24, 0xE8	; 232
    2f46:	93 e0       	ldi	r25, 0x03	; 3
    2f48:	9f c0       	rjmp	.+318    	; 0x3088 <dev_manager_ff_sensors+0x1c4>
  addLink(3,0,0,8,0);
  */

    2f4a:	61 fd       	sbrc	r22, 1
    2f4c:	a9 c0       	rjmp	.+338    	; 0x30a0 <dev_manager_ff_sensors+0x1dc>
  //addGraph(1,3,5,3,4);
 // addLink(2,1,1,1,0);//transmitting on slot 2
 // addLink(10,1,1,8,0); //receiving on slot 10
 // addLink(1,1,1,8,0);//receiving on slot 1
    2f4e:	62 fd       	sbrc	r22, 2
    2f50:	a7 c0       	rjmp	.+334    	; 0x30a0 <dev_manager_ff_sensors+0x1dc>

/*
  configureSlot(2, 1, TX_NO_ADV, true,0,0,0,0,0,NEIGHBOR);
  configureSlot(7,5,TX_NO_ADV,false,1,1,5,0,0,GRAPH_NEIGHBOR);
    2f52:	67 70       	andi	r22, 0x07	; 7
    2f54:	70 70       	andi	r23, 0x00	; 0
    2f56:	67 2b       	or	r22, r23
    2f58:	09 f4       	brne	.+2      	; 0x2f5c <dev_manager_ff_sensors+0x98>
    2f5a:	a2 c0       	rjmp	.+324    	; 0x30a0 <dev_manager_ff_sensors+0x1dc>
    2f5c:	97 c0       	rjmp	.+302    	; 0x308c <dev_manager_ff_sensors+0x1c8>
  //configureSlot(7,10,ADV,false,0,0,0,0,0, NEIGHBOR);
  //configureSlot(6,3, RX, false,0,0,0,0,0, NEIGHBOR);
  configureSlot(11,0, RX, false,0,0,0,0,0, NEIGHBOR);
  configureSlot(8,0, RX, false,0,0,0,0,0, NEIGHBOR);

  configureSlot(19,0,ADV,false,0,0,0,0,0,NEIGHBOR);
    2f5e:	82 2f       	mov	r24, r18
    2f60:	81 50       	subi	r24, 0x01	; 1
    2f62:	82 30       	cpi	r24, 0x02	; 2
    2f64:	08 f0       	brcs	.+2      	; 0x2f68 <dev_manager_ff_sensors+0xa4>
    2f66:	99 c0       	rjmp	.+306    	; 0x309a <dev_manager_ff_sensors+0x1d6>
  configureSlot(20,0, RX, false,0,0,0,0,0, NEIGHBOR);
    2f68:	90 91 0d 1b 	lds	r25, 0x1B0D
    2f6c:	89 2f       	mov	r24, r25
    2f6e:	81 50       	subi	r24, 0x01	; 1
    2f70:	86 30       	cpi	r24, 0x06	; 6
    2f72:	18 f4       	brcc	.+6      	; 0x2f7a <dev_manager_ff_sensors+0xb6>
  configureSlot(21,0, RX, false,0,0,0,0,0, NEIGHBOR);
  configureSlot(22,0, RX, false,0,0,0,0,0, NEIGHBOR);
  configureSlot(23,0, RX, false,0,0,0,0,0, NEIGHBOR);
    2f74:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <get_adc_val>
    2f78:	22 c0       	rjmp	.+68     	; 0x2fbe <dev_manager_ff_sensors+0xfa>


void Task1()
{

  uint8_t j, i;
    2f7a:	99 23       	and	r25, r25
    2f7c:	19 f4       	brne	.+6      	; 0x2f84 <dev_manager_ff_sensors+0xc0>
  uint8_t length,slot;
  uint8_t *local_rx_buf;
  uint32_t Score = 0;
    2f7e:	0e 94 cb 16 	call	0x2d96	; 0x2d96 <read_voltage_status>
    2f82:	1d c0       	rjmp	.+58     	; 0x2fbe <dev_manager_ff_sensors+0xfa>


  char c = -1;
  nrk_sig_t uart_rx_signal;
  uint8_t finished = 0;

    2f84:	97 30       	cpi	r25, 0x07	; 7
    2f86:	51 f5       	brne	.+84     	; 0x2fdc <dev_manager_ff_sensors+0x118>
    2f88:	f1 e0       	ldi	r31, 0x01	; 1
    2f8a:	cf 2e       	mov	r12, r31
    2f8c:	f4 e0       	ldi	r31, 0x04	; 4
    2f8e:	df 2e       	mov	r13, r31
    2f90:	ee 24       	eor	r14, r14
    2f92:	ff 24       	eor	r15, r15
    2f94:	00 e0       	ldi	r16, 0x00	; 0



 // isa_set_schedule(ISA_REPEATER, MY_CLK_SRC_ID);

 // isa_set_channel(MY_CHANNEL);
    2f96:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <get_adc_val>
    2f9a:	8c 15       	cp	r24, r12
    2f9c:	9d 05       	cpc	r25, r13
    2f9e:	08 f4       	brcc	.+2      	; 0x2fa2 <dev_manager_ff_sensors+0xde>
    2fa0:	6c 01       	movw	r12, r24
    2fa2:	e8 16       	cp	r14, r24
    2fa4:	f9 06       	cpc	r15, r25
    2fa6:	08 f4       	brcc	.+2      	; 0x2faa <dev_manager_ff_sensors+0xe6>
    2fa8:	7c 01       	movw	r14, r24

  isa_start();
  
  isa_rx_pkt_set_buffer(rx_buf, RF_MAX_PAYLOAD_SIZE);
    2faa:	8d e7       	ldi	r24, 0x7D	; 125
    2fac:	90 e0       	ldi	r25, 0x00	; 0
    2fae:	0e 94 2c 39 	call	0x7258	; 0x7258 <nrk_spin_wait_us>
  nrk_led_set(RED_LED);
  



 // isa_set_schedule(ISA_REPEATER, MY_CLK_SRC_ID);
    2fb2:	0f 5f       	subi	r16, 0xFF	; 255
    2fb4:	00 34       	cpi	r16, 0x40	; 64
    2fb6:	79 f7       	brne	.-34     	; 0x2f96 <dev_manager_ff_sensors+0xd2>

  isa_start();
  
  isa_rx_pkt_set_buffer(rx_buf, RF_MAX_PAYLOAD_SIZE);
  
  while(!isa_ready())  nrk_wait_until_next_period(); 
    2fb8:	c7 01       	movw	r24, r14
    2fba:	8c 19       	sub	r24, r12
    2fbc:	9d 09       	sbc	r25, r13

    2fbe:	12 30       	cpi	r17, 0x02	; 2
    2fc0:	31 f4       	brne	.+12     	; 0x2fce <dev_manager_ff_sensors+0x10a>
  /*while(isa_join_ready()!=1) nrk_wait_until_next_period();
    
    2fc2:	88 83       	st	Y, r24
    for(i=0;i<4;i++){  // set tx slots
	if(tx_slot_from_join[i]==0)
    2fc4:	89 2f       	mov	r24, r25
    2fc6:	99 27       	eor	r25, r25
    2fc8:	89 83       	std	Y+1, r24	; 0x01
    2fca:	81 e0       	ldi	r24, 0x01	; 1
    2fcc:	08 c0       	rjmp	.+16     	; 0x2fde <dev_manager_ff_sensors+0x11a>
		break;
	else
	    my_tx_slot[i]=tx_slot_from_join[i];
    2fce:	11 30       	cpi	r17, 0x01	; 1
    2fd0:	29 f4       	brne	.+10     	; 0x2fdc <dev_manager_ff_sensors+0x118>
    }	   
  printf("MAIN_TX:%d\r\n",my_tx_slot[0]);*/
    2fd2:	96 95       	lsr	r25
    2fd4:	87 95       	ror	r24
    2fd6:	96 95       	lsr	r25
    2fd8:	87 95       	ror	r24
    2fda:	88 83       	st	Y, r24
    2fdc:	80 e0       	ldi	r24, 0x00	; 0

  printf("isa start!\n\r");

  //i=0;
  while(1){

    2fde:	8f 5f       	subi	r24, 0xFF	; 255
    2fe0:	09 c0       	rjmp	.+18     	; 0x2ff4 <dev_manager_ff_sensors+0x130>

//Spit out log info

	  	  if (txCount % 1000 == 0){
    2fe2:	8f 9a       	sbi	0x11, 7	; 17
	  	printf ("Tx: %d\r\nRX: %d\r\nPL:%d", txCount,rxCount, packetsLost);
    2fe4:	10 92 0c 1b 	sts	0x1B0C, r1
    2fe8:	51 c0       	rjmp	.+162    	; 0x308c <dev_manager_ff_sensors+0x1c8>
	  	  }

//nrk_gpio_toggle(NRK_DEBUG_0);
       if( isa_rx_pkt_check()!=0 ) {

    2fea:	61 30       	cpi	r22, 0x01	; 1
    2fec:	09 f0       	breq	.+2      	; 0x2ff0 <dev_manager_ff_sensors+0x12c>
    2fee:	58 c0       	rjmp	.+176    	; 0x30a0 <dev_manager_ff_sensors+0x1dc>
    2ff0:	80 91 0d 1b 	lds	r24, 0x1B0D
    2ff4:	99 27       	eor	r25, r25
    2ff6:	56 c0       	rjmp	.+172    	; 0x30a4 <dev_manager_ff_sensors+0x1e0>
	    local_rx_buf=isa_rx_pkt_get(&length, &rssi);

	    //printf("length is %d, rssi is %d.\n\r",length,rssi);
	    //local_rx_buf[PKT_DATA_START+length-2]='\0';
	    //printf("RX[%d]",slot);
    2ff8:	61 30       	cpi	r22, 0x01	; 1
    2ffa:	09 f0       	breq	.+2      	; 0x2ffe <dev_manager_ff_sensors+0x13a>
    2ffc:	51 c0       	rjmp	.+162    	; 0x30a0 <dev_manager_ff_sensors+0x1dc>
	    /*for(i=PKT_DATA_START; i<length-1; i++ )
		printf( "%c",local_rx_buf[i]);*/
	    //printf("\r\n");
    2ffe:	27 30       	cpi	r18, 0x07	; 7
    3000:	d9 f4       	brne	.+54     	; 0x3038 <dev_manager_ff_sensors+0x174>
	    //sprintf( &tx_buf[PKT_DATA_START],"Hello Mingzhe!");
	    //length=strlen(&tx_buf[PKT_DATA_START])+PKT_DATA_START+1;
    3002:	20 93 0d 1b 	sts	0x1B0D, r18
	    //isa_tx_pkt(tx_buf,length,configDHDR(),MY_TX_SLOT);
/*
    3006:	80 91 7c 00 	lds	r24, 0x007C
    300a:	8f 77       	andi	r24, 0x7F	; 127
    300c:	80 93 7c 00 	sts	0x007C, r24
    3010:	80 91 7c 00 	lds	r24, 0x007C
    3014:	80 64       	ori	r24, 0x40	; 64
    3016:	80 93 7c 00 	sts	0x007C, r24
	    length=strlen(&rx_buf[PKT_DATA_START])+PKT_DATA_START+1; //change
    301a:	80 91 7c 00 	lds	r24, 0x007C
    301e:	80 7e       	andi	r24, 0xE0	; 224
    3020:	80 93 7c 00 	sts	0x007C, r24
    3024:	90 91 7c 00 	lds	r25, 0x007C
    3028:	80 91 7c 00 	lds	r24, 0x007C
    302c:	93 60       	ori	r25, 0x03	; 3
    302e:	80 7e       	andi	r24, 0xE0	; 224
    3030:	98 2b       	or	r25, r24
    3032:	90 93 7c 00 	sts	0x007C, r25
    3036:	26 c0       	rjmp	.+76     	; 0x3084 <dev_manager_ff_sensors+0x1c0>
	    isa_tx_pkt(rx_buf,length,configDHDR(8),MY_TX_SLOT1);//change forward the message from recipient
*/
	    //printf(" Forward message is sent.\n\r");
 	    //printf("pkt length:%d",length);
	    //printf("%d\r\n",cnt++);
	  //  printf( "%c",local_rx_buf[PKT_DATA_START]);
    3038:	28 30       	cpi	r18, 0x08	; 8
    303a:	20 f0       	brcs	.+8      	; 0x3044 <dev_manager_ff_sensors+0x180>
	    isa_rx_pkt_release();
	   // printf("\r\n");
    303c:	81 e0       	ldi	r24, 0x01	; 1
    303e:	0e 94 f8 2a 	call	0x55f0	; 0x55f0 <_nrk_errno_set>
    3042:	2e c0       	rjmp	.+92     	; 0x30a0 <dev_manager_ff_sensors+0x1dc>

	}

    3044:	20 93 0d 1b 	sts	0x1B0D, r18
    //   if(isa_tx_pkt_check(MY_TX_SLOT)!=0){
    3048:	21 30       	cpi	r18, 0x01	; 1
    304a:	49 f4       	brne	.+18     	; 0x305e <dev_manager_ff_sensors+0x19a>
       	  // printf("Pending TX\r\n");
    304c:	80 91 7c 00 	lds	r24, 0x007C
    3050:	8f 77       	andi	r24, 0x7F	; 127
    3052:	80 93 7c 00 	sts	0x007C, r24
    3056:	80 91 7c 00 	lds	r24, 0x007C
    305a:	80 64       	ori	r24, 0x40	; 64
    305c:	03 c0       	rjmp	.+6      	; 0x3064 <dev_manager_ff_sensors+0x1a0>
    //   	}
   //    else{
    305e:	80 91 7c 00 	lds	r24, 0x007C
    3062:	80 6c       	ori	r24, 0xC0	; 192
    3064:	80 93 7c 00 	sts	0x007C, r24
	/*sprintf( &tx_buf[PKT_DATA_START],local_rx_buf+PKT_DATA_START);
    3068:	80 91 7c 00 	lds	r24, 0x007C
    306c:	80 7e       	andi	r24, 0xE0	; 224
    306e:	80 93 7c 00 	sts	0x007C, r24
    3072:	90 91 7c 00 	lds	r25, 0x007C
    3076:	80 91 7c 00 	lds	r24, 0x007C
    307a:	80 7e       	andi	r24, 0xE0	; 224
    307c:	89 2b       	or	r24, r25
    307e:	81 2b       	or	r24, r17
    3080:	80 93 7c 00 	sts	0x007C, r24
	length=strlen(&rx_buf[PKT_DATA_START])+PKT_DATA_START+1; //change
    3084:	88 ec       	ldi	r24, 0xC8	; 200
    3086:	90 e0       	ldi	r25, 0x00	; 0
    3088:	0e 94 2c 39 	call	0x7258	; 0x7258 <nrk_spin_wait_us>
    308c:	81 e0       	ldi	r24, 0x01	; 1
    308e:	90 e0       	ldi	r25, 0x00	; 0
    3090:	09 c0       	rjmp	.+18     	; 0x30a4 <dev_manager_ff_sensors+0x1e0>
	//isa_tx_pkt(rx_buf,length,configDHDR(),my_tx_slot[0]);//change forward the message from recipient
	isa_tx_pkt(rx_buf,length,configDHDR(),MY_TX_SLOT);
	isa_wait_until_rx_or_tx ();*/
    	   if (cnt ==0 ){
    		   MESSAGE *message;
    		   	message = &tx_buf[PKT_DATA_START];
    3092:	60 e0       	ldi	r22, 0x00	; 0
    3094:	8c e0       	ldi	r24, 0x0C	; 12
    3096:	0e 94 bd 2b 	call	0x577a	; 0x577a <nrk_kernel_error_add>
    309a:	80 e0       	ldi	r24, 0x00	; 0
    309c:	90 e0       	ldi	r25, 0x00	; 0
    309e:	02 c0       	rjmp	.+4      	; 0x30a4 <dev_manager_ff_sensors+0x1e0>
    		   	message->type = DUMMY_PAYLOAD;
    30a0:	8f ef       	ldi	r24, 0xFF	; 255
    30a2:	90 e0       	ldi	r25, 0x00	; 0
    30a4:	df 91       	pop	r29
    30a6:	cf 91       	pop	r28
    30a8:	1f 91       	pop	r17
    30aa:	0f 91       	pop	r16
    30ac:	ff 90       	pop	r15
    30ae:	ef 90       	pop	r14
    30b0:	df 90       	pop	r13
    30b2:	cf 90       	pop	r12
    30b4:	08 95       	ret

000030b6 <halRfSetChannel>:
void transmitCallback1(ISA_QUEUE *entry , bool status){
uint8_t length;
MESSAGE *message;
DLMO_DROUT *dRout;
	 	message = &tx_buf[PKT_DATA_START];
	 	message->type = DUMMY_PAYLOAD;
    30b6:	99 27       	eor	r25, r25
	  sprintf( &message->data,"node" );
    30b8:	9c 01       	movw	r18, r24
    30ba:	26 5a       	subi	r18, 0xA6	; 166
    30bc:	3e 4b       	sbci	r19, 0xBE	; 190
    30be:	0b 97       	sbiw	r24, 0x0b	; 11
	  length=strlen(&tx_buf[PKT_DATA_START])+PKT_DATA_START+2;
    30c0:	88 0f       	add	r24, r24
    30c2:	99 1f       	adc	r25, r25
    30c4:	88 0f       	add	r24, r24
    30c6:	99 1f       	adc	r25, r25
    30c8:	28 0f       	add	r18, r24
    30ca:	39 1f       	adc	r19, r25
	  sendPacket(entry->tx_buf[DEST_INDEX],dRout->GraphId, length, tx_buf, transmitCallback1);
	  	isaFreePacket(entry);
}
    30cc:	f8 94       	cli
//*******************************************************************************
    30ce:	40 98       	cbi	0x08, 0	; 8
    30d0:	88 e1       	ldi	r24, 0x18	; 24
    30d2:	8e bd       	out	0x2e, r24	; 46
    30d4:	0d b4       	in	r0, 0x2d	; 45
    30d6:	07 fe       	sbrs	r0, 7
    30d8:	fd cf       	rjmp	.-6      	; 0x30d4 <halRfSetChannel+0x1e>
    30da:	83 2f       	mov	r24, r19
    30dc:	99 27       	eor	r25, r25
    30de:	8e bd       	out	0x2e, r24	; 46
    30e0:	0d b4       	in	r0, 0x2d	; 45
    30e2:	07 fe       	sbrs	r0, 7
    30e4:	fd cf       	rjmp	.-6      	; 0x30e0 <halRfSetChannel+0x2a>
    30e6:	2e bd       	out	0x2e, r18	; 46
    30e8:	0d b4       	in	r0, 0x2d	; 45
    30ea:	07 fe       	sbrs	r0, 7
    30ec:	fd cf       	rjmp	.-6      	; 0x30e8 <halRfSetChannel+0x32>
    30ee:	40 9a       	sbi	0x08, 0	; 8

    30f0:	78 94       	sei
    30f2:	08 95       	ret

000030f4 <halRfWaitForCrystalOscillator>:
void halRfWaitForCrystalOscillator(void) {
    uint8_t spiStatusByte;

    // Poll the SPI status byte until the crystal oscillator is stable
    do {
	    DISABLE_GLOBAL_INT();
    30f4:	f8 94       	cli
	    FASTSPI_UPD_STATUS(spiStatusByte);
    30f6:	40 98       	cbi	0x08, 0	; 8
    30f8:	1e bc       	out	0x2e, r1	; 46
    30fa:	0d b4       	in	r0, 0x2d	; 45
    30fc:	07 fe       	sbrs	r0, 7
    30fe:	fd cf       	rjmp	.-6      	; 0x30fa <halRfWaitForCrystalOscillator+0x6>
    3100:	8e b5       	in	r24, 0x2e	; 46
    3102:	40 9a       	sbi	0x08, 0	; 8
	    ENABLE_GLOBAL_INT();
    3104:	78 94       	sei
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));
    3106:	86 ff       	sbrs	r24, 6
    3108:	f5 cf       	rjmp	.-22     	; 0x30f4 <halRfWaitForCrystalOscillator>
    310a:	08 95       	ret

0000310c <rf_security_last_pkt_status>:

} // halRfWaitForCrystalOscillator

    310c:	80 91 23 1b 	lds	r24, 0x1B23
    3110:	99 27       	eor	r25, r25
    3112:	08 95       	ret

00003114 <rf_security_set_ctr_counter>:
    3114:	cf 93       	push	r28
    3116:	df 93       	push	r29
    3118:	dc 01       	movw	r26, r24
    311a:	40 98       	cbi	0x08, 0	; 8
    311c:	89 ec       	ldi	r24, 0xC9	; 201
    311e:	8e bd       	out	0x2e, r24	; 46
    3120:	0d b4       	in	r0, 0x2d	; 45
    3122:	07 fe       	sbrs	r0, 7
    3124:	fd cf       	rjmp	.-6      	; 0x3120 <rf_security_set_ctr_counter+0xc>
    3126:	80 e8       	ldi	r24, 0x80	; 128
    3128:	8e bd       	out	0x2e, r24	; 46
    312a:	0d b4       	in	r0, 0x2d	; 45
    312c:	07 fe       	sbrs	r0, 7
    312e:	fd cf       	rjmp	.-6      	; 0x312a <rf_security_set_ctr_counter+0x16>
    3130:	92 e0       	ldi	r25, 0x02	; 2
    3132:	91 50       	subi	r25, 0x01	; 1
    3134:	fd 01       	movw	r30, r26
    3136:	e9 0f       	add	r30, r25
    3138:	f1 1d       	adc	r31, r1
    313a:	80 81       	ld	r24, Z
    313c:	8e bd       	out	0x2e, r24	; 46
    313e:	0d b4       	in	r0, 0x2d	; 45
    3140:	07 fe       	sbrs	r0, 7
    3142:	fd cf       	rjmp	.-6      	; 0x313e <rf_security_set_ctr_counter+0x2a>
    3144:	99 23       	and	r25, r25
    3146:	a9 f7       	brne	.-22     	; 0x3132 <rf_security_set_ctr_counter+0x1e>
    3148:	40 9a       	sbi	0x08, 0	; 8
    314a:	40 98       	cbi	0x08, 0	; 8
    314c:	8b ec       	ldi	r24, 0xCB	; 203
    314e:	8e bd       	out	0x2e, r24	; 46
    3150:	0d b4       	in	r0, 0x2d	; 45
    3152:	07 fe       	sbrs	r0, 7
    3154:	fd cf       	rjmp	.-6      	; 0x3150 <rf_security_set_ctr_counter+0x3c>
    3156:	80 e8       	ldi	r24, 0x80	; 128
    3158:	8e bd       	out	0x2e, r24	; 46
    315a:	0d b4       	in	r0, 0x2d	; 45
    315c:	07 fe       	sbrs	r0, 7
    315e:	fd cf       	rjmp	.-6      	; 0x315a <rf_security_set_ctr_counter+0x46>
    3160:	92 e0       	ldi	r25, 0x02	; 2
    3162:	9d 01       	movw	r18, r26
    3164:	2e 5f       	subi	r18, 0xFE	; 254
    3166:	3f 4f       	sbci	r19, 0xFF	; 255
    3168:	e9 01       	movw	r28, r18
    316a:	91 50       	subi	r25, 0x01	; 1
    316c:	f9 01       	movw	r30, r18
    316e:	e9 0f       	add	r30, r25
    3170:	f1 1d       	adc	r31, r1
    3172:	80 81       	ld	r24, Z
    3174:	8e bd       	out	0x2e, r24	; 46
    3176:	0d b4       	in	r0, 0x2d	; 45
    3178:	07 fe       	sbrs	r0, 7
    317a:	fd cf       	rjmp	.-6      	; 0x3176 <rf_security_set_ctr_counter+0x62>
    317c:	99 23       	and	r25, r25
    317e:	a1 f7       	brne	.-24     	; 0x3168 <rf_security_set_ctr_counter+0x54>
    3180:	40 9a       	sbi	0x08, 0	; 8
    3182:	8c 91       	ld	r24, X
    3184:	80 93 24 1b 	sts	0x1B24, r24
    3188:	fd 01       	movw	r30, r26
    318a:	81 81       	ldd	r24, Z+1	; 0x01
    318c:	80 93 25 1b 	sts	0x1B25, r24
    3190:	88 81       	ld	r24, Y
    3192:	80 93 26 1b 	sts	0x1B26, r24
    3196:	83 81       	ldd	r24, Z+3	; 0x03
    3198:	80 93 27 1b 	sts	0x1B27, r24
    319c:	df 91       	pop	r29
    319e:	cf 91       	pop	r28
    31a0:	08 95       	ret

000031a2 <rf_security_enable>:
    31a2:	40 98       	cbi	0x08, 0	; 8
    31a4:	89 e1       	ldi	r24, 0x19	; 25
    31a6:	8e bd       	out	0x2e, r24	; 46
    31a8:	0d b4       	in	r0, 0x2d	; 45
    31aa:	07 fe       	sbrs	r0, 7
    31ac:	fd cf       	rjmp	.-6      	; 0x31a8 <rf_security_enable+0x6>
    31ae:	83 e0       	ldi	r24, 0x03	; 3
    31b0:	8e bd       	out	0x2e, r24	; 46
    31b2:	0d b4       	in	r0, 0x2d	; 45
    31b4:	07 fe       	sbrs	r0, 7
    31b6:	fd cf       	rjmp	.-6      	; 0x31b2 <rf_security_enable+0x10>
    31b8:	86 e0       	ldi	r24, 0x06	; 6
    31ba:	8e bd       	out	0x2e, r24	; 46
    31bc:	0d b4       	in	r0, 0x2d	; 45
    31be:	07 fe       	sbrs	r0, 7
    31c0:	fd cf       	rjmp	.-6      	; 0x31bc <rf_security_enable+0x1a>
    31c2:	40 9a       	sbi	0x08, 0	; 8
    31c4:	40 98       	cbi	0x08, 0	; 8
    31c6:	8a e1       	ldi	r24, 0x1A	; 26
    31c8:	8e bd       	out	0x2e, r24	; 46
    31ca:	0d b4       	in	r0, 0x2d	; 45
    31cc:	07 fe       	sbrs	r0, 7
    31ce:	fd cf       	rjmp	.-6      	; 0x31ca <rf_security_enable+0x28>
    31d0:	8e e0       	ldi	r24, 0x0E	; 14
    31d2:	8e bd       	out	0x2e, r24	; 46
    31d4:	0d b4       	in	r0, 0x2d	; 45
    31d6:	07 fe       	sbrs	r0, 7
    31d8:	fd cf       	rjmp	.-6      	; 0x31d4 <rf_security_enable+0x32>
    31da:	8e e0       	ldi	r24, 0x0E	; 14
    31dc:	8e bd       	out	0x2e, r24	; 46
    31de:	0d b4       	in	r0, 0x2d	; 45
    31e0:	07 fe       	sbrs	r0, 7
    31e2:	fd cf       	rjmp	.-6      	; 0x31de <rf_security_enable+0x3c>
    31e4:	40 9a       	sbi	0x08, 0	; 8
    31e6:	81 e0       	ldi	r24, 0x01	; 1
    31e8:	80 93 14 1b 	sts	0x1B14, r24
    31ec:	08 95       	ret

000031ee <rf_security_disable>:
    31ee:	40 98       	cbi	0x08, 0	; 8
    31f0:	89 e1       	ldi	r24, 0x19	; 25
    31f2:	8e bd       	out	0x2e, r24	; 46
    31f4:	0d b4       	in	r0, 0x2d	; 45
    31f6:	07 fe       	sbrs	r0, 7
    31f8:	fd cf       	rjmp	.-6      	; 0x31f4 <rf_security_disable+0x6>
    31fa:	81 e0       	ldi	r24, 0x01	; 1
    31fc:	8e bd       	out	0x2e, r24	; 46
    31fe:	0d b4       	in	r0, 0x2d	; 45
    3200:	07 fe       	sbrs	r0, 7
    3202:	fd cf       	rjmp	.-6      	; 0x31fe <rf_security_disable+0x10>
    3204:	84 ec       	ldi	r24, 0xC4	; 196
    3206:	8e bd       	out	0x2e, r24	; 46
    3208:	0d b4       	in	r0, 0x2d	; 45
    320a:	07 fe       	sbrs	r0, 7
    320c:	fd cf       	rjmp	.-6      	; 0x3208 <rf_security_disable+0x1a>
    320e:	40 9a       	sbi	0x08, 0	; 8
    3210:	10 92 14 1b 	sts	0x1B14, r1
    3214:	08 95       	ret

00003216 <rf_get_sem>:
    3216:	80 91 12 1b 	lds	r24, 0x1B12
    321a:	90 91 13 1b 	lds	r25, 0x1B13
    321e:	08 95       	ret

00003220 <rf_addr_decode_enable>:
    3220:	20 91 15 1b 	lds	r18, 0x1B15
    3224:	30 91 16 1b 	lds	r19, 0x1B16
    3228:	38 60       	ori	r19, 0x08	; 8
    322a:	30 93 16 1b 	sts	0x1B16, r19
    322e:	20 93 15 1b 	sts	0x1B15, r18
    3232:	40 98       	cbi	0x08, 0	; 8
    3234:	81 e1       	ldi	r24, 0x11	; 17
    3236:	8e bd       	out	0x2e, r24	; 46
    3238:	0d b4       	in	r0, 0x2d	; 45
    323a:	07 fe       	sbrs	r0, 7
    323c:	fd cf       	rjmp	.-6      	; 0x3238 <rf_addr_decode_enable+0x18>
    323e:	83 2f       	mov	r24, r19
    3240:	99 27       	eor	r25, r25
    3242:	8e bd       	out	0x2e, r24	; 46
    3244:	0d b4       	in	r0, 0x2d	; 45
    3246:	07 fe       	sbrs	r0, 7
    3248:	fd cf       	rjmp	.-6      	; 0x3244 <rf_addr_decode_enable+0x24>
    324a:	2e bd       	out	0x2e, r18	; 46
    324c:	0d b4       	in	r0, 0x2d	; 45
    324e:	07 fe       	sbrs	r0, 7
    3250:	fd cf       	rjmp	.-6      	; 0x324c <rf_addr_decode_enable+0x2c>
    3252:	40 9a       	sbi	0x08, 0	; 8
    3254:	08 95       	ret

00003256 <rf_addr_decode_disable>:
    3256:	20 91 15 1b 	lds	r18, 0x1B15
    325a:	30 91 16 1b 	lds	r19, 0x1B16
    325e:	37 7f       	andi	r19, 0xF7	; 247
    3260:	30 93 16 1b 	sts	0x1B16, r19
    3264:	20 93 15 1b 	sts	0x1B15, r18
    3268:	40 98       	cbi	0x08, 0	; 8
    326a:	81 e1       	ldi	r24, 0x11	; 17
    326c:	8e bd       	out	0x2e, r24	; 46
    326e:	0d b4       	in	r0, 0x2d	; 45
    3270:	07 fe       	sbrs	r0, 7
    3272:	fd cf       	rjmp	.-6      	; 0x326e <rf_addr_decode_disable+0x18>
    3274:	83 2f       	mov	r24, r19
    3276:	99 27       	eor	r25, r25
    3278:	8e bd       	out	0x2e, r24	; 46
    327a:	0d b4       	in	r0, 0x2d	; 45
    327c:	07 fe       	sbrs	r0, 7
    327e:	fd cf       	rjmp	.-6      	; 0x327a <rf_addr_decode_disable+0x24>
    3280:	2e bd       	out	0x2e, r18	; 46
    3282:	0d b4       	in	r0, 0x2d	; 45
    3284:	07 fe       	sbrs	r0, 7
    3286:	fd cf       	rjmp	.-6      	; 0x3282 <rf_addr_decode_disable+0x2c>
    3288:	40 9a       	sbi	0x08, 0	; 8
    328a:	08 95       	ret

0000328c <rf_auto_ack_enable>:
    328c:	81 e0       	ldi	r24, 0x01	; 1
    328e:	80 93 22 1b 	sts	0x1B22, r24
    3292:	20 91 15 1b 	lds	r18, 0x1B15
    3296:	30 91 16 1b 	lds	r19, 0x1B16
    329a:	20 61       	ori	r18, 0x10	; 16
    329c:	30 93 16 1b 	sts	0x1B16, r19
    32a0:	20 93 15 1b 	sts	0x1B15, r18
    32a4:	40 98       	cbi	0x08, 0	; 8
    32a6:	81 e1       	ldi	r24, 0x11	; 17
    32a8:	8e bd       	out	0x2e, r24	; 46
    32aa:	0d b4       	in	r0, 0x2d	; 45
    32ac:	07 fe       	sbrs	r0, 7
    32ae:	fd cf       	rjmp	.-6      	; 0x32aa <rf_auto_ack_enable+0x1e>
    32b0:	83 2f       	mov	r24, r19
    32b2:	99 27       	eor	r25, r25
    32b4:	8e bd       	out	0x2e, r24	; 46
    32b6:	0d b4       	in	r0, 0x2d	; 45
    32b8:	07 fe       	sbrs	r0, 7
    32ba:	fd cf       	rjmp	.-6      	; 0x32b6 <rf_auto_ack_enable+0x2a>
    32bc:	2e bd       	out	0x2e, r18	; 46
    32be:	0d b4       	in	r0, 0x2d	; 45
    32c0:	07 fe       	sbrs	r0, 7
    32c2:	fd cf       	rjmp	.-6      	; 0x32be <rf_auto_ack_enable+0x32>
    32c4:	40 9a       	sbi	0x08, 0	; 8
    32c6:	08 95       	ret

000032c8 <rf_auto_ack_disable>:
    32c8:	10 92 22 1b 	sts	0x1B22, r1
    32cc:	20 91 15 1b 	lds	r18, 0x1B15
    32d0:	30 91 16 1b 	lds	r19, 0x1B16
    32d4:	2f 7e       	andi	r18, 0xEF	; 239
    32d6:	30 93 16 1b 	sts	0x1B16, r19
    32da:	20 93 15 1b 	sts	0x1B15, r18
    32de:	40 98       	cbi	0x08, 0	; 8
    32e0:	81 e1       	ldi	r24, 0x11	; 17
    32e2:	8e bd       	out	0x2e, r24	; 46
    32e4:	0d b4       	in	r0, 0x2d	; 45
    32e6:	07 fe       	sbrs	r0, 7
    32e8:	fd cf       	rjmp	.-6      	; 0x32e4 <rf_auto_ack_disable+0x1c>
    32ea:	83 2f       	mov	r24, r19
    32ec:	99 27       	eor	r25, r25
    32ee:	8e bd       	out	0x2e, r24	; 46
    32f0:	0d b4       	in	r0, 0x2d	; 45
    32f2:	07 fe       	sbrs	r0, 7
    32f4:	fd cf       	rjmp	.-6      	; 0x32f0 <rf_auto_ack_disable+0x28>
    32f6:	2e bd       	out	0x2e, r18	; 46
    32f8:	0d b4       	in	r0, 0x2d	; 45
    32fa:	07 fe       	sbrs	r0, 7
    32fc:	fd cf       	rjmp	.-6      	; 0x32f8 <rf_auto_ack_disable+0x30>
    32fe:	40 9a       	sbi	0x08, 0	; 8
    3300:	08 95       	ret

00003302 <rf_busy>:
    3302:	89 b1       	in	r24, 0x09	; 9
    3304:	99 27       	eor	r25, r25
    3306:	66 e0       	ldi	r22, 0x06	; 6
    3308:	96 95       	lsr	r25
    330a:	87 95       	ror	r24
    330c:	6a 95       	dec	r22
    330e:	e1 f7       	brne	.-8      	; 0x3308 <rf_busy+0x6>
    3310:	81 70       	andi	r24, 0x01	; 1
    3312:	90 70       	andi	r25, 0x00	; 0
    3314:	08 95       	ret

00003316 <rf_rx_check_fifop>:
    3316:	8c b1       	in	r24, 0x0c	; 12
    3318:	99 27       	eor	r25, r25
    331a:	87 fd       	sbrc	r24, 7
    331c:	90 95       	com	r25
    331e:	88 27       	eor	r24, r24
    3320:	99 0f       	add	r25, r25
    3322:	88 1f       	adc	r24, r24
    3324:	99 27       	eor	r25, r25
    3326:	08 95       	ret

00003328 <rf_rx_check_sfd>:
    3328:	89 b1       	in	r24, 0x09	; 9
    332a:	99 27       	eor	r25, r25
    332c:	e6 e0       	ldi	r30, 0x06	; 6
    332e:	96 95       	lsr	r25
    3330:	87 95       	ror	r24
    3332:	ea 95       	dec	r30
    3334:	e1 f7       	brne	.-8      	; 0x332e <rf_rx_check_sfd+0x6>
    3336:	81 70       	andi	r24, 0x01	; 1
    3338:	90 70       	andi	r25, 0x00	; 0
    333a:	08 95       	ret

0000333c <rf_rx_packet>:
    333c:	80 91 28 1b 	lds	r24, 0x1B28
    3340:	88 23       	and	r24, r24
    3342:	19 f4       	brne	.+6      	; 0x334a <rf_rx_packet+0xe>
    3344:	80 e0       	ldi	r24, 0x00	; 0
    3346:	90 e0       	ldi	r25, 0x00	; 0
    3348:	08 95       	ret
    334a:	80 91 28 1b 	lds	r24, 0x1B28
    334e:	10 92 28 1b 	sts	0x1B28, r1
    3352:	99 27       	eor	r25, r25
    3354:	87 fd       	sbrc	r24, 7
    3356:	90 95       	com	r25
    3358:	08 95       	ret

0000335a <rf_flush_rx_fifo>:
    335a:	40 98       	cbi	0x08, 0	; 8
    335c:	88 e0       	ldi	r24, 0x08	; 8
    335e:	8e bd       	out	0x2e, r24	; 46
    3360:	0d b4       	in	r0, 0x2d	; 45
    3362:	07 fe       	sbrs	r0, 7
    3364:	fd cf       	rjmp	.-6      	; 0x3360 <rf_flush_rx_fifo+0x6>
    3366:	40 9a       	sbi	0x08, 0	; 8
    3368:	40 98       	cbi	0x08, 0	; 8
    336a:	88 e0       	ldi	r24, 0x08	; 8
    336c:	8e bd       	out	0x2e, r24	; 46
    336e:	0d b4       	in	r0, 0x2d	; 45
    3370:	07 fe       	sbrs	r0, 7
    3372:	fd cf       	rjmp	.-6      	; 0x336e <rf_flush_rx_fifo+0x14>
    3374:	40 9a       	sbi	0x08, 0	; 8
    3376:	08 95       	ret

00003378 <rf_carrier_off>:
    3378:	80 91 12 1b 	lds	r24, 0x1B12
    337c:	90 91 13 1b 	lds	r25, 0x1B13
    3380:	0e 94 53 2f 	call	0x5ea6	; 0x5ea6 <nrk_sem_pend>
    3384:	40 98       	cbi	0x08, 0	; 8
    3386:	86 e0       	ldi	r24, 0x06	; 6
    3388:	8e bd       	out	0x2e, r24	; 46
    338a:	0d b4       	in	r0, 0x2d	; 45
    338c:	07 fe       	sbrs	r0, 7
    338e:	fd cf       	rjmp	.-6      	; 0x338a <rf_carrier_off+0x12>
    3390:	40 9a       	sbi	0x08, 0	; 8
    3392:	80 91 12 1b 	lds	r24, 0x1B12
    3396:	90 91 13 1b 	lds	r25, 0x1B13
    339a:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    339e:	08 95       	ret

000033a0 <rf_carrier_on>:
    33a0:	80 91 12 1b 	lds	r24, 0x1B12
    33a4:	90 91 13 1b 	lds	r25, 0x1B13
    33a8:	0e 94 53 2f 	call	0x5ea6	; 0x5ea6 <nrk_sem_pend>
    33ac:	40 98       	cbi	0x08, 0	; 8
    33ae:	84 e0       	ldi	r24, 0x04	; 4
    33b0:	8e bd       	out	0x2e, r24	; 46
    33b2:	0d b4       	in	r0, 0x2d	; 45
    33b4:	07 fe       	sbrs	r0, 7
    33b6:	fd cf       	rjmp	.-6      	; 0x33b2 <rf_carrier_on+0x12>
    33b8:	40 9a       	sbi	0x08, 0	; 8
    33ba:	80 91 12 1b 	lds	r24, 0x1B12
    33be:	90 91 13 1b 	lds	r25, 0x1B13
    33c2:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    33c6:	08 95       	ret

000033c8 <rf_data_mode>:
    33c8:	80 91 12 1b 	lds	r24, 0x1B12
    33cc:	90 91 13 1b 	lds	r25, 0x1B13
    33d0:	0e 94 53 2f 	call	0x5ea6	; 0x5ea6 <nrk_sem_pend>
    33d4:	40 98       	cbi	0x08, 0	; 8
    33d6:	86 e0       	ldi	r24, 0x06	; 6
    33d8:	8e bd       	out	0x2e, r24	; 46
    33da:	0d b4       	in	r0, 0x2d	; 45
    33dc:	07 fe       	sbrs	r0, 7
    33de:	fd cf       	rjmp	.-6      	; 0x33da <rf_data_mode+0x12>
    33e0:	40 9a       	sbi	0x08, 0	; 8
    33e2:	40 98       	cbi	0x08, 0	; 8
    33e4:	82 e1       	ldi	r24, 0x12	; 18
    33e6:	8e bd       	out	0x2e, r24	; 46
    33e8:	0d b4       	in	r0, 0x2d	; 45
    33ea:	07 fe       	sbrs	r0, 7
    33ec:	fd cf       	rjmp	.-6      	; 0x33e8 <rf_data_mode+0x20>
    33ee:	85 e0       	ldi	r24, 0x05	; 5
    33f0:	8e bd       	out	0x2e, r24	; 46
    33f2:	0d b4       	in	r0, 0x2d	; 45
    33f4:	07 fe       	sbrs	r0, 7
    33f6:	fd cf       	rjmp	.-6      	; 0x33f2 <rf_data_mode+0x2a>
    33f8:	1e bc       	out	0x2e, r1	; 46
    33fa:	0d b4       	in	r0, 0x2d	; 45
    33fc:	07 fe       	sbrs	r0, 7
    33fe:	fd cf       	rjmp	.-6      	; 0x33fa <rf_data_mode+0x32>
    3400:	40 9a       	sbi	0x08, 0	; 8
    3402:	40 98       	cbi	0x08, 0	; 8
    3404:	8e e2       	ldi	r24, 0x2E	; 46
    3406:	8e bd       	out	0x2e, r24	; 46
    3408:	0d b4       	in	r0, 0x2d	; 45
    340a:	07 fe       	sbrs	r0, 7
    340c:	fd cf       	rjmp	.-6      	; 0x3408 <rf_data_mode+0x40>
    340e:	1e bc       	out	0x2e, r1	; 46
    3410:	0d b4       	in	r0, 0x2d	; 45
    3412:	07 fe       	sbrs	r0, 7
    3414:	fd cf       	rjmp	.-6      	; 0x3410 <rf_data_mode+0x48>
    3416:	1e bc       	out	0x2e, r1	; 46
    3418:	0d b4       	in	r0, 0x2d	; 45
    341a:	07 fe       	sbrs	r0, 7
    341c:	fd cf       	rjmp	.-6      	; 0x3418 <rf_data_mode+0x50>
    341e:	40 9a       	sbi	0x08, 0	; 8
    3420:	0e 94 ad 19 	call	0x335a	; 0x335a <rf_flush_rx_fifo>
    3424:	80 91 12 1b 	lds	r24, 0x1B12
    3428:	90 91 13 1b 	lds	r25, 0x1B13
    342c:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    3430:	08 95       	ret

00003432 <rf_test_mode>:
    3432:	80 91 12 1b 	lds	r24, 0x1B12
    3436:	90 91 13 1b 	lds	r25, 0x1B13
    343a:	0e 94 53 2f 	call	0x5ea6	; 0x5ea6 <nrk_sem_pend>
    343e:	40 98       	cbi	0x08, 0	; 8
    3440:	86 e0       	ldi	r24, 0x06	; 6
    3442:	8e bd       	out	0x2e, r24	; 46
    3444:	0d b4       	in	r0, 0x2d	; 45
    3446:	07 fe       	sbrs	r0, 7
    3448:	fd cf       	rjmp	.-6      	; 0x3444 <rf_test_mode+0x12>
    344a:	40 9a       	sbi	0x08, 0	; 8
    344c:	40 98       	cbi	0x08, 0	; 8
    344e:	82 e1       	ldi	r24, 0x12	; 18
    3450:	8e bd       	out	0x2e, r24	; 46
    3452:	0d b4       	in	r0, 0x2d	; 45
    3454:	07 fe       	sbrs	r0, 7
    3456:	fd cf       	rjmp	.-6      	; 0x3452 <rf_test_mode+0x20>
    3458:	85 e0       	ldi	r24, 0x05	; 5
    345a:	8e bd       	out	0x2e, r24	; 46
    345c:	0d b4       	in	r0, 0x2d	; 45
    345e:	07 fe       	sbrs	r0, 7
    3460:	fd cf       	rjmp	.-6      	; 0x345c <rf_test_mode+0x2a>
    3462:	88 e0       	ldi	r24, 0x08	; 8
    3464:	8e bd       	out	0x2e, r24	; 46
    3466:	0d b4       	in	r0, 0x2d	; 45
    3468:	07 fe       	sbrs	r0, 7
    346a:	fd cf       	rjmp	.-6      	; 0x3466 <rf_test_mode+0x34>
    346c:	40 9a       	sbi	0x08, 0	; 8
    346e:	40 98       	cbi	0x08, 0	; 8
    3470:	8e e2       	ldi	r24, 0x2E	; 46
    3472:	8e bd       	out	0x2e, r24	; 46
    3474:	0d b4       	in	r0, 0x2d	; 45
    3476:	07 fe       	sbrs	r0, 7
    3478:	fd cf       	rjmp	.-6      	; 0x3474 <rf_test_mode+0x42>
    347a:	88 e1       	ldi	r24, 0x18	; 24
    347c:	8e bd       	out	0x2e, r24	; 46
    347e:	0d b4       	in	r0, 0x2d	; 45
    3480:	07 fe       	sbrs	r0, 7
    3482:	fd cf       	rjmp	.-6      	; 0x347e <rf_test_mode+0x4c>
    3484:	1e bc       	out	0x2e, r1	; 46
    3486:	0d b4       	in	r0, 0x2d	; 45
    3488:	07 fe       	sbrs	r0, 7
    348a:	fd cf       	rjmp	.-6      	; 0x3486 <rf_test_mode+0x54>
    348c:	40 9a       	sbi	0x08, 0	; 8
    348e:	0e 94 ad 19 	call	0x335a	; 0x335a <rf_flush_rx_fifo>
    3492:	80 91 12 1b 	lds	r24, 0x1B12
    3496:	90 91 13 1b 	lds	r25, 0x1B13
    349a:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    349e:	08 95       	ret

000034a0 <rf_set_cca_thresh>:
    34a0:	0f 93       	push	r16
    34a2:	1f 93       	push	r17
    34a4:	08 2f       	mov	r16, r24
    34a6:	80 91 12 1b 	lds	r24, 0x1B12
    34aa:	90 91 13 1b 	lds	r25, 0x1B13
    34ae:	0e 94 53 2f 	call	0x5ea6	; 0x5ea6 <nrk_sem_pend>
    34b2:	11 27       	eor	r17, r17
    34b4:	07 fd       	sbrc	r16, 7
    34b6:	10 95       	com	r17
    34b8:	30 2f       	mov	r19, r16
    34ba:	22 27       	eor	r18, r18
    34bc:	20 68       	ori	r18, 0x80	; 128
    34be:	40 98       	cbi	0x08, 0	; 8
    34c0:	83 e1       	ldi	r24, 0x13	; 19
    34c2:	8e bd       	out	0x2e, r24	; 46
    34c4:	0d b4       	in	r0, 0x2d	; 45
    34c6:	07 fe       	sbrs	r0, 7
    34c8:	fd cf       	rjmp	.-6      	; 0x34c4 <rf_set_cca_thresh+0x24>
    34ca:	83 2f       	mov	r24, r19
    34cc:	99 27       	eor	r25, r25
    34ce:	8e bd       	out	0x2e, r24	; 46
    34d0:	0d b4       	in	r0, 0x2d	; 45
    34d2:	07 fe       	sbrs	r0, 7
    34d4:	fd cf       	rjmp	.-6      	; 0x34d0 <rf_set_cca_thresh+0x30>
    34d6:	2e bd       	out	0x2e, r18	; 46
    34d8:	0d b4       	in	r0, 0x2d	; 45
    34da:	07 fe       	sbrs	r0, 7
    34dc:	fd cf       	rjmp	.-6      	; 0x34d8 <rf_set_cca_thresh+0x38>
    34de:	40 9a       	sbi	0x08, 0	; 8
    34e0:	80 91 12 1b 	lds	r24, 0x1B12
    34e4:	90 91 13 1b 	lds	r25, 0x1B13
    34e8:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    34ec:	1f 91       	pop	r17
    34ee:	0f 91       	pop	r16
    34f0:	08 95       	ret

000034f2 <rf_polling_rx_packet>:
    34f2:	0f 93       	push	r16
    34f4:	1f 93       	push	r17
    34f6:	cf 93       	push	r28
    34f8:	df 93       	push	r29
    34fa:	cd b7       	in	r28, 0x3d	; 61
    34fc:	de b7       	in	r29, 0x3e	; 62
    34fe:	24 97       	sbiw	r28, 0x04	; 4
    3500:	0f b6       	in	r0, 0x3f	; 63
    3502:	f8 94       	cli
    3504:	de bf       	out	0x3e, r29	; 62
    3506:	0f be       	out	0x3f, r0	; 63
    3508:	cd bf       	out	0x3d, r28	; 61
    350a:	18 2f       	mov	r17, r24
    350c:	06 2f       	mov	r16, r22
    350e:	80 91 12 1b 	lds	r24, 0x1B12
    3512:	90 91 13 1b 	lds	r25, 0x1B13
    3516:	0e 94 53 2f 	call	0x5ea6	; 0x5ea6 <nrk_sem_pend>
    351a:	67 9b       	sbis	0x0c, 7	; 12
    351c:	4c c2       	rjmp	.+1176   	; 0x39b6 <rf_polling_rx_packet+0x4c4>
    351e:	10 92 23 1b 	sts	0x1B23, r1
    3522:	67 9b       	sbis	0x0c, 7	; 12
    3524:	25 c0       	rjmp	.+74     	; 0x3570 <rf_polling_rx_packet+0x7e>
    3526:	31 99       	sbic	0x06, 1	; 6
    3528:	23 c0       	rjmp	.+70     	; 0x3570 <rf_polling_rx_packet+0x7e>
    352a:	40 98       	cbi	0x08, 0	; 8
    352c:	8f e7       	ldi	r24, 0x7F	; 127
    352e:	8e bd       	out	0x2e, r24	; 46
    3530:	0d b4       	in	r0, 0x2d	; 45
    3532:	07 fe       	sbrs	r0, 7
    3534:	fd cf       	rjmp	.-6      	; 0x3530 <rf_polling_rx_packet+0x3e>
    3536:	1e bc       	out	0x2e, r1	; 46
    3538:	0d b4       	in	r0, 0x2d	; 45
    353a:	07 fe       	sbrs	r0, 7
    353c:	fd cf       	rjmp	.-6      	; 0x3538 <rf_polling_rx_packet+0x46>
    353e:	8e b5       	in	r24, 0x2e	; 46
    3540:	40 9a       	sbi	0x08, 0	; 8
    3542:	40 98       	cbi	0x08, 0	; 8
    3544:	88 e0       	ldi	r24, 0x08	; 8
    3546:	8e bd       	out	0x2e, r24	; 46
    3548:	0d b4       	in	r0, 0x2d	; 45
    354a:	07 fe       	sbrs	r0, 7
    354c:	fd cf       	rjmp	.-6      	; 0x3548 <rf_polling_rx_packet+0x56>
    354e:	40 9a       	sbi	0x08, 0	; 8
    3550:	40 98       	cbi	0x08, 0	; 8
    3552:	88 e0       	ldi	r24, 0x08	; 8
    3554:	8e bd       	out	0x2e, r24	; 46
    3556:	0d b4       	in	r0, 0x2d	; 45
    3558:	07 fe       	sbrs	r0, 7
    355a:	fd cf       	rjmp	.-6      	; 0x3556 <rf_polling_rx_packet+0x64>
    355c:	40 9a       	sbi	0x08, 0	; 8
    355e:	80 91 12 1b 	lds	r24, 0x1B12
    3562:	90 91 13 1b 	lds	r25, 0x1B13
    3566:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    356a:	8f ef       	ldi	r24, 0xFF	; 255
    356c:	9f ef       	ldi	r25, 0xFF	; 255
    356e:	2b c2       	rjmp	.+1110   	; 0x39c6 <rf_polling_rx_packet+0x4d4>
    3570:	40 98       	cbi	0x08, 0	; 8
    3572:	8f e7       	ldi	r24, 0x7F	; 127
    3574:	8e bd       	out	0x2e, r24	; 46
    3576:	0d b4       	in	r0, 0x2d	; 45
    3578:	07 fe       	sbrs	r0, 7
    357a:	fd cf       	rjmp	.-6      	; 0x3576 <rf_polling_rx_packet+0x84>
    357c:	1e bc       	out	0x2e, r1	; 46
    357e:	0d b4       	in	r0, 0x2d	; 45
    3580:	07 fe       	sbrs	r0, 7
    3582:	fd cf       	rjmp	.-6      	; 0x357e <rf_polling_rx_packet+0x8c>
    3584:	4e b5       	in	r20, 0x2e	; 46
    3586:	40 9a       	sbi	0x08, 0	; 8
    3588:	4f 77       	andi	r20, 0x7F	; 127
    358a:	19 f5       	brne	.+70     	; 0x35d2 <rf_polling_rx_packet+0xe0>
    358c:	40 98       	cbi	0x08, 0	; 8
    358e:	8f e7       	ldi	r24, 0x7F	; 127
    3590:	8e bd       	out	0x2e, r24	; 46
    3592:	0d b4       	in	r0, 0x2d	; 45
    3594:	07 fe       	sbrs	r0, 7
    3596:	fd cf       	rjmp	.-6      	; 0x3592 <rf_polling_rx_packet+0xa0>
    3598:	1e bc       	out	0x2e, r1	; 46
    359a:	0d b4       	in	r0, 0x2d	; 45
    359c:	07 fe       	sbrs	r0, 7
    359e:	fd cf       	rjmp	.-6      	; 0x359a <rf_polling_rx_packet+0xa8>
    35a0:	8e b5       	in	r24, 0x2e	; 46
    35a2:	40 9a       	sbi	0x08, 0	; 8
    35a4:	40 98       	cbi	0x08, 0	; 8
    35a6:	88 e0       	ldi	r24, 0x08	; 8
    35a8:	8e bd       	out	0x2e, r24	; 46
    35aa:	0d b4       	in	r0, 0x2d	; 45
    35ac:	07 fe       	sbrs	r0, 7
    35ae:	fd cf       	rjmp	.-6      	; 0x35aa <rf_polling_rx_packet+0xb8>
    35b0:	40 9a       	sbi	0x08, 0	; 8
    35b2:	40 98       	cbi	0x08, 0	; 8
    35b4:	88 e0       	ldi	r24, 0x08	; 8
    35b6:	8e bd       	out	0x2e, r24	; 46
    35b8:	0d b4       	in	r0, 0x2d	; 45
    35ba:	07 fe       	sbrs	r0, 7
    35bc:	fd cf       	rjmp	.-6      	; 0x35b8 <rf_polling_rx_packet+0xc6>
    35be:	40 9a       	sbi	0x08, 0	; 8
    35c0:	80 91 12 1b 	lds	r24, 0x1B12
    35c4:	90 91 13 1b 	lds	r25, 0x1B13
    35c8:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    35cc:	8e ef       	ldi	r24, 0xFE	; 254
    35ce:	9f ef       	ldi	r25, 0xFF	; 255
    35d0:	fa c1       	rjmp	.+1012   	; 0x39c6 <rf_polling_rx_packet+0x4d4>
    35d2:	45 30       	cpi	r20, 0x05	; 5
    35d4:	8c f0       	brlt	.+34     	; 0x35f8 <rf_polling_rx_packet+0x106>
    35d6:	e0 91 17 1b 	lds	r30, 0x1B17
    35da:	f0 91 18 1b 	lds	r31, 0x1B18
    35de:	24 2f       	mov	r18, r20
    35e0:	33 27       	eor	r19, r19
    35e2:	27 fd       	sbrc	r18, 7
    35e4:	30 95       	com	r19
    35e6:	2b 50       	subi	r18, 0x0B	; 11
    35e8:	30 40       	sbci	r19, 0x00	; 0
    35ea:	84 81       	ldd	r24, Z+4	; 0x04
    35ec:	99 27       	eor	r25, r25
    35ee:	87 fd       	sbrc	r24, 7
    35f0:	90 95       	com	r25
    35f2:	82 17       	cp	r24, r18
    35f4:	93 07       	cpc	r25, r19
    35f6:	f4 f5       	brge	.+124    	; 0x3674 <rf_polling_rx_packet+0x182>
    35f8:	40 98       	cbi	0x08, 0	; 8
    35fa:	8f e7       	ldi	r24, 0x7F	; 127
    35fc:	8e bd       	out	0x2e, r24	; 46
    35fe:	0d b4       	in	r0, 0x2d	; 45
    3600:	07 fe       	sbrs	r0, 7
    3602:	fd cf       	rjmp	.-6      	; 0x35fe <rf_polling_rx_packet+0x10c>
    3604:	60 e0       	ldi	r22, 0x00	; 0
    3606:	70 e0       	ldi	r23, 0x00	; 0
    3608:	24 2f       	mov	r18, r20
    360a:	33 27       	eor	r19, r19
    360c:	27 fd       	sbrc	r18, 7
    360e:	30 95       	com	r19
    3610:	06 c0       	rjmp	.+12     	; 0x361e <rf_polling_rx_packet+0x12c>
    3612:	1e bc       	out	0x2e, r1	; 46
    3614:	0d b4       	in	r0, 0x2d	; 45
    3616:	07 fe       	sbrs	r0, 7
    3618:	fd cf       	rjmp	.-6      	; 0x3614 <rf_polling_rx_packet+0x122>
    361a:	6f 5f       	subi	r22, 0xFF	; 255
    361c:	7f 4f       	sbci	r23, 0xFF	; 255
    361e:	86 2f       	mov	r24, r22
    3620:	99 27       	eor	r25, r25
    3622:	82 17       	cp	r24, r18
    3624:	93 07       	cpc	r25, r19
    3626:	14 f4       	brge	.+4      	; 0x362c <rf_polling_rx_packet+0x13a>
    3628:	31 99       	sbic	0x06, 1	; 6
    362a:	f3 cf       	rjmp	.-26     	; 0x3612 <rf_polling_rx_packet+0x120>
    362c:	40 9a       	sbi	0x08, 0	; 8
    362e:	40 98       	cbi	0x08, 0	; 8
    3630:	8f e7       	ldi	r24, 0x7F	; 127
    3632:	8e bd       	out	0x2e, r24	; 46
    3634:	0d b4       	in	r0, 0x2d	; 45
    3636:	07 fe       	sbrs	r0, 7
    3638:	fd cf       	rjmp	.-6      	; 0x3634 <rf_polling_rx_packet+0x142>
    363a:	1e bc       	out	0x2e, r1	; 46
    363c:	0d b4       	in	r0, 0x2d	; 45
    363e:	07 fe       	sbrs	r0, 7
    3640:	fd cf       	rjmp	.-6      	; 0x363c <rf_polling_rx_packet+0x14a>
    3642:	8e b5       	in	r24, 0x2e	; 46
    3644:	40 9a       	sbi	0x08, 0	; 8
    3646:	40 98       	cbi	0x08, 0	; 8
    3648:	88 e0       	ldi	r24, 0x08	; 8
    364a:	8e bd       	out	0x2e, r24	; 46
    364c:	0d b4       	in	r0, 0x2d	; 45
    364e:	07 fe       	sbrs	r0, 7
    3650:	fd cf       	rjmp	.-6      	; 0x364c <rf_polling_rx_packet+0x15a>
    3652:	40 9a       	sbi	0x08, 0	; 8
    3654:	40 98       	cbi	0x08, 0	; 8
    3656:	88 e0       	ldi	r24, 0x08	; 8
    3658:	8e bd       	out	0x2e, r24	; 46
    365a:	0d b4       	in	r0, 0x2d	; 45
    365c:	07 fe       	sbrs	r0, 7
    365e:	fd cf       	rjmp	.-6      	; 0x365a <rf_polling_rx_packet+0x168>
    3660:	40 9a       	sbi	0x08, 0	; 8
    3662:	80 91 12 1b 	lds	r24, 0x1B12
    3666:	90 91 13 1b 	lds	r25, 0x1B13
    366a:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    366e:	8d ef       	ldi	r24, 0xFD	; 253
    3670:	9f ef       	ldi	r25, 0xFF	; 255
    3672:	a9 c1       	rjmp	.+850    	; 0x39c6 <rf_polling_rx_packet+0x4d4>
    3674:	e0 91 17 1b 	lds	r30, 0x1B17
    3678:	f0 91 18 1b 	lds	r31, 0x1B18
    367c:	4c 50       	subi	r20, 0x0C	; 12
    367e:	43 83       	std	Z+3, r20	; 0x03
    3680:	11 23       	and	r17, r17
    3682:	b1 f0       	breq	.+44     	; 0x36b0 <rf_polling_rx_packet+0x1be>
    3684:	e0 91 17 1b 	lds	r30, 0x1B17
    3688:	f0 91 18 1b 	lds	r31, 0x1B18
    368c:	83 81       	ldd	r24, Z+3	; 0x03
    368e:	99 27       	eor	r25, r25
    3690:	87 fd       	sbrc	r24, 7
    3692:	90 95       	com	r25
    3694:	20 2f       	mov	r18, r16
    3696:	33 27       	eor	r19, r19
    3698:	82 17       	cp	r24, r18
    369a:	93 07       	cpc	r25, r19
    369c:	49 f0       	breq	.+18     	; 0x36b0 <rf_polling_rx_packet+0x1be>
    369e:	80 91 12 1b 	lds	r24, 0x1B12
    36a2:	90 91 13 1b 	lds	r25, 0x1B13
    36a6:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    36aa:	8a ef       	ldi	r24, 0xFA	; 250
    36ac:	9f ef       	ldi	r25, 0xFF	; 255
    36ae:	8b c1       	rjmp	.+790    	; 0x39c6 <rf_polling_rx_packet+0x4d4>
    36b0:	40 98       	cbi	0x08, 0	; 8
    36b2:	8f e7       	ldi	r24, 0x7F	; 127
    36b4:	8e bd       	out	0x2e, r24	; 46
    36b6:	0d b4       	in	r0, 0x2d	; 45
    36b8:	07 fe       	sbrs	r0, 7
    36ba:	fd cf       	rjmp	.-6      	; 0x36b6 <rf_polling_rx_packet+0x1c4>
    36bc:	fe 01       	movw	r30, r28
    36be:	31 96       	adiw	r30, 0x01	; 1
    36c0:	9e 01       	movw	r18, r28
    36c2:	2d 5f       	subi	r18, 0xFD	; 253
    36c4:	3f 4f       	sbci	r19, 0xFF	; 255
    36c6:	1e bc       	out	0x2e, r1	; 46
    36c8:	0d b4       	in	r0, 0x2d	; 45
    36ca:	07 fe       	sbrs	r0, 7
    36cc:	fd cf       	rjmp	.-6      	; 0x36c8 <rf_polling_rx_packet+0x1d6>
    36ce:	8e b5       	in	r24, 0x2e	; 46
    36d0:	81 93       	st	Z+, r24
    36d2:	e2 17       	cp	r30, r18
    36d4:	f3 07       	cpc	r31, r19
    36d6:	b9 f7       	brne	.-18     	; 0x36c6 <rf_polling_rx_packet+0x1d4>
    36d8:	40 9a       	sbi	0x08, 0	; 8
    36da:	e0 91 17 1b 	lds	r30, 0x1B17
    36de:	f0 91 18 1b 	lds	r31, 0x1B18
    36e2:	89 81       	ldd	r24, Y+1	; 0x01
    36e4:	9a 81       	ldd	r25, Y+2	; 0x02
    36e6:	b5 e0       	ldi	r27, 0x05	; 5
    36e8:	96 95       	lsr	r25
    36ea:	87 95       	ror	r24
    36ec:	ba 95       	dec	r27
    36ee:	e1 f7       	brne	.-8      	; 0x36e8 <rf_polling_rx_packet+0x1f6>
    36f0:	81 70       	andi	r24, 0x01	; 1
    36f2:	87 83       	std	Z+7, r24	; 0x07
    36f4:	40 98       	cbi	0x08, 0	; 8
    36f6:	8f e7       	ldi	r24, 0x7F	; 127
    36f8:	8e bd       	out	0x2e, r24	; 46
    36fa:	0d b4       	in	r0, 0x2d	; 45
    36fc:	07 fe       	sbrs	r0, 7
    36fe:	fd cf       	rjmp	.-6      	; 0x36fa <rf_polling_rx_packet+0x208>
    3700:	1e bc       	out	0x2e, r1	; 46
    3702:	0d b4       	in	r0, 0x2d	; 45
    3704:	07 fe       	sbrs	r0, 7
    3706:	fd cf       	rjmp	.-6      	; 0x3702 <rf_polling_rx_packet+0x210>
    3708:	e0 91 17 1b 	lds	r30, 0x1B17
    370c:	f0 91 18 1b 	lds	r31, 0x1B18
    3710:	8e b5       	in	r24, 0x2e	; 46
    3712:	80 83       	st	Z, r24
    3714:	40 9a       	sbi	0x08, 0	; 8
    3716:	40 98       	cbi	0x08, 0	; 8
    3718:	8f e7       	ldi	r24, 0x7F	; 127
    371a:	8e bd       	out	0x2e, r24	; 46
    371c:	0d b4       	in	r0, 0x2d	; 45
    371e:	07 fe       	sbrs	r0, 7
    3720:	fd cf       	rjmp	.-6      	; 0x371c <rf_polling_rx_packet+0x22a>
    3722:	80 e0       	ldi	r24, 0x00	; 0
    3724:	07 c0       	rjmp	.+14     	; 0x3734 <rf_polling_rx_packet+0x242>
    3726:	1e bc       	out	0x2e, r1	; 46
    3728:	0d b4       	in	r0, 0x2d	; 45
    372a:	07 fe       	sbrs	r0, 7
    372c:	fd cf       	rjmp	.-6      	; 0x3728 <rf_polling_rx_packet+0x236>
    372e:	8f 5f       	subi	r24, 0xFF	; 255
    3730:	84 30       	cpi	r24, 0x04	; 4
    3732:	11 f0       	breq	.+4      	; 0x3738 <rf_polling_rx_packet+0x246>
    3734:	31 99       	sbic	0x06, 1	; 6
    3736:	f7 cf       	rjmp	.-18     	; 0x3726 <rf_polling_rx_packet+0x234>
    3738:	40 9a       	sbi	0x08, 0	; 8
    373a:	40 98       	cbi	0x08, 0	; 8
    373c:	8f e7       	ldi	r24, 0x7F	; 127
    373e:	8e bd       	out	0x2e, r24	; 46
    3740:	0d b4       	in	r0, 0x2d	; 45
    3742:	07 fe       	sbrs	r0, 7
    3744:	fd cf       	rjmp	.-6      	; 0x3740 <rf_polling_rx_packet+0x24e>
    3746:	20 e0       	ldi	r18, 0x00	; 0
    3748:	30 e0       	ldi	r19, 0x00	; 0
    374a:	1e bc       	out	0x2e, r1	; 46
    374c:	0d b4       	in	r0, 0x2d	; 45
    374e:	07 fe       	sbrs	r0, 7
    3750:	fd cf       	rjmp	.-6      	; 0x374c <rf_polling_rx_packet+0x25a>
    3752:	e0 91 17 1b 	lds	r30, 0x1B17
    3756:	f0 91 18 1b 	lds	r31, 0x1B18
    375a:	e2 0f       	add	r30, r18
    375c:	f3 1f       	adc	r31, r19
    375e:	8e b5       	in	r24, 0x2e	; 46
    3760:	81 83       	std	Z+1, r24	; 0x01
    3762:	2f 5f       	subi	r18, 0xFF	; 255
    3764:	3f 4f       	sbci	r19, 0xFF	; 255
    3766:	22 30       	cpi	r18, 0x02	; 2
    3768:	31 05       	cpc	r19, r1
    376a:	79 f7       	brne	.-34     	; 0x374a <rf_polling_rx_packet+0x258>
    376c:	40 9a       	sbi	0x08, 0	; 8
    376e:	89 81       	ldd	r24, Y+1	; 0x01
    3770:	9a 81       	ldd	r25, Y+2	; 0x02
    3772:	83 ff       	sbrs	r24, 3
    3774:	56 c0       	rjmp	.+172    	; 0x3822 <rf_polling_rx_packet+0x330>
    3776:	40 98       	cbi	0x08, 0	; 8
    3778:	8f e7       	ldi	r24, 0x7F	; 127
    377a:	8e bd       	out	0x2e, r24	; 46
    377c:	0d b4       	in	r0, 0x2d	; 45
    377e:	07 fe       	sbrs	r0, 7
    3780:	fd cf       	rjmp	.-6      	; 0x377c <rf_polling_rx_packet+0x28a>
    3782:	ee e0       	ldi	r30, 0x0E	; 14
    3784:	fb e1       	ldi	r31, 0x1B	; 27
    3786:	1e bc       	out	0x2e, r1	; 46
    3788:	0d b4       	in	r0, 0x2d	; 45
    378a:	07 fe       	sbrs	r0, 7
    378c:	fd cf       	rjmp	.-6      	; 0x3788 <rf_polling_rx_packet+0x296>
    378e:	8e b5       	in	r24, 0x2e	; 46
    3790:	81 93       	st	Z+, r24
    3792:	8b e1       	ldi	r24, 0x1B	; 27
    3794:	e2 31       	cpi	r30, 0x12	; 18
    3796:	f8 07       	cpc	r31, r24
    3798:	b1 f7       	brne	.-20     	; 0x3786 <rf_polling_rx_packet+0x294>
    379a:	40 9a       	sbi	0x08, 0	; 8
    379c:	40 98       	cbi	0x08, 0	; 8
    379e:	89 e9       	ldi	r24, 0x99	; 153
    37a0:	8e bd       	out	0x2e, r24	; 46
    37a2:	0d b4       	in	r0, 0x2d	; 45
    37a4:	07 fe       	sbrs	r0, 7
    37a6:	fd cf       	rjmp	.-6      	; 0x37a2 <rf_polling_rx_packet+0x2b0>
    37a8:	80 e8       	ldi	r24, 0x80	; 128
    37aa:	8e bd       	out	0x2e, r24	; 46
    37ac:	0d b4       	in	r0, 0x2d	; 45
    37ae:	07 fe       	sbrs	r0, 7
    37b0:	fd cf       	rjmp	.-6      	; 0x37ac <rf_polling_rx_packet+0x2ba>
    37b2:	92 e0       	ldi	r25, 0x02	; 2
    37b4:	91 50       	subi	r25, 0x01	; 1
    37b6:	e9 2f       	mov	r30, r25
    37b8:	ff 27       	eor	r31, r31
    37ba:	e2 5f       	subi	r30, 0xF2	; 242
    37bc:	f4 4e       	sbci	r31, 0xE4	; 228
    37be:	80 81       	ld	r24, Z
    37c0:	8e bd       	out	0x2e, r24	; 46
    37c2:	0d b4       	in	r0, 0x2d	; 45
    37c4:	07 fe       	sbrs	r0, 7
    37c6:	fd cf       	rjmp	.-6      	; 0x37c2 <rf_polling_rx_packet+0x2d0>
    37c8:	99 23       	and	r25, r25
    37ca:	a1 f7       	brne	.-24     	; 0x37b4 <rf_polling_rx_packet+0x2c2>
    37cc:	40 9a       	sbi	0x08, 0	; 8
    37ce:	40 98       	cbi	0x08, 0	; 8
    37d0:	8b e9       	ldi	r24, 0x9B	; 155
    37d2:	8e bd       	out	0x2e, r24	; 46
    37d4:	0d b4       	in	r0, 0x2d	; 45
    37d6:	07 fe       	sbrs	r0, 7
    37d8:	fd cf       	rjmp	.-6      	; 0x37d4 <rf_polling_rx_packet+0x2e2>
    37da:	80 e8       	ldi	r24, 0x80	; 128
    37dc:	8e bd       	out	0x2e, r24	; 46
    37de:	0d b4       	in	r0, 0x2d	; 45
    37e0:	07 fe       	sbrs	r0, 7
    37e2:	fd cf       	rjmp	.-6      	; 0x37de <rf_polling_rx_packet+0x2ec>
    37e4:	92 e0       	ldi	r25, 0x02	; 2
    37e6:	91 50       	subi	r25, 0x01	; 1
    37e8:	e9 2f       	mov	r30, r25
    37ea:	ff 27       	eor	r31, r31
    37ec:	e0 5f       	subi	r30, 0xF0	; 240
    37ee:	f4 4e       	sbci	r31, 0xE4	; 228
    37f0:	80 81       	ld	r24, Z
    37f2:	8e bd       	out	0x2e, r24	; 46
    37f4:	0d b4       	in	r0, 0x2d	; 45
    37f6:	07 fe       	sbrs	r0, 7
    37f8:	fd cf       	rjmp	.-6      	; 0x37f4 <rf_polling_rx_packet+0x302>
    37fa:	99 23       	and	r25, r25
    37fc:	a1 f7       	brne	.-24     	; 0x37e6 <rf_polling_rx_packet+0x2f4>
    37fe:	40 9a       	sbi	0x08, 0	; 8
    3800:	40 98       	cbi	0x08, 0	; 8
    3802:	8c e0       	ldi	r24, 0x0C	; 12
    3804:	8e bd       	out	0x2e, r24	; 46
    3806:	0d b4       	in	r0, 0x2d	; 45
    3808:	07 fe       	sbrs	r0, 7
    380a:	fd cf       	rjmp	.-6      	; 0x3806 <rf_polling_rx_packet+0x314>
    380c:	40 9a       	sbi	0x08, 0	; 8
    380e:	81 e0       	ldi	r24, 0x01	; 1
    3810:	80 93 23 1b 	sts	0x1B23, r24
    3814:	e0 91 17 1b 	lds	r30, 0x1B17
    3818:	f0 91 18 1b 	lds	r31, 0x1B18
    381c:	83 81       	ldd	r24, Z+3	; 0x03
    381e:	84 50       	subi	r24, 0x04	; 4
    3820:	83 83       	std	Z+3, r24	; 0x03
    3822:	40 98       	cbi	0x08, 0	; 8
    3824:	8f e7       	ldi	r24, 0x7F	; 127
    3826:	8e bd       	out	0x2e, r24	; 46
    3828:	0d b4       	in	r0, 0x2d	; 45
    382a:	07 fe       	sbrs	r0, 7
    382c:	fd cf       	rjmp	.-6      	; 0x3828 <rf_polling_rx_packet+0x336>
    382e:	40 e0       	ldi	r20, 0x00	; 0
    3830:	50 e0       	ldi	r21, 0x00	; 0
    3832:	11 c0       	rjmp	.+34     	; 0x3856 <rf_polling_rx_packet+0x364>
    3834:	1e bc       	out	0x2e, r1	; 46
    3836:	0d b4       	in	r0, 0x2d	; 45
    3838:	07 fe       	sbrs	r0, 7
    383a:	fd cf       	rjmp	.-6      	; 0x3836 <rf_polling_rx_packet+0x344>
    383c:	e0 91 17 1b 	lds	r30, 0x1B17
    3840:	f0 91 18 1b 	lds	r31, 0x1B18
    3844:	05 80       	ldd	r0, Z+5	; 0x05
    3846:	f6 81       	ldd	r31, Z+6	; 0x06
    3848:	e0 2d       	mov	r30, r0
    384a:	e6 0f       	add	r30, r22
    384c:	f1 1d       	adc	r31, r1
    384e:	8e b5       	in	r24, 0x2e	; 46
    3850:	80 83       	st	Z, r24
    3852:	4f 5f       	subi	r20, 0xFF	; 255
    3854:	5f 4f       	sbci	r21, 0xFF	; 255
    3856:	64 2f       	mov	r22, r20
    3858:	e0 91 17 1b 	lds	r30, 0x1B17
    385c:	f0 91 18 1b 	lds	r31, 0x1B18
    3860:	24 2f       	mov	r18, r20
    3862:	33 27       	eor	r19, r19
    3864:	83 81       	ldd	r24, Z+3	; 0x03
    3866:	99 27       	eor	r25, r25
    3868:	87 fd       	sbrc	r24, 7
    386a:	90 95       	com	r25
    386c:	28 17       	cp	r18, r24
    386e:	39 07       	cpc	r19, r25
    3870:	0c f3       	brlt	.-62     	; 0x3834 <rf_polling_rx_packet+0x342>
    3872:	40 9a       	sbi	0x08, 0	; 8
    3874:	40 98       	cbi	0x08, 0	; 8
    3876:	8f e7       	ldi	r24, 0x7F	; 127
    3878:	8e bd       	out	0x2e, r24	; 46
    387a:	0d b4       	in	r0, 0x2d	; 45
    387c:	07 fc       	sbrc	r0, 7
    387e:	0a c0       	rjmp	.+20     	; 0x3894 <rf_polling_rx_packet+0x3a2>
    3880:	fc cf       	rjmp	.-8      	; 0x387a <rf_polling_rx_packet+0x388>
    3882:	0d b4       	in	r0, 0x2d	; 45
    3884:	07 fe       	sbrs	r0, 7
    3886:	fd cf       	rjmp	.-6      	; 0x3882 <rf_polling_rx_packet+0x390>
    3888:	5e b5       	in	r21, 0x2e	; 46
    388a:	40 9a       	sbi	0x08, 0	; 8
    388c:	40 98       	cbi	0x08, 0	; 8
    388e:	8f e7       	ldi	r24, 0x7F	; 127
    3890:	8e bd       	out	0x2e, r24	; 46
    3892:	02 c0       	rjmp	.+4      	; 0x3898 <rf_polling_rx_packet+0x3a6>
    3894:	1e bc       	out	0x2e, r1	; 46
    3896:	f5 cf       	rjmp	.-22     	; 0x3882 <rf_polling_rx_packet+0x390>
    3898:	0d b4       	in	r0, 0x2d	; 45
    389a:	07 fe       	sbrs	r0, 7
    389c:	fd cf       	rjmp	.-6      	; 0x3898 <rf_polling_rx_packet+0x3a6>
    389e:	fe 01       	movw	r30, r28
    38a0:	33 96       	adiw	r30, 0x03	; 3
    38a2:	9e 01       	movw	r18, r28
    38a4:	2b 5f       	subi	r18, 0xFB	; 251
    38a6:	3f 4f       	sbci	r19, 0xFF	; 255
    38a8:	1e bc       	out	0x2e, r1	; 46
    38aa:	0d b4       	in	r0, 0x2d	; 45
    38ac:	07 fe       	sbrs	r0, 7
    38ae:	fd cf       	rjmp	.-6      	; 0x38aa <rf_polling_rx_packet+0x3b8>
    38b0:	8e b5       	in	r24, 0x2e	; 46
    38b2:	81 93       	st	Z+, r24
    38b4:	e2 17       	cp	r30, r18
    38b6:	f3 07       	cpc	r31, r19
    38b8:	b9 f7       	brne	.-18     	; 0x38a8 <rf_polling_rx_packet+0x3b6>
    38ba:	40 9a       	sbi	0x08, 0	; 8
    38bc:	e0 91 17 1b 	lds	r30, 0x1B17
    38c0:	f0 91 18 1b 	lds	r31, 0x1B18
    38c4:	8b 81       	ldd	r24, Y+3	; 0x03
    38c6:	80 87       	std	Z+8, r24	; 0x08
    38c8:	40 e0       	ldi	r20, 0x00	; 0
    38ca:	20 e0       	ldi	r18, 0x00	; 0
    38cc:	30 e0       	ldi	r19, 0x00	; 0
    38ce:	0a c0       	rjmp	.+20     	; 0x38e4 <rf_polling_rx_packet+0x3f2>
    38d0:	e0 91 17 1b 	lds	r30, 0x1B17
    38d4:	f0 91 18 1b 	lds	r31, 0x1B18
    38d8:	85 81       	ldd	r24, Z+5	; 0x05
    38da:	96 81       	ldd	r25, Z+6	; 0x06
    38dc:	a8 0f       	add	r26, r24
    38de:	b9 1f       	adc	r27, r25
    38e0:	8c 91       	ld	r24, X
    38e2:	48 0f       	add	r20, r24
    38e4:	82 2f       	mov	r24, r18
    38e6:	e0 91 17 1b 	lds	r30, 0x1B17
    38ea:	f0 91 18 1b 	lds	r31, 0x1B18
    38ee:	2f 5f       	subi	r18, 0xFF	; 255
    38f0:	3f 4f       	sbci	r19, 0xFF	; 255
    38f2:	a8 2f       	mov	r26, r24
    38f4:	bb 27       	eor	r27, r27
    38f6:	83 81       	ldd	r24, Z+3	; 0x03
    38f8:	99 27       	eor	r25, r25
    38fa:	87 fd       	sbrc	r24, 7
    38fc:	90 95       	com	r25
    38fe:	a8 17       	cp	r26, r24
    3900:	b9 07       	cpc	r27, r25
    3902:	34 f3       	brlt	.-52     	; 0x38d0 <rf_polling_rx_packet+0x3de>
    3904:	45 17       	cp	r20, r21
    3906:	19 f1       	breq	.+70     	; 0x394e <rf_polling_rx_packet+0x45c>
    3908:	40 98       	cbi	0x08, 0	; 8
    390a:	8f e7       	ldi	r24, 0x7F	; 127
    390c:	8e bd       	out	0x2e, r24	; 46
    390e:	0d b4       	in	r0, 0x2d	; 45
    3910:	07 fe       	sbrs	r0, 7
    3912:	fd cf       	rjmp	.-6      	; 0x390e <rf_polling_rx_packet+0x41c>
    3914:	1e bc       	out	0x2e, r1	; 46
    3916:	0d b4       	in	r0, 0x2d	; 45
    3918:	07 fe       	sbrs	r0, 7
    391a:	fd cf       	rjmp	.-6      	; 0x3916 <rf_polling_rx_packet+0x424>
    391c:	8e b5       	in	r24, 0x2e	; 46
    391e:	40 9a       	sbi	0x08, 0	; 8
    3920:	40 98       	cbi	0x08, 0	; 8
    3922:	88 e0       	ldi	r24, 0x08	; 8
    3924:	8e bd       	out	0x2e, r24	; 46
    3926:	0d b4       	in	r0, 0x2d	; 45
    3928:	07 fe       	sbrs	r0, 7
    392a:	fd cf       	rjmp	.-6      	; 0x3926 <rf_polling_rx_packet+0x434>
    392c:	40 9a       	sbi	0x08, 0	; 8
    392e:	40 98       	cbi	0x08, 0	; 8
    3930:	88 e0       	ldi	r24, 0x08	; 8
    3932:	8e bd       	out	0x2e, r24	; 46
    3934:	0d b4       	in	r0, 0x2d	; 45
    3936:	07 fe       	sbrs	r0, 7
    3938:	fd cf       	rjmp	.-6      	; 0x3934 <rf_polling_rx_packet+0x442>
    393a:	40 9a       	sbi	0x08, 0	; 8
    393c:	80 91 12 1b 	lds	r24, 0x1B12
    3940:	90 91 13 1b 	lds	r25, 0x1B13
    3944:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    3948:	8c ef       	ldi	r24, 0xFC	; 252
    394a:	9f ef       	ldi	r25, 0xFF	; 255
    394c:	3c c0       	rjmp	.+120    	; 0x39c6 <rf_polling_rx_packet+0x4d4>
    394e:	8c 81       	ldd	r24, Y+4	; 0x04
    3950:	87 ff       	sbrs	r24, 7
    3952:	0e c0       	rjmp	.+28     	; 0x3970 <rf_polling_rx_packet+0x47e>
    3954:	80 91 28 1b 	lds	r24, 0x1B28
    3958:	8f 5f       	subi	r24, 0xFF	; 255
    395a:	80 93 28 1b 	sts	0x1B28, r24
    395e:	80 91 12 1b 	lds	r24, 0x1B12
    3962:	90 91 13 1b 	lds	r25, 0x1B13
    3966:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    396a:	81 e0       	ldi	r24, 0x01	; 1
    396c:	90 e0       	ldi	r25, 0x00	; 0
    396e:	2b c0       	rjmp	.+86     	; 0x39c6 <rf_polling_rx_packet+0x4d4>
    3970:	40 98       	cbi	0x08, 0	; 8
    3972:	8f e7       	ldi	r24, 0x7F	; 127
    3974:	8e bd       	out	0x2e, r24	; 46
    3976:	0d b4       	in	r0, 0x2d	; 45
    3978:	07 fe       	sbrs	r0, 7
    397a:	fd cf       	rjmp	.-6      	; 0x3976 <rf_polling_rx_packet+0x484>
    397c:	1e bc       	out	0x2e, r1	; 46
    397e:	0d b4       	in	r0, 0x2d	; 45
    3980:	07 fe       	sbrs	r0, 7
    3982:	fd cf       	rjmp	.-6      	; 0x397e <rf_polling_rx_packet+0x48c>
    3984:	8e b5       	in	r24, 0x2e	; 46
    3986:	40 9a       	sbi	0x08, 0	; 8
    3988:	40 98       	cbi	0x08, 0	; 8
    398a:	88 e0       	ldi	r24, 0x08	; 8
    398c:	8e bd       	out	0x2e, r24	; 46
    398e:	0d b4       	in	r0, 0x2d	; 45
    3990:	07 fe       	sbrs	r0, 7
    3992:	fd cf       	rjmp	.-6      	; 0x398e <rf_polling_rx_packet+0x49c>
    3994:	40 9a       	sbi	0x08, 0	; 8
    3996:	40 98       	cbi	0x08, 0	; 8
    3998:	88 e0       	ldi	r24, 0x08	; 8
    399a:	8e bd       	out	0x2e, r24	; 46
    399c:	0d b4       	in	r0, 0x2d	; 45
    399e:	07 fe       	sbrs	r0, 7
    39a0:	fd cf       	rjmp	.-6      	; 0x399c <rf_polling_rx_packet+0x4aa>
    39a2:	40 9a       	sbi	0x08, 0	; 8
    39a4:	80 91 12 1b 	lds	r24, 0x1B12
    39a8:	90 91 13 1b 	lds	r25, 0x1B13
    39ac:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    39b0:	8b ef       	ldi	r24, 0xFB	; 251
    39b2:	9f ef       	ldi	r25, 0xFF	; 255
    39b4:	08 c0       	rjmp	.+16     	; 0x39c6 <rf_polling_rx_packet+0x4d4>
    39b6:	80 91 12 1b 	lds	r24, 0x1B12
    39ba:	90 91 13 1b 	lds	r25, 0x1B13
    39be:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    39c2:	80 e0       	ldi	r24, 0x00	; 0
    39c4:	90 e0       	ldi	r25, 0x00	; 0
    39c6:	24 96       	adiw	r28, 0x04	; 4
    39c8:	0f b6       	in	r0, 0x3f	; 63
    39ca:	f8 94       	cli
    39cc:	de bf       	out	0x3e, r29	; 62
    39ce:	0f be       	out	0x3f, r0	; 63
    39d0:	cd bf       	out	0x3d, r28	; 61
    39d2:	df 91       	pop	r29
    39d4:	cf 91       	pop	r28
    39d6:	1f 91       	pop	r17
    39d8:	0f 91       	pop	r16
    39da:	08 95       	ret

000039dc <rf_rx_off>:
    39dc:	80 91 12 1b 	lds	r24, 0x1B12
    39e0:	90 91 13 1b 	lds	r25, 0x1B13
    39e4:	0e 94 53 2f 	call	0x5ea6	; 0x5ea6 <nrk_sem_pend>
    39e8:	10 92 1f 1b 	sts	0x1B1F, r1
    39ec:	40 98       	cbi	0x08, 0	; 8
    39ee:	86 e0       	ldi	r24, 0x06	; 6
    39f0:	8e bd       	out	0x2e, r24	; 46
    39f2:	0d b4       	in	r0, 0x2d	; 45
    39f4:	07 fe       	sbrs	r0, 7
    39f6:	fd cf       	rjmp	.-6      	; 0x39f2 <rf_rx_off+0x16>
    39f8:	40 9a       	sbi	0x08, 0	; 8
    39fa:	10 92 28 1b 	sts	0x1B28, r1
    39fe:	80 91 12 1b 	lds	r24, 0x1B12
    3a02:	90 91 13 1b 	lds	r25, 0x1B13
    3a06:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    3a0a:	08 95       	ret

00003a0c <rf_polling_rx_on>:
    3a0c:	80 91 12 1b 	lds	r24, 0x1B12
    3a10:	90 91 13 1b 	lds	r25, 0x1B13
    3a14:	0e 94 53 2f 	call	0x5ea6	; 0x5ea6 <nrk_sem_pend>
    3a18:	81 e0       	ldi	r24, 0x01	; 1
    3a1a:	80 93 1f 1b 	sts	0x1B1F, r24
    3a1e:	40 98       	cbi	0x08, 0	; 8
    3a20:	83 e0       	ldi	r24, 0x03	; 3
    3a22:	8e bd       	out	0x2e, r24	; 46
    3a24:	0d b4       	in	r0, 0x2d	; 45
    3a26:	07 fe       	sbrs	r0, 7
    3a28:	fd cf       	rjmp	.-6      	; 0x3a24 <rf_polling_rx_on+0x18>
    3a2a:	40 9a       	sbi	0x08, 0	; 8
    3a2c:	40 98       	cbi	0x08, 0	; 8
    3a2e:	88 e0       	ldi	r24, 0x08	; 8
    3a30:	8e bd       	out	0x2e, r24	; 46
    3a32:	0d b4       	in	r0, 0x2d	; 45
    3a34:	07 fe       	sbrs	r0, 7
    3a36:	fd cf       	rjmp	.-6      	; 0x3a32 <rf_polling_rx_on+0x26>
    3a38:	40 9a       	sbi	0x08, 0	; 8
    3a3a:	10 92 28 1b 	sts	0x1B28, r1
    3a3e:	80 91 12 1b 	lds	r24, 0x1B12
    3a42:	90 91 13 1b 	lds	r25, 0x1B13
    3a46:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    3a4a:	08 95       	ret

00003a4c <rf_rx_on>:
    3a4c:	80 91 12 1b 	lds	r24, 0x1B12
    3a50:	90 91 13 1b 	lds	r25, 0x1B13
    3a54:	0e 94 53 2f 	call	0x5ea6	; 0x5ea6 <nrk_sem_pend>
    3a58:	81 e0       	ldi	r24, 0x01	; 1
    3a5a:	80 93 1f 1b 	sts	0x1B1F, r24
    3a5e:	40 98       	cbi	0x08, 0	; 8
    3a60:	83 e0       	ldi	r24, 0x03	; 3
    3a62:	8e bd       	out	0x2e, r24	; 46
    3a64:	0d b4       	in	r0, 0x2d	; 45
    3a66:	07 fe       	sbrs	r0, 7
    3a68:	fd cf       	rjmp	.-6      	; 0x3a64 <rf_rx_on+0x18>
    3a6a:	40 9a       	sbi	0x08, 0	; 8
    3a6c:	40 98       	cbi	0x08, 0	; 8
    3a6e:	88 e0       	ldi	r24, 0x08	; 8
    3a70:	8e bd       	out	0x2e, r24	; 46
    3a72:	0d b4       	in	r0, 0x2d	; 45
    3a74:	07 fe       	sbrs	r0, 7
    3a76:	fd cf       	rjmp	.-6      	; 0x3a72 <rf_rx_on+0x26>
    3a78:	40 9a       	sbi	0x08, 0	; 8
    3a7a:	10 92 28 1b 	sts	0x1B28, r1
    3a7e:	80 91 12 1b 	lds	r24, 0x1B12
    3a82:	90 91 13 1b 	lds	r25, 0x1B13
    3a86:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    3a8a:	08 95       	ret

00003a8c <rf_tx_power>:
    3a8c:	1f 93       	push	r17
    3a8e:	18 2f       	mov	r17, r24
    3a90:	80 91 12 1b 	lds	r24, 0x1B12
    3a94:	90 91 13 1b 	lds	r25, 0x1B13
    3a98:	0e 94 53 2f 	call	0x5ea6	; 0x5ea6 <nrk_sem_pend>
    3a9c:	21 2f       	mov	r18, r17
    3a9e:	33 27       	eor	r19, r19
    3aa0:	2f 71       	andi	r18, 0x1F	; 31
    3aa2:	30 70       	andi	r19, 0x00	; 0
    3aa4:	20 6e       	ori	r18, 0xE0	; 224
    3aa6:	30 6a       	ori	r19, 0xA0	; 160
    3aa8:	40 98       	cbi	0x08, 0	; 8
    3aaa:	85 e1       	ldi	r24, 0x15	; 21
    3aac:	8e bd       	out	0x2e, r24	; 46
    3aae:	0d b4       	in	r0, 0x2d	; 45
    3ab0:	07 fe       	sbrs	r0, 7
    3ab2:	fd cf       	rjmp	.-6      	; 0x3aae <rf_tx_power+0x22>
    3ab4:	83 2f       	mov	r24, r19
    3ab6:	99 27       	eor	r25, r25
    3ab8:	8e bd       	out	0x2e, r24	; 46
    3aba:	0d b4       	in	r0, 0x2d	; 45
    3abc:	07 fe       	sbrs	r0, 7
    3abe:	fd cf       	rjmp	.-6      	; 0x3aba <rf_tx_power+0x2e>
    3ac0:	2e bd       	out	0x2e, r18	; 46
    3ac2:	0d b4       	in	r0, 0x2d	; 45
    3ac4:	07 fe       	sbrs	r0, 7
    3ac6:	fd cf       	rjmp	.-6      	; 0x3ac2 <rf_tx_power+0x36>
    3ac8:	40 9a       	sbi	0x08, 0	; 8
    3aca:	80 91 12 1b 	lds	r24, 0x1B12
    3ace:	90 91 13 1b 	lds	r25, 0x1B13
    3ad2:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    3ad6:	1f 91       	pop	r17
    3ad8:	08 95       	ret

00003ada <rf_tx_packet>:
    3ada:	ef 92       	push	r14
    3adc:	ff 92       	push	r15
    3ade:	0f 93       	push	r16
    3ae0:	1f 93       	push	r17
    3ae2:	cf 93       	push	r28
    3ae4:	df 93       	push	r29
    3ae6:	cd b7       	in	r28, 0x3d	; 61
    3ae8:	de b7       	in	r29, 0x3e	; 62
    3aea:	22 97       	sbiw	r28, 0x02	; 2
    3aec:	0f b6       	in	r0, 0x3f	; 63
    3aee:	f8 94       	cli
    3af0:	de bf       	out	0x3e, r29	; 62
    3af2:	0f be       	out	0x3f, r0	; 63
    3af4:	cd bf       	out	0x3d, r28	; 61
    3af6:	8c 01       	movw	r16, r24
    3af8:	80 91 12 1b 	lds	r24, 0x1B12
    3afc:	90 91 13 1b 	lds	r25, 0x1B13
    3b00:	0e 94 53 2f 	call	0x5ea6	; 0x5ea6 <nrk_sem_pend>
    3b04:	50 91 14 1b 	lds	r21, 0x1B14
    3b08:	55 23       	and	r21, r21
    3b0a:	39 f0       	breq	.+14     	; 0x3b1a <rf_tx_packet+0x40>
    3b0c:	40 98       	cbi	0x08, 0	; 8
    3b0e:	8d e0       	ldi	r24, 0x0D	; 13
    3b10:	8e bd       	out	0x2e, r24	; 46
    3b12:	0d b4       	in	r0, 0x2d	; 45
    3b14:	07 fe       	sbrs	r0, 7
    3b16:	fd cf       	rjmp	.-6      	; 0x3b12 <rf_tx_packet+0x38>
    3b18:	40 9a       	sbi	0x08, 0	; 8
    3b1a:	f8 01       	movw	r30, r16
    3b1c:	42 81       	ldd	r20, Z+2	; 0x02
    3b1e:	64 2f       	mov	r22, r20
    3b20:	77 27       	eor	r23, r23
    3b22:	67 fd       	sbrc	r22, 7
    3b24:	70 95       	com	r23
    3b26:	a0 e0       	ldi	r26, 0x00	; 0
    3b28:	20 e0       	ldi	r18, 0x00	; 0
    3b2a:	30 e0       	ldi	r19, 0x00	; 0
    3b2c:	08 c0       	rjmp	.+16     	; 0x3b3e <rf_tx_packet+0x64>
    3b2e:	f8 01       	movw	r30, r16
    3b30:	83 81       	ldd	r24, Z+3	; 0x03
    3b32:	94 81       	ldd	r25, Z+4	; 0x04
    3b34:	e8 0e       	add	r14, r24
    3b36:	f9 1e       	adc	r15, r25
    3b38:	f7 01       	movw	r30, r14
    3b3a:	80 81       	ld	r24, Z
    3b3c:	a8 0f       	add	r26, r24
    3b3e:	82 2f       	mov	r24, r18
    3b40:	2f 5f       	subi	r18, 0xFF	; 255
    3b42:	3f 4f       	sbci	r19, 0xFF	; 255
    3b44:	e8 2e       	mov	r14, r24
    3b46:	ff 24       	eor	r15, r15
    3b48:	e6 16       	cp	r14, r22
    3b4a:	f7 06       	cpc	r15, r23
    3b4c:	84 f3       	brlt	.-32     	; 0x3b2e <rf_tx_packet+0x54>
    3b4e:	94 2f       	mov	r25, r20
    3b50:	94 5f       	subi	r25, 0xF4	; 244
    3b52:	51 11       	cpse	r21, r1
    3b54:	9c 5f       	subi	r25, 0xFC	; 252
    3b56:	67 99       	sbic	0x0c, 7	; 12
    3b58:	fe cf       	rjmp	.-4      	; 0x3b56 <rf_tx_packet+0x7c>
    3b5a:	4e 99       	sbic	0x09, 6	; 9
    3b5c:	fc cf       	rjmp	.-8      	; 0x3b56 <rf_tx_packet+0x7c>
    3b5e:	f8 94       	cli
    3b60:	40 98       	cbi	0x08, 0	; 8
    3b62:	89 e0       	ldi	r24, 0x09	; 9
    3b64:	8e bd       	out	0x2e, r24	; 46
    3b66:	0d b4       	in	r0, 0x2d	; 45
    3b68:	07 fe       	sbrs	r0, 7
    3b6a:	fd cf       	rjmp	.-6      	; 0x3b66 <rf_tx_packet+0x8c>
    3b6c:	40 9a       	sbi	0x08, 0	; 8
    3b6e:	40 98       	cbi	0x08, 0	; 8
    3b70:	89 e0       	ldi	r24, 0x09	; 9
    3b72:	8e bd       	out	0x2e, r24	; 46
    3b74:	0d b4       	in	r0, 0x2d	; 45
    3b76:	07 fe       	sbrs	r0, 7
    3b78:	fd cf       	rjmp	.-6      	; 0x3b74 <rf_tx_packet+0x9a>
    3b7a:	40 9a       	sbi	0x08, 0	; 8
    3b7c:	40 98       	cbi	0x08, 0	; 8
    3b7e:	8e e3       	ldi	r24, 0x3E	; 62
    3b80:	8e bd       	out	0x2e, r24	; 46
    3b82:	0d b4       	in	r0, 0x2d	; 45
    3b84:	07 fc       	sbrc	r0, 7
    3b86:	05 c0       	rjmp	.+10     	; 0x3b92 <rf_tx_packet+0xb8>
    3b88:	fc cf       	rjmp	.-8      	; 0x3b82 <rf_tx_packet+0xa8>
    3b8a:	0d b4       	in	r0, 0x2d	; 45
    3b8c:	07 fc       	sbrc	r0, 7
    3b8e:	30 c1       	rjmp	.+608    	; 0x3df0 <rf_tx_packet+0x316>
    3b90:	fc cf       	rjmp	.-8      	; 0x3b8a <rf_tx_packet+0xb0>
    3b92:	9e bd       	out	0x2e, r25	; 46
    3b94:	fa cf       	rjmp	.-12     	; 0x3b8a <rf_tx_packet+0xb0>
    3b96:	81 e6       	ldi	r24, 0x61	; 97
    3b98:	98 e8       	ldi	r25, 0x88	; 136
    3b9a:	9a 83       	std	Y+2, r25	; 0x02
    3b9c:	89 83       	std	Y+1, r24	; 0x01
    3b9e:	55 23       	and	r21, r21
    3ba0:	29 f0       	breq	.+10     	; 0x3bac <rf_tx_packet+0xd2>
    3ba2:	89 81       	ldd	r24, Y+1	; 0x01
    3ba4:	9a 81       	ldd	r25, Y+2	; 0x02
    3ba6:	88 60       	ori	r24, 0x08	; 8
    3ba8:	9a 83       	std	Y+2, r25	; 0x02
    3baa:	89 83       	std	Y+1, r24	; 0x01
    3bac:	40 98       	cbi	0x08, 0	; 8
    3bae:	8e e3       	ldi	r24, 0x3E	; 62
    3bb0:	8e bd       	out	0x2e, r24	; 46
    3bb2:	0d b4       	in	r0, 0x2d	; 45
    3bb4:	07 fe       	sbrs	r0, 7
    3bb6:	fd cf       	rjmp	.-6      	; 0x3bb2 <rf_tx_packet+0xd8>
    3bb8:	fe 01       	movw	r30, r28
    3bba:	31 96       	adiw	r30, 0x01	; 1
    3bbc:	9e 01       	movw	r18, r28
    3bbe:	2d 5f       	subi	r18, 0xFD	; 253
    3bc0:	3f 4f       	sbci	r19, 0xFF	; 255
    3bc2:	80 81       	ld	r24, Z
    3bc4:	8e bd       	out	0x2e, r24	; 46
    3bc6:	0d b4       	in	r0, 0x2d	; 45
    3bc8:	07 fe       	sbrs	r0, 7
    3bca:	fd cf       	rjmp	.-6      	; 0x3bc6 <rf_tx_packet+0xec>
    3bcc:	31 96       	adiw	r30, 0x01	; 1
    3bce:	e2 17       	cp	r30, r18
    3bd0:	f3 07       	cpc	r31, r19
    3bd2:	b9 f7       	brne	.-18     	; 0x3bc2 <rf_tx_packet+0xe8>
    3bd4:	40 9a       	sbi	0x08, 0	; 8
    3bd6:	40 98       	cbi	0x08, 0	; 8
    3bd8:	8e e3       	ldi	r24, 0x3E	; 62
    3bda:	8e bd       	out	0x2e, r24	; 46
    3bdc:	0d b4       	in	r0, 0x2d	; 45
    3bde:	07 fc       	sbrc	r0, 7
    3be0:	05 c0       	rjmp	.+10     	; 0x3bec <rf_tx_packet+0x112>
    3be2:	fc cf       	rjmp	.-8      	; 0x3bdc <rf_tx_packet+0x102>
    3be4:	0d b4       	in	r0, 0x2d	; 45
    3be6:	07 fc       	sbrc	r0, 7
    3be8:	0e c1       	rjmp	.+540    	; 0x3e06 <rf_tx_packet+0x32c>
    3bea:	fc cf       	rjmp	.-8      	; 0x3be4 <rf_tx_packet+0x10a>
    3bec:	80 91 19 1b 	lds	r24, 0x1B19
    3bf0:	8e bd       	out	0x2e, r24	; 46
    3bf2:	f8 cf       	rjmp	.-16     	; 0x3be4 <rf_tx_packet+0x10a>
    3bf4:	0d b4       	in	r0, 0x2d	; 45
    3bf6:	07 fe       	sbrs	r0, 7
    3bf8:	fd cf       	rjmp	.-6      	; 0x3bf4 <rf_tx_packet+0x11a>
    3bfa:	20 e0       	ldi	r18, 0x00	; 0
    3bfc:	30 e0       	ldi	r19, 0x00	; 0
    3bfe:	f9 01       	movw	r30, r18
    3c00:	e5 5e       	subi	r30, 0xE5	; 229
    3c02:	f4 4e       	sbci	r31, 0xE4	; 228
    3c04:	80 81       	ld	r24, Z
    3c06:	8e bd       	out	0x2e, r24	; 46
    3c08:	0d b4       	in	r0, 0x2d	; 45
    3c0a:	07 fe       	sbrs	r0, 7
    3c0c:	fd cf       	rjmp	.-6      	; 0x3c08 <rf_tx_packet+0x12e>
    3c0e:	2f 5f       	subi	r18, 0xFF	; 255
    3c10:	3f 4f       	sbci	r19, 0xFF	; 255
    3c12:	22 30       	cpi	r18, 0x02	; 2
    3c14:	31 05       	cpc	r19, r1
    3c16:	99 f7       	brne	.-26     	; 0x3bfe <rf_tx_packet+0x124>
    3c18:	40 9a       	sbi	0x08, 0	; 8
    3c1a:	40 98       	cbi	0x08, 0	; 8
    3c1c:	8e e3       	ldi	r24, 0x3E	; 62
    3c1e:	8e bd       	out	0x2e, r24	; 46
    3c20:	0d b4       	in	r0, 0x2d	; 45
    3c22:	07 fe       	sbrs	r0, 7
    3c24:	fd cf       	rjmp	.-6      	; 0x3c20 <rf_tx_packet+0x146>
    3c26:	20 e0       	ldi	r18, 0x00	; 0
    3c28:	30 e0       	ldi	r19, 0x00	; 0
    3c2a:	f8 01       	movw	r30, r16
    3c2c:	e2 0f       	add	r30, r18
    3c2e:	f3 1f       	adc	r31, r19
    3c30:	80 81       	ld	r24, Z
    3c32:	8e bd       	out	0x2e, r24	; 46
    3c34:	0d b4       	in	r0, 0x2d	; 45
    3c36:	07 fe       	sbrs	r0, 7
    3c38:	fd cf       	rjmp	.-6      	; 0x3c34 <rf_tx_packet+0x15a>
    3c3a:	2f 5f       	subi	r18, 0xFF	; 255
    3c3c:	3f 4f       	sbci	r19, 0xFF	; 255
    3c3e:	22 30       	cpi	r18, 0x02	; 2
    3c40:	31 05       	cpc	r19, r1
    3c42:	99 f7       	brne	.-26     	; 0x3c2a <rf_tx_packet+0x150>
    3c44:	40 9a       	sbi	0x08, 0	; 8
    3c46:	40 98       	cbi	0x08, 0	; 8
    3c48:	8e e3       	ldi	r24, 0x3E	; 62
    3c4a:	8e bd       	out	0x2e, r24	; 46
    3c4c:	0d b4       	in	r0, 0x2d	; 45
    3c4e:	07 fe       	sbrs	r0, 7
    3c50:	fd cf       	rjmp	.-6      	; 0x3c4c <rf_tx_packet+0x172>
    3c52:	20 e0       	ldi	r18, 0x00	; 0
    3c54:	30 e0       	ldi	r19, 0x00	; 0
    3c56:	f9 01       	movw	r30, r18
    3c58:	e3 5e       	subi	r30, 0xE3	; 227
    3c5a:	f4 4e       	sbci	r31, 0xE4	; 228
    3c5c:	80 81       	ld	r24, Z
    3c5e:	8e bd       	out	0x2e, r24	; 46
    3c60:	0d b4       	in	r0, 0x2d	; 45
    3c62:	07 fe       	sbrs	r0, 7
    3c64:	fd cf       	rjmp	.-6      	; 0x3c60 <rf_tx_packet+0x186>
    3c66:	2f 5f       	subi	r18, 0xFF	; 255
    3c68:	3f 4f       	sbci	r19, 0xFF	; 255
    3c6a:	22 30       	cpi	r18, 0x02	; 2
    3c6c:	31 05       	cpc	r19, r1
    3c6e:	99 f7       	brne	.-26     	; 0x3c56 <rf_tx_packet+0x17c>
    3c70:	40 9a       	sbi	0x08, 0	; 8
    3c72:	55 23       	and	r21, r21
    3c74:	99 f0       	breq	.+38     	; 0x3c9c <rf_tx_packet+0x1c2>
    3c76:	40 98       	cbi	0x08, 0	; 8
    3c78:	8e e3       	ldi	r24, 0x3E	; 62
    3c7a:	8e bd       	out	0x2e, r24	; 46
    3c7c:	0d b4       	in	r0, 0x2d	; 45
    3c7e:	07 fe       	sbrs	r0, 7
    3c80:	fd cf       	rjmp	.-6      	; 0x3c7c <rf_tx_packet+0x1a2>
    3c82:	e4 e2       	ldi	r30, 0x24	; 36
    3c84:	fb e1       	ldi	r31, 0x1B	; 27
    3c86:	80 81       	ld	r24, Z
    3c88:	8e bd       	out	0x2e, r24	; 46
    3c8a:	0d b4       	in	r0, 0x2d	; 45
    3c8c:	07 fe       	sbrs	r0, 7
    3c8e:	fd cf       	rjmp	.-6      	; 0x3c8a <rf_tx_packet+0x1b0>
    3c90:	31 96       	adiw	r30, 0x01	; 1
    3c92:	8b e1       	ldi	r24, 0x1B	; 27
    3c94:	e8 32       	cpi	r30, 0x28	; 40
    3c96:	f8 07       	cpc	r31, r24
    3c98:	b1 f7       	brne	.-20     	; 0x3c86 <rf_tx_packet+0x1ac>
    3c9a:	40 9a       	sbi	0x08, 0	; 8
    3c9c:	40 98       	cbi	0x08, 0	; 8
    3c9e:	8e e3       	ldi	r24, 0x3E	; 62
    3ca0:	8e bd       	out	0x2e, r24	; 46
    3ca2:	0d b4       	in	r0, 0x2d	; 45
    3ca4:	07 fe       	sbrs	r0, 7
    3ca6:	fd cf       	rjmp	.-6      	; 0x3ca2 <rf_tx_packet+0x1c8>
    3ca8:	20 e0       	ldi	r18, 0x00	; 0
    3caa:	30 e0       	ldi	r19, 0x00	; 0
    3cac:	0d c0       	rjmp	.+26     	; 0x3cc8 <rf_tx_packet+0x1ee>
    3cae:	f8 01       	movw	r30, r16
    3cb0:	83 81       	ldd	r24, Z+3	; 0x03
    3cb2:	94 81       	ldd	r25, Z+4	; 0x04
    3cb4:	48 0f       	add	r20, r24
    3cb6:	59 1f       	adc	r21, r25
    3cb8:	fa 01       	movw	r30, r20
    3cba:	80 81       	ld	r24, Z
    3cbc:	8e bd       	out	0x2e, r24	; 46
    3cbe:	0d b4       	in	r0, 0x2d	; 45
    3cc0:	07 fe       	sbrs	r0, 7
    3cc2:	fd cf       	rjmp	.-6      	; 0x3cbe <rf_tx_packet+0x1e4>
    3cc4:	2f 5f       	subi	r18, 0xFF	; 255
    3cc6:	3f 4f       	sbci	r19, 0xFF	; 255
    3cc8:	42 2f       	mov	r20, r18
    3cca:	55 27       	eor	r21, r21
    3ccc:	46 17       	cp	r20, r22
    3cce:	57 07       	cpc	r21, r23
    3cd0:	74 f3       	brlt	.-36     	; 0x3cae <rf_tx_packet+0x1d4>
    3cd2:	40 9a       	sbi	0x08, 0	; 8
    3cd4:	40 98       	cbi	0x08, 0	; 8
    3cd6:	8e e3       	ldi	r24, 0x3E	; 62
    3cd8:	8e bd       	out	0x2e, r24	; 46
    3cda:	0d b4       	in	r0, 0x2d	; 45
    3cdc:	07 fc       	sbrc	r0, 7
    3cde:	05 c0       	rjmp	.+10     	; 0x3cea <rf_tx_packet+0x210>
    3ce0:	fc cf       	rjmp	.-8      	; 0x3cda <rf_tx_packet+0x200>
    3ce2:	0d b4       	in	r0, 0x2d	; 45
    3ce4:	07 fc       	sbrc	r0, 7
    3ce6:	94 c0       	rjmp	.+296    	; 0x3e10 <rf_tx_packet+0x336>
    3ce8:	fc cf       	rjmp	.-8      	; 0x3ce2 <rf_tx_packet+0x208>
    3cea:	ae bd       	out	0x2e, r26	; 46
    3cec:	fa cf       	rjmp	.-12     	; 0x3ce2 <rf_tx_packet+0x208>
    3cee:	80 91 1f 1b 	lds	r24, 0x1B1F
    3cf2:	88 23       	and	r24, r24
    3cf4:	39 f4       	brne	.+14     	; 0x3d04 <rf_tx_packet+0x22a>
    3cf6:	40 98       	cbi	0x08, 0	; 8
    3cf8:	83 e0       	ldi	r24, 0x03	; 3
    3cfa:	8e bd       	out	0x2e, r24	; 46
    3cfc:	0d b4       	in	r0, 0x2d	; 45
    3cfe:	07 fe       	sbrs	r0, 7
    3d00:	fd cf       	rjmp	.-6      	; 0x3cfc <rf_tx_packet+0x222>
    3d02:	40 9a       	sbi	0x08, 0	; 8
    3d04:	40 98       	cbi	0x08, 0	; 8
    3d06:	1e bc       	out	0x2e, r1	; 46
    3d08:	0d b4       	in	r0, 0x2d	; 45
    3d0a:	07 fe       	sbrs	r0, 7
    3d0c:	fd cf       	rjmp	.-6      	; 0x3d08 <rf_tx_packet+0x22e>
    3d0e:	8e b5       	in	r24, 0x2e	; 46
    3d10:	40 9a       	sbi	0x08, 0	; 8
    3d12:	81 ff       	sbrs	r24, 1
    3d14:	f7 cf       	rjmp	.-18     	; 0x3d04 <rf_tx_packet+0x22a>
    3d16:	00 e0       	ldi	r16, 0x00	; 0
    3d18:	40 98       	cbi	0x08, 0	; 8
    3d1a:	85 e0       	ldi	r24, 0x05	; 5
    3d1c:	8e bd       	out	0x2e, r24	; 46
    3d1e:	0d b4       	in	r0, 0x2d	; 45
    3d20:	07 fe       	sbrs	r0, 7
    3d22:	fd cf       	rjmp	.-6      	; 0x3d1e <rf_tx_packet+0x244>
    3d24:	40 9a       	sbi	0x08, 0	; 8
    3d26:	40 98       	cbi	0x08, 0	; 8
    3d28:	1e bc       	out	0x2e, r1	; 46
    3d2a:	0d b4       	in	r0, 0x2d	; 45
    3d2c:	07 fe       	sbrs	r0, 7
    3d2e:	fd cf       	rjmp	.-6      	; 0x3d2a <rf_tx_packet+0x250>
    3d30:	1e b5       	in	r17, 0x2e	; 46
    3d32:	40 9a       	sbi	0x08, 0	; 8
    3d34:	0f 5f       	subi	r16, 0xFF	; 255
    3d36:	05 36       	cpi	r16, 0x65	; 101
    3d38:	51 f4       	brne	.+20     	; 0x3d4e <rf_tx_packet+0x274>
    3d3a:	78 94       	sei
    3d3c:	80 91 12 1b 	lds	r24, 0x1B12
    3d40:	90 91 13 1b 	lds	r25, 0x1B13
    3d44:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    3d48:	80 e0       	ldi	r24, 0x00	; 0
    3d4a:	90 e0       	ldi	r25, 0x00	; 0
    3d4c:	68 c0       	rjmp	.+208    	; 0x3e1e <rf_tx_packet+0x344>
    3d4e:	84 e6       	ldi	r24, 0x64	; 100
    3d50:	90 e0       	ldi	r25, 0x00	; 0
    3d52:	0e 94 3d 28 	call	0x507a	; 0x507a <halWait>
    3d56:	13 fd       	sbrc	r17, 3
    3d58:	08 c0       	rjmp	.+16     	; 0x3d6a <rf_tx_packet+0x290>
    3d5a:	de cf       	rjmp	.-68     	; 0x3d18 <rf_tx_packet+0x23e>
    3d5c:	40 98       	cbi	0x08, 0	; 8
    3d5e:	84 e0       	ldi	r24, 0x04	; 4
    3d60:	8e bd       	out	0x2e, r24	; 46
    3d62:	0d b4       	in	r0, 0x2d	; 45
    3d64:	07 fe       	sbrs	r0, 7
    3d66:	fd cf       	rjmp	.-6      	; 0x3d62 <rf_tx_packet+0x288>
    3d68:	40 9a       	sbi	0x08, 0	; 8
    3d6a:	78 94       	sei
    3d6c:	4e 9b       	sbis	0x09, 6	; 9
    3d6e:	fe cf       	rjmp	.-4      	; 0x3d6c <rf_tx_packet+0x292>
    3d70:	4e 99       	sbic	0x09, 6	; 9
    3d72:	fe cf       	rjmp	.-4      	; 0x3d70 <rf_tx_packet+0x296>
    3d74:	80 91 22 1b 	lds	r24, 0x1B22
    3d78:	88 23       	and	r24, r24
    3d7a:	91 f0       	breq	.+36     	; 0x3da0 <rf_tx_packet+0x2c6>
    3d7c:	84 ea       	ldi	r24, 0xA4	; 164
    3d7e:	92 e0       	ldi	r25, 0x02	; 2
    3d80:	0e 94 3d 28 	call	0x507a	; 0x507a <halWait>
    3d84:	31 9b       	sbis	0x06, 1	; 6
    3d86:	0e c0       	rjmp	.+28     	; 0x3da4 <rf_tx_packet+0x2ca>
    3d88:	40 98       	cbi	0x08, 0	; 8
    3d8a:	8f e7       	ldi	r24, 0x7F	; 127
    3d8c:	8e bd       	out	0x2e, r24	; 46
    3d8e:	0d b4       	in	r0, 0x2d	; 45
    3d90:	07 fe       	sbrs	r0, 7
    3d92:	fd cf       	rjmp	.-6      	; 0x3d8e <rf_tx_packet+0x2b4>
    3d94:	1e bc       	out	0x2e, r1	; 46
    3d96:	0d b4       	in	r0, 0x2d	; 45
    3d98:	07 fe       	sbrs	r0, 7
    3d9a:	fd cf       	rjmp	.-6      	; 0x3d96 <rf_tx_packet+0x2bc>
    3d9c:	8e b5       	in	r24, 0x2e	; 46
    3d9e:	40 9a       	sbi	0x08, 0	; 8
    3da0:	11 e0       	ldi	r17, 0x01	; 1
    3da2:	0f c0       	rjmp	.+30     	; 0x3dc2 <rf_tx_packet+0x2e8>
    3da4:	40 98       	cbi	0x08, 0	; 8
    3da6:	88 e0       	ldi	r24, 0x08	; 8
    3da8:	8e bd       	out	0x2e, r24	; 46
    3daa:	0d b4       	in	r0, 0x2d	; 45
    3dac:	07 fe       	sbrs	r0, 7
    3dae:	fd cf       	rjmp	.-6      	; 0x3daa <rf_tx_packet+0x2d0>
    3db0:	40 9a       	sbi	0x08, 0	; 8
    3db2:	40 98       	cbi	0x08, 0	; 8
    3db4:	88 e0       	ldi	r24, 0x08	; 8
    3db6:	8e bd       	out	0x2e, r24	; 46
    3db8:	0d b4       	in	r0, 0x2d	; 45
    3dba:	07 fe       	sbrs	r0, 7
    3dbc:	fd cf       	rjmp	.-6      	; 0x3db8 <rf_tx_packet+0x2de>
    3dbe:	40 9a       	sbi	0x08, 0	; 8
    3dc0:	10 e0       	ldi	r17, 0x00	; 0
    3dc2:	f8 94       	cli
    3dc4:	40 98       	cbi	0x08, 0	; 8
    3dc6:	86 e0       	ldi	r24, 0x06	; 6
    3dc8:	8e bd       	out	0x2e, r24	; 46
    3dca:	0d b4       	in	r0, 0x2d	; 45
    3dcc:	07 fe       	sbrs	r0, 7
    3dce:	fd cf       	rjmp	.-6      	; 0x3dca <rf_tx_packet+0x2f0>
    3dd0:	40 9a       	sbi	0x08, 0	; 8
    3dd2:	78 94       	sei
    3dd4:	80 91 19 1b 	lds	r24, 0x1B19
    3dd8:	8f 5f       	subi	r24, 0xFF	; 255
    3dda:	80 93 19 1b 	sts	0x1B19, r24
    3dde:	80 91 12 1b 	lds	r24, 0x1B12
    3de2:	90 91 13 1b 	lds	r25, 0x1B13
    3de6:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    3dea:	81 2f       	mov	r24, r17
    3dec:	99 27       	eor	r25, r25
    3dee:	17 c0       	rjmp	.+46     	; 0x3e1e <rf_tx_packet+0x344>
    3df0:	40 9a       	sbi	0x08, 0	; 8
    3df2:	81 e4       	ldi	r24, 0x41	; 65
    3df4:	98 e8       	ldi	r25, 0x88	; 136
    3df6:	9a 83       	std	Y+2, r25	; 0x02
    3df8:	89 83       	std	Y+1, r24	; 0x01
    3dfa:	80 91 22 1b 	lds	r24, 0x1B22
    3dfe:	88 23       	and	r24, r24
    3e00:	09 f0       	breq	.+2      	; 0x3e04 <rf_tx_packet+0x32a>
    3e02:	c9 ce       	rjmp	.-622    	; 0x3b96 <rf_tx_packet+0xbc>
    3e04:	cc ce       	rjmp	.-616    	; 0x3b9e <rf_tx_packet+0xc4>
    3e06:	40 9a       	sbi	0x08, 0	; 8
    3e08:	40 98       	cbi	0x08, 0	; 8
    3e0a:	8e e3       	ldi	r24, 0x3E	; 62
    3e0c:	8e bd       	out	0x2e, r24	; 46
    3e0e:	f2 ce       	rjmp	.-540    	; 0x3bf4 <rf_tx_packet+0x11a>
    3e10:	40 9a       	sbi	0x08, 0	; 8
    3e12:	f8 01       	movw	r30, r16
    3e14:	85 81       	ldd	r24, Z+5	; 0x05
    3e16:	88 23       	and	r24, r24
    3e18:	09 f0       	breq	.+2      	; 0x3e1c <rf_tx_packet+0x342>
    3e1a:	69 cf       	rjmp	.-302    	; 0x3cee <rf_tx_packet+0x214>
    3e1c:	9f cf       	rjmp	.-194    	; 0x3d5c <rf_tx_packet+0x282>
    3e1e:	22 96       	adiw	r28, 0x02	; 2
    3e20:	0f b6       	in	r0, 0x3f	; 63
    3e22:	f8 94       	cli
    3e24:	de bf       	out	0x3e, r29	; 62
    3e26:	0f be       	out	0x3f, r0	; 63
    3e28:	cd bf       	out	0x3d, r28	; 61
    3e2a:	df 91       	pop	r29
    3e2c:	cf 91       	pop	r28
    3e2e:	1f 91       	pop	r17
    3e30:	0f 91       	pop	r16
    3e32:	ff 90       	pop	r15
    3e34:	ef 90       	pop	r14
    3e36:	08 95       	ret

00003e38 <rf_tx_tdma_packet>:
    3e38:	8f 92       	push	r8
    3e3a:	9f 92       	push	r9
    3e3c:	bf 92       	push	r11
    3e3e:	cf 92       	push	r12
    3e40:	df 92       	push	r13
    3e42:	ef 92       	push	r14
    3e44:	ff 92       	push	r15
    3e46:	0f 93       	push	r16
    3e48:	1f 93       	push	r17
    3e4a:	cf 93       	push	r28
    3e4c:	df 93       	push	r29
    3e4e:	cd b7       	in	r28, 0x3d	; 61
    3e50:	de b7       	in	r29, 0x3e	; 62
    3e52:	22 97       	sbiw	r28, 0x02	; 2
    3e54:	0f b6       	in	r0, 0x3f	; 63
    3e56:	f8 94       	cli
    3e58:	de bf       	out	0x3e, r29	; 62
    3e5a:	0f be       	out	0x3f, r0	; 63
    3e5c:	cd bf       	out	0x3d, r28	; 61
    3e5e:	8c 01       	movw	r16, r24
    3e60:	6b 01       	movw	r12, r22
    3e62:	7a 01       	movw	r14, r20
    3e64:	49 01       	movw	r8, r18
    3e66:	80 91 12 1b 	lds	r24, 0x1B12
    3e6a:	90 91 13 1b 	lds	r25, 0x1B13
    3e6e:	0e 94 53 2f 	call	0x5ea6	; 0x5ea6 <nrk_sem_pend>
    3e72:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    3e76:	40 98       	cbi	0x08, 0	; 8
    3e78:	88 e0       	ldi	r24, 0x08	; 8
    3e7a:	8e bd       	out	0x2e, r24	; 46
    3e7c:	0d b4       	in	r0, 0x2d	; 45
    3e7e:	07 fe       	sbrs	r0, 7
    3e80:	fd cf       	rjmp	.-6      	; 0x3e7c <rf_tx_tdma_packet+0x44>
    3e82:	40 9a       	sbi	0x08, 0	; 8
    3e84:	40 98       	cbi	0x08, 0	; 8
    3e86:	88 e0       	ldi	r24, 0x08	; 8
    3e88:	8e bd       	out	0x2e, r24	; 46
    3e8a:	0d b4       	in	r0, 0x2d	; 45
    3e8c:	07 fe       	sbrs	r0, 7
    3e8e:	fd cf       	rjmp	.-6      	; 0x3e8a <rf_tx_tdma_packet+0x52>
    3e90:	40 9a       	sbi	0x08, 0	; 8
    3e92:	67 99       	sbic	0x0c, 7	; 12
    3e94:	fe cf       	rjmp	.-4      	; 0x3e92 <rf_tx_tdma_packet+0x5a>
    3e96:	4e 99       	sbic	0x09, 6	; 9
    3e98:	fc cf       	rjmp	.-8      	; 0x3e92 <rf_tx_tdma_packet+0x5a>
    3e9a:	f8 94       	cli
    3e9c:	40 98       	cbi	0x08, 0	; 8
    3e9e:	89 e0       	ldi	r24, 0x09	; 9
    3ea0:	8e bd       	out	0x2e, r24	; 46
    3ea2:	0d b4       	in	r0, 0x2d	; 45
    3ea4:	07 fe       	sbrs	r0, 7
    3ea6:	fd cf       	rjmp	.-6      	; 0x3ea2 <rf_tx_tdma_packet+0x6a>
    3ea8:	40 9a       	sbi	0x08, 0	; 8
    3eaa:	40 98       	cbi	0x08, 0	; 8
    3eac:	89 e0       	ldi	r24, 0x09	; 9
    3eae:	8e bd       	out	0x2e, r24	; 46
    3eb0:	0d b4       	in	r0, 0x2d	; 45
    3eb2:	07 fe       	sbrs	r0, 7
    3eb4:	fd cf       	rjmp	.-6      	; 0x3eb0 <rf_tx_tdma_packet+0x78>
    3eb6:	40 9a       	sbi	0x08, 0	; 8
    3eb8:	f8 01       	movw	r30, r16
    3eba:	62 81       	ldd	r22, Z+2	; 0x02
    3ebc:	46 2f       	mov	r20, r22
    3ebe:	55 27       	eor	r21, r21
    3ec0:	47 fd       	sbrc	r20, 7
    3ec2:	50 95       	com	r21
    3ec4:	bb 24       	eor	r11, r11
    3ec6:	20 e0       	ldi	r18, 0x00	; 0
    3ec8:	30 e0       	ldi	r19, 0x00	; 0
    3eca:	07 c0       	rjmp	.+14     	; 0x3eda <rf_tx_tdma_packet+0xa2>
    3ecc:	f8 01       	movw	r30, r16
    3ece:	83 81       	ldd	r24, Z+3	; 0x03
    3ed0:	94 81       	ldd	r25, Z+4	; 0x04
    3ed2:	a8 0f       	add	r26, r24
    3ed4:	b9 1f       	adc	r27, r25
    3ed6:	8c 91       	ld	r24, X
    3ed8:	b8 0e       	add	r11, r24
    3eda:	82 2f       	mov	r24, r18
    3edc:	2f 5f       	subi	r18, 0xFF	; 255
    3ede:	3f 4f       	sbci	r19, 0xFF	; 255
    3ee0:	a8 2f       	mov	r26, r24
    3ee2:	bb 27       	eor	r27, r27
    3ee4:	a4 17       	cp	r26, r20
    3ee6:	b5 07       	cpc	r27, r21
    3ee8:	8c f3       	brlt	.-30     	; 0x3ecc <rf_tx_tdma_packet+0x94>
    3eea:	96 2f       	mov	r25, r22
    3eec:	94 5f       	subi	r25, 0xF4	; 244
    3eee:	40 98       	cbi	0x08, 0	; 8
    3ef0:	8e e3       	ldi	r24, 0x3E	; 62
    3ef2:	8e bd       	out	0x2e, r24	; 46
    3ef4:	0d b4       	in	r0, 0x2d	; 45
    3ef6:	07 fc       	sbrc	r0, 7
    3ef8:	05 c0       	rjmp	.+10     	; 0x3f04 <rf_tx_tdma_packet+0xcc>
    3efa:	fc cf       	rjmp	.-8      	; 0x3ef4 <rf_tx_tdma_packet+0xbc>
    3efc:	0d b4       	in	r0, 0x2d	; 45
    3efe:	07 fc       	sbrc	r0, 7
    3f00:	14 c1       	rjmp	.+552    	; 0x412a <rf_tx_tdma_packet+0x2f2>
    3f02:	fc cf       	rjmp	.-8      	; 0x3efc <rf_tx_tdma_packet+0xc4>
    3f04:	9e bd       	out	0x2e, r25	; 46
    3f06:	fa cf       	rjmp	.-12     	; 0x3efc <rf_tx_tdma_packet+0xc4>
    3f08:	81 e6       	ldi	r24, 0x61	; 97
    3f0a:	98 e8       	ldi	r25, 0x88	; 136
    3f0c:	9a 83       	std	Y+2, r25	; 0x02
    3f0e:	89 83       	std	Y+1, r24	; 0x01
    3f10:	40 98       	cbi	0x08, 0	; 8
    3f12:	8e e3       	ldi	r24, 0x3E	; 62
    3f14:	8e bd       	out	0x2e, r24	; 46
    3f16:	0d b4       	in	r0, 0x2d	; 45
    3f18:	07 fe       	sbrs	r0, 7
    3f1a:	fd cf       	rjmp	.-6      	; 0x3f16 <rf_tx_tdma_packet+0xde>
    3f1c:	fe 01       	movw	r30, r28
    3f1e:	31 96       	adiw	r30, 0x01	; 1
    3f20:	9e 01       	movw	r18, r28
    3f22:	2d 5f       	subi	r18, 0xFD	; 253
    3f24:	3f 4f       	sbci	r19, 0xFF	; 255
    3f26:	80 81       	ld	r24, Z
    3f28:	8e bd       	out	0x2e, r24	; 46
    3f2a:	0d b4       	in	r0, 0x2d	; 45
    3f2c:	07 fe       	sbrs	r0, 7
    3f2e:	fd cf       	rjmp	.-6      	; 0x3f2a <rf_tx_tdma_packet+0xf2>
    3f30:	31 96       	adiw	r30, 0x01	; 1
    3f32:	e2 17       	cp	r30, r18
    3f34:	f3 07       	cpc	r31, r19
    3f36:	b9 f7       	brne	.-18     	; 0x3f26 <rf_tx_tdma_packet+0xee>
    3f38:	40 9a       	sbi	0x08, 0	; 8
    3f3a:	40 98       	cbi	0x08, 0	; 8
    3f3c:	8e e3       	ldi	r24, 0x3E	; 62
    3f3e:	8e bd       	out	0x2e, r24	; 46
    3f40:	0d b4       	in	r0, 0x2d	; 45
    3f42:	07 fc       	sbrc	r0, 7
    3f44:	05 c0       	rjmp	.+10     	; 0x3f50 <rf_tx_tdma_packet+0x118>
    3f46:	fc cf       	rjmp	.-8      	; 0x3f40 <rf_tx_tdma_packet+0x108>
    3f48:	0d b4       	in	r0, 0x2d	; 45
    3f4a:	07 fc       	sbrc	r0, 7
    3f4c:	f7 c0       	rjmp	.+494    	; 0x413c <rf_tx_tdma_packet+0x304>
    3f4e:	fc cf       	rjmp	.-8      	; 0x3f48 <rf_tx_tdma_packet+0x110>
    3f50:	80 91 19 1b 	lds	r24, 0x1B19
    3f54:	8e bd       	out	0x2e, r24	; 46
    3f56:	f8 cf       	rjmp	.-16     	; 0x3f48 <rf_tx_tdma_packet+0x110>
    3f58:	0d b4       	in	r0, 0x2d	; 45
    3f5a:	07 fe       	sbrs	r0, 7
    3f5c:	fd cf       	rjmp	.-6      	; 0x3f58 <rf_tx_tdma_packet+0x120>
    3f5e:	20 e0       	ldi	r18, 0x00	; 0
    3f60:	30 e0       	ldi	r19, 0x00	; 0
    3f62:	f9 01       	movw	r30, r18
    3f64:	e5 5e       	subi	r30, 0xE5	; 229
    3f66:	f4 4e       	sbci	r31, 0xE4	; 228
    3f68:	80 81       	ld	r24, Z
    3f6a:	8e bd       	out	0x2e, r24	; 46
    3f6c:	0d b4       	in	r0, 0x2d	; 45
    3f6e:	07 fe       	sbrs	r0, 7
    3f70:	fd cf       	rjmp	.-6      	; 0x3f6c <rf_tx_tdma_packet+0x134>
    3f72:	2f 5f       	subi	r18, 0xFF	; 255
    3f74:	3f 4f       	sbci	r19, 0xFF	; 255
    3f76:	22 30       	cpi	r18, 0x02	; 2
    3f78:	31 05       	cpc	r19, r1
    3f7a:	99 f7       	brne	.-26     	; 0x3f62 <rf_tx_tdma_packet+0x12a>
    3f7c:	40 9a       	sbi	0x08, 0	; 8
    3f7e:	40 98       	cbi	0x08, 0	; 8
    3f80:	8e e3       	ldi	r24, 0x3E	; 62
    3f82:	8e bd       	out	0x2e, r24	; 46
    3f84:	0d b4       	in	r0, 0x2d	; 45
    3f86:	07 fe       	sbrs	r0, 7
    3f88:	fd cf       	rjmp	.-6      	; 0x3f84 <rf_tx_tdma_packet+0x14c>
    3f8a:	20 e0       	ldi	r18, 0x00	; 0
    3f8c:	30 e0       	ldi	r19, 0x00	; 0
    3f8e:	f8 01       	movw	r30, r16
    3f90:	e2 0f       	add	r30, r18
    3f92:	f3 1f       	adc	r31, r19
    3f94:	80 81       	ld	r24, Z
    3f96:	8e bd       	out	0x2e, r24	; 46
    3f98:	0d b4       	in	r0, 0x2d	; 45
    3f9a:	07 fe       	sbrs	r0, 7
    3f9c:	fd cf       	rjmp	.-6      	; 0x3f98 <rf_tx_tdma_packet+0x160>
    3f9e:	2f 5f       	subi	r18, 0xFF	; 255
    3fa0:	3f 4f       	sbci	r19, 0xFF	; 255
    3fa2:	22 30       	cpi	r18, 0x02	; 2
    3fa4:	31 05       	cpc	r19, r1
    3fa6:	99 f7       	brne	.-26     	; 0x3f8e <rf_tx_tdma_packet+0x156>
    3fa8:	40 9a       	sbi	0x08, 0	; 8
    3faa:	40 98       	cbi	0x08, 0	; 8
    3fac:	8e e3       	ldi	r24, 0x3E	; 62
    3fae:	8e bd       	out	0x2e, r24	; 46
    3fb0:	0d b4       	in	r0, 0x2d	; 45
    3fb2:	07 fe       	sbrs	r0, 7
    3fb4:	fd cf       	rjmp	.-6      	; 0x3fb0 <rf_tx_tdma_packet+0x178>
    3fb6:	20 e0       	ldi	r18, 0x00	; 0
    3fb8:	30 e0       	ldi	r19, 0x00	; 0
    3fba:	f9 01       	movw	r30, r18
    3fbc:	e3 5e       	subi	r30, 0xE3	; 227
    3fbe:	f4 4e       	sbci	r31, 0xE4	; 228
    3fc0:	80 81       	ld	r24, Z
    3fc2:	8e bd       	out	0x2e, r24	; 46
    3fc4:	0d b4       	in	r0, 0x2d	; 45
    3fc6:	07 fe       	sbrs	r0, 7
    3fc8:	fd cf       	rjmp	.-6      	; 0x3fc4 <rf_tx_tdma_packet+0x18c>
    3fca:	2f 5f       	subi	r18, 0xFF	; 255
    3fcc:	3f 4f       	sbci	r19, 0xFF	; 255
    3fce:	22 30       	cpi	r18, 0x02	; 2
    3fd0:	31 05       	cpc	r19, r1
    3fd2:	99 f7       	brne	.-26     	; 0x3fba <rf_tx_tdma_packet+0x182>
    3fd4:	40 9a       	sbi	0x08, 0	; 8
    3fd6:	b7 01       	movw	r22, r14
    3fd8:	c6 01       	movw	r24, r12
    3fda:	0e 94 77 3a 	call	0x74ee	; 0x74ee <nrk_high_speed_timer_wait>
    3fde:	f8 01       	movw	r30, r16
    3fe0:	85 81       	ldd	r24, Z+5	; 0x05
    3fe2:	88 23       	and	r24, r24
    3fe4:	79 f1       	breq	.+94     	; 0x4044 <rf_tx_tdma_packet+0x20c>
    3fe6:	80 91 1f 1b 	lds	r24, 0x1B1F
    3fea:	88 23       	and	r24, r24
    3fec:	39 f4       	brne	.+14     	; 0x3ffc <rf_tx_tdma_packet+0x1c4>
    3fee:	40 98       	cbi	0x08, 0	; 8
    3ff0:	83 e0       	ldi	r24, 0x03	; 3
    3ff2:	8e bd       	out	0x2e, r24	; 46
    3ff4:	0d b4       	in	r0, 0x2d	; 45
    3ff6:	07 fe       	sbrs	r0, 7
    3ff8:	fd cf       	rjmp	.-6      	; 0x3ff4 <rf_tx_tdma_packet+0x1bc>
    3ffa:	40 9a       	sbi	0x08, 0	; 8
    3ffc:	ee 24       	eor	r14, r14
    3ffe:	40 98       	cbi	0x08, 0	; 8
    4000:	85 e0       	ldi	r24, 0x05	; 5
    4002:	8e bd       	out	0x2e, r24	; 46
    4004:	0d b4       	in	r0, 0x2d	; 45
    4006:	07 fe       	sbrs	r0, 7
    4008:	fd cf       	rjmp	.-6      	; 0x4004 <rf_tx_tdma_packet+0x1cc>
    400a:	40 9a       	sbi	0x08, 0	; 8
    400c:	40 98       	cbi	0x08, 0	; 8
    400e:	1e bc       	out	0x2e, r1	; 46
    4010:	0d b4       	in	r0, 0x2d	; 45
    4012:	07 fe       	sbrs	r0, 7
    4014:	fd cf       	rjmp	.-6      	; 0x4010 <rf_tx_tdma_packet+0x1d8>
    4016:	fe b4       	in	r15, 0x2e	; 46
    4018:	40 9a       	sbi	0x08, 0	; 8
    401a:	e3 94       	inc	r14
    401c:	f5 e6       	ldi	r31, 0x65	; 101
    401e:	ef 16       	cp	r14, r31
    4020:	51 f4       	brne	.+20     	; 0x4036 <rf_tx_tdma_packet+0x1fe>
    4022:	78 94       	sei
    4024:	80 91 12 1b 	lds	r24, 0x1B12
    4028:	90 91 13 1b 	lds	r25, 0x1B13
    402c:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    4030:	80 e0       	ldi	r24, 0x00	; 0
    4032:	90 e0       	ldi	r25, 0x00	; 0
    4034:	8a c0       	rjmp	.+276    	; 0x414a <rf_tx_tdma_packet+0x312>
    4036:	84 e6       	ldi	r24, 0x64	; 100
    4038:	90 e0       	ldi	r25, 0x00	; 0
    403a:	0e 94 3d 28 	call	0x507a	; 0x507a <halWait>
    403e:	f3 fc       	sbrc	r15, 3
    4040:	08 c0       	rjmp	.+16     	; 0x4052 <rf_tx_tdma_packet+0x21a>
    4042:	dd cf       	rjmp	.-70     	; 0x3ffe <rf_tx_tdma_packet+0x1c6>
    4044:	40 98       	cbi	0x08, 0	; 8
    4046:	84 e0       	ldi	r24, 0x04	; 4
    4048:	8e bd       	out	0x2e, r24	; 46
    404a:	0d b4       	in	r0, 0x2d	; 45
    404c:	07 fe       	sbrs	r0, 7
    404e:	fd cf       	rjmp	.-6      	; 0x404a <rf_tx_tdma_packet+0x212>
    4050:	40 9a       	sbi	0x08, 0	; 8
    4052:	40 98       	cbi	0x08, 0	; 8
    4054:	8e e3       	ldi	r24, 0x3E	; 62
    4056:	8e bd       	out	0x2e, r24	; 46
    4058:	0d b4       	in	r0, 0x2d	; 45
    405a:	07 fe       	sbrs	r0, 7
    405c:	fd cf       	rjmp	.-6      	; 0x4058 <rf_tx_tdma_packet+0x220>
    405e:	f8 01       	movw	r30, r16
    4060:	82 81       	ldd	r24, Z+2	; 0x02
    4062:	48 2f       	mov	r20, r24
    4064:	55 27       	eor	r21, r21
    4066:	47 fd       	sbrc	r20, 7
    4068:	50 95       	com	r21
    406a:	20 e0       	ldi	r18, 0x00	; 0
    406c:	30 e0       	ldi	r19, 0x00	; 0
    406e:	0c c0       	rjmp	.+24     	; 0x4088 <rf_tx_tdma_packet+0x250>
    4070:	f8 01       	movw	r30, r16
    4072:	83 81       	ldd	r24, Z+3	; 0x03
    4074:	94 81       	ldd	r25, Z+4	; 0x04
    4076:	a8 0f       	add	r26, r24
    4078:	b9 1f       	adc	r27, r25
    407a:	8c 91       	ld	r24, X
    407c:	8e bd       	out	0x2e, r24	; 46
    407e:	0d b4       	in	r0, 0x2d	; 45
    4080:	07 fe       	sbrs	r0, 7
    4082:	fd cf       	rjmp	.-6      	; 0x407e <rf_tx_tdma_packet+0x246>
    4084:	2f 5f       	subi	r18, 0xFF	; 255
    4086:	3f 4f       	sbci	r19, 0xFF	; 255
    4088:	a2 2f       	mov	r26, r18
    408a:	bb 27       	eor	r27, r27
    408c:	a4 17       	cp	r26, r20
    408e:	b5 07       	cpc	r27, r21
    4090:	7c f3       	brlt	.-34     	; 0x4070 <rf_tx_tdma_packet+0x238>
    4092:	40 9a       	sbi	0x08, 0	; 8
    4094:	40 98       	cbi	0x08, 0	; 8
    4096:	8e e3       	ldi	r24, 0x3E	; 62
    4098:	8e bd       	out	0x2e, r24	; 46
    409a:	0d b4       	in	r0, 0x2d	; 45
    409c:	07 fc       	sbrc	r0, 7
    409e:	05 c0       	rjmp	.+10     	; 0x40aa <rf_tx_tdma_packet+0x272>
    40a0:	fc cf       	rjmp	.-8      	; 0x409a <rf_tx_tdma_packet+0x262>
    40a2:	0d b4       	in	r0, 0x2d	; 45
    40a4:	07 fc       	sbrc	r0, 7
    40a6:	4f c0       	rjmp	.+158    	; 0x4146 <rf_tx_tdma_packet+0x30e>
    40a8:	fc cf       	rjmp	.-8      	; 0x40a2 <rf_tx_tdma_packet+0x26a>
    40aa:	be bc       	out	0x2e, r11	; 46
    40ac:	fa cf       	rjmp	.-12     	; 0x40a2 <rf_tx_tdma_packet+0x26a>
    40ae:	4e 9b       	sbis	0x09, 6	; 9
    40b0:	fe cf       	rjmp	.-4      	; 0x40ae <rf_tx_tdma_packet+0x276>
    40b2:	80 91 84 00 	lds	r24, 0x0084
    40b6:	90 91 85 00 	lds	r25, 0x0085
    40ba:	f4 01       	movw	r30, r8
    40bc:	91 83       	std	Z+1, r25	; 0x01
    40be:	80 83       	st	Z, r24
    40c0:	f8 94       	cli
    40c2:	4e 99       	sbic	0x09, 6	; 9
    40c4:	fe cf       	rjmp	.-4      	; 0x40c2 <rf_tx_tdma_packet+0x28a>
    40c6:	40 98       	cbi	0x08, 0	; 8
    40c8:	88 e0       	ldi	r24, 0x08	; 8
    40ca:	8e bd       	out	0x2e, r24	; 46
    40cc:	0d b4       	in	r0, 0x2d	; 45
    40ce:	07 fe       	sbrs	r0, 7
    40d0:	fd cf       	rjmp	.-6      	; 0x40cc <rf_tx_tdma_packet+0x294>
    40d2:	40 9a       	sbi	0x08, 0	; 8
    40d4:	40 98       	cbi	0x08, 0	; 8
    40d6:	88 e0       	ldi	r24, 0x08	; 8
    40d8:	8e bd       	out	0x2e, r24	; 46
    40da:	0d b4       	in	r0, 0x2d	; 45
    40dc:	07 fe       	sbrs	r0, 7
    40de:	fd cf       	rjmp	.-6      	; 0x40da <rf_tx_tdma_packet+0x2a2>
    40e0:	40 9a       	sbi	0x08, 0	; 8
    40e2:	40 98       	cbi	0x08, 0	; 8
    40e4:	89 e0       	ldi	r24, 0x09	; 9
    40e6:	8e bd       	out	0x2e, r24	; 46
    40e8:	0d b4       	in	r0, 0x2d	; 45
    40ea:	07 fe       	sbrs	r0, 7
    40ec:	fd cf       	rjmp	.-6      	; 0x40e8 <rf_tx_tdma_packet+0x2b0>
    40ee:	40 9a       	sbi	0x08, 0	; 8
    40f0:	40 98       	cbi	0x08, 0	; 8
    40f2:	89 e0       	ldi	r24, 0x09	; 9
    40f4:	8e bd       	out	0x2e, r24	; 46
    40f6:	0d b4       	in	r0, 0x2d	; 45
    40f8:	07 fe       	sbrs	r0, 7
    40fa:	fd cf       	rjmp	.-6      	; 0x40f6 <rf_tx_tdma_packet+0x2be>
    40fc:	40 9a       	sbi	0x08, 0	; 8
    40fe:	40 98       	cbi	0x08, 0	; 8
    4100:	86 e0       	ldi	r24, 0x06	; 6
    4102:	8e bd       	out	0x2e, r24	; 46
    4104:	0d b4       	in	r0, 0x2d	; 45
    4106:	07 fe       	sbrs	r0, 7
    4108:	fd cf       	rjmp	.-6      	; 0x4104 <rf_tx_tdma_packet+0x2cc>
    410a:	40 9a       	sbi	0x08, 0	; 8
    410c:	78 94       	sei
    410e:	80 91 19 1b 	lds	r24, 0x1B19
    4112:	8f 5f       	subi	r24, 0xFF	; 255
    4114:	80 93 19 1b 	sts	0x1B19, r24
    4118:	80 91 12 1b 	lds	r24, 0x1B12
    411c:	90 91 13 1b 	lds	r25, 0x1B13
    4120:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    4124:	81 e0       	ldi	r24, 0x01	; 1
    4126:	90 e0       	ldi	r25, 0x00	; 0
    4128:	10 c0       	rjmp	.+32     	; 0x414a <rf_tx_tdma_packet+0x312>
    412a:	40 9a       	sbi	0x08, 0	; 8
    412c:	f8 01       	movw	r30, r16
    412e:	86 81       	ldd	r24, Z+6	; 0x06
    4130:	88 23       	and	r24, r24
    4132:	09 f0       	breq	.+2      	; 0x4136 <rf_tx_tdma_packet+0x2fe>
    4134:	e9 ce       	rjmp	.-558    	; 0x3f08 <rf_tx_tdma_packet+0xd0>
    4136:	81 e4       	ldi	r24, 0x41	; 65
    4138:	98 e8       	ldi	r25, 0x88	; 136
    413a:	e8 ce       	rjmp	.-560    	; 0x3f0c <rf_tx_tdma_packet+0xd4>
    413c:	40 9a       	sbi	0x08, 0	; 8
    413e:	40 98       	cbi	0x08, 0	; 8
    4140:	8e e3       	ldi	r24, 0x3E	; 62
    4142:	8e bd       	out	0x2e, r24	; 46
    4144:	09 cf       	rjmp	.-494    	; 0x3f58 <rf_tx_tdma_packet+0x120>
    4146:	40 9a       	sbi	0x08, 0	; 8
    4148:	b2 cf       	rjmp	.-156    	; 0x40ae <rf_tx_tdma_packet+0x276>
    414a:	22 96       	adiw	r28, 0x02	; 2
    414c:	0f b6       	in	r0, 0x3f	; 63
    414e:	f8 94       	cli
    4150:	de bf       	out	0x3e, r29	; 62
    4152:	0f be       	out	0x3f, r0	; 63
    4154:	cd bf       	out	0x3d, r28	; 61
    4156:	df 91       	pop	r29
    4158:	cf 91       	pop	r28
    415a:	1f 91       	pop	r17
    415c:	0f 91       	pop	r16
    415e:	ff 90       	pop	r15
    4160:	ef 90       	pop	r14
    4162:	df 90       	pop	r13
    4164:	cf 90       	pop	r12
    4166:	bf 90       	pop	r11
    4168:	9f 90       	pop	r9
    416a:	8f 90       	pop	r8
    416c:	08 95       	ret

0000416e <rf_addr_decode_set_my_mac>:
    416e:	cf 93       	push	r28
    4170:	df 93       	push	r29
    4172:	cd b7       	in	r28, 0x3d	; 61
    4174:	de b7       	in	r29, 0x3e	; 62
    4176:	22 97       	sbiw	r28, 0x02	; 2
    4178:	0f b6       	in	r0, 0x3f	; 63
    417a:	f8 94       	cli
    417c:	de bf       	out	0x3e, r29	; 62
    417e:	0f be       	out	0x3f, r0	; 63
    4180:	cd bf       	out	0x3d, r28	; 61
    4182:	9a 83       	std	Y+2, r25	; 0x02
    4184:	89 83       	std	Y+1, r24	; 0x01
    4186:	90 93 1e 1b 	sts	0x1B1E, r25
    418a:	80 93 1d 1b 	sts	0x1B1D, r24
    418e:	84 ef       	ldi	r24, 0xF4	; 244
    4190:	91 e0       	ldi	r25, 0x01	; 1
    4192:	0e 94 2c 39 	call	0x7258	; 0x7258 <nrk_spin_wait_us>
    4196:	40 98       	cbi	0x08, 0	; 8
    4198:	8a ee       	ldi	r24, 0xEA	; 234
    419a:	8e bd       	out	0x2e, r24	; 46
    419c:	0d b4       	in	r0, 0x2d	; 45
    419e:	07 fe       	sbrs	r0, 7
    41a0:	fd cf       	rjmp	.-6      	; 0x419c <rf_addr_decode_set_my_mac+0x2e>
    41a2:	80 e8       	ldi	r24, 0x80	; 128
    41a4:	8e bd       	out	0x2e, r24	; 46
    41a6:	0d b4       	in	r0, 0x2d	; 45
    41a8:	07 fe       	sbrs	r0, 7
    41aa:	fd cf       	rjmp	.-6      	; 0x41a6 <rf_addr_decode_set_my_mac+0x38>
    41ac:	fe 01       	movw	r30, r28
    41ae:	31 96       	adiw	r30, 0x01	; 1
    41b0:	9e 01       	movw	r18, r28
    41b2:	2d 5f       	subi	r18, 0xFD	; 253
    41b4:	3f 4f       	sbci	r19, 0xFF	; 255
    41b6:	80 81       	ld	r24, Z
    41b8:	8e bd       	out	0x2e, r24	; 46
    41ba:	0d b4       	in	r0, 0x2d	; 45
    41bc:	07 fe       	sbrs	r0, 7
    41be:	fd cf       	rjmp	.-6      	; 0x41ba <rf_addr_decode_set_my_mac+0x4c>
    41c0:	31 96       	adiw	r30, 0x01	; 1
    41c2:	e2 17       	cp	r30, r18
    41c4:	f3 07       	cpc	r31, r19
    41c6:	b9 f7       	brne	.-18     	; 0x41b6 <rf_addr_decode_set_my_mac+0x48>
    41c8:	40 9a       	sbi	0x08, 0	; 8
    41ca:	84 ef       	ldi	r24, 0xF4	; 244
    41cc:	91 e0       	ldi	r25, 0x01	; 1
    41ce:	0e 94 2c 39 	call	0x7258	; 0x7258 <nrk_spin_wait_us>
    41d2:	22 96       	adiw	r28, 0x02	; 2
    41d4:	0f b6       	in	r0, 0x3f	; 63
    41d6:	f8 94       	cli
    41d8:	de bf       	out	0x3e, r29	; 62
    41da:	0f be       	out	0x3f, r0	; 63
    41dc:	cd bf       	out	0x3d, r28	; 61
    41de:	df 91       	pop	r29
    41e0:	cf 91       	pop	r28
    41e2:	08 95       	ret

000041e4 <rf_security_set_key>:
    41e4:	6f 92       	push	r6
    41e6:	7f 92       	push	r7
    41e8:	8f 92       	push	r8
    41ea:	9f 92       	push	r9
    41ec:	af 92       	push	r10
    41ee:	bf 92       	push	r11
    41f0:	cf 92       	push	r12
    41f2:	df 92       	push	r13
    41f4:	ef 92       	push	r14
    41f6:	ff 92       	push	r15
    41f8:	0f 93       	push	r16
    41fa:	1f 93       	push	r17
    41fc:	cf 93       	push	r28
    41fe:	df 93       	push	r29
    4200:	cd b7       	in	r28, 0x3d	; 61
    4202:	de b7       	in	r29, 0x3e	; 62
    4204:	22 97       	sbiw	r28, 0x02	; 2
    4206:	0f b6       	in	r0, 0x3f	; 63
    4208:	f8 94       	cli
    420a:	de bf       	out	0x3e, r29	; 62
    420c:	0f be       	out	0x3f, r0	; 63
    420e:	cd bf       	out	0x3d, r28	; 61
    4210:	8c 01       	movw	r16, r24
    4212:	84 e6       	ldi	r24, 0x64	; 100
    4214:	90 e0       	ldi	r25, 0x00	; 0
    4216:	0e 94 2c 39 	call	0x7258	; 0x7258 <nrk_spin_wait_us>
    421a:	78 01       	movw	r14, r16
    421c:	c1 2c       	mov	r12, r1
    421e:	b1 e0       	ldi	r27, 0x01	; 1
    4220:	db 2e       	mov	r13, r27
    4222:	3e 01       	movw	r6, r28
    4224:	08 94       	sec
    4226:	61 1c       	adc	r6, r1
    4228:	71 1c       	adc	r7, r1
    422a:	a3 e0       	ldi	r26, 0x03	; 3
    422c:	8a 2e       	mov	r8, r26
    422e:	91 2c       	mov	r9, r1
    4230:	8c 0e       	add	r8, r28
    4232:	9d 1e       	adc	r9, r29
    4234:	f7 01       	movw	r30, r14
    4236:	80 81       	ld	r24, Z
    4238:	21 81       	ldd	r18, Z+1	; 0x01
    423a:	33 27       	eor	r19, r19
    423c:	99 27       	eor	r25, r25
    423e:	98 2f       	mov	r25, r24
    4240:	88 27       	eor	r24, r24
    4242:	28 2b       	or	r18, r24
    4244:	39 2b       	or	r19, r25
    4246:	3a 83       	std	Y+2, r19	; 0x02
    4248:	29 83       	std	Y+1, r18	; 0x01
    424a:	84 e6       	ldi	r24, 0x64	; 100
    424c:	90 e0       	ldi	r25, 0x00	; 0
    424e:	0e 94 2c 39 	call	0x7258	; 0x7258 <nrk_spin_wait_us>
    4252:	40 98       	cbi	0x08, 0	; 8
    4254:	8c 2d       	mov	r24, r12
    4256:	80 68       	ori	r24, 0x80	; 128
    4258:	8e bd       	out	0x2e, r24	; 46
    425a:	0d b4       	in	r0, 0x2d	; 45
    425c:	07 fe       	sbrs	r0, 7
    425e:	fd cf       	rjmp	.-6      	; 0x425a <rf_security_set_key+0x76>
    4260:	c6 01       	movw	r24, r12
    4262:	95 95       	asr	r25
    4264:	87 95       	ror	r24
    4266:	80 7c       	andi	r24, 0xC0	; 192
    4268:	8e bd       	out	0x2e, r24	; 46
    426a:	0d b4       	in	r0, 0x2d	; 45
    426c:	07 fe       	sbrs	r0, 7
    426e:	fd cf       	rjmp	.-6      	; 0x426a <rf_security_set_key+0x86>
    4270:	83 01       	movw	r16, r6
    4272:	53 01       	movw	r10, r6
    4274:	f5 01       	movw	r30, r10
    4276:	80 81       	ld	r24, Z
    4278:	8e bd       	out	0x2e, r24	; 46
    427a:	0d b4       	in	r0, 0x2d	; 45
    427c:	07 fe       	sbrs	r0, 7
    427e:	fd cf       	rjmp	.-6      	; 0x427a <rf_security_set_key+0x96>
    4280:	08 94       	sec
    4282:	a1 1c       	adc	r10, r1
    4284:	b1 1c       	adc	r11, r1
    4286:	a8 14       	cp	r10, r8
    4288:	b9 04       	cpc	r11, r9
    428a:	a1 f7       	brne	.-24     	; 0x4274 <rf_security_set_key+0x90>
    428c:	40 9a       	sbi	0x08, 0	; 8
    428e:	08 94       	sec
    4290:	e1 1c       	adc	r14, r1
    4292:	f1 1c       	adc	r15, r1
    4294:	82 e0       	ldi	r24, 0x02	; 2
    4296:	90 e0       	ldi	r25, 0x00	; 0
    4298:	c8 0e       	add	r12, r24
    429a:	d9 1e       	adc	r13, r25
    429c:	90 e1       	ldi	r25, 0x10	; 16
    429e:	c9 16       	cp	r12, r25
    42a0:	91 e0       	ldi	r25, 0x01	; 1
    42a2:	d9 06       	cpc	r13, r25
    42a4:	39 f6       	brne	.-114    	; 0x4234 <rf_security_set_key+0x50>
    42a6:	84 e6       	ldi	r24, 0x64	; 100
    42a8:	90 e0       	ldi	r25, 0x00	; 0
    42aa:	0e 94 2c 39 	call	0x7258	; 0x7258 <nrk_spin_wait_us>
    42ae:	20 e1       	ldi	r18, 0x10	; 16
    42b0:	31 e0       	ldi	r19, 0x01	; 1
    42b2:	40 e4       	ldi	r20, 0x40	; 64
    42b4:	51 e0       	ldi	r21, 0x01	; 1
    42b6:	1a 82       	std	Y+2, r1	; 0x02
    42b8:	19 82       	std	Y+1, r1	; 0x01
    42ba:	40 98       	cbi	0x08, 0	; 8
    42bc:	84 2f       	mov	r24, r20
    42be:	80 68       	ori	r24, 0x80	; 128
    42c0:	8e bd       	out	0x2e, r24	; 46
    42c2:	0d b4       	in	r0, 0x2d	; 45
    42c4:	07 fe       	sbrs	r0, 7
    42c6:	fd cf       	rjmp	.-6      	; 0x42c2 <rf_security_set_key+0xde>
    42c8:	ca 01       	movw	r24, r20
    42ca:	95 95       	asr	r25
    42cc:	87 95       	ror	r24
    42ce:	80 7c       	andi	r24, 0xC0	; 192
    42d0:	8e bd       	out	0x2e, r24	; 46
    42d2:	0d b4       	in	r0, 0x2d	; 45
    42d4:	07 fe       	sbrs	r0, 7
    42d6:	fd cf       	rjmp	.-6      	; 0x42d2 <rf_security_set_key+0xee>
    42d8:	f8 01       	movw	r30, r16
    42da:	80 81       	ld	r24, Z
    42dc:	8e bd       	out	0x2e, r24	; 46
    42de:	0d b4       	in	r0, 0x2d	; 45
    42e0:	07 fe       	sbrs	r0, 7
    42e2:	fd cf       	rjmp	.-6      	; 0x42de <rf_security_set_key+0xfa>
    42e4:	31 96       	adiw	r30, 0x01	; 1
    42e6:	ea 15       	cp	r30, r10
    42e8:	fb 05       	cpc	r31, r11
    42ea:	b9 f7       	brne	.-18     	; 0x42da <rf_security_set_key+0xf6>
    42ec:	40 9a       	sbi	0x08, 0	; 8
    42ee:	40 98       	cbi	0x08, 0	; 8
    42f0:	82 2f       	mov	r24, r18
    42f2:	80 68       	ori	r24, 0x80	; 128
    42f4:	8e bd       	out	0x2e, r24	; 46
    42f6:	0d b4       	in	r0, 0x2d	; 45
    42f8:	07 fe       	sbrs	r0, 7
    42fa:	fd cf       	rjmp	.-6      	; 0x42f6 <rf_security_set_key+0x112>
    42fc:	c9 01       	movw	r24, r18
    42fe:	95 95       	asr	r25
    4300:	87 95       	ror	r24
    4302:	80 7c       	andi	r24, 0xC0	; 192
    4304:	8e bd       	out	0x2e, r24	; 46
    4306:	0d b4       	in	r0, 0x2d	; 45
    4308:	07 fe       	sbrs	r0, 7
    430a:	fd cf       	rjmp	.-6      	; 0x4306 <rf_security_set_key+0x122>
    430c:	f8 01       	movw	r30, r16
    430e:	80 81       	ld	r24, Z
    4310:	8e bd       	out	0x2e, r24	; 46
    4312:	0d b4       	in	r0, 0x2d	; 45
    4314:	07 fe       	sbrs	r0, 7
    4316:	fd cf       	rjmp	.-6      	; 0x4312 <rf_security_set_key+0x12e>
    4318:	31 96       	adiw	r30, 0x01	; 1
    431a:	ea 15       	cp	r30, r10
    431c:	fb 05       	cpc	r31, r11
    431e:	b9 f7       	brne	.-18     	; 0x430e <rf_security_set_key+0x12a>
    4320:	40 9a       	sbi	0x08, 0	; 8
    4322:	2e 5f       	subi	r18, 0xFE	; 254
    4324:	3f 4f       	sbci	r19, 0xFF	; 255
    4326:	4e 5f       	subi	r20, 0xFE	; 254
    4328:	5f 4f       	sbci	r21, 0xFF	; 255
    432a:	e1 e0       	ldi	r30, 0x01	; 1
    432c:	2e 31       	cpi	r18, 0x1E	; 30
    432e:	3e 07       	cpc	r19, r30
    4330:	11 f6       	brne	.-124    	; 0x42b6 <rf_security_set_key+0xd2>
    4332:	81 e0       	ldi	r24, 0x01	; 1
    4334:	90 e0       	ldi	r25, 0x00	; 0
    4336:	9a 83       	std	Y+2, r25	; 0x02
    4338:	89 83       	std	Y+1, r24	; 0x01
    433a:	40 98       	cbi	0x08, 0	; 8
    433c:	8e ec       	ldi	r24, 0xCE	; 206
    433e:	8e bd       	out	0x2e, r24	; 46
    4340:	0d b4       	in	r0, 0x2d	; 45
    4342:	07 fe       	sbrs	r0, 7
    4344:	fd cf       	rjmp	.-6      	; 0x4340 <rf_security_set_key+0x15c>
    4346:	80 e8       	ldi	r24, 0x80	; 128
    4348:	8e bd       	out	0x2e, r24	; 46
    434a:	0d b4       	in	r0, 0x2d	; 45
    434c:	07 fe       	sbrs	r0, 7
    434e:	fd cf       	rjmp	.-6      	; 0x434a <rf_security_set_key+0x166>
    4350:	f8 01       	movw	r30, r16
    4352:	80 81       	ld	r24, Z
    4354:	8e bd       	out	0x2e, r24	; 46
    4356:	0d b4       	in	r0, 0x2d	; 45
    4358:	07 fe       	sbrs	r0, 7
    435a:	fd cf       	rjmp	.-6      	; 0x4356 <rf_security_set_key+0x172>
    435c:	31 96       	adiw	r30, 0x01	; 1
    435e:	ea 15       	cp	r30, r10
    4360:	fb 05       	cpc	r31, r11
    4362:	b9 f7       	brne	.-18     	; 0x4352 <rf_security_set_key+0x16e>
    4364:	40 9a       	sbi	0x08, 0	; 8
    4366:	40 98       	cbi	0x08, 0	; 8
    4368:	8e e9       	ldi	r24, 0x9E	; 158
    436a:	8e bd       	out	0x2e, r24	; 46
    436c:	0d b4       	in	r0, 0x2d	; 45
    436e:	07 fe       	sbrs	r0, 7
    4370:	fd cf       	rjmp	.-6      	; 0x436c <rf_security_set_key+0x188>
    4372:	80 e8       	ldi	r24, 0x80	; 128
    4374:	8e bd       	out	0x2e, r24	; 46
    4376:	0d b4       	in	r0, 0x2d	; 45
    4378:	07 fe       	sbrs	r0, 7
    437a:	fd cf       	rjmp	.-6      	; 0x4376 <rf_security_set_key+0x192>
    437c:	f8 01       	movw	r30, r16
    437e:	80 81       	ld	r24, Z
    4380:	8e bd       	out	0x2e, r24	; 46
    4382:	0d b4       	in	r0, 0x2d	; 45
    4384:	07 fe       	sbrs	r0, 7
    4386:	fd cf       	rjmp	.-6      	; 0x4382 <rf_security_set_key+0x19e>
    4388:	0f 5f       	subi	r16, 0xFF	; 255
    438a:	1f 4f       	sbci	r17, 0xFF	; 255
    438c:	0a 15       	cp	r16, r10
    438e:	1b 05       	cpc	r17, r11
    4390:	a9 f7       	brne	.-22     	; 0x437c <rf_security_set_key+0x198>
    4392:	40 9a       	sbi	0x08, 0	; 8
    4394:	22 96       	adiw	r28, 0x02	; 2
    4396:	0f b6       	in	r0, 0x3f	; 63
    4398:	f8 94       	cli
    439a:	de bf       	out	0x3e, r29	; 62
    439c:	0f be       	out	0x3f, r0	; 63
    439e:	cd bf       	out	0x3d, r28	; 61
    43a0:	df 91       	pop	r29
    43a2:	cf 91       	pop	r28
    43a4:	1f 91       	pop	r17
    43a6:	0f 91       	pop	r16
    43a8:	ff 90       	pop	r15
    43aa:	ef 90       	pop	r14
    43ac:	df 90       	pop	r13
    43ae:	cf 90       	pop	r12
    43b0:	bf 90       	pop	r11
    43b2:	af 90       	pop	r10
    43b4:	9f 90       	pop	r9
    43b6:	8f 90       	pop	r8
    43b8:	7f 90       	pop	r7
    43ba:	6f 90       	pop	r6
    43bc:	08 95       	ret

000043be <rf_set_rx>:
    43be:	1f 93       	push	r17
    43c0:	cf 93       	push	r28
    43c2:	df 93       	push	r29
    43c4:	ec 01       	movw	r28, r24
    43c6:	16 2f       	mov	r17, r22
    43c8:	80 91 12 1b 	lds	r24, 0x1B12
    43cc:	90 91 13 1b 	lds	r25, 0x1B13
    43d0:	0e 94 53 2f 	call	0x5ea6	; 0x5ea6 <nrk_sem_pend>
    43d4:	40 98       	cbi	0x08, 0	; 8
    43d6:	88 e0       	ldi	r24, 0x08	; 8
    43d8:	8e bd       	out	0x2e, r24	; 46
    43da:	0d b4       	in	r0, 0x2d	; 45
    43dc:	07 fe       	sbrs	r0, 7
    43de:	fd cf       	rjmp	.-6      	; 0x43da <rf_set_rx+0x1c>
    43e0:	40 9a       	sbi	0x08, 0	; 8
    43e2:	40 98       	cbi	0x08, 0	; 8
    43e4:	88 e0       	ldi	r24, 0x08	; 8
    43e6:	8e bd       	out	0x2e, r24	; 46
    43e8:	0d b4       	in	r0, 0x2d	; 45
    43ea:	07 fe       	sbrs	r0, 7
    43ec:	fd cf       	rjmp	.-6      	; 0x43e8 <rf_set_rx+0x2a>
    43ee:	40 9a       	sbi	0x08, 0	; 8
    43f0:	81 2f       	mov	r24, r17
    43f2:	0e 94 5b 18 	call	0x30b6	; 0x30b6 <halRfSetChannel>
    43f6:	d0 93 18 1b 	sts	0x1B18, r29
    43fa:	c0 93 17 1b 	sts	0x1B17, r28
    43fe:	80 91 12 1b 	lds	r24, 0x1B12
    4402:	90 91 13 1b 	lds	r25, 0x1B13
    4406:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    440a:	df 91       	pop	r29
    440c:	cf 91       	pop	r28
    440e:	1f 91       	pop	r17
    4410:	08 95       	ret

00004412 <rf_set_channel>:
    4412:	1f 93       	push	r17
    4414:	18 2f       	mov	r17, r24
    4416:	80 91 12 1b 	lds	r24, 0x1B12
    441a:	90 91 13 1b 	lds	r25, 0x1B13
    441e:	0e 94 53 2f 	call	0x5ea6	; 0x5ea6 <nrk_sem_pend>
    4422:	81 2f       	mov	r24, r17
    4424:	0e 94 5b 18 	call	0x30b6	; 0x30b6 <halRfSetChannel>
    4428:	80 91 12 1b 	lds	r24, 0x1B12
    442c:	90 91 13 1b 	lds	r25, 0x1B13
    4430:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    4434:	1f 91       	pop	r17
    4436:	08 95       	ret

00004438 <rf_init>:
    4438:	df 92       	push	r13
    443a:	ef 92       	push	r14
    443c:	ff 92       	push	r15
    443e:	0f 93       	push	r16
    4440:	1f 93       	push	r17
    4442:	cf 93       	push	r28
    4444:	df 93       	push	r29
    4446:	cd b7       	in	r28, 0x3d	; 61
    4448:	de b7       	in	r29, 0x3e	; 62
    444a:	22 97       	sbiw	r28, 0x02	; 2
    444c:	0f b6       	in	r0, 0x3f	; 63
    444e:	f8 94       	cli
    4450:	de bf       	out	0x3e, r29	; 62
    4452:	0f be       	out	0x3f, r0	; 63
    4454:	cd bf       	out	0x3d, r28	; 61
    4456:	8c 01       	movw	r16, r24
    4458:	d6 2e       	mov	r13, r22
    445a:	5a 83       	std	Y+2, r21	; 0x02
    445c:	49 83       	std	Y+1, r20	; 0x01
    445e:	79 01       	movw	r14, r18
    4460:	64 e1       	ldi	r22, 0x14	; 20
    4462:	81 e0       	ldi	r24, 0x01	; 1
    4464:	0e 94 86 2d 	call	0x5b0c	; 0x5b0c <nrk_sem_create>
    4468:	90 93 13 1b 	sts	0x1B13, r25
    446c:	80 93 12 1b 	sts	0x1B12, r24
    4470:	89 2b       	or	r24, r25
    4472:	31 f4       	brne	.+12     	; 0x4480 <rf_init+0x48>
    4474:	0e 94 cd 30 	call	0x619a	; 0x619a <nrk_get_pid>
    4478:	68 2f       	mov	r22, r24
    447a:	8f e0       	ldi	r24, 0x0F	; 15
    447c:	0e 94 bd 2b 	call	0x577a	; 0x577a <nrk_kernel_error_add>
    4480:	80 91 12 1b 	lds	r24, 0x1B12
    4484:	90 91 13 1b 	lds	r25, 0x1B13
    4488:	0e 94 53 2f 	call	0x5ea6	; 0x5ea6 <nrk_sem_pend>
    448c:	8f 3f       	cpi	r24, 0xFF	; 255
    448e:	21 f4       	brne	.+8      	; 0x4498 <rf_init+0x60>
    4490:	8a e8       	ldi	r24, 0x8A	; 138
    4492:	91 e0       	ldi	r25, 0x01	; 1
    4494:	0e 94 dc 27 	call	0x4fb8	; 0x4fb8 <nrk_kprintf>
    4498:	15 9a       	sbi	0x02, 5	; 2
    449a:	88 ee       	ldi	r24, 0xE8	; 232
    449c:	93 e0       	ldi	r25, 0x03	; 3
    449e:	0e 94 3d 28 	call	0x507a	; 0x507a <halWait>
    44a2:	16 98       	cbi	0x02, 6	; 2
    44a4:	81 e0       	ldi	r24, 0x01	; 1
    44a6:	90 e0       	ldi	r25, 0x00	; 0
    44a8:	0e 94 3d 28 	call	0x507a	; 0x507a <halWait>
    44ac:	16 9a       	sbi	0x02, 6	; 2
    44ae:	84 e6       	ldi	r24, 0x64	; 100
    44b0:	90 e0       	ldi	r25, 0x00	; 0
    44b2:	0e 94 3d 28 	call	0x507a	; 0x507a <halWait>
    44b6:	f8 94       	cli
    44b8:	40 98       	cbi	0x08, 0	; 8
    44ba:	81 e0       	ldi	r24, 0x01	; 1
    44bc:	8e bd       	out	0x2e, r24	; 46
    44be:	0d b4       	in	r0, 0x2d	; 45
    44c0:	07 fe       	sbrs	r0, 7
    44c2:	fd cf       	rjmp	.-6      	; 0x44be <rf_init+0x86>
    44c4:	40 9a       	sbi	0x08, 0	; 8
    44c6:	82 ee       	ldi	r24, 0xE2	; 226
    44c8:	92 e0       	ldi	r25, 0x02	; 2
    44ca:	90 93 16 1b 	sts	0x1B16, r25
    44ce:	80 93 15 1b 	sts	0x1B15, r24
    44d2:	40 98       	cbi	0x08, 0	; 8
    44d4:	81 e1       	ldi	r24, 0x11	; 17
    44d6:	8e bd       	out	0x2e, r24	; 46
    44d8:	0d b4       	in	r0, 0x2d	; 45
    44da:	07 fe       	sbrs	r0, 7
    44dc:	fd cf       	rjmp	.-6      	; 0x44d8 <rf_init+0xa0>
    44de:	82 e0       	ldi	r24, 0x02	; 2
    44e0:	8e bd       	out	0x2e, r24	; 46
    44e2:	0d b4       	in	r0, 0x2d	; 45
    44e4:	07 fe       	sbrs	r0, 7
    44e6:	fd cf       	rjmp	.-6      	; 0x44e2 <rf_init+0xaa>
    44e8:	82 ee       	ldi	r24, 0xE2	; 226
    44ea:	8e bd       	out	0x2e, r24	; 46
    44ec:	0d b4       	in	r0, 0x2d	; 45
    44ee:	07 fe       	sbrs	r0, 7
    44f0:	fd cf       	rjmp	.-6      	; 0x44ec <rf_init+0xb4>
    44f2:	40 9a       	sbi	0x08, 0	; 8
    44f4:	40 98       	cbi	0x08, 0	; 8
    44f6:	82 e1       	ldi	r24, 0x12	; 18
    44f8:	8e bd       	out	0x2e, r24	; 46
    44fa:	0d b4       	in	r0, 0x2d	; 45
    44fc:	07 fe       	sbrs	r0, 7
    44fe:	fd cf       	rjmp	.-6      	; 0x44fa <rf_init+0xc2>
    4500:	85 e0       	ldi	r24, 0x05	; 5
    4502:	8e bd       	out	0x2e, r24	; 46
    4504:	0d b4       	in	r0, 0x2d	; 45
    4506:	07 fe       	sbrs	r0, 7
    4508:	fd cf       	rjmp	.-6      	; 0x4504 <rf_init+0xcc>
    450a:	1e bc       	out	0x2e, r1	; 46
    450c:	0d b4       	in	r0, 0x2d	; 45
    450e:	07 fe       	sbrs	r0, 7
    4510:	fd cf       	rjmp	.-6      	; 0x450c <rf_init+0xd4>
    4512:	40 9a       	sbi	0x08, 0	; 8
    4514:	40 98       	cbi	0x08, 0	; 8
    4516:	8c e1       	ldi	r24, 0x1C	; 28
    4518:	8e bd       	out	0x2e, r24	; 46
    451a:	0d b4       	in	r0, 0x2d	; 45
    451c:	07 fe       	sbrs	r0, 7
    451e:	fd cf       	rjmp	.-6      	; 0x451a <rf_init+0xe2>
    4520:	1e bc       	out	0x2e, r1	; 46
    4522:	0d b4       	in	r0, 0x2d	; 45
    4524:	07 fe       	sbrs	r0, 7
    4526:	fd cf       	rjmp	.-6      	; 0x4522 <rf_init+0xea>
    4528:	8f e7       	ldi	r24, 0x7F	; 127
    452a:	8e bd       	out	0x2e, r24	; 46
    452c:	0d b4       	in	r0, 0x2d	; 45
    452e:	07 fe       	sbrs	r0, 7
    4530:	fd cf       	rjmp	.-6      	; 0x452c <rf_init+0xf4>
    4532:	40 9a       	sbi	0x08, 0	; 8
    4534:	40 98       	cbi	0x08, 0	; 8
    4536:	89 e1       	ldi	r24, 0x19	; 25
    4538:	8e bd       	out	0x2e, r24	; 46
    453a:	0d b4       	in	r0, 0x2d	; 45
    453c:	07 fe       	sbrs	r0, 7
    453e:	fd cf       	rjmp	.-6      	; 0x453a <rf_init+0x102>
    4540:	81 e0       	ldi	r24, 0x01	; 1
    4542:	8e bd       	out	0x2e, r24	; 46
    4544:	0d b4       	in	r0, 0x2d	; 45
    4546:	07 fe       	sbrs	r0, 7
    4548:	fd cf       	rjmp	.-6      	; 0x4544 <rf_init+0x10c>
    454a:	84 ec       	ldi	r24, 0xC4	; 196
    454c:	8e bd       	out	0x2e, r24	; 46
    454e:	0d b4       	in	r0, 0x2d	; 45
    4550:	07 fe       	sbrs	r0, 7
    4552:	fd cf       	rjmp	.-6      	; 0x454e <rf_init+0x116>
    4554:	40 9a       	sbi	0x08, 0	; 8
    4556:	40 98       	cbi	0x08, 0	; 8
    4558:	87 e1       	ldi	r24, 0x17	; 23
    455a:	8e bd       	out	0x2e, r24	; 46
    455c:	0d b4       	in	r0, 0x2d	; 45
    455e:	07 fe       	sbrs	r0, 7
    4560:	fd cf       	rjmp	.-6      	; 0x455c <rf_init+0x124>
    4562:	8a e1       	ldi	r24, 0x1A	; 26
    4564:	8e bd       	out	0x2e, r24	; 46
    4566:	0d b4       	in	r0, 0x2d	; 45
    4568:	07 fe       	sbrs	r0, 7
    456a:	fd cf       	rjmp	.-6      	; 0x4566 <rf_init+0x12e>
    456c:	86 e5       	ldi	r24, 0x56	; 86
    456e:	8e bd       	out	0x2e, r24	; 46
    4570:	0d b4       	in	r0, 0x2d	; 45
    4572:	07 fe       	sbrs	r0, 7
    4574:	fd cf       	rjmp	.-6      	; 0x4570 <rf_init+0x138>
    4576:	40 9a       	sbi	0x08, 0	; 8
    4578:	84 ef       	ldi	r24, 0xF4	; 244
    457a:	91 e0       	ldi	r25, 0x01	; 1
    457c:	0e 94 2c 39 	call	0x7258	; 0x7258 <nrk_spin_wait_us>
    4580:	40 98       	cbi	0x08, 0	; 8
    4582:	88 ee       	ldi	r24, 0xE8	; 232
    4584:	8e bd       	out	0x2e, r24	; 46
    4586:	0d b4       	in	r0, 0x2d	; 45
    4588:	07 fe       	sbrs	r0, 7
    458a:	fd cf       	rjmp	.-6      	; 0x4586 <rf_init+0x14e>
    458c:	80 e8       	ldi	r24, 0x80	; 128
    458e:	8e bd       	out	0x2e, r24	; 46
    4590:	0d b4       	in	r0, 0x2d	; 45
    4592:	07 fe       	sbrs	r0, 7
    4594:	fd cf       	rjmp	.-6      	; 0x4590 <rf_init+0x158>
    4596:	fe 01       	movw	r30, r28
    4598:	31 96       	adiw	r30, 0x01	; 1
    459a:	9e 01       	movw	r18, r28
    459c:	2d 5f       	subi	r18, 0xFD	; 253
    459e:	3f 4f       	sbci	r19, 0xFF	; 255
    45a0:	80 81       	ld	r24, Z
    45a2:	8e bd       	out	0x2e, r24	; 46
    45a4:	0d b4       	in	r0, 0x2d	; 45
    45a6:	07 fe       	sbrs	r0, 7
    45a8:	fd cf       	rjmp	.-6      	; 0x45a4 <rf_init+0x16c>
    45aa:	31 96       	adiw	r30, 0x01	; 1
    45ac:	e2 17       	cp	r30, r18
    45ae:	f3 07       	cpc	r31, r19
    45b0:	b9 f7       	brne	.-18     	; 0x45a0 <rf_init+0x168>
    45b2:	40 9a       	sbi	0x08, 0	; 8
    45b4:	84 ef       	ldi	r24, 0xF4	; 244
    45b6:	91 e0       	ldi	r25, 0x01	; 1
    45b8:	0e 94 2c 39 	call	0x7258	; 0x7258 <nrk_spin_wait_us>
    45bc:	78 94       	sei
    45be:	8d 2d       	mov	r24, r13
    45c0:	0e 94 5b 18 	call	0x30b6	; 0x30b6 <halRfSetChannel>
    45c4:	78 94       	sei
    45c6:	10 93 18 1b 	sts	0x1B18, r17
    45ca:	00 93 17 1b 	sts	0x1B17, r16
    45ce:	89 81       	ldd	r24, Y+1	; 0x01
    45d0:	9a 81       	ldd	r25, Y+2	; 0x02
    45d2:	90 93 1c 1b 	sts	0x1B1C, r25
    45d6:	80 93 1b 1b 	sts	0x1B1B, r24
    45da:	f0 92 1e 1b 	sts	0x1B1E, r15
    45de:	e0 92 1d 1b 	sts	0x1B1D, r14
    45e2:	10 92 19 1b 	sts	0x1B19, r1
    45e6:	10 92 1f 1b 	sts	0x1B1F, r1
    45ea:	0e 94 7a 18 	call	0x30f4	; 0x30f4 <halRfWaitForCrystalOscillator>
    45ee:	80 91 12 1b 	lds	r24, 0x1B12
    45f2:	90 91 13 1b 	lds	r25, 0x1B13
    45f6:	0e 94 01 2e 	call	0x5c02	; 0x5c02 <nrk_sem_post>
    45fa:	8f 3f       	cpi	r24, 0xFF	; 255
    45fc:	39 f4       	brne	.+14     	; 0x460c <rf_init+0x1d4>
    45fe:	8d e5       	ldi	r24, 0x5D	; 93
    4600:	91 e0       	ldi	r25, 0x01	; 1
    4602:	0e 94 dc 27 	call	0x4fb8	; 0x4fb8 <nrk_kprintf>
    4606:	82 e0       	ldi	r24, 0x02	; 2
    4608:	0e 94 f8 2a 	call	0x55f0	; 0x55f0 <_nrk_errno_set>
    460c:	10 92 22 1b 	sts	0x1B22, r1
    4610:	10 92 14 1b 	sts	0x1B14, r1
    4614:	10 92 23 1b 	sts	0x1B23, r1
    4618:	22 96       	adiw	r28, 0x02	; 2
    461a:	0f b6       	in	r0, 0x3f	; 63
    461c:	f8 94       	cli
    461e:	de bf       	out	0x3e, r29	; 62
    4620:	0f be       	out	0x3f, r0	; 63
    4622:	cd bf       	out	0x3d, r28	; 61
    4624:	df 91       	pop	r29
    4626:	cf 91       	pop	r28
    4628:	1f 91       	pop	r17
    462a:	0f 91       	pop	r16
    462c:	ff 90       	pop	r15
    462e:	ef 90       	pop	r14
    4630:	df 90       	pop	r13
    4632:	08 95       	ret

00004634 <getc1>:
    4634:	20 91 3b 1b 	lds	r18, 0x1B3B
    4638:	80 91 29 1b 	lds	r24, 0x1B29
    463c:	28 17       	cp	r18, r24
    463e:	81 f0       	breq	.+32     	; 0x4660 <getc1+0x2c>
    4640:	e2 2f       	mov	r30, r18
    4642:	ff 27       	eor	r31, r31
    4644:	e6 5d       	subi	r30, 0xD6	; 214
    4646:	f4 4e       	sbci	r31, 0xE4	; 228
    4648:	e0 81       	ld	r30, Z
    464a:	82 2f       	mov	r24, r18
    464c:	8f 5f       	subi	r24, 0xFF	; 255
    464e:	80 93 3b 1b 	sts	0x1B3B, r24
    4652:	80 31       	cpi	r24, 0x10	; 16
    4654:	11 f4       	brne	.+4      	; 0x465a <getc1+0x26>
    4656:	10 92 3b 1b 	sts	0x1B3B, r1
    465a:	8e 2f       	mov	r24, r30
    465c:	99 27       	eor	r25, r25
    465e:	08 95       	ret
    4660:	80 91 c8 00 	lds	r24, 0x00C8
    4664:	87 ff       	sbrs	r24, 7
    4666:	fc cf       	rjmp	.-8      	; 0x4660 <getc1+0x2c>
    4668:	80 91 c8 00 	lds	r24, 0x00C8
    466c:	8f 77       	andi	r24, 0x7F	; 127
    466e:	80 93 c8 00 	sts	0x00C8, r24
    4672:	80 91 ce 00 	lds	r24, 0x00CE
    4676:	99 27       	eor	r25, r25
    4678:	08 95       	ret

0000467a <nrk_uart_data_ready>:
    467a:	88 23       	and	r24, r24
    467c:	51 f4       	brne	.+20     	; 0x4692 <nrk_uart_data_ready+0x18>
    467e:	80 91 c0 00 	lds	r24, 0x00C0
    4682:	99 27       	eor	r25, r25
    4684:	87 fd       	sbrc	r24, 7
    4686:	90 95       	com	r25
    4688:	88 27       	eor	r24, r24
    468a:	99 0f       	add	r25, r25
    468c:	88 1f       	adc	r24, r24
    468e:	99 27       	eor	r25, r25
    4690:	08 95       	ret
    4692:	81 30       	cpi	r24, 0x01	; 1
    4694:	19 f0       	breq	.+6      	; 0x469c <nrk_uart_data_ready+0x22>
    4696:	80 e0       	ldi	r24, 0x00	; 0
    4698:	90 e0       	ldi	r25, 0x00	; 0
    469a:	08 95       	ret
    469c:	20 e0       	ldi	r18, 0x00	; 0
    469e:	30 e0       	ldi	r19, 0x00	; 0
    46a0:	90 91 3b 1b 	lds	r25, 0x1B3B
    46a4:	80 91 29 1b 	lds	r24, 0x1B29
    46a8:	98 17       	cp	r25, r24
    46aa:	11 f0       	breq	.+4      	; 0x46b0 <nrk_uart_data_ready+0x36>
    46ac:	21 e0       	ldi	r18, 0x01	; 1
    46ae:	30 e0       	ldi	r19, 0x00	; 0
    46b0:	c9 01       	movw	r24, r18
    46b2:	08 95       	ret

000046b4 <PORT_INIT>:
    46b4:	85 b7       	in	r24, 0x35	; 53
    46b6:	80 61       	ori	r24, 0x10	; 16
    46b8:	85 bf       	out	0x35, r24	; 53
    46ba:	86 e0       	ldi	r24, 0x06	; 6
    46bc:	84 b9       	out	0x04, r24	; 4
    46be:	87 e0       	ldi	r24, 0x07	; 7
    46c0:	85 b9       	out	0x05, r24	; 5
    46c2:	81 e0       	ldi	r24, 0x01	; 1
    46c4:	87 b9       	out	0x07, r24	; 7
    46c6:	88 b9       	out	0x08, r24	; 8
    46c8:	8c e3       	ldi	r24, 0x3C	; 60
    46ca:	8d b9       	out	0x0d, r24	; 13
    46cc:	8b e0       	ldi	r24, 0x0B	; 11
    46ce:	8a b9       	out	0x0a, r24	; 10
    46d0:	8e e3       	ldi	r24, 0x3E	; 62
    46d2:	8e b9       	out	0x0e, r24	; 14
    46d4:	88 e7       	ldi	r24, 0x78	; 120
    46d6:	81 b9       	out	0x01, r24	; 1
    46d8:	80 e4       	ldi	r24, 0x40	; 64
    46da:	82 b9       	out	0x02, r24	; 2
    46dc:	8f ef       	ldi	r24, 0xFF	; 255
    46de:	80 bb       	out	0x10, r24	; 16
    46e0:	08 95       	ret

000046e2 <nrk_setup_ports>:
    46e2:	0e 94 5a 23 	call	0x46b4	; 0x46b4 <PORT_INIT>
    46e6:	80 e5       	ldi	r24, 0x50	; 80
    46e8:	8c bd       	out	0x2c, r24	; 44
    46ea:	81 e0       	ldi	r24, 0x01	; 1
    46ec:	8d bd       	out	0x2d, r24	; 45
    46ee:	08 95       	ret

000046f0 <nrk_gpio_set>:
    46f0:	8f 3f       	cpi	r24, 0xFF	; 255
    46f2:	09 f4       	brne	.+2      	; 0x46f6 <nrk_gpio_set+0x6>
    46f4:	7f c0       	rjmp	.+254    	; 0x47f4 <nrk_gpio_set+0x104>
    46f6:	48 2f       	mov	r20, r24
    46f8:	55 27       	eor	r21, r21
    46fa:	9a 01       	movw	r18, r20
    46fc:	27 70       	andi	r18, 0x07	; 7
    46fe:	30 70       	andi	r19, 0x00	; 0
    4700:	22 30       	cpi	r18, 0x02	; 2
    4702:	31 05       	cpc	r19, r1
    4704:	a9 f1       	breq	.+106    	; 0x4770 <nrk_gpio_set+0x80>
    4706:	23 30       	cpi	r18, 0x03	; 3
    4708:	31 05       	cpc	r19, r1
    470a:	44 f4       	brge	.+16     	; 0x471c <nrk_gpio_set+0x2c>
    470c:	21 15       	cp	r18, r1
    470e:	31 05       	cpc	r19, r1
    4710:	89 f0       	breq	.+34     	; 0x4734 <nrk_gpio_set+0x44>
    4712:	21 30       	cpi	r18, 0x01	; 1
    4714:	31 05       	cpc	r19, r1
    4716:	09 f0       	breq	.+2      	; 0x471a <nrk_gpio_set+0x2a>
    4718:	6d c0       	rjmp	.+218    	; 0x47f4 <nrk_gpio_set+0x104>
    471a:	1c c0       	rjmp	.+56     	; 0x4754 <nrk_gpio_set+0x64>
    471c:	24 30       	cpi	r18, 0x04	; 4
    471e:	31 05       	cpc	r19, r1
    4720:	09 f4       	brne	.+2      	; 0x4724 <nrk_gpio_set+0x34>
    4722:	46 c0       	rjmp	.+140    	; 0x47b0 <nrk_gpio_set+0xc0>
    4724:	24 30       	cpi	r18, 0x04	; 4
    4726:	31 05       	cpc	r19, r1
    4728:	9c f1       	brlt	.+102    	; 0x4790 <nrk_gpio_set+0xa0>
    472a:	25 30       	cpi	r18, 0x05	; 5
    472c:	31 05       	cpc	r19, r1
    472e:	09 f0       	breq	.+2      	; 0x4732 <nrk_gpio_set+0x42>
    4730:	61 c0       	rjmp	.+194    	; 0x47f4 <nrk_gpio_set+0x104>
    4732:	4e c0       	rjmp	.+156    	; 0x47d0 <nrk_gpio_set+0xe0>
    4734:	22 b1       	in	r18, 0x02	; 2
    4736:	a3 e0       	ldi	r26, 0x03	; 3
    4738:	56 95       	lsr	r21
    473a:	47 95       	ror	r20
    473c:	aa 95       	dec	r26
    473e:	e1 f7       	brne	.-8      	; 0x4738 <nrk_gpio_set+0x48>
    4740:	81 e0       	ldi	r24, 0x01	; 1
    4742:	90 e0       	ldi	r25, 0x00	; 0
    4744:	02 c0       	rjmp	.+4      	; 0x474a <nrk_gpio_set+0x5a>
    4746:	88 0f       	add	r24, r24
    4748:	99 1f       	adc	r25, r25
    474a:	4a 95       	dec	r20
    474c:	e2 f7       	brpl	.-8      	; 0x4746 <nrk_gpio_set+0x56>
    474e:	28 2b       	or	r18, r24
    4750:	22 b9       	out	0x02, r18	; 2
    4752:	4d c0       	rjmp	.+154    	; 0x47ee <nrk_gpio_set+0xfe>
    4754:	85 b1       	in	r24, 0x05	; 5
    4756:	f3 e0       	ldi	r31, 0x03	; 3
    4758:	56 95       	lsr	r21
    475a:	47 95       	ror	r20
    475c:	fa 95       	dec	r31
    475e:	e1 f7       	brne	.-8      	; 0x4758 <nrk_gpio_set+0x68>
    4760:	02 c0       	rjmp	.+4      	; 0x4766 <nrk_gpio_set+0x76>
    4762:	22 0f       	add	r18, r18
    4764:	33 1f       	adc	r19, r19
    4766:	4a 95       	dec	r20
    4768:	e2 f7       	brpl	.-8      	; 0x4762 <nrk_gpio_set+0x72>
    476a:	82 2b       	or	r24, r18
    476c:	85 b9       	out	0x05, r24	; 5
    476e:	3f c0       	rjmp	.+126    	; 0x47ee <nrk_gpio_set+0xfe>
    4770:	28 b1       	in	r18, 0x08	; 8
    4772:	e3 e0       	ldi	r30, 0x03	; 3
    4774:	56 95       	lsr	r21
    4776:	47 95       	ror	r20
    4778:	ea 95       	dec	r30
    477a:	e1 f7       	brne	.-8      	; 0x4774 <nrk_gpio_set+0x84>
    477c:	81 e0       	ldi	r24, 0x01	; 1
    477e:	90 e0       	ldi	r25, 0x00	; 0
    4780:	02 c0       	rjmp	.+4      	; 0x4786 <nrk_gpio_set+0x96>
    4782:	88 0f       	add	r24, r24
    4784:	99 1f       	adc	r25, r25
    4786:	4a 95       	dec	r20
    4788:	e2 f7       	brpl	.-8      	; 0x4782 <nrk_gpio_set+0x92>
    478a:	28 2b       	or	r18, r24
    478c:	28 b9       	out	0x08, r18	; 8
    478e:	2f c0       	rjmp	.+94     	; 0x47ee <nrk_gpio_set+0xfe>
    4790:	2b b1       	in	r18, 0x0b	; 11
    4792:	73 e0       	ldi	r23, 0x03	; 3
    4794:	56 95       	lsr	r21
    4796:	47 95       	ror	r20
    4798:	7a 95       	dec	r23
    479a:	e1 f7       	brne	.-8      	; 0x4794 <nrk_gpio_set+0xa4>
    479c:	81 e0       	ldi	r24, 0x01	; 1
    479e:	90 e0       	ldi	r25, 0x00	; 0
    47a0:	02 c0       	rjmp	.+4      	; 0x47a6 <nrk_gpio_set+0xb6>
    47a2:	88 0f       	add	r24, r24
    47a4:	99 1f       	adc	r25, r25
    47a6:	4a 95       	dec	r20
    47a8:	e2 f7       	brpl	.-8      	; 0x47a2 <nrk_gpio_set+0xb2>
    47aa:	28 2b       	or	r18, r24
    47ac:	2b b9       	out	0x0b, r18	; 11
    47ae:	1f c0       	rjmp	.+62     	; 0x47ee <nrk_gpio_set+0xfe>
    47b0:	2e b1       	in	r18, 0x0e	; 14
    47b2:	63 e0       	ldi	r22, 0x03	; 3
    47b4:	56 95       	lsr	r21
    47b6:	47 95       	ror	r20
    47b8:	6a 95       	dec	r22
    47ba:	e1 f7       	brne	.-8      	; 0x47b4 <nrk_gpio_set+0xc4>
    47bc:	81 e0       	ldi	r24, 0x01	; 1
    47be:	90 e0       	ldi	r25, 0x00	; 0
    47c0:	02 c0       	rjmp	.+4      	; 0x47c6 <nrk_gpio_set+0xd6>
    47c2:	88 0f       	add	r24, r24
    47c4:	99 1f       	adc	r25, r25
    47c6:	4a 95       	dec	r20
    47c8:	e2 f7       	brpl	.-8      	; 0x47c2 <nrk_gpio_set+0xd2>
    47ca:	28 2b       	or	r18, r24
    47cc:	2e b9       	out	0x0e, r18	; 14
    47ce:	0f c0       	rjmp	.+30     	; 0x47ee <nrk_gpio_set+0xfe>
    47d0:	21 b3       	in	r18, 0x11	; 17
    47d2:	33 e0       	ldi	r19, 0x03	; 3
    47d4:	56 95       	lsr	r21
    47d6:	47 95       	ror	r20
    47d8:	3a 95       	dec	r19
    47da:	e1 f7       	brne	.-8      	; 0x47d4 <nrk_gpio_set+0xe4>
    47dc:	81 e0       	ldi	r24, 0x01	; 1
    47de:	90 e0       	ldi	r25, 0x00	; 0
    47e0:	02 c0       	rjmp	.+4      	; 0x47e6 <nrk_gpio_set+0xf6>
    47e2:	88 0f       	add	r24, r24
    47e4:	99 1f       	adc	r25, r25
    47e6:	4a 95       	dec	r20
    47e8:	e2 f7       	brpl	.-8      	; 0x47e2 <nrk_gpio_set+0xf2>
    47ea:	28 2b       	or	r18, r24
    47ec:	21 bb       	out	0x11, r18	; 17
    47ee:	81 e0       	ldi	r24, 0x01	; 1
    47f0:	90 e0       	ldi	r25, 0x00	; 0
    47f2:	08 95       	ret
    47f4:	8f ef       	ldi	r24, 0xFF	; 255
    47f6:	9f ef       	ldi	r25, 0xFF	; 255
    47f8:	08 95       	ret

000047fa <nrk_gpio_clr>:
    47fa:	8f 3f       	cpi	r24, 0xFF	; 255
    47fc:	09 f4       	brne	.+2      	; 0x4800 <nrk_gpio_clr+0x6>
    47fe:	86 c0       	rjmp	.+268    	; 0x490c <nrk_gpio_clr+0x112>
    4800:	48 2f       	mov	r20, r24
    4802:	55 27       	eor	r21, r21
    4804:	9a 01       	movw	r18, r20
    4806:	27 70       	andi	r18, 0x07	; 7
    4808:	30 70       	andi	r19, 0x00	; 0
    480a:	22 30       	cpi	r18, 0x02	; 2
    480c:	31 05       	cpc	r19, r1
    480e:	c1 f1       	breq	.+112    	; 0x4880 <nrk_gpio_clr+0x86>
    4810:	23 30       	cpi	r18, 0x03	; 3
    4812:	31 05       	cpc	r19, r1
    4814:	44 f4       	brge	.+16     	; 0x4826 <nrk_gpio_clr+0x2c>
    4816:	21 15       	cp	r18, r1
    4818:	31 05       	cpc	r19, r1
    481a:	89 f0       	breq	.+34     	; 0x483e <nrk_gpio_clr+0x44>
    481c:	21 30       	cpi	r18, 0x01	; 1
    481e:	31 05       	cpc	r19, r1
    4820:	09 f0       	breq	.+2      	; 0x4824 <nrk_gpio_clr+0x2a>
    4822:	74 c0       	rjmp	.+232    	; 0x490c <nrk_gpio_clr+0x112>
    4824:	1d c0       	rjmp	.+58     	; 0x4860 <nrk_gpio_clr+0x66>
    4826:	24 30       	cpi	r18, 0x04	; 4
    4828:	31 05       	cpc	r19, r1
    482a:	09 f4       	brne	.+2      	; 0x482e <nrk_gpio_clr+0x34>
    482c:	4b c0       	rjmp	.+150    	; 0x48c4 <nrk_gpio_clr+0xca>
    482e:	24 30       	cpi	r18, 0x04	; 4
    4830:	31 05       	cpc	r19, r1
    4832:	bc f1       	brlt	.+110    	; 0x48a2 <nrk_gpio_clr+0xa8>
    4834:	25 30       	cpi	r18, 0x05	; 5
    4836:	31 05       	cpc	r19, r1
    4838:	09 f0       	breq	.+2      	; 0x483c <nrk_gpio_clr+0x42>
    483a:	68 c0       	rjmp	.+208    	; 0x490c <nrk_gpio_clr+0x112>
    483c:	54 c0       	rjmp	.+168    	; 0x48e6 <nrk_gpio_clr+0xec>
    483e:	22 b1       	in	r18, 0x02	; 2
    4840:	73 e0       	ldi	r23, 0x03	; 3
    4842:	56 95       	lsr	r21
    4844:	47 95       	ror	r20
    4846:	7a 95       	dec	r23
    4848:	e1 f7       	brne	.-8      	; 0x4842 <nrk_gpio_clr+0x48>
    484a:	81 e0       	ldi	r24, 0x01	; 1
    484c:	90 e0       	ldi	r25, 0x00	; 0
    484e:	02 c0       	rjmp	.+4      	; 0x4854 <nrk_gpio_clr+0x5a>
    4850:	88 0f       	add	r24, r24
    4852:	99 1f       	adc	r25, r25
    4854:	4a 95       	dec	r20
    4856:	e2 f7       	brpl	.-8      	; 0x4850 <nrk_gpio_clr+0x56>
    4858:	80 95       	com	r24
    485a:	82 23       	and	r24, r18
    485c:	82 b9       	out	0x02, r24	; 2
    485e:	53 c0       	rjmp	.+166    	; 0x4906 <nrk_gpio_clr+0x10c>
    4860:	95 b1       	in	r25, 0x05	; 5
    4862:	63 e0       	ldi	r22, 0x03	; 3
    4864:	56 95       	lsr	r21
    4866:	47 95       	ror	r20
    4868:	6a 95       	dec	r22
    486a:	e1 f7       	brne	.-8      	; 0x4864 <nrk_gpio_clr+0x6a>
    486c:	02 c0       	rjmp	.+4      	; 0x4872 <nrk_gpio_clr+0x78>
    486e:	22 0f       	add	r18, r18
    4870:	33 1f       	adc	r19, r19
    4872:	4a 95       	dec	r20
    4874:	e2 f7       	brpl	.-8      	; 0x486e <nrk_gpio_clr+0x74>
    4876:	82 2f       	mov	r24, r18
    4878:	80 95       	com	r24
    487a:	89 23       	and	r24, r25
    487c:	85 b9       	out	0x05, r24	; 5
    487e:	43 c0       	rjmp	.+134    	; 0x4906 <nrk_gpio_clr+0x10c>
    4880:	28 b1       	in	r18, 0x08	; 8
    4882:	33 e0       	ldi	r19, 0x03	; 3
    4884:	56 95       	lsr	r21
    4886:	47 95       	ror	r20
    4888:	3a 95       	dec	r19
    488a:	e1 f7       	brne	.-8      	; 0x4884 <nrk_gpio_clr+0x8a>
    488c:	81 e0       	ldi	r24, 0x01	; 1
    488e:	90 e0       	ldi	r25, 0x00	; 0
    4890:	02 c0       	rjmp	.+4      	; 0x4896 <nrk_gpio_clr+0x9c>
    4892:	88 0f       	add	r24, r24
    4894:	99 1f       	adc	r25, r25
    4896:	4a 95       	dec	r20
    4898:	e2 f7       	brpl	.-8      	; 0x4892 <nrk_gpio_clr+0x98>
    489a:	80 95       	com	r24
    489c:	82 23       	and	r24, r18
    489e:	88 b9       	out	0x08, r24	; 8
    48a0:	32 c0       	rjmp	.+100    	; 0x4906 <nrk_gpio_clr+0x10c>
    48a2:	2b b1       	in	r18, 0x0b	; 11
    48a4:	93 e0       	ldi	r25, 0x03	; 3
    48a6:	56 95       	lsr	r21
    48a8:	47 95       	ror	r20
    48aa:	9a 95       	dec	r25
    48ac:	e1 f7       	brne	.-8      	; 0x48a6 <nrk_gpio_clr+0xac>
    48ae:	81 e0       	ldi	r24, 0x01	; 1
    48b0:	90 e0       	ldi	r25, 0x00	; 0
    48b2:	02 c0       	rjmp	.+4      	; 0x48b8 <nrk_gpio_clr+0xbe>
    48b4:	88 0f       	add	r24, r24
    48b6:	99 1f       	adc	r25, r25
    48b8:	4a 95       	dec	r20
    48ba:	e2 f7       	brpl	.-8      	; 0x48b4 <nrk_gpio_clr+0xba>
    48bc:	80 95       	com	r24
    48be:	82 23       	and	r24, r18
    48c0:	8b b9       	out	0x0b, r24	; 11
    48c2:	21 c0       	rjmp	.+66     	; 0x4906 <nrk_gpio_clr+0x10c>
    48c4:	2e b1       	in	r18, 0x0e	; 14
    48c6:	83 e0       	ldi	r24, 0x03	; 3
    48c8:	56 95       	lsr	r21
    48ca:	47 95       	ror	r20
    48cc:	8a 95       	dec	r24
    48ce:	e1 f7       	brne	.-8      	; 0x48c8 <nrk_gpio_clr+0xce>
    48d0:	81 e0       	ldi	r24, 0x01	; 1
    48d2:	90 e0       	ldi	r25, 0x00	; 0
    48d4:	02 c0       	rjmp	.+4      	; 0x48da <nrk_gpio_clr+0xe0>
    48d6:	88 0f       	add	r24, r24
    48d8:	99 1f       	adc	r25, r25
    48da:	4a 95       	dec	r20
    48dc:	e2 f7       	brpl	.-8      	; 0x48d6 <nrk_gpio_clr+0xdc>
    48de:	80 95       	com	r24
    48e0:	82 23       	and	r24, r18
    48e2:	8e b9       	out	0x0e, r24	; 14
    48e4:	10 c0       	rjmp	.+32     	; 0x4906 <nrk_gpio_clr+0x10c>
    48e6:	21 b3       	in	r18, 0x11	; 17
    48e8:	b3 e0       	ldi	r27, 0x03	; 3
    48ea:	56 95       	lsr	r21
    48ec:	47 95       	ror	r20
    48ee:	ba 95       	dec	r27
    48f0:	e1 f7       	brne	.-8      	; 0x48ea <nrk_gpio_clr+0xf0>
    48f2:	81 e0       	ldi	r24, 0x01	; 1
    48f4:	90 e0       	ldi	r25, 0x00	; 0
    48f6:	02 c0       	rjmp	.+4      	; 0x48fc <nrk_gpio_clr+0x102>
    48f8:	88 0f       	add	r24, r24
    48fa:	99 1f       	adc	r25, r25
    48fc:	4a 95       	dec	r20
    48fe:	e2 f7       	brpl	.-8      	; 0x48f8 <nrk_gpio_clr+0xfe>
    4900:	80 95       	com	r24
    4902:	82 23       	and	r24, r18
    4904:	81 bb       	out	0x11, r24	; 17
    4906:	81 e0       	ldi	r24, 0x01	; 1
    4908:	90 e0       	ldi	r25, 0x00	; 0
    490a:	08 95       	ret
    490c:	8f ef       	ldi	r24, 0xFF	; 255
    490e:	9f ef       	ldi	r25, 0xFF	; 255
    4910:	08 95       	ret

00004912 <nrk_gpio_get>:
    4912:	8f 3f       	cpi	r24, 0xFF	; 255
    4914:	a9 f1       	breq	.+106    	; 0x4980 <nrk_gpio_get+0x6e>
    4916:	28 2f       	mov	r18, r24
    4918:	33 27       	eor	r19, r19
    491a:	c9 01       	movw	r24, r18
    491c:	87 70       	andi	r24, 0x07	; 7
    491e:	90 70       	andi	r25, 0x00	; 0
    4920:	82 30       	cpi	r24, 0x02	; 2
    4922:	91 05       	cpc	r25, r1
    4924:	a9 f0       	breq	.+42     	; 0x4950 <nrk_gpio_get+0x3e>
    4926:	83 30       	cpi	r24, 0x03	; 3
    4928:	91 05       	cpc	r25, r1
    492a:	2c f4       	brge	.+10     	; 0x4936 <nrk_gpio_get+0x24>
    492c:	00 97       	sbiw	r24, 0x00	; 0
    492e:	61 f0       	breq	.+24     	; 0x4948 <nrk_gpio_get+0x36>
    4930:	01 97       	sbiw	r24, 0x01	; 1
    4932:	31 f5       	brne	.+76     	; 0x4980 <nrk_gpio_get+0x6e>
    4934:	0b c0       	rjmp	.+22     	; 0x494c <nrk_gpio_get+0x3a>
    4936:	84 30       	cpi	r24, 0x04	; 4
    4938:	91 05       	cpc	r25, r1
    493a:	71 f0       	breq	.+28     	; 0x4958 <nrk_gpio_get+0x46>
    493c:	84 30       	cpi	r24, 0x04	; 4
    493e:	91 05       	cpc	r25, r1
    4940:	4c f0       	brlt	.+18     	; 0x4954 <nrk_gpio_get+0x42>
    4942:	05 97       	sbiw	r24, 0x05	; 5
    4944:	e9 f4       	brne	.+58     	; 0x4980 <nrk_gpio_get+0x6e>
    4946:	0a c0       	rjmp	.+20     	; 0x495c <nrk_gpio_get+0x4a>
    4948:	80 b1       	in	r24, 0x00	; 0
    494a:	09 c0       	rjmp	.+18     	; 0x495e <nrk_gpio_get+0x4c>
    494c:	83 b1       	in	r24, 0x03	; 3
    494e:	07 c0       	rjmp	.+14     	; 0x495e <nrk_gpio_get+0x4c>
    4950:	86 b1       	in	r24, 0x06	; 6
    4952:	05 c0       	rjmp	.+10     	; 0x495e <nrk_gpio_get+0x4c>
    4954:	89 b1       	in	r24, 0x09	; 9
    4956:	03 c0       	rjmp	.+6      	; 0x495e <nrk_gpio_get+0x4c>
    4958:	8c b1       	in	r24, 0x0c	; 12
    495a:	01 c0       	rjmp	.+2      	; 0x495e <nrk_gpio_get+0x4c>
    495c:	8f b1       	in	r24, 0x0f	; 15
    495e:	99 27       	eor	r25, r25
    4960:	e3 e0       	ldi	r30, 0x03	; 3
    4962:	36 95       	lsr	r19
    4964:	27 95       	ror	r18
    4966:	ea 95       	dec	r30
    4968:	e1 f7       	brne	.-8      	; 0x4962 <nrk_gpio_get+0x50>
    496a:	02 c0       	rjmp	.+4      	; 0x4970 <nrk_gpio_get+0x5e>
    496c:	95 95       	asr	r25
    496e:	87 95       	ror	r24
    4970:	2a 95       	dec	r18
    4972:	e2 f7       	brpl	.-8      	; 0x496c <nrk_gpio_get+0x5a>
    4974:	99 27       	eor	r25, r25
    4976:	87 fd       	sbrc	r24, 7
    4978:	90 95       	com	r25
    497a:	81 70       	andi	r24, 0x01	; 1
    497c:	90 70       	andi	r25, 0x00	; 0
    497e:	08 95       	ret
    4980:	8f ef       	ldi	r24, 0xFF	; 255
    4982:	9f ef       	ldi	r25, 0xFF	; 255
    4984:	08 95       	ret

00004986 <nrk_gpio_toggle>:
    4986:	8f 3f       	cpi	r24, 0xFF	; 255
    4988:	09 f4       	brne	.+2      	; 0x498c <nrk_gpio_toggle+0x6>
    498a:	03 c1       	rjmp	.+518    	; 0x4b92 <nrk_gpio_toggle+0x20c>
    498c:	28 2f       	mov	r18, r24
    498e:	33 27       	eor	r19, r19
    4990:	a9 01       	movw	r20, r18
    4992:	47 70       	andi	r20, 0x07	; 7
    4994:	50 70       	andi	r21, 0x00	; 0
    4996:	42 30       	cpi	r20, 0x02	; 2
    4998:	51 05       	cpc	r21, r1
    499a:	09 f4       	brne	.+2      	; 0x499e <nrk_gpio_toggle+0x18>
    499c:	5c c0       	rjmp	.+184    	; 0x4a56 <nrk_gpio_toggle+0xd0>
    499e:	43 30       	cpi	r20, 0x03	; 3
    49a0:	51 05       	cpc	r21, r1
    49a2:	44 f4       	brge	.+16     	; 0x49b4 <nrk_gpio_toggle+0x2e>
    49a4:	41 15       	cp	r20, r1
    49a6:	51 05       	cpc	r21, r1
    49a8:	91 f0       	breq	.+36     	; 0x49ce <nrk_gpio_toggle+0x48>
    49aa:	41 30       	cpi	r20, 0x01	; 1
    49ac:	51 05       	cpc	r21, r1
    49ae:	09 f0       	breq	.+2      	; 0x49b2 <nrk_gpio_toggle+0x2c>
    49b0:	f0 c0       	rjmp	.+480    	; 0x4b92 <nrk_gpio_toggle+0x20c>
    49b2:	34 c0       	rjmp	.+104    	; 0x4a1c <nrk_gpio_toggle+0x96>
    49b4:	44 30       	cpi	r20, 0x04	; 4
    49b6:	51 05       	cpc	r21, r1
    49b8:	09 f4       	brne	.+2      	; 0x49bc <nrk_gpio_toggle+0x36>
    49ba:	9b c0       	rjmp	.+310    	; 0x4af2 <nrk_gpio_toggle+0x16c>
    49bc:	44 30       	cpi	r20, 0x04	; 4
    49be:	51 05       	cpc	r21, r1
    49c0:	0c f4       	brge	.+2      	; 0x49c4 <nrk_gpio_toggle+0x3e>
    49c2:	70 c0       	rjmp	.+224    	; 0x4aa4 <nrk_gpio_toggle+0x11e>
    49c4:	45 30       	cpi	r20, 0x05	; 5
    49c6:	51 05       	cpc	r21, r1
    49c8:	09 f0       	breq	.+2      	; 0x49cc <nrk_gpio_toggle+0x46>
    49ca:	e3 c0       	rjmp	.+454    	; 0x4b92 <nrk_gpio_toggle+0x20c>
    49cc:	b9 c0       	rjmp	.+370    	; 0x4b40 <nrk_gpio_toggle+0x1ba>
    49ce:	80 b1       	in	r24, 0x00	; 0
    49d0:	a9 01       	movw	r20, r18
    49d2:	73 e0       	ldi	r23, 0x03	; 3
    49d4:	56 95       	lsr	r21
    49d6:	47 95       	ror	r20
    49d8:	7a 95       	dec	r23
    49da:	e1 f7       	brne	.-8      	; 0x49d4 <nrk_gpio_toggle+0x4e>
    49dc:	99 27       	eor	r25, r25
    49de:	04 2e       	mov	r0, r20
    49e0:	02 c0       	rjmp	.+4      	; 0x49e6 <nrk_gpio_toggle+0x60>
    49e2:	95 95       	asr	r25
    49e4:	87 95       	ror	r24
    49e6:	0a 94       	dec	r0
    49e8:	e2 f7       	brpl	.-8      	; 0x49e2 <nrk_gpio_toggle+0x5c>
    49ea:	80 fd       	sbrc	r24, 0
    49ec:	0b c0       	rjmp	.+22     	; 0x4a04 <nrk_gpio_toggle+0x7e>
    49ee:	22 b1       	in	r18, 0x02	; 2
    49f0:	81 e0       	ldi	r24, 0x01	; 1
    49f2:	90 e0       	ldi	r25, 0x00	; 0
    49f4:	02 c0       	rjmp	.+4      	; 0x49fa <nrk_gpio_toggle+0x74>
    49f6:	88 0f       	add	r24, r24
    49f8:	99 1f       	adc	r25, r25
    49fa:	4a 95       	dec	r20
    49fc:	e2 f7       	brpl	.-8      	; 0x49f6 <nrk_gpio_toggle+0x70>
    49fe:	28 2b       	or	r18, r24
    4a00:	22 b9       	out	0x02, r18	; 2
    4a02:	c4 c0       	rjmp	.+392    	; 0x4b8c <nrk_gpio_toggle+0x206>
    4a04:	22 b1       	in	r18, 0x02	; 2
    4a06:	81 e0       	ldi	r24, 0x01	; 1
    4a08:	90 e0       	ldi	r25, 0x00	; 0
    4a0a:	02 c0       	rjmp	.+4      	; 0x4a10 <nrk_gpio_toggle+0x8a>
    4a0c:	88 0f       	add	r24, r24
    4a0e:	99 1f       	adc	r25, r25
    4a10:	4a 95       	dec	r20
    4a12:	e2 f7       	brpl	.-8      	; 0x4a0c <nrk_gpio_toggle+0x86>
    4a14:	80 95       	com	r24
    4a16:	82 23       	and	r24, r18
    4a18:	82 b9       	out	0x02, r24	; 2
    4a1a:	b8 c0       	rjmp	.+368    	; 0x4b8c <nrk_gpio_toggle+0x206>
    4a1c:	83 b1       	in	r24, 0x03	; 3
    4a1e:	63 e0       	ldi	r22, 0x03	; 3
    4a20:	36 95       	lsr	r19
    4a22:	27 95       	ror	r18
    4a24:	6a 95       	dec	r22
    4a26:	e1 f7       	brne	.-8      	; 0x4a20 <nrk_gpio_toggle+0x9a>
    4a28:	99 27       	eor	r25, r25
    4a2a:	02 2e       	mov	r0, r18
    4a2c:	02 c0       	rjmp	.+4      	; 0x4a32 <nrk_gpio_toggle+0xac>
    4a2e:	95 95       	asr	r25
    4a30:	87 95       	ror	r24
    4a32:	0a 94       	dec	r0
    4a34:	e2 f7       	brpl	.-8      	; 0x4a2e <nrk_gpio_toggle+0xa8>
    4a36:	02 c0       	rjmp	.+4      	; 0x4a3c <nrk_gpio_toggle+0xb6>
    4a38:	44 0f       	add	r20, r20
    4a3a:	55 1f       	adc	r21, r21
    4a3c:	2a 95       	dec	r18
    4a3e:	e2 f7       	brpl	.-8      	; 0x4a38 <nrk_gpio_toggle+0xb2>
    4a40:	80 fd       	sbrc	r24, 0
    4a42:	03 c0       	rjmp	.+6      	; 0x4a4a <nrk_gpio_toggle+0xc4>
    4a44:	85 b1       	in	r24, 0x05	; 5
    4a46:	84 2b       	or	r24, r20
    4a48:	04 c0       	rjmp	.+8      	; 0x4a52 <nrk_gpio_toggle+0xcc>
    4a4a:	95 b1       	in	r25, 0x05	; 5
    4a4c:	84 2f       	mov	r24, r20
    4a4e:	80 95       	com	r24
    4a50:	89 23       	and	r24, r25
    4a52:	85 b9       	out	0x05, r24	; 5
    4a54:	9b c0       	rjmp	.+310    	; 0x4b8c <nrk_gpio_toggle+0x206>
    4a56:	86 b1       	in	r24, 0x06	; 6
    4a58:	a9 01       	movw	r20, r18
    4a5a:	93 e0       	ldi	r25, 0x03	; 3
    4a5c:	56 95       	lsr	r21
    4a5e:	47 95       	ror	r20
    4a60:	9a 95       	dec	r25
    4a62:	e1 f7       	brne	.-8      	; 0x4a5c <nrk_gpio_toggle+0xd6>
    4a64:	99 27       	eor	r25, r25
    4a66:	04 2e       	mov	r0, r20
    4a68:	02 c0       	rjmp	.+4      	; 0x4a6e <nrk_gpio_toggle+0xe8>
    4a6a:	95 95       	asr	r25
    4a6c:	87 95       	ror	r24
    4a6e:	0a 94       	dec	r0
    4a70:	e2 f7       	brpl	.-8      	; 0x4a6a <nrk_gpio_toggle+0xe4>
    4a72:	80 fd       	sbrc	r24, 0
    4a74:	0b c0       	rjmp	.+22     	; 0x4a8c <nrk_gpio_toggle+0x106>
    4a76:	28 b1       	in	r18, 0x08	; 8
    4a78:	81 e0       	ldi	r24, 0x01	; 1
    4a7a:	90 e0       	ldi	r25, 0x00	; 0
    4a7c:	02 c0       	rjmp	.+4      	; 0x4a82 <nrk_gpio_toggle+0xfc>
    4a7e:	88 0f       	add	r24, r24
    4a80:	99 1f       	adc	r25, r25
    4a82:	4a 95       	dec	r20
    4a84:	e2 f7       	brpl	.-8      	; 0x4a7e <nrk_gpio_toggle+0xf8>
    4a86:	28 2b       	or	r18, r24
    4a88:	28 b9       	out	0x08, r18	; 8
    4a8a:	80 c0       	rjmp	.+256    	; 0x4b8c <nrk_gpio_toggle+0x206>
    4a8c:	28 b1       	in	r18, 0x08	; 8
    4a8e:	81 e0       	ldi	r24, 0x01	; 1
    4a90:	90 e0       	ldi	r25, 0x00	; 0
    4a92:	02 c0       	rjmp	.+4      	; 0x4a98 <nrk_gpio_toggle+0x112>
    4a94:	88 0f       	add	r24, r24
    4a96:	99 1f       	adc	r25, r25
    4a98:	4a 95       	dec	r20
    4a9a:	e2 f7       	brpl	.-8      	; 0x4a94 <nrk_gpio_toggle+0x10e>
    4a9c:	80 95       	com	r24
    4a9e:	82 23       	and	r24, r18
    4aa0:	88 b9       	out	0x08, r24	; 8
    4aa2:	74 c0       	rjmp	.+232    	; 0x4b8c <nrk_gpio_toggle+0x206>
    4aa4:	89 b1       	in	r24, 0x09	; 9
    4aa6:	a9 01       	movw	r20, r18
    4aa8:	b3 e0       	ldi	r27, 0x03	; 3
    4aaa:	56 95       	lsr	r21
    4aac:	47 95       	ror	r20
    4aae:	ba 95       	dec	r27
    4ab0:	e1 f7       	brne	.-8      	; 0x4aaa <nrk_gpio_toggle+0x124>
    4ab2:	99 27       	eor	r25, r25
    4ab4:	04 2e       	mov	r0, r20
    4ab6:	02 c0       	rjmp	.+4      	; 0x4abc <nrk_gpio_toggle+0x136>
    4ab8:	95 95       	asr	r25
    4aba:	87 95       	ror	r24
    4abc:	0a 94       	dec	r0
    4abe:	e2 f7       	brpl	.-8      	; 0x4ab8 <nrk_gpio_toggle+0x132>
    4ac0:	80 fd       	sbrc	r24, 0
    4ac2:	0b c0       	rjmp	.+22     	; 0x4ada <nrk_gpio_toggle+0x154>
    4ac4:	2b b1       	in	r18, 0x0b	; 11
    4ac6:	81 e0       	ldi	r24, 0x01	; 1
    4ac8:	90 e0       	ldi	r25, 0x00	; 0
    4aca:	02 c0       	rjmp	.+4      	; 0x4ad0 <nrk_gpio_toggle+0x14a>
    4acc:	88 0f       	add	r24, r24
    4ace:	99 1f       	adc	r25, r25
    4ad0:	4a 95       	dec	r20
    4ad2:	e2 f7       	brpl	.-8      	; 0x4acc <nrk_gpio_toggle+0x146>
    4ad4:	28 2b       	or	r18, r24
    4ad6:	2b b9       	out	0x0b, r18	; 11
    4ad8:	59 c0       	rjmp	.+178    	; 0x4b8c <nrk_gpio_toggle+0x206>
    4ada:	2b b1       	in	r18, 0x0b	; 11
    4adc:	81 e0       	ldi	r24, 0x01	; 1
    4ade:	90 e0       	ldi	r25, 0x00	; 0
    4ae0:	02 c0       	rjmp	.+4      	; 0x4ae6 <nrk_gpio_toggle+0x160>
    4ae2:	88 0f       	add	r24, r24
    4ae4:	99 1f       	adc	r25, r25
    4ae6:	4a 95       	dec	r20
    4ae8:	e2 f7       	brpl	.-8      	; 0x4ae2 <nrk_gpio_toggle+0x15c>
    4aea:	80 95       	com	r24
    4aec:	82 23       	and	r24, r18
    4aee:	8b b9       	out	0x0b, r24	; 11
    4af0:	4d c0       	rjmp	.+154    	; 0x4b8c <nrk_gpio_toggle+0x206>
    4af2:	8c b1       	in	r24, 0x0c	; 12
    4af4:	a9 01       	movw	r20, r18
    4af6:	a3 e0       	ldi	r26, 0x03	; 3
    4af8:	56 95       	lsr	r21
    4afa:	47 95       	ror	r20
    4afc:	aa 95       	dec	r26
    4afe:	e1 f7       	brne	.-8      	; 0x4af8 <nrk_gpio_toggle+0x172>
    4b00:	99 27       	eor	r25, r25
    4b02:	04 2e       	mov	r0, r20
    4b04:	02 c0       	rjmp	.+4      	; 0x4b0a <nrk_gpio_toggle+0x184>
    4b06:	95 95       	asr	r25
    4b08:	87 95       	ror	r24
    4b0a:	0a 94       	dec	r0
    4b0c:	e2 f7       	brpl	.-8      	; 0x4b06 <nrk_gpio_toggle+0x180>
    4b0e:	80 fd       	sbrc	r24, 0
    4b10:	0b c0       	rjmp	.+22     	; 0x4b28 <nrk_gpio_toggle+0x1a2>
    4b12:	2e b1       	in	r18, 0x0e	; 14
    4b14:	81 e0       	ldi	r24, 0x01	; 1
    4b16:	90 e0       	ldi	r25, 0x00	; 0
    4b18:	02 c0       	rjmp	.+4      	; 0x4b1e <nrk_gpio_toggle+0x198>
    4b1a:	88 0f       	add	r24, r24
    4b1c:	99 1f       	adc	r25, r25
    4b1e:	4a 95       	dec	r20
    4b20:	e2 f7       	brpl	.-8      	; 0x4b1a <nrk_gpio_toggle+0x194>
    4b22:	28 2b       	or	r18, r24
    4b24:	2e b9       	out	0x0e, r18	; 14
    4b26:	32 c0       	rjmp	.+100    	; 0x4b8c <nrk_gpio_toggle+0x206>
    4b28:	2e b1       	in	r18, 0x0e	; 14
    4b2a:	81 e0       	ldi	r24, 0x01	; 1
    4b2c:	90 e0       	ldi	r25, 0x00	; 0
    4b2e:	02 c0       	rjmp	.+4      	; 0x4b34 <nrk_gpio_toggle+0x1ae>
    4b30:	88 0f       	add	r24, r24
    4b32:	99 1f       	adc	r25, r25
    4b34:	4a 95       	dec	r20
    4b36:	e2 f7       	brpl	.-8      	; 0x4b30 <nrk_gpio_toggle+0x1aa>
    4b38:	80 95       	com	r24
    4b3a:	82 23       	and	r24, r18
    4b3c:	8e b9       	out	0x0e, r24	; 14
    4b3e:	26 c0       	rjmp	.+76     	; 0x4b8c <nrk_gpio_toggle+0x206>
    4b40:	8f b1       	in	r24, 0x0f	; 15
    4b42:	a9 01       	movw	r20, r18
    4b44:	f3 e0       	ldi	r31, 0x03	; 3
    4b46:	56 95       	lsr	r21
    4b48:	47 95       	ror	r20
    4b4a:	fa 95       	dec	r31
    4b4c:	e1 f7       	brne	.-8      	; 0x4b46 <nrk_gpio_toggle+0x1c0>
    4b4e:	99 27       	eor	r25, r25
    4b50:	04 2e       	mov	r0, r20
    4b52:	02 c0       	rjmp	.+4      	; 0x4b58 <nrk_gpio_toggle+0x1d2>
    4b54:	95 95       	asr	r25
    4b56:	87 95       	ror	r24
    4b58:	0a 94       	dec	r0
    4b5a:	e2 f7       	brpl	.-8      	; 0x4b54 <nrk_gpio_toggle+0x1ce>
    4b5c:	80 fd       	sbrc	r24, 0
    4b5e:	0b c0       	rjmp	.+22     	; 0x4b76 <nrk_gpio_toggle+0x1f0>
    4b60:	21 b3       	in	r18, 0x11	; 17
    4b62:	81 e0       	ldi	r24, 0x01	; 1
    4b64:	90 e0       	ldi	r25, 0x00	; 0
    4b66:	02 c0       	rjmp	.+4      	; 0x4b6c <nrk_gpio_toggle+0x1e6>
    4b68:	88 0f       	add	r24, r24
    4b6a:	99 1f       	adc	r25, r25
    4b6c:	4a 95       	dec	r20
    4b6e:	e2 f7       	brpl	.-8      	; 0x4b68 <nrk_gpio_toggle+0x1e2>
    4b70:	28 2b       	or	r18, r24
    4b72:	21 bb       	out	0x11, r18	; 17
    4b74:	0b c0       	rjmp	.+22     	; 0x4b8c <nrk_gpio_toggle+0x206>
    4b76:	21 b3       	in	r18, 0x11	; 17
    4b78:	81 e0       	ldi	r24, 0x01	; 1
    4b7a:	90 e0       	ldi	r25, 0x00	; 0
    4b7c:	02 c0       	rjmp	.+4      	; 0x4b82 <nrk_gpio_toggle+0x1fc>
    4b7e:	88 0f       	add	r24, r24
    4b80:	99 1f       	adc	r25, r25
    4b82:	4a 95       	dec	r20
    4b84:	e2 f7       	brpl	.-8      	; 0x4b7e <nrk_gpio_toggle+0x1f8>
    4b86:	80 95       	com	r24
    4b88:	82 23       	and	r24, r18
    4b8a:	81 bb       	out	0x11, r24	; 17
    4b8c:	81 e0       	ldi	r24, 0x01	; 1
    4b8e:	90 e0       	ldi	r25, 0x00	; 0
    4b90:	08 95       	ret
    4b92:	8f ef       	ldi	r24, 0xFF	; 255
    4b94:	9f ef       	ldi	r25, 0xFF	; 255
    4b96:	08 95       	ret

00004b98 <nrk_gpio_direction>:
    4b98:	8f 3f       	cpi	r24, 0xFF	; 255
    4b9a:	09 f4       	brne	.+2      	; 0x4b9e <nrk_gpio_direction+0x6>
    4b9c:	12 c1       	rjmp	.+548    	; 0x4dc2 <nrk_gpio_direction+0x22a>
    4b9e:	48 2f       	mov	r20, r24
    4ba0:	55 27       	eor	r21, r21
    4ba2:	66 23       	and	r22, r22
    4ba4:	09 f0       	breq	.+2      	; 0x4ba8 <nrk_gpio_direction+0x10>
    4ba6:	90 c0       	rjmp	.+288    	; 0x4cc8 <nrk_gpio_direction+0x130>
    4ba8:	ca 01       	movw	r24, r20
    4baa:	87 70       	andi	r24, 0x07	; 7
    4bac:	90 70       	andi	r25, 0x00	; 0
    4bae:	82 30       	cpi	r24, 0x02	; 2
    4bb0:	91 05       	cpc	r25, r1
    4bb2:	09 f4       	brne	.+2      	; 0x4bb6 <nrk_gpio_direction+0x1e>
    4bb4:	3e c0       	rjmp	.+124    	; 0x4c32 <nrk_gpio_direction+0x9a>
    4bb6:	83 30       	cpi	r24, 0x03	; 3
    4bb8:	91 05       	cpc	r25, r1
    4bba:	3c f4       	brge	.+14     	; 0x4bca <nrk_gpio_direction+0x32>
    4bbc:	00 97       	sbiw	r24, 0x00	; 0
    4bbe:	89 f0       	breq	.+34     	; 0x4be2 <nrk_gpio_direction+0x4a>
    4bc0:	81 30       	cpi	r24, 0x01	; 1
    4bc2:	91 05       	cpc	r25, r1
    4bc4:	09 f0       	breq	.+2      	; 0x4bc8 <nrk_gpio_direction+0x30>
    4bc6:	fd c0       	rjmp	.+506    	; 0x4dc2 <nrk_gpio_direction+0x22a>
    4bc8:	21 c0       	rjmp	.+66     	; 0x4c0c <nrk_gpio_direction+0x74>
    4bca:	84 30       	cpi	r24, 0x04	; 4
    4bcc:	91 05       	cpc	r25, r1
    4bce:	09 f4       	brne	.+2      	; 0x4bd2 <nrk_gpio_direction+0x3a>
    4bd0:	54 c0       	rjmp	.+168    	; 0x4c7a <nrk_gpio_direction+0xe2>
    4bd2:	84 30       	cpi	r24, 0x04	; 4
    4bd4:	91 05       	cpc	r25, r1
    4bd6:	0c f4       	brge	.+2      	; 0x4bda <nrk_gpio_direction+0x42>
    4bd8:	3e c0       	rjmp	.+124    	; 0x4c56 <nrk_gpio_direction+0xbe>
    4bda:	05 97       	sbiw	r24, 0x05	; 5
    4bdc:	09 f0       	breq	.+2      	; 0x4be0 <nrk_gpio_direction+0x48>
    4bde:	f1 c0       	rjmp	.+482    	; 0x4dc2 <nrk_gpio_direction+0x22a>
    4be0:	5e c0       	rjmp	.+188    	; 0x4c9e <nrk_gpio_direction+0x106>
    4be2:	31 b1       	in	r19, 0x01	; 1
    4be4:	b3 e0       	ldi	r27, 0x03	; 3
    4be6:	56 95       	lsr	r21
    4be8:	47 95       	ror	r20
    4bea:	ba 95       	dec	r27
    4bec:	e1 f7       	brne	.-8      	; 0x4be6 <nrk_gpio_direction+0x4e>
    4bee:	81 e0       	ldi	r24, 0x01	; 1
    4bf0:	90 e0       	ldi	r25, 0x00	; 0
    4bf2:	02 c0       	rjmp	.+4      	; 0x4bf8 <nrk_gpio_direction+0x60>
    4bf4:	88 0f       	add	r24, r24
    4bf6:	99 1f       	adc	r25, r25
    4bf8:	4a 95       	dec	r20
    4bfa:	e2 f7       	brpl	.-8      	; 0x4bf4 <nrk_gpio_direction+0x5c>
    4bfc:	28 2f       	mov	r18, r24
    4bfe:	20 95       	com	r18
    4c00:	23 23       	and	r18, r19
    4c02:	21 b9       	out	0x01, r18	; 1
    4c04:	22 b1       	in	r18, 0x02	; 2
    4c06:	82 2b       	or	r24, r18
    4c08:	82 b9       	out	0x02, r24	; 2
    4c0a:	d8 c0       	rjmp	.+432    	; 0x4dbc <nrk_gpio_direction+0x224>
    4c0c:	24 b1       	in	r18, 0x04	; 4
    4c0e:	a3 e0       	ldi	r26, 0x03	; 3
    4c10:	56 95       	lsr	r21
    4c12:	47 95       	ror	r20
    4c14:	aa 95       	dec	r26
    4c16:	e1 f7       	brne	.-8      	; 0x4c10 <nrk_gpio_direction+0x78>
    4c18:	02 c0       	rjmp	.+4      	; 0x4c1e <nrk_gpio_direction+0x86>
    4c1a:	88 0f       	add	r24, r24
    4c1c:	99 1f       	adc	r25, r25
    4c1e:	4a 95       	dec	r20
    4c20:	e2 f7       	brpl	.-8      	; 0x4c1a <nrk_gpio_direction+0x82>
    4c22:	98 2f       	mov	r25, r24
    4c24:	80 95       	com	r24
    4c26:	82 23       	and	r24, r18
    4c28:	84 b9       	out	0x04, r24	; 4
    4c2a:	85 b1       	in	r24, 0x05	; 5
    4c2c:	98 2b       	or	r25, r24
    4c2e:	95 b9       	out	0x05, r25	; 5
    4c30:	c5 c0       	rjmp	.+394    	; 0x4dbc <nrk_gpio_direction+0x224>
    4c32:	37 b1       	in	r19, 0x07	; 7
    4c34:	f3 e0       	ldi	r31, 0x03	; 3
    4c36:	56 95       	lsr	r21
    4c38:	47 95       	ror	r20
    4c3a:	fa 95       	dec	r31
    4c3c:	e1 f7       	brne	.-8      	; 0x4c36 <nrk_gpio_direction+0x9e>
    4c3e:	81 e0       	ldi	r24, 0x01	; 1
    4c40:	90 e0       	ldi	r25, 0x00	; 0
    4c42:	02 c0       	rjmp	.+4      	; 0x4c48 <nrk_gpio_direction+0xb0>
    4c44:	88 0f       	add	r24, r24
    4c46:	99 1f       	adc	r25, r25
    4c48:	4a 95       	dec	r20
    4c4a:	e2 f7       	brpl	.-8      	; 0x4c44 <nrk_gpio_direction+0xac>
    4c4c:	28 2f       	mov	r18, r24
    4c4e:	20 95       	com	r18
    4c50:	23 23       	and	r18, r19
    4c52:	27 b9       	out	0x07, r18	; 7
    4c54:	35 c0       	rjmp	.+106    	; 0x4cc0 <nrk_gpio_direction+0x128>
    4c56:	3a b1       	in	r19, 0x0a	; 10
    4c58:	e3 e0       	ldi	r30, 0x03	; 3
    4c5a:	56 95       	lsr	r21
    4c5c:	47 95       	ror	r20
    4c5e:	ea 95       	dec	r30
    4c60:	e1 f7       	brne	.-8      	; 0x4c5a <nrk_gpio_direction+0xc2>
    4c62:	81 e0       	ldi	r24, 0x01	; 1
    4c64:	90 e0       	ldi	r25, 0x00	; 0
    4c66:	02 c0       	rjmp	.+4      	; 0x4c6c <nrk_gpio_direction+0xd4>
    4c68:	88 0f       	add	r24, r24
    4c6a:	99 1f       	adc	r25, r25
    4c6c:	4a 95       	dec	r20
    4c6e:	e2 f7       	brpl	.-8      	; 0x4c68 <nrk_gpio_direction+0xd0>
    4c70:	28 2f       	mov	r18, r24
    4c72:	20 95       	com	r18
    4c74:	23 23       	and	r18, r19
    4c76:	2a b9       	out	0x0a, r18	; 10
    4c78:	23 c0       	rjmp	.+70     	; 0x4cc0 <nrk_gpio_direction+0x128>
    4c7a:	3d b1       	in	r19, 0x0d	; 13
    4c7c:	73 e0       	ldi	r23, 0x03	; 3
    4c7e:	56 95       	lsr	r21
    4c80:	47 95       	ror	r20
    4c82:	7a 95       	dec	r23
    4c84:	e1 f7       	brne	.-8      	; 0x4c7e <nrk_gpio_direction+0xe6>
    4c86:	81 e0       	ldi	r24, 0x01	; 1
    4c88:	90 e0       	ldi	r25, 0x00	; 0
    4c8a:	02 c0       	rjmp	.+4      	; 0x4c90 <nrk_gpio_direction+0xf8>
    4c8c:	88 0f       	add	r24, r24
    4c8e:	99 1f       	adc	r25, r25
    4c90:	4a 95       	dec	r20
    4c92:	e2 f7       	brpl	.-8      	; 0x4c8c <nrk_gpio_direction+0xf4>
    4c94:	28 2f       	mov	r18, r24
    4c96:	20 95       	com	r18
    4c98:	23 23       	and	r18, r19
    4c9a:	2d b9       	out	0x0d, r18	; 13
    4c9c:	11 c0       	rjmp	.+34     	; 0x4cc0 <nrk_gpio_direction+0x128>
    4c9e:	30 b3       	in	r19, 0x10	; 16
    4ca0:	63 e0       	ldi	r22, 0x03	; 3
    4ca2:	56 95       	lsr	r21
    4ca4:	47 95       	ror	r20
    4ca6:	6a 95       	dec	r22
    4ca8:	e1 f7       	brne	.-8      	; 0x4ca2 <nrk_gpio_direction+0x10a>
    4caa:	81 e0       	ldi	r24, 0x01	; 1
    4cac:	90 e0       	ldi	r25, 0x00	; 0
    4cae:	02 c0       	rjmp	.+4      	; 0x4cb4 <nrk_gpio_direction+0x11c>
    4cb0:	88 0f       	add	r24, r24
    4cb2:	99 1f       	adc	r25, r25
    4cb4:	4a 95       	dec	r20
    4cb6:	e2 f7       	brpl	.-8      	; 0x4cb0 <nrk_gpio_direction+0x118>
    4cb8:	28 2f       	mov	r18, r24
    4cba:	20 95       	com	r18
    4cbc:	23 23       	and	r18, r19
    4cbe:	20 bb       	out	0x10, r18	; 16
    4cc0:	25 b1       	in	r18, 0x05	; 5
    4cc2:	82 2b       	or	r24, r18
    4cc4:	85 b9       	out	0x05, r24	; 5
    4cc6:	7a c0       	rjmp	.+244    	; 0x4dbc <nrk_gpio_direction+0x224>
    4cc8:	9a 01       	movw	r18, r20
    4cca:	27 70       	andi	r18, 0x07	; 7
    4ccc:	30 70       	andi	r19, 0x00	; 0
    4cce:	22 30       	cpi	r18, 0x02	; 2
    4cd0:	31 05       	cpc	r19, r1
    4cd2:	a9 f1       	breq	.+106    	; 0x4d3e <nrk_gpio_direction+0x1a6>
    4cd4:	23 30       	cpi	r18, 0x03	; 3
    4cd6:	31 05       	cpc	r19, r1
    4cd8:	44 f4       	brge	.+16     	; 0x4cea <nrk_gpio_direction+0x152>
    4cda:	21 15       	cp	r18, r1
    4cdc:	31 05       	cpc	r19, r1
    4cde:	89 f0       	breq	.+34     	; 0x4d02 <nrk_gpio_direction+0x16a>
    4ce0:	21 30       	cpi	r18, 0x01	; 1
    4ce2:	31 05       	cpc	r19, r1
    4ce4:	09 f0       	breq	.+2      	; 0x4ce8 <nrk_gpio_direction+0x150>
    4ce6:	6d c0       	rjmp	.+218    	; 0x4dc2 <nrk_gpio_direction+0x22a>
    4ce8:	1c c0       	rjmp	.+56     	; 0x4d22 <nrk_gpio_direction+0x18a>
    4cea:	24 30       	cpi	r18, 0x04	; 4
    4cec:	31 05       	cpc	r19, r1
    4cee:	09 f4       	brne	.+2      	; 0x4cf2 <nrk_gpio_direction+0x15a>
    4cf0:	46 c0       	rjmp	.+140    	; 0x4d7e <nrk_gpio_direction+0x1e6>
    4cf2:	24 30       	cpi	r18, 0x04	; 4
    4cf4:	31 05       	cpc	r19, r1
    4cf6:	9c f1       	brlt	.+102    	; 0x4d5e <nrk_gpio_direction+0x1c6>
    4cf8:	25 30       	cpi	r18, 0x05	; 5
    4cfa:	31 05       	cpc	r19, r1
    4cfc:	09 f0       	breq	.+2      	; 0x4d00 <nrk_gpio_direction+0x168>
    4cfe:	61 c0       	rjmp	.+194    	; 0x4dc2 <nrk_gpio_direction+0x22a>
    4d00:	4e c0       	rjmp	.+156    	; 0x4d9e <nrk_gpio_direction+0x206>
    4d02:	21 b1       	in	r18, 0x01	; 1
    4d04:	33 e0       	ldi	r19, 0x03	; 3
    4d06:	56 95       	lsr	r21
    4d08:	47 95       	ror	r20
    4d0a:	3a 95       	dec	r19
    4d0c:	e1 f7       	brne	.-8      	; 0x4d06 <nrk_gpio_direction+0x16e>
    4d0e:	81 e0       	ldi	r24, 0x01	; 1
    4d10:	90 e0       	ldi	r25, 0x00	; 0
    4d12:	02 c0       	rjmp	.+4      	; 0x4d18 <nrk_gpio_direction+0x180>
    4d14:	88 0f       	add	r24, r24
    4d16:	99 1f       	adc	r25, r25
    4d18:	4a 95       	dec	r20
    4d1a:	e2 f7       	brpl	.-8      	; 0x4d14 <nrk_gpio_direction+0x17c>
    4d1c:	28 2b       	or	r18, r24
    4d1e:	21 b9       	out	0x01, r18	; 1
    4d20:	4d c0       	rjmp	.+154    	; 0x4dbc <nrk_gpio_direction+0x224>
    4d22:	84 b1       	in	r24, 0x04	; 4
    4d24:	93 e0       	ldi	r25, 0x03	; 3
    4d26:	56 95       	lsr	r21
    4d28:	47 95       	ror	r20
    4d2a:	9a 95       	dec	r25
    4d2c:	e1 f7       	brne	.-8      	; 0x4d26 <nrk_gpio_direction+0x18e>
    4d2e:	02 c0       	rjmp	.+4      	; 0x4d34 <nrk_gpio_direction+0x19c>
    4d30:	22 0f       	add	r18, r18
    4d32:	33 1f       	adc	r19, r19
    4d34:	4a 95       	dec	r20
    4d36:	e2 f7       	brpl	.-8      	; 0x4d30 <nrk_gpio_direction+0x198>
    4d38:	82 2b       	or	r24, r18
    4d3a:	84 b9       	out	0x04, r24	; 4
    4d3c:	3f c0       	rjmp	.+126    	; 0x4dbc <nrk_gpio_direction+0x224>
    4d3e:	27 b1       	in	r18, 0x07	; 7
    4d40:	b3 e0       	ldi	r27, 0x03	; 3
    4d42:	56 95       	lsr	r21
    4d44:	47 95       	ror	r20
    4d46:	ba 95       	dec	r27
    4d48:	e1 f7       	brne	.-8      	; 0x4d42 <nrk_gpio_direction+0x1aa>
    4d4a:	81 e0       	ldi	r24, 0x01	; 1
    4d4c:	90 e0       	ldi	r25, 0x00	; 0
    4d4e:	02 c0       	rjmp	.+4      	; 0x4d54 <nrk_gpio_direction+0x1bc>
    4d50:	88 0f       	add	r24, r24
    4d52:	99 1f       	adc	r25, r25
    4d54:	4a 95       	dec	r20
    4d56:	e2 f7       	brpl	.-8      	; 0x4d50 <nrk_gpio_direction+0x1b8>
    4d58:	28 2b       	or	r18, r24
    4d5a:	27 b9       	out	0x07, r18	; 7
    4d5c:	2f c0       	rjmp	.+94     	; 0x4dbc <nrk_gpio_direction+0x224>
    4d5e:	2a b1       	in	r18, 0x0a	; 10
    4d60:	a3 e0       	ldi	r26, 0x03	; 3
    4d62:	56 95       	lsr	r21
    4d64:	47 95       	ror	r20
    4d66:	aa 95       	dec	r26
    4d68:	e1 f7       	brne	.-8      	; 0x4d62 <nrk_gpio_direction+0x1ca>
    4d6a:	81 e0       	ldi	r24, 0x01	; 1
    4d6c:	90 e0       	ldi	r25, 0x00	; 0
    4d6e:	02 c0       	rjmp	.+4      	; 0x4d74 <nrk_gpio_direction+0x1dc>
    4d70:	88 0f       	add	r24, r24
    4d72:	99 1f       	adc	r25, r25
    4d74:	4a 95       	dec	r20
    4d76:	e2 f7       	brpl	.-8      	; 0x4d70 <nrk_gpio_direction+0x1d8>
    4d78:	28 2b       	or	r18, r24
    4d7a:	2a b9       	out	0x0a, r18	; 10
    4d7c:	1f c0       	rjmp	.+62     	; 0x4dbc <nrk_gpio_direction+0x224>
    4d7e:	2d b1       	in	r18, 0x0d	; 13
    4d80:	f3 e0       	ldi	r31, 0x03	; 3
    4d82:	56 95       	lsr	r21
    4d84:	47 95       	ror	r20
    4d86:	fa 95       	dec	r31
    4d88:	e1 f7       	brne	.-8      	; 0x4d82 <nrk_gpio_direction+0x1ea>
    4d8a:	81 e0       	ldi	r24, 0x01	; 1
    4d8c:	90 e0       	ldi	r25, 0x00	; 0
    4d8e:	02 c0       	rjmp	.+4      	; 0x4d94 <nrk_gpio_direction+0x1fc>
    4d90:	88 0f       	add	r24, r24
    4d92:	99 1f       	adc	r25, r25
    4d94:	4a 95       	dec	r20
    4d96:	e2 f7       	brpl	.-8      	; 0x4d90 <nrk_gpio_direction+0x1f8>
    4d98:	28 2b       	or	r18, r24
    4d9a:	2d b9       	out	0x0d, r18	; 13
    4d9c:	0f c0       	rjmp	.+30     	; 0x4dbc <nrk_gpio_direction+0x224>
    4d9e:	20 b3       	in	r18, 0x10	; 16
    4da0:	e3 e0       	ldi	r30, 0x03	; 3
    4da2:	56 95       	lsr	r21
    4da4:	47 95       	ror	r20
    4da6:	ea 95       	dec	r30
    4da8:	e1 f7       	brne	.-8      	; 0x4da2 <nrk_gpio_direction+0x20a>
    4daa:	81 e0       	ldi	r24, 0x01	; 1
    4dac:	90 e0       	ldi	r25, 0x00	; 0
    4dae:	02 c0       	rjmp	.+4      	; 0x4db4 <nrk_gpio_direction+0x21c>
    4db0:	88 0f       	add	r24, r24
    4db2:	99 1f       	adc	r25, r25
    4db4:	4a 95       	dec	r20
    4db6:	e2 f7       	brpl	.-8      	; 0x4db0 <nrk_gpio_direction+0x218>
    4db8:	28 2b       	or	r18, r24
    4dba:	20 bb       	out	0x10, r18	; 16
    4dbc:	81 e0       	ldi	r24, 0x01	; 1
    4dbe:	90 e0       	ldi	r25, 0x00	; 0
    4dc0:	08 95       	ret
    4dc2:	8f ef       	ldi	r24, 0xFF	; 255
    4dc4:	9f ef       	ldi	r25, 0xFF	; 255
    4dc6:	08 95       	ret

00004dc8 <nrk_get_button>:
    4dc8:	88 23       	and	r24, r24
    4dca:	19 f0       	breq	.+6      	; 0x4dd2 <nrk_get_button+0xa>
    4dcc:	8f ef       	ldi	r24, 0xFF	; 255
    4dce:	9f ef       	ldi	r25, 0xFF	; 255
    4dd0:	08 95       	ret
    4dd2:	80 b1       	in	r24, 0x00	; 0
    4dd4:	99 27       	eor	r25, r25
    4dd6:	87 fd       	sbrc	r24, 7
    4dd8:	90 95       	com	r25
    4dda:	80 95       	com	r24
    4ddc:	90 95       	com	r25
    4dde:	88 27       	eor	r24, r24
    4de0:	99 0f       	add	r25, r25
    4de2:	88 1f       	adc	r24, r24
    4de4:	99 27       	eor	r25, r25
    4de6:	08 95       	ret

00004de8 <nrk_led_toggle>:
    4de8:	00 97       	sbiw	r24, 0x00	; 0
    4dea:	11 f4       	brne	.+4      	; 0x4df0 <nrk_led_toggle+0x8>
    4dec:	84 e1       	ldi	r24, 0x14	; 20
    4dee:	09 c0       	rjmp	.+18     	; 0x4e02 <nrk_led_toggle+0x1a>
    4df0:	81 30       	cpi	r24, 0x01	; 1
    4df2:	91 05       	cpc	r25, r1
    4df4:	11 f4       	brne	.+4      	; 0x4dfa <nrk_led_toggle+0x12>
    4df6:	8c e1       	ldi	r24, 0x1C	; 28
    4df8:	04 c0       	rjmp	.+8      	; 0x4e02 <nrk_led_toggle+0x1a>
    4dfa:	82 30       	cpi	r24, 0x02	; 2
    4dfc:	91 05       	cpc	r25, r1
    4dfe:	31 f4       	brne	.+12     	; 0x4e0c <nrk_led_toggle+0x24>
    4e00:	84 e2       	ldi	r24, 0x24	; 36
    4e02:	0e 94 c3 24 	call	0x4986	; 0x4986 <nrk_gpio_toggle>
    4e06:	81 e0       	ldi	r24, 0x01	; 1
    4e08:	90 e0       	ldi	r25, 0x00	; 0
    4e0a:	08 95       	ret
    4e0c:	03 97       	sbiw	r24, 0x03	; 3
    4e0e:	19 f0       	breq	.+6      	; 0x4e16 <nrk_led_toggle+0x2e>
    4e10:	8f ef       	ldi	r24, 0xFF	; 255
    4e12:	9f ef       	ldi	r25, 0xFF	; 255
    4e14:	08 95       	ret
    4e16:	8c e2       	ldi	r24, 0x2C	; 44
    4e18:	0e 94 c3 24 	call	0x4986	; 0x4986 <nrk_gpio_toggle>
    4e1c:	81 e0       	ldi	r24, 0x01	; 1
    4e1e:	90 e0       	ldi	r25, 0x00	; 0
    4e20:	08 95       	ret

00004e22 <nrk_led_clr>:
    4e22:	00 97       	sbiw	r24, 0x00	; 0
    4e24:	11 f4       	brne	.+4      	; 0x4e2a <nrk_led_clr+0x8>
    4e26:	84 e1       	ldi	r24, 0x14	; 20
    4e28:	09 c0       	rjmp	.+18     	; 0x4e3c <nrk_led_clr+0x1a>
    4e2a:	81 30       	cpi	r24, 0x01	; 1
    4e2c:	91 05       	cpc	r25, r1
    4e2e:	11 f4       	brne	.+4      	; 0x4e34 <nrk_led_clr+0x12>
    4e30:	8c e1       	ldi	r24, 0x1C	; 28
    4e32:	04 c0       	rjmp	.+8      	; 0x4e3c <nrk_led_clr+0x1a>
    4e34:	82 30       	cpi	r24, 0x02	; 2
    4e36:	91 05       	cpc	r25, r1
    4e38:	31 f4       	brne	.+12     	; 0x4e46 <nrk_led_clr+0x24>
    4e3a:	84 e2       	ldi	r24, 0x24	; 36
    4e3c:	0e 94 78 23 	call	0x46f0	; 0x46f0 <nrk_gpio_set>
    4e40:	81 e0       	ldi	r24, 0x01	; 1
    4e42:	90 e0       	ldi	r25, 0x00	; 0
    4e44:	08 95       	ret
    4e46:	03 97       	sbiw	r24, 0x03	; 3
    4e48:	19 f0       	breq	.+6      	; 0x4e50 <nrk_led_clr+0x2e>
    4e4a:	8f ef       	ldi	r24, 0xFF	; 255
    4e4c:	9f ef       	ldi	r25, 0xFF	; 255
    4e4e:	08 95       	ret
    4e50:	8c e2       	ldi	r24, 0x2C	; 44
    4e52:	0e 94 78 23 	call	0x46f0	; 0x46f0 <nrk_gpio_set>
    4e56:	81 e0       	ldi	r24, 0x01	; 1
    4e58:	90 e0       	ldi	r25, 0x00	; 0
    4e5a:	08 95       	ret

00004e5c <nrk_led_set>:
    4e5c:	00 97       	sbiw	r24, 0x00	; 0
    4e5e:	11 f4       	brne	.+4      	; 0x4e64 <nrk_led_set+0x8>
    4e60:	84 e1       	ldi	r24, 0x14	; 20
    4e62:	09 c0       	rjmp	.+18     	; 0x4e76 <nrk_led_set+0x1a>
    4e64:	81 30       	cpi	r24, 0x01	; 1
    4e66:	91 05       	cpc	r25, r1
    4e68:	11 f4       	brne	.+4      	; 0x4e6e <nrk_led_set+0x12>
    4e6a:	8c e1       	ldi	r24, 0x1C	; 28
    4e6c:	04 c0       	rjmp	.+8      	; 0x4e76 <nrk_led_set+0x1a>
    4e6e:	82 30       	cpi	r24, 0x02	; 2
    4e70:	91 05       	cpc	r25, r1
    4e72:	31 f4       	brne	.+12     	; 0x4e80 <nrk_led_set+0x24>
    4e74:	84 e2       	ldi	r24, 0x24	; 36
    4e76:	0e 94 fd 23 	call	0x47fa	; 0x47fa <nrk_gpio_clr>
    4e7a:	81 e0       	ldi	r24, 0x01	; 1
    4e7c:	90 e0       	ldi	r25, 0x00	; 0
    4e7e:	08 95       	ret
    4e80:	03 97       	sbiw	r24, 0x03	; 3
    4e82:	19 f0       	breq	.+6      	; 0x4e8a <nrk_led_set+0x2e>
    4e84:	8f ef       	ldi	r24, 0xFF	; 255
    4e86:	9f ef       	ldi	r25, 0xFF	; 255
    4e88:	08 95       	ret
    4e8a:	8c e2       	ldi	r24, 0x2C	; 44
    4e8c:	0e 94 fd 23 	call	0x47fa	; 0x47fa <nrk_gpio_clr>
    4e90:	81 e0       	ldi	r24, 0x01	; 1
    4e92:	90 e0       	ldi	r25, 0x00	; 0
    4e94:	08 95       	ret

00004e96 <nrk_gpio_pullups>:
    4e96:	88 23       	and	r24, r24
    4e98:	19 f0       	breq	.+6      	; 0x4ea0 <nrk_gpio_pullups+0xa>
    4e9a:	85 b7       	in	r24, 0x35	; 53
    4e9c:	8f 7e       	andi	r24, 0xEF	; 239
    4e9e:	02 c0       	rjmp	.+4      	; 0x4ea4 <nrk_gpio_pullups+0xe>
    4ea0:	85 b7       	in	r24, 0x35	; 53
    4ea2:	80 61       	ori	r24, 0x10	; 16
    4ea4:	85 bf       	out	0x35, r24	; 53
    4ea6:	81 e0       	ldi	r24, 0x01	; 1
    4ea8:	90 e0       	ldi	r25, 0x00	; 0
    4eaa:	08 95       	ret

00004eac <putc0>:
    4eac:	98 2f       	mov	r25, r24
    4eae:	80 91 c0 00 	lds	r24, 0x00C0
    4eb2:	85 ff       	sbrs	r24, 5
    4eb4:	fc cf       	rjmp	.-8      	; 0x4eae <putc0+0x2>
    4eb6:	80 91 c0 00 	lds	r24, 0x00C0
    4eba:	8f 7d       	andi	r24, 0xDF	; 223
    4ebc:	80 93 c0 00 	sts	0x00C0, r24
    4ec0:	90 93 c6 00 	sts	0x00C6, r25
    4ec4:	08 95       	ret

00004ec6 <putc1>:
    4ec6:	98 2f       	mov	r25, r24
    4ec8:	80 91 c8 00 	lds	r24, 0x00C8
    4ecc:	85 ff       	sbrs	r24, 5
    4ece:	fc cf       	rjmp	.-8      	; 0x4ec8 <putc1+0x2>
    4ed0:	90 93 ce 00 	sts	0x00CE, r25
    4ed4:	08 95       	ret

00004ed6 <setup_uart0>:
    4ed6:	29 2f       	mov	r18, r25
    4ed8:	33 27       	eor	r19, r19
    4eda:	20 93 c5 00 	sts	0x00C5, r18
    4ede:	80 93 c4 00 	sts	0x00C4, r24
    4ee2:	86 e0       	ldi	r24, 0x06	; 6
    4ee4:	80 93 c2 00 	sts	0x00C2, r24
    4ee8:	e1 ec       	ldi	r30, 0xC1	; 193
    4eea:	f0 e0       	ldi	r31, 0x00	; 0
    4eec:	80 81       	ld	r24, Z
    4eee:	8b 7f       	andi	r24, 0xFB	; 251
    4ef0:	80 83       	st	Z, r24
    4ef2:	a0 ec       	ldi	r26, 0xC0	; 192
    4ef4:	b0 e0       	ldi	r27, 0x00	; 0
    4ef6:	8c 91       	ld	r24, X
    4ef8:	82 60       	ori	r24, 0x02	; 2
    4efa:	8c 93       	st	X, r24
    4efc:	80 81       	ld	r24, Z
    4efe:	88 61       	ori	r24, 0x18	; 24
    4f00:	80 83       	st	Z, r24
    4f02:	08 95       	ret

00004f04 <setup_uart1>:
    4f04:	29 2f       	mov	r18, r25
    4f06:	33 27       	eor	r19, r19
    4f08:	20 93 cd 00 	sts	0x00CD, r18
    4f0c:	80 93 cc 00 	sts	0x00CC, r24
    4f10:	86 e0       	ldi	r24, 0x06	; 6
    4f12:	80 93 ca 00 	sts	0x00CA, r24
    4f16:	e9 ec       	ldi	r30, 0xC9	; 201
    4f18:	f0 e0       	ldi	r31, 0x00	; 0
    4f1a:	80 81       	ld	r24, Z
    4f1c:	8b 7f       	andi	r24, 0xFB	; 251
    4f1e:	80 83       	st	Z, r24
    4f20:	a8 ec       	ldi	r26, 0xC8	; 200
    4f22:	b0 e0       	ldi	r27, 0x00	; 0
    4f24:	8c 91       	ld	r24, X
    4f26:	82 60       	ori	r24, 0x02	; 2
    4f28:	8c 93       	st	X, r24
    4f2a:	80 81       	ld	r24, Z
    4f2c:	88 61       	ori	r24, 0x18	; 24
    4f2e:	80 83       	st	Z, r24
    4f30:	08 95       	ret

00004f32 <getc0>:
    4f32:	80 91 c0 00 	lds	r24, 0x00C0
    4f36:	87 ff       	sbrs	r24, 7
    4f38:	fc cf       	rjmp	.-8      	; 0x4f32 <getc0>
    4f3a:	80 91 c0 00 	lds	r24, 0x00C0
    4f3e:	8f 77       	andi	r24, 0x7F	; 127
    4f40:	80 93 c0 00 	sts	0x00C0, r24
    4f44:	80 91 c6 00 	lds	r24, 0x00C6
    4f48:	99 27       	eor	r25, r25
    4f4a:	08 95       	ret

00004f4c <nrk_setup_uart>:
    4f4c:	0e 94 82 27 	call	0x4f04	; 0x4f04 <setup_uart1>
    4f50:	6a e1       	ldi	r22, 0x1A	; 26
    4f52:	73 e2       	ldi	r23, 0x23	; 35
    4f54:	83 e6       	ldi	r24, 0x63	; 99
    4f56:	97 e2       	ldi	r25, 0x27	; 39
    4f58:	0e 94 2f 3f 	call	0x7e5e	; 0x7e5e <fdevopen>
    4f5c:	90 93 e2 1b 	sts	0x1BE2, r25
    4f60:	80 93 e1 1b 	sts	0x1BE1, r24
    4f64:	6a e1       	ldi	r22, 0x1A	; 26
    4f66:	73 e2       	ldi	r23, 0x23	; 35
    4f68:	83 e6       	ldi	r24, 0x63	; 99
    4f6a:	97 e2       	ldi	r25, 0x27	; 39
    4f6c:	0e 94 2f 3f 	call	0x7e5e	; 0x7e5e <fdevopen>
    4f70:	90 93 e0 1b 	sts	0x1BE0, r25
    4f74:	80 93 df 1b 	sts	0x1BDF, r24
    4f78:	0e 94 c4 2c 	call	0x5988	; 0x5988 <nrk_signal_create>
    4f7c:	80 93 3a 1b 	sts	0x1B3A, r24
    4f80:	8f 3f       	cpi	r24, 0xFF	; 255
    4f82:	19 f4       	brne	.+6      	; 0x4f8a <nrk_setup_uart+0x3e>
    4f84:	8e e0       	ldi	r24, 0x0E	; 14
    4f86:	0e 94 c4 2b 	call	0x5788	; 0x5788 <nrk_error_add>
    4f8a:	10 92 3b 1b 	sts	0x1B3B, r1
    4f8e:	10 92 29 1b 	sts	0x1B29, r1
    4f92:	80 91 c9 00 	lds	r24, 0x00C9
    4f96:	80 68       	ori	r24, 0x80	; 128
    4f98:	80 93 c9 00 	sts	0x00C9, r24
    4f9c:	08 95       	ret

00004f9e <nrk_uart_rx_signal_get>:
    4f9e:	80 91 3a 1b 	lds	r24, 0x1B3A
    4fa2:	8f 3f       	cpi	r24, 0xFF	; 255
    4fa4:	19 f4       	brne	.+6      	; 0x4fac <nrk_uart_rx_signal_get+0xe>
    4fa6:	8e e0       	ldi	r24, 0x0E	; 14
    4fa8:	0e 94 c4 2b 	call	0x5788	; 0x5788 <nrk_error_add>
    4fac:	80 91 3a 1b 	lds	r24, 0x1B3A
    4fb0:	99 27       	eor	r25, r25
    4fb2:	87 fd       	sbrc	r24, 7
    4fb4:	90 95       	com	r25
    4fb6:	08 95       	ret

00004fb8 <nrk_kprintf>:
    4fb8:	cf 93       	push	r28
    4fba:	df 93       	push	r29
    4fbc:	ec 01       	movw	r28, r24
    4fbe:	07 c0       	rjmp	.+14     	; 0x4fce <nrk_kprintf+0x16>
    4fc0:	60 91 e1 1b 	lds	r22, 0x1BE1
    4fc4:	70 91 e2 1b 	lds	r23, 0x1BE2
    4fc8:	99 27       	eor	r25, r25
    4fca:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
    4fce:	fe 01       	movw	r30, r28
    4fd0:	21 96       	adiw	r28, 0x01	; 1
    4fd2:	84 91       	lpm	r24, Z
    4fd4:	88 23       	and	r24, r24
    4fd6:	a1 f7       	brne	.-24     	; 0x4fc0 <nrk_kprintf+0x8>
    4fd8:	df 91       	pop	r29
    4fda:	cf 91       	pop	r28
    4fdc:	08 95       	ret

00004fde <__vector_36>:

    4fde:	1f 92       	push	r1
    4fe0:	0f 92       	push	r0
    4fe2:	0f b6       	in	r0, 0x3f	; 63
    4fe4:	0f 92       	push	r0
    4fe6:	11 24       	eor	r1, r1
    4fe8:	2f 93       	push	r18
    4fea:	3f 93       	push	r19
    4fec:	4f 93       	push	r20
    4fee:	5f 93       	push	r21
    4ff0:	6f 93       	push	r22
    4ff2:	7f 93       	push	r23
    4ff4:	8f 93       	push	r24
    4ff6:	9f 93       	push	r25
    4ff8:	af 93       	push	r26
    4ffa:	bf 93       	push	r27
    4ffc:	ef 93       	push	r30
    4ffe:	ff 93       	push	r31
    5000:	80 91 c9 00 	lds	r24, 0x00C9
    5004:	8f 77       	andi	r24, 0x7F	; 127
    5006:	80 93 c9 00 	sts	0x00C9, r24
    500a:	80 91 c8 00 	lds	r24, 0x00C8
    500e:	87 ff       	sbrs	r24, 7
    5010:	fc cf       	rjmp	.-8      	; 0x500a <__vector_36+0x2c>
    5012:	80 91 c8 00 	lds	r24, 0x00C8
    5016:	8f 77       	andi	r24, 0x7F	; 127
    5018:	80 93 c8 00 	sts	0x00C8, r24
    501c:	90 91 ce 00 	lds	r25, 0x00CE
    5020:	80 91 29 1b 	lds	r24, 0x1B29
    5024:	e8 2f       	mov	r30, r24
    5026:	ff 27       	eor	r31, r31
    5028:	e6 5d       	subi	r30, 0xD6	; 214
    502a:	f4 4e       	sbci	r31, 0xE4	; 228
    502c:	90 83       	st	Z, r25
    502e:	8f 5f       	subi	r24, 0xFF	; 255
    5030:	80 93 29 1b 	sts	0x1B29, r24
    5034:	80 31       	cpi	r24, 0x10	; 16
    5036:	11 f4       	brne	.+4      	; 0x503c <__vector_36+0x5e>
    5038:	10 92 29 1b 	sts	0x1B29, r1
    503c:	80 91 3a 1b 	lds	r24, 0x1B3A
    5040:	0e 94 55 2e 	call	0x5caa	; 0x5caa <nrk_event_signal>
    5044:	80 91 c8 00 	lds	r24, 0x00C8
    5048:	8f 77       	andi	r24, 0x7F	; 127
    504a:	80 93 c8 00 	sts	0x00C8, r24
    504e:	80 91 c9 00 	lds	r24, 0x00C9
    5052:	80 68       	ori	r24, 0x80	; 128
    5054:	80 93 c9 00 	sts	0x00C9, r24
    5058:	ff 91       	pop	r31
    505a:	ef 91       	pop	r30
    505c:	bf 91       	pop	r27
    505e:	af 91       	pop	r26
    5060:	9f 91       	pop	r25
    5062:	8f 91       	pop	r24
    5064:	7f 91       	pop	r23
    5066:	6f 91       	pop	r22
    5068:	5f 91       	pop	r21
    506a:	4f 91       	pop	r20
    506c:	3f 91       	pop	r19
    506e:	2f 91       	pop	r18
    5070:	0f 90       	pop	r0
    5072:	0f be       	out	0x3f, r0	; 63
    5074:	0f 90       	pop	r0
    5076:	1f 90       	pop	r1
    5078:	18 95       	reti

0000507a <halWait>:
	...
    do {
	    DISABLE_GLOBAL_INT();
	    FASTSPI_UPD_STATUS(spiStatusByte);
	    ENABLE_GLOBAL_INT();
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));

    5082:	01 97       	sbiw	r24, 0x01	; 1
    5084:	d1 f7       	brne	.-12     	; 0x507a <halWait>
    5086:	08 95       	ret

00005088 <read_eeprom_current_image_checksum>:
    5088:	fc 01       	movw	r30, r24

uint8_t 
eeprom_read_byte (const uint8_t *addr) 
{
  uint8_t result;
  __asm__ __volatile__
    508a:	a7 e0       	ldi	r26, 0x07	; 7
    508c:	b0 e0       	ldi	r27, 0x00	; 0
    508e:	0e 94 12 42 	call	0x8424	; 0x8424 <__eeprom_read_byte_1F2021>
    5092:	80 2d       	mov	r24, r0
    5094:	80 83       	st	Z, r24
    5096:	81 e0       	ldi	r24, 0x01	; 1
    5098:	90 e0       	ldi	r25, 0x00	; 0
    509a:	08 95       	ret

0000509c <write_eeprom_current_image_checksum>:
    509c:	fc 01       	movw	r30, r24
    Write a byte \c value to EEPROM address \c addr. */

void 
eeprom_write_byte (uint8_t *addr,uint8_t value)
{
  __asm__ __volatile__ (
    509e:	80 81       	ld	r24, Z
    50a0:	a7 e0       	ldi	r26, 0x07	; 7
    50a2:	b0 e0       	ldi	r27, 0x00	; 0
    50a4:	08 2e       	mov	r0, r24
    50a6:	0e 94 1a 42 	call	0x8434	; 0x8434 <__eeprom_write_byte_1F2021>
    50aa:	81 e0       	ldi	r24, 0x01	; 1
    50ac:	90 e0       	ldi	r25, 0x00	; 0
    50ae:	08 95       	ret

000050b0 <nrk_eeprom_read_byte>:

uint8_t 
eeprom_read_byte (const uint8_t *addr) 
{
  uint8_t result;
  __asm__ __volatile__
    50b0:	dc 01       	movw	r26, r24
    50b2:	0e 94 12 42 	call	0x8424	; 0x8424 <__eeprom_read_byte_1F2021>
    50b6:	80 2d       	mov	r24, r0
*
*  This is the Open Source Version of Nano-RK included as part of a Dual
*  Licensing Model. If you are unsure which license to use please refer to:
*  http://www.nanork.org/nano-RK/wiki/Licensing
*
*  This program is free software: you can redistribute it and/or modify
    50b8:	99 27       	eor	r25, r25
    50ba:	08 95       	ret

000050bc <read_eeprom_mac_address>:
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU General Public License for more details.
*
    50bc:	fc 01       	movw	r30, r24
    50be:	a0 e0       	ldi	r26, 0x00	; 0
    50c0:	b0 e0       	ldi	r27, 0x00	; 0
    50c2:	0e 94 12 42 	call	0x8424	; 0x8424 <__eeprom_read_byte_1F2021>
    50c6:	40 2d       	mov	r20, r0
*  You should have received a copy of the GNU General Public License
*  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*
*  Contributing Authors (specific to this file):
*  Chipcon Development Team 
    50c8:	43 83       	std	Z+3, r20	; 0x03
    50ca:	a1 e0       	ldi	r26, 0x01	; 1
    50cc:	b0 e0       	ldi	r27, 0x00	; 0
    50ce:	0e 94 12 42 	call	0x8424	; 0x8424 <__eeprom_read_byte_1F2021>
    50d2:	80 2d       	mov	r24, r0
*******************************************************************************/
    50d4:	82 83       	std	Z+2, r24	; 0x02
    50d6:	a2 e0       	ldi	r26, 0x02	; 2
    50d8:	b0 e0       	ldi	r27, 0x00	; 0
    50da:	0e 94 12 42 	call	0x8424	; 0x8424 <__eeprom_read_byte_1F2021>
    50de:	30 2d       	mov	r19, r0

    50e0:	31 83       	std	Z+1, r19	; 0x01
    50e2:	a3 e0       	ldi	r26, 0x03	; 3
    50e4:	b0 e0       	ldi	r27, 0x00	; 0
    50e6:	0e 94 12 42 	call	0x8424	; 0x8424 <__eeprom_read_byte_1F2021>
    50ea:	90 2d       	mov	r25, r0
#include <include.h>
    50ec:	90 83       	st	Z, r25
    50ee:	a4 e0       	ldi	r26, 0x04	; 4
    50f0:	b0 e0       	ldi	r27, 0x00	; 0
    50f2:	0e 94 12 42 	call	0x8424	; 0x8424 <__eeprom_read_byte_1F2021>
    50f6:	20 2d       	mov	r18, r0
#include <ulib.h>

//-------------------------------------------------------------------------------------------------------
    50f8:	83 0f       	add	r24, r19
//	void rfWaitForCrystalOscillator(void)
    50fa:	84 0f       	add	r24, r20
//
//	DESCRIPTION:
    50fc:	89 0f       	add	r24, r25
    50fe:	28 17       	cp	r18, r24
    5100:	19 f4       	brne	.+6      	; 0x5108 <read_eeprom_mac_address+0x4c>
    5102:	81 e0       	ldi	r24, 0x01	; 1
    5104:	90 e0       	ldi	r25, 0x00	; 0
    5106:	08 95       	ret
    5108:	8f ef       	ldi	r24, 0xFF	; 255
    510a:	9f ef       	ldi	r25, 0xFF	; 255
//		Waits for the crystal oscillator to become stable. The flag is polled via the SPI status byte.
//      
//      Note that this function will lock up if the SXOSCON command strobe has not been given before the
    510c:	08 95       	ret

0000510e <read_eeprom_channel>:
//      function call. Also note that global interrupts will always be enabled when this function 
//      returns.
//-------------------------------------------------------------------------------------------------------
    510e:	fc 01       	movw	r30, r24
    5110:	a5 e0       	ldi	r26, 0x05	; 5
    5112:	b0 e0       	ldi	r27, 0x00	; 0
    5114:	0e 94 12 42 	call	0x8424	; 0x8424 <__eeprom_read_byte_1F2021>
    5118:	80 2d       	mov	r24, r0
void halRfWaitForCrystalOscillator(void) {
    511a:	80 83       	st	Z, r24
    uint8_t spiStatusByte;

    511c:	81 e0       	ldi	r24, 0x01	; 1
    511e:	90 e0       	ldi	r25, 0x00	; 0
    5120:	08 95       	ret

00005122 <read_eeprom_load_img_pages>:
	    FASTSPI_UPD_STATUS(spiStatusByte);
	    ENABLE_GLOBAL_INT();
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));

} // halRfWaitForCrystalOscillator

    5122:	fc 01       	movw	r30, r24
    5124:	a6 e0       	ldi	r26, 0x06	; 6
    5126:	b0 e0       	ldi	r27, 0x00	; 0
    5128:	0e 94 12 42 	call	0x8424	; 0x8424 <__eeprom_read_byte_1F2021>
    512c:	80 2d       	mov	r24, r0
    512e:	80 83       	st	Z, r24
    5130:	81 e0       	ldi	r24, 0x01	; 1
    5132:	90 e0       	ldi	r25, 0x00	; 0
    5134:	08 95       	ret

00005136 <read_eeprom_aes_key>:
    5136:	ac 01       	movw	r20, r24
    5138:	20 e0       	ldi	r18, 0x00	; 0
    513a:	30 e0       	ldi	r19, 0x00	; 0
    513c:	d9 01       	movw	r26, r18
    513e:	18 96       	adiw	r26, 0x08	; 8
    5140:	0e 94 12 42 	call	0x8424	; 0x8424 <__eeprom_read_byte_1F2021>
    5144:	80 2d       	mov	r24, r0
    5146:	fa 01       	movw	r30, r20
    5148:	e2 0f       	add	r30, r18
    514a:	f3 1f       	adc	r31, r19
    514c:	80 83       	st	Z, r24
    514e:	2f 5f       	subi	r18, 0xFF	; 255
    5150:	3f 4f       	sbci	r19, 0xFF	; 255
    5152:	20 31       	cpi	r18, 0x10	; 16
    5154:	31 05       	cpc	r19, r1
    5156:	91 f7       	brne	.-28     	; 0x513c <read_eeprom_aes_key+0x6>
    5158:	81 e0       	ldi	r24, 0x01	; 1
    515a:	90 e0       	ldi	r25, 0x00	; 0
    515c:	08 95       	ret

0000515e <nrk_eeprom_write_byte>:
    Write a byte \c value to EEPROM address \c addr. */

void 
eeprom_write_byte (uint8_t *addr,uint8_t value)
{
  __asm__ __volatile__ (
    515e:	dc 01       	movw	r26, r24
    5160:	06 2e       	mov	r0, r22
    5162:	0e 94 1a 42 	call	0x8434	; 0x8434 <__eeprom_write_byte_1F2021>
    5166:	08 95       	ret

00005168 <write_eeprom_load_img_pages>:
void halRfWaitForCrystalOscillator(void) {
    uint8_t spiStatusByte;

    // Poll the SPI status byte until the crystal oscillator is stable
    do {
	    DISABLE_GLOBAL_INT();
    5168:	fc 01       	movw	r30, r24
    516a:	80 81       	ld	r24, Z
    516c:	a6 e0       	ldi	r26, 0x06	; 6
    516e:	b0 e0       	ldi	r27, 0x00	; 0
    5170:	08 2e       	mov	r0, r24
    5172:	0e 94 1a 42 	call	0x8434	; 0x8434 <__eeprom_write_byte_1F2021>
	    FASTSPI_UPD_STATUS(spiStatusByte);
	    ENABLE_GLOBAL_INT();
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));
    5176:	81 e0       	ldi	r24, 0x01	; 1
    5178:	90 e0       	ldi	r25, 0x00	; 0
    517a:	08 95       	ret

0000517c <write_eeprom_aes_key>:
    517c:	ac 01       	movw	r20, r24
    517e:	20 e0       	ldi	r18, 0x00	; 0
    5180:	30 e0       	ldi	r19, 0x00	; 0
    5182:	d9 01       	movw	r26, r18
    5184:	18 96       	adiw	r26, 0x08	; 8
    5186:	fa 01       	movw	r30, r20
    5188:	e2 0f       	add	r30, r18
    518a:	f3 1f       	adc	r31, r19
    518c:	80 81       	ld	r24, Z
    518e:	08 2e       	mov	r0, r24
    5190:	0e 94 1a 42 	call	0x8434	; 0x8434 <__eeprom_write_byte_1F2021>
    5194:	2f 5f       	subi	r18, 0xFF	; 255
    5196:	3f 4f       	sbci	r19, 0xFF	; 255
    5198:	20 31       	cpi	r18, 0x10	; 16
    519a:	31 05       	cpc	r19, r1
    519c:	91 f7       	brne	.-28     	; 0x5182 <write_eeprom_aes_key+0x6>
    519e:	81 e0       	ldi	r24, 0x01	; 1
    51a0:	90 e0       	ldi	r25, 0x00	; 0
    51a2:	08 95       	ret

000051a4 <nrk_int_disable>:
    // Poll the SPI status byte until the crystal oscillator is stable
    do {
	    DISABLE_GLOBAL_INT();
	    FASTSPI_UPD_STATUS(spiStatusByte);
	    ENABLE_GLOBAL_INT();
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));
    51a4:	f8 94       	cli
    51a6:	08 95       	ret

000051a8 <nrk_int_enable>:

} // halRfWaitForCrystalOscillator

    51a8:	78 94       	sei
    51aa:	08 95       	ret

000051ac <nrk_version>:
    51ac:	85 e6       	ldi	r24, 0x65	; 101
    51ae:	90 e0       	ldi	r25, 0x00	; 0
    51b0:	08 95       	ret

000051b2 <_nrk_timer_tick>:
    51b2:	0e 94 1b 36 	call	0x6c36	; 0x6c36 <_nrk_scheduler>
    51b6:	08 95       	ret

000051b8 <nrk_TCB_init>:
    51b8:	ef 92       	push	r14
    51ba:	ff 92       	push	r15
    51bc:	0f 93       	push	r16
    51be:	1f 93       	push	r17
    51c0:	cf 93       	push	r28
    51c2:	df 93       	push	r29
    51c4:	ec 01       	movw	r28, r24
    51c6:	8b 01       	movw	r16, r22
    51c8:	7a 01       	movw	r14, r20
    51ca:	89 85       	ldd	r24, Y+9	; 0x09
    51cc:	82 30       	cpi	r24, 0x02	; 2
    51ce:	21 f0       	breq	.+8      	; 0x51d8 <nrk_TCB_init+0x20>
    51d0:	80 91 a9 1b 	lds	r24, 0x1BA9
    51d4:	88 83       	st	Y, r24
    51d6:	01 c0       	rjmp	.+2      	; 0x51da <nrk_TCB_init+0x22>
    51d8:	18 82       	st	Y, r1
    51da:	80 91 a9 1b 	lds	r24, 0x1BA9
    51de:	83 30       	cpi	r24, 0x03	; 3
    51e0:	20 f0       	brcs	.+8      	; 0x51ea <nrk_TCB_init+0x32>
    51e2:	60 e0       	ldi	r22, 0x00	; 0
    51e4:	87 e0       	ldi	r24, 0x07	; 7
    51e6:	0e 94 bd 2b 	call	0x577a	; 0x577a <nrk_kernel_error_add>
    51ea:	89 85       	ldd	r24, Y+9	; 0x09
    51ec:	82 30       	cpi	r24, 0x02	; 2
    51ee:	29 f0       	breq	.+10     	; 0x51fa <nrk_TCB_init+0x42>
    51f0:	80 91 a9 1b 	lds	r24, 0x1BA9
    51f4:	8f 5f       	subi	r24, 0xFF	; 255
    51f6:	80 93 a9 1b 	sts	0x1BA9, r24
    51fa:	80 91 a9 1b 	lds	r24, 0x1BA9
    51fe:	88 23       	and	r24, r24
    5200:	19 f4       	brne	.+6      	; 0x5208 <nrk_TCB_init+0x50>
    5202:	81 e0       	ldi	r24, 0x01	; 1
    5204:	80 93 a9 1b 	sts	0x1BA9, r24
    5208:	88 81       	ld	r24, Y
    520a:	99 27       	eor	r25, r25
    520c:	87 fd       	sbrc	r24, 7
    520e:	90 95       	com	r25
    5210:	fc 01       	movw	r30, r24
    5212:	45 e0       	ldi	r20, 0x05	; 5
    5214:	ee 0f       	add	r30, r30
    5216:	ff 1f       	adc	r31, r31
    5218:	4a 95       	dec	r20
    521a:	e1 f7       	brne	.-8      	; 0x5214 <nrk_TCB_init+0x5c>
    521c:	e8 0f       	add	r30, r24
    521e:	f9 1f       	adc	r31, r25
    5220:	e2 5c       	subi	r30, 0xC2	; 194
    5222:	f4 4e       	sbci	r31, 0xE4	; 228
    5224:	11 83       	std	Z+1, r17	; 0x01
    5226:	00 83       	st	Z, r16
    5228:	88 81       	ld	r24, Y
    522a:	99 27       	eor	r25, r25
    522c:	87 fd       	sbrc	r24, 7
    522e:	90 95       	com	r25
    5230:	fc 01       	movw	r30, r24
    5232:	35 e0       	ldi	r19, 0x05	; 5
    5234:	ee 0f       	add	r30, r30
    5236:	ff 1f       	adc	r31, r31
    5238:	3a 95       	dec	r19
    523a:	e1 f7       	brne	.-8      	; 0x5234 <nrk_TCB_init+0x7c>
    523c:	e8 0f       	add	r30, r24
    523e:	f9 1f       	adc	r31, r25
    5240:	e2 5c       	subi	r30, 0xC2	; 194
    5242:	f4 4e       	sbci	r31, 0xE4	; 228
    5244:	88 85       	ldd	r24, Y+8	; 0x08
    5246:	82 87       	std	Z+10, r24	; 0x0a
    5248:	88 81       	ld	r24, Y
    524a:	99 27       	eor	r25, r25
    524c:	87 fd       	sbrc	r24, 7
    524e:	90 95       	com	r25
    5250:	fc 01       	movw	r30, r24
    5252:	25 e0       	ldi	r18, 0x05	; 5
    5254:	ee 0f       	add	r30, r30
    5256:	ff 1f       	adc	r31, r31
    5258:	2a 95       	dec	r18
    525a:	e1 f7       	brne	.-8      	; 0x5254 <nrk_TCB_init+0x9c>
    525c:	e8 0f       	add	r30, r24
    525e:	f9 1f       	adc	r31, r25
    5260:	e2 5c       	subi	r30, 0xC2	; 194
    5262:	f4 4e       	sbci	r31, 0xE4	; 228
    5264:	83 e0       	ldi	r24, 0x03	; 3
    5266:	81 87       	std	Z+9, r24	; 0x09
    5268:	28 81       	ld	r18, Y
    526a:	82 2f       	mov	r24, r18
    526c:	99 27       	eor	r25, r25
    526e:	87 fd       	sbrc	r24, 7
    5270:	90 95       	com	r25
    5272:	fc 01       	movw	r30, r24
    5274:	05 e0       	ldi	r16, 0x05	; 5
    5276:	ee 0f       	add	r30, r30
    5278:	ff 1f       	adc	r31, r31
    527a:	0a 95       	dec	r16
    527c:	e1 f7       	brne	.-8      	; 0x5276 <nrk_TCB_init+0xbe>
    527e:	e8 0f       	add	r30, r24
    5280:	f9 1f       	adc	r31, r25
    5282:	e2 5c       	subi	r30, 0xC2	; 194
    5284:	f4 4e       	sbci	r31, 0xE4	; 228
    5286:	20 87       	std	Z+8, r18	; 0x08
    5288:	88 81       	ld	r24, Y
    528a:	99 27       	eor	r25, r25
    528c:	87 fd       	sbrc	r24, 7
    528e:	90 95       	com	r25
    5290:	fc 01       	movw	r30, r24
    5292:	15 e0       	ldi	r17, 0x05	; 5
    5294:	ee 0f       	add	r30, r30
    5296:	ff 1f       	adc	r31, r31
    5298:	1a 95       	dec	r17
    529a:	e1 f7       	brne	.-8      	; 0x5294 <nrk_TCB_init+0xdc>
    529c:	e8 0f       	add	r30, r24
    529e:	f9 1f       	adc	r31, r25
    52a0:	e2 5c       	subi	r30, 0xC2	; 194
    52a2:	f4 4e       	sbci	r31, 0xE4	; 228
    52a4:	15 82       	std	Z+5, r1	; 0x05
    52a6:	08 81       	ld	r16, Y
    52a8:	11 27       	eor	r17, r17
    52aa:	07 fd       	sbrc	r16, 7
    52ac:	10 95       	com	r17
    52ae:	2b 85       	ldd	r18, Y+11	; 0x0b
    52b0:	3c 85       	ldd	r19, Y+12	; 0x0c
    52b2:	4d 85       	ldd	r20, Y+13	; 0x0d
    52b4:	5e 85       	ldd	r21, Y+14	; 0x0e
    52b6:	6f 85       	ldd	r22, Y+15	; 0x0f
    52b8:	78 89       	ldd	r23, Y+16	; 0x10
    52ba:	89 89       	ldd	r24, Y+17	; 0x11
    52bc:	9a 89       	ldd	r25, Y+18	; 0x12
    52be:	0e 94 40 34 	call	0x6880	; 0x6880 <_nrk_time_to_ticks>
    52c2:	f8 01       	movw	r30, r16
    52c4:	b5 e0       	ldi	r27, 0x05	; 5
    52c6:	ee 0f       	add	r30, r30
    52c8:	ff 1f       	adc	r31, r31
    52ca:	ba 95       	dec	r27
    52cc:	e1 f7       	brne	.-8      	; 0x52c6 <nrk_TCB_init+0x10e>
    52ce:	e0 0f       	add	r30, r16
    52d0:	f1 1f       	adc	r31, r17
    52d2:	e2 5c       	subi	r30, 0xC2	; 194
    52d4:	f4 4e       	sbci	r31, 0xE4	; 228
    52d6:	94 8f       	std	Z+28, r25	; 0x1c
    52d8:	83 8f       	std	Z+27, r24	; 0x1b
    52da:	08 81       	ld	r16, Y
    52dc:	11 27       	eor	r17, r17
    52de:	07 fd       	sbrc	r16, 7
    52e0:	10 95       	com	r17
    52e2:	2b 8d       	ldd	r18, Y+27	; 0x1b
    52e4:	3c 8d       	ldd	r19, Y+28	; 0x1c
    52e6:	4d 8d       	ldd	r20, Y+29	; 0x1d
    52e8:	5e 8d       	ldd	r21, Y+30	; 0x1e
    52ea:	6f 8d       	ldd	r22, Y+31	; 0x1f
    52ec:	78 a1       	ldd	r23, Y+32	; 0x20
    52ee:	89 a1       	ldd	r24, Y+33	; 0x21
    52f0:	9a a1       	ldd	r25, Y+34	; 0x22
    52f2:	0e 94 40 34 	call	0x6880	; 0x6880 <_nrk_time_to_ticks>
    52f6:	f8 01       	movw	r30, r16
    52f8:	a5 e0       	ldi	r26, 0x05	; 5
    52fa:	ee 0f       	add	r30, r30
    52fc:	ff 1f       	adc	r31, r31
    52fe:	aa 95       	dec	r26
    5300:	e1 f7       	brne	.-8      	; 0x52fa <nrk_TCB_init+0x142>
    5302:	e0 0f       	add	r30, r16
    5304:	f1 1f       	adc	r31, r17
    5306:	e2 5c       	subi	r30, 0xC2	; 194
    5308:	f4 4e       	sbci	r31, 0xE4	; 228
    530a:	96 8b       	std	Z+22, r25	; 0x16
    530c:	85 8b       	std	Z+21, r24	; 0x15
    530e:	88 81       	ld	r24, Y
    5310:	99 27       	eor	r25, r25
    5312:	87 fd       	sbrc	r24, 7
    5314:	90 95       	com	r25
    5316:	fc 01       	movw	r30, r24
    5318:	75 e0       	ldi	r23, 0x05	; 5
    531a:	ee 0f       	add	r30, r30
    531c:	ff 1f       	adc	r31, r31
    531e:	7a 95       	dec	r23
    5320:	e1 f7       	brne	.-8      	; 0x531a <nrk_TCB_init+0x162>
    5322:	e8 0f       	add	r30, r24
    5324:	f9 1f       	adc	r31, r25
    5326:	e2 5c       	subi	r30, 0xC2	; 194
    5328:	f4 4e       	sbci	r31, 0xE4	; 228
    532a:	85 89       	ldd	r24, Z+21	; 0x15
    532c:	96 89       	ldd	r25, Z+22	; 0x16
    532e:	23 8d       	ldd	r18, Z+27	; 0x1b
    5330:	34 8d       	ldd	r19, Z+28	; 0x1c
    5332:	82 0f       	add	r24, r18
    5334:	93 1f       	adc	r25, r19
    5336:	90 8f       	std	Z+24, r25	; 0x18
    5338:	87 8b       	std	Z+23, r24	; 0x17
    533a:	08 81       	ld	r16, Y
    533c:	11 27       	eor	r17, r17
    533e:	07 fd       	sbrc	r16, 7
    5340:	10 95       	com	r17
    5342:	2b 89       	ldd	r18, Y+19	; 0x13
    5344:	3c 89       	ldd	r19, Y+20	; 0x14
    5346:	4d 89       	ldd	r20, Y+21	; 0x15
    5348:	5e 89       	ldd	r21, Y+22	; 0x16
    534a:	6f 89       	ldd	r22, Y+23	; 0x17
    534c:	78 8d       	ldd	r23, Y+24	; 0x18
    534e:	89 8d       	ldd	r24, Y+25	; 0x19
    5350:	9a 8d       	ldd	r25, Y+26	; 0x1a
    5352:	0e 94 40 34 	call	0x6880	; 0x6880 <_nrk_time_to_ticks>
    5356:	f8 01       	movw	r30, r16
    5358:	65 e0       	ldi	r22, 0x05	; 5
    535a:	ee 0f       	add	r30, r30
    535c:	ff 1f       	adc	r31, r31
    535e:	6a 95       	dec	r22
    5360:	e1 f7       	brne	.-8      	; 0x535a <nrk_TCB_init+0x1a2>
    5362:	e0 0f       	add	r30, r16
    5364:	f1 1f       	adc	r31, r17
    5366:	e2 5c       	subi	r30, 0xC2	; 194
    5368:	f4 4e       	sbci	r31, 0xE4	; 228
    536a:	96 8f       	std	Z+30, r25	; 0x1e
    536c:	85 8f       	std	Z+29, r24	; 0x1d
    536e:	88 81       	ld	r24, Y
    5370:	99 27       	eor	r25, r25
    5372:	87 fd       	sbrc	r24, 7
    5374:	90 95       	com	r25
    5376:	fc 01       	movw	r30, r24
    5378:	55 e0       	ldi	r21, 0x05	; 5
    537a:	ee 0f       	add	r30, r30
    537c:	ff 1f       	adc	r31, r31
    537e:	5a 95       	dec	r21
    5380:	e1 f7       	brne	.-8      	; 0x537a <nrk_TCB_init+0x1c2>
    5382:	e8 0f       	add	r30, r24
    5384:	f9 1f       	adc	r31, r25
    5386:	e2 5c       	subi	r30, 0xC2	; 194
    5388:	f4 4e       	sbci	r31, 0xE4	; 228
    538a:	85 8d       	ldd	r24, Z+29	; 0x1d
    538c:	96 8d       	ldd	r25, Z+30	; 0x1e
    538e:	92 8f       	std	Z+26, r25	; 0x1a
    5390:	81 8f       	std	Z+25, r24	; 0x19
    5392:	88 81       	ld	r24, Y
    5394:	99 27       	eor	r25, r25
    5396:	87 fd       	sbrc	r24, 7
    5398:	90 95       	com	r25
    539a:	fc 01       	movw	r30, r24
    539c:	45 e0       	ldi	r20, 0x05	; 5
    539e:	ee 0f       	add	r30, r30
    53a0:	ff 1f       	adc	r31, r31
    53a2:	4a 95       	dec	r20
    53a4:	e1 f7       	brne	.-8      	; 0x539e <nrk_TCB_init+0x1e6>
    53a6:	e8 0f       	add	r30, r24
    53a8:	f9 1f       	adc	r31, r25
    53aa:	e2 5c       	subi	r30, 0xC2	; 194
    53ac:	f4 4e       	sbci	r31, 0xE4	; 228
    53ae:	81 e0       	ldi	r24, 0x01	; 1
    53b0:	90 e0       	ldi	r25, 0x00	; 0
    53b2:	90 a3       	std	Z+32, r25	; 0x20
    53b4:	87 8f       	std	Z+31, r24	; 0x1f
    53b6:	88 81       	ld	r24, Y
    53b8:	99 27       	eor	r25, r25
    53ba:	87 fd       	sbrc	r24, 7
    53bc:	90 95       	com	r25
    53be:	fc 01       	movw	r30, r24
    53c0:	35 e0       	ldi	r19, 0x05	; 5
    53c2:	ee 0f       	add	r30, r30
    53c4:	ff 1f       	adc	r31, r31
    53c6:	3a 95       	dec	r19
    53c8:	e1 f7       	brne	.-8      	; 0x53c2 <nrk_TCB_init+0x20a>
    53ca:	e8 0f       	add	r30, r24
    53cc:	f9 1f       	adc	r31, r25
    53ce:	e2 5c       	subi	r30, 0xC2	; 194
    53d0:	f4 4e       	sbci	r31, 0xE4	; 228
    53d2:	f3 82       	std	Z+3, r15	; 0x03
    53d4:	e2 82       	std	Z+2, r14	; 0x02
    53d6:	88 81       	ld	r24, Y
    53d8:	99 27       	eor	r25, r25
    53da:	87 fd       	sbrc	r24, 7
    53dc:	90 95       	com	r25
    53de:	fc 01       	movw	r30, r24
    53e0:	25 e0       	ldi	r18, 0x05	; 5
    53e2:	ee 0f       	add	r30, r30
    53e4:	ff 1f       	adc	r31, r31
    53e6:	2a 95       	dec	r18
    53e8:	e1 f7       	brne	.-8      	; 0x53e2 <nrk_TCB_init+0x22a>
    53ea:	e8 0f       	add	r30, r24
    53ec:	f9 1f       	adc	r31, r25
    53ee:	e2 5c       	subi	r30, 0xC2	; 194
    53f0:	f4 4e       	sbci	r31, 0xE4	; 228
    53f2:	81 e0       	ldi	r24, 0x01	; 1
    53f4:	84 87       	std	Z+12, r24	; 0x0c
    53f6:	81 e0       	ldi	r24, 0x01	; 1
    53f8:	90 e0       	ldi	r25, 0x00	; 0
    53fa:	df 91       	pop	r29
    53fc:	cf 91       	pop	r28
    53fe:	1f 91       	pop	r17
    5400:	0f 91       	pop	r16
    5402:	ff 90       	pop	r15
    5404:	ef 90       	pop	r14
    5406:	08 95       	ret

00005408 <nrk_start>:
    5408:	8f 92       	push	r8
    540a:	9f 92       	push	r9
    540c:	af 92       	push	r10
    540e:	bf 92       	push	r11
    5410:	cf 92       	push	r12
    5412:	df 92       	push	r13
    5414:	ef 92       	push	r14
    5416:	ff 92       	push	r15
    5418:	0f 93       	push	r16
    541a:	1f 93       	push	r17
    541c:	cf 93       	push	r28
    541e:	df 93       	push	r29
    5420:	66 e4       	ldi	r22, 0x46	; 70
    5422:	a6 2e       	mov	r10, r22
    5424:	6b e1       	ldi	r22, 0x1B	; 27
    5426:	b6 2e       	mov	r11, r22
    5428:	cc 24       	eor	r12, r12
    542a:	dd 24       	eor	r13, r13
    542c:	45 01       	movw	r8, r10
    542e:	ec 2c       	mov	r14, r12
    5430:	f5 01       	movw	r30, r10
    5432:	f0 80       	ld	r15, Z
    5434:	ff ef       	ldi	r31, 0xFF	; 255
    5436:	ff 16       	cp	r15, r31
    5438:	91 f0       	breq	.+36     	; 0x545e <nrk_start+0x56>
    543a:	e4 01       	movw	r28, r8
    543c:	00 e0       	ldi	r16, 0x00	; 0
    543e:	10 e0       	ldi	r17, 0x00	; 0
    5440:	e0 16       	cp	r14, r16
    5442:	39 f0       	breq	.+14     	; 0x5452 <nrk_start+0x4a>
    5444:	88 81       	ld	r24, Y
    5446:	f8 16       	cp	r15, r24
    5448:	21 f4       	brne	.+8      	; 0x5452 <nrk_start+0x4a>
    544a:	6f 2d       	mov	r22, r15
    544c:	85 e0       	ldi	r24, 0x05	; 5
    544e:	0e 94 bd 2b 	call	0x577a	; 0x577a <nrk_kernel_error_add>
    5452:	0f 5f       	subi	r16, 0xFF	; 255
    5454:	1f 4f       	sbci	r17, 0xFF	; 255
    5456:	a1 96       	adiw	r28, 0x21	; 33
    5458:	03 30       	cpi	r16, 0x03	; 3
    545a:	11 05       	cpc	r17, r1
    545c:	89 f7       	brne	.-30     	; 0x5440 <nrk_start+0x38>
    545e:	08 94       	sec
    5460:	c1 1c       	adc	r12, r1
    5462:	d1 1c       	adc	r13, r1
    5464:	81 e2       	ldi	r24, 0x21	; 33
    5466:	90 e0       	ldi	r25, 0x00	; 0
    5468:	a8 0e       	add	r10, r24
    546a:	b9 1e       	adc	r11, r25
    546c:	93 e0       	ldi	r25, 0x03	; 3
    546e:	c9 16       	cp	r12, r25
    5470:	d1 04       	cpc	r13, r1
    5472:	e9 f6       	brne	.-70     	; 0x542e <nrk_start+0x26>
    5474:	0e 94 e2 2f 	call	0x5fc4	; 0x5fc4 <nrk_get_high_ready_task_ID>
    5478:	28 2f       	mov	r18, r24
    547a:	33 27       	eor	r19, r19
    547c:	27 fd       	sbrc	r18, 7
    547e:	30 95       	com	r19
    5480:	f9 01       	movw	r30, r18
    5482:	55 e0       	ldi	r21, 0x05	; 5
    5484:	ee 0f       	add	r30, r30
    5486:	ff 1f       	adc	r31, r31
    5488:	5a 95       	dec	r21
    548a:	e1 f7       	brne	.-8      	; 0x5484 <nrk_start+0x7c>
    548c:	e2 0f       	add	r30, r18
    548e:	f3 1f       	adc	r31, r19
    5490:	e2 5c       	subi	r30, 0xC2	; 194
    5492:	f4 4e       	sbci	r31, 0xE4	; 228
    5494:	32 85       	ldd	r19, Z+10	; 0x0a
    5496:	30 93 bc 1b 	sts	0x1BBC, r19
    549a:	21 e2       	ldi	r18, 0x21	; 33
    549c:	82 02       	muls	r24, r18
    549e:	c0 01       	movw	r24, r0
    54a0:	11 24       	eor	r1, r1
    54a2:	82 5c       	subi	r24, 0xC2	; 194
    54a4:	94 4e       	sbci	r25, 0xE4	; 228
    54a6:	90 93 bb 1b 	sts	0x1BBB, r25
    54aa:	80 93 ba 1b 	sts	0x1BBA, r24
    54ae:	90 93 ac 1b 	sts	0x1BAC, r25
    54b2:	80 93 ab 1b 	sts	0x1BAB, r24
    54b6:	30 93 ad 1b 	sts	0x1BAD, r19
    54ba:	0e 94 1a 3d 	call	0x7a34	; 0x7a34 <nrk_target_start>
    54be:	0e 94 00 3d 	call	0x7a00	; 0x7a00 <nrk_stack_pointer_init>
    54c2:	0e 94 3e 3d 	call	0x7a7c	; 0x7a7c <nrk_start_high_ready_task>
    54c6:	ff cf       	rjmp	.-2      	; 0x54c6 <nrk_start+0xbe>

000054c8 <nrk_init>:
    54c8:	0f 93       	push	r16
    54ca:	1f 93       	push	r17
    54cc:	cf 93       	push	r28
    54ce:	df 93       	push	r29
    54d0:	cd b7       	in	r28, 0x3d	; 61
    54d2:	de b7       	in	r29, 0x3e	; 62
    54d4:	a3 97       	sbiw	r28, 0x23	; 35
    54d6:	0f b6       	in	r0, 0x3f	; 63
    54d8:	f8 94       	cli
    54da:	de bf       	out	0x3e, r29	; 62
    54dc:	0f be       	out	0x3f, r0	; 63
    54de:	cd bf       	out	0x3d, r28	; 61
    54e0:	0e 94 c4 2c 	call	0x5988	; 0x5988 <nrk_signal_create>
    54e4:	80 93 aa 1b 	sts	0x1BAA, r24
    54e8:	8f 3f       	cpi	r24, 0xFF	; 255
    54ea:	21 f4       	brne	.+8      	; 0x54f4 <nrk_init+0x2c>
    54ec:	60 e0       	ldi	r22, 0x00	; 0
    54ee:	8e e0       	ldi	r24, 0x0E	; 14
    54f0:	0e 94 bd 2b 	call	0x577a	; 0x577a <nrk_kernel_error_add>
    54f4:	0e 94 71 3c 	call	0x78e2	; 0x78e2 <_nrk_startup_ok>
    54f8:	88 23       	and	r24, r24
    54fa:	21 f4       	brne	.+8      	; 0x5504 <nrk_init+0x3c>
    54fc:	60 e0       	ldi	r22, 0x00	; 0
    54fe:	86 e0       	ldi	r24, 0x06	; 6
    5500:	0e 94 bd 2b 	call	0x577a	; 0x577a <nrk_kernel_error_add>
    5504:	10 92 ad 1b 	sts	0x1BAD, r1
    5508:	10 92 bb 1b 	sts	0x1BBB, r1
    550c:	10 92 ba 1b 	sts	0x1BBA, r1
    5510:	10 92 ac 1b 	sts	0x1BAC, r1
    5514:	10 92 ab 1b 	sts	0x1BAB, r1
    5518:	10 92 bc 1b 	sts	0x1BBC, r1
    551c:	10 92 b9 1b 	sts	0x1BB9, r1
    5520:	8f ef       	ldi	r24, 0xFF	; 255
    5522:	80 93 a3 1b 	sts	0x1BA3, r24
    5526:	80 93 a5 1b 	sts	0x1BA5, r24
    552a:	80 93 a4 1b 	sts	0x1BA4, r24
    552e:	80 93 a6 1b 	sts	0x1BA6, r24
    5532:	80 93 a8 1b 	sts	0x1BA8, r24
    5536:	80 93 a7 1b 	sts	0x1BA7, r24
    553a:	93 e6       	ldi	r25, 0x63	; 99
    553c:	90 93 48 1b 	sts	0x1B48, r25
    5540:	80 93 46 1b 	sts	0x1B46, r24
    5544:	90 93 69 1b 	sts	0x1B69, r25
    5548:	80 93 67 1b 	sts	0x1B67, r24
    554c:	90 93 8a 1b 	sts	0x1B8A, r25
    5550:	80 93 88 1b 	sts	0x1B88, r24
    5554:	ed eb       	ldi	r30, 0xBD	; 189
    5556:	fb e1       	ldi	r31, 0x1B	; 27
    5558:	cf 01       	movw	r24, r30
    555a:	05 96       	adiw	r24, 0x05	; 5
    555c:	94 83       	std	Z+4, r25	; 0x04
    555e:	83 83       	std	Z+3, r24	; 0x03
    5560:	f7 83       	std	Z+7, r31	; 0x07
    5562:	e6 83       	std	Z+6, r30	; 0x06
    5564:	fc 01       	movw	r30, r24
    5566:	2b e1       	ldi	r18, 0x1B	; 27
    5568:	8c 3c       	cpi	r24, 0xCC	; 204
    556a:	92 07       	cpc	r25, r18
    556c:	a9 f7       	brne	.-22     	; 0x5558 <nrk_init+0x90>
    556e:	10 92 bf 1b 	sts	0x1BBF, r1
    5572:	10 92 be 1b 	sts	0x1BBE, r1
    5576:	10 92 d0 1b 	sts	0x1BD0, r1
    557a:	10 92 cf 1b 	sts	0x1BCF, r1
    557e:	10 92 b0 1b 	sts	0x1BB0, r1
    5582:	10 92 af 1b 	sts	0x1BAF, r1
    5586:	0f 97       	sbiw	r24, 0x0f	; 15
    5588:	90 93 3d 1b 	sts	0x1B3D, r25
    558c:	80 93 3c 1b 	sts	0x1B3C, r24
    5590:	61 e0       	ldi	r22, 0x01	; 1
    5592:	76 e3       	ldi	r23, 0x36	; 54
    5594:	8e 01       	movw	r16, r28
    5596:	0f 5f       	subi	r16, 0xFF	; 255
    5598:	1f 4f       	sbci	r17, 0xFF	; 255
    559a:	c8 01       	movw	r24, r16
    559c:	0e 94 be 3c 	call	0x797c	; 0x797c <nrk_task_set_entry_function>
    55a0:	40 e8       	ldi	r20, 0x80	; 128
    55a2:	50 e0       	ldi	r21, 0x00	; 0
    55a4:	6b e3       	ldi	r22, 0x3B	; 59
    55a6:	7b e0       	ldi	r23, 0x0B	; 11
    55a8:	c8 01       	movw	r24, r16
    55aa:	0e 94 1f 3d 	call	0x7a3e	; 0x7a3e <nrk_task_set_stk>
    55ae:	85 e5       	ldi	r24, 0x55	; 85
    55b0:	80 93 3b 0b 	sts	0x0B3B, r24
    55b4:	19 86       	std	Y+9, r1	; 0x09
    55b6:	1c 8e       	std	Y+28, r1	; 0x1c
    55b8:	1d 8e       	std	Y+29, r1	; 0x1d
    55ba:	1e 8e       	std	Y+30, r1	; 0x1e
    55bc:	1f 8e       	std	Y+31, r1	; 0x1f
    55be:	18 a2       	std	Y+32, r1	; 0x20
    55c0:	19 a2       	std	Y+33, r1	; 0x21
    55c2:	1a a2       	std	Y+34, r1	; 0x22
    55c4:	1b a2       	std	Y+35, r1	; 0x23
    55c6:	91 e0       	ldi	r25, 0x01	; 1
    55c8:	98 87       	std	Y+8, r25	; 0x08
    55ca:	82 e0       	ldi	r24, 0x02	; 2
    55cc:	8a 87       	std	Y+10, r24	; 0x0a
    55ce:	9b 87       	std	Y+11, r25	; 0x0b
    55d0:	c8 01       	movw	r24, r16
    55d2:	0e 94 cb 32 	call	0x6596	; 0x6596 <nrk_activate_task>
    55d6:	a3 96       	adiw	r28, 0x23	; 35
    55d8:	0f b6       	in	r0, 0x3f	; 63
    55da:	f8 94       	cli
    55dc:	de bf       	out	0x3e, r29	; 62
    55de:	0f be       	out	0x3f, r0	; 63
    55e0:	cd bf       	out	0x3d, r28	; 61
    55e2:	df 91       	pop	r29
    55e4:	cf 91       	pop	r28
    55e6:	1f 91       	pop	r17
    55e8:	0f 91       	pop	r16
    55ea:	08 95       	ret

000055ec <nrk_halt>:
    // Poll the SPI status byte until the crystal oscillator is stable
    do {
	    DISABLE_GLOBAL_INT();
	    FASTSPI_UPD_STATUS(spiStatusByte);
	    ENABLE_GLOBAL_INT();
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));
    55ec:	f8 94       	cli
    55ee:	ff cf       	rjmp	.-2      	; 0x55ee <nrk_halt+0x2>

000055f0 <_nrk_errno_set>:
//	DESCRIPTION:
//		Waits for the crystal oscillator to become stable. The flag is polled via the SPI status byte.
//      
//      Note that this function will lock up if the SXOSCON command strobe has not been given before the
//      function call. Also note that global interrupts will always be enabled when this function 
//      returns.
    55f0:	e0 91 ba 1b 	lds	r30, 0x1BBA
    55f4:	f0 91 bb 1b 	lds	r31, 0x1BBB
    55f8:	84 87       	std	Z+12, r24	; 0x0c
    55fa:	08 95       	ret

000055fc <nrk_errno_get>:
//-------------------------------------------------------------------------------------------------------
void halRfWaitForCrystalOscillator(void) {
    uint8_t spiStatusByte;

    55fc:	e0 91 ba 1b 	lds	r30, 0x1BBA
    5600:	f0 91 bb 1b 	lds	r31, 0x1BBB
    5604:	84 85       	ldd	r24, Z+12	; 0x0c
    // Poll the SPI status byte until the crystal oscillator is stable
    do {
    5606:	99 27       	eor	r25, r25
    5608:	08 95       	ret

0000560a <nrk_error_get>:
    560a:	dc 01       	movw	r26, r24
    560c:	fb 01       	movw	r30, r22
    560e:	80 91 2c 0b 	lds	r24, 0x0B2C
    5612:	88 23       	and	r24, r24
    5614:	19 f4       	brne	.+6      	; 0x561c <nrk_error_get+0x12>
    5616:	80 e0       	ldi	r24, 0x00	; 0
    5618:	90 e0       	ldi	r25, 0x00	; 0
    561a:	08 95       	ret
    561c:	80 83       	st	Z, r24
    561e:	80 91 48 08 	lds	r24, 0x0848
    5622:	8c 93       	st	X, r24
    5624:	81 e0       	ldi	r24, 0x01	; 1
    5626:	90 e0       	ldi	r25, 0x00	; 0
    5628:	08 95       	ret

0000562a <nrk_error_print>:
    562a:	1f 93       	push	r17
    562c:	80 91 2c 0b 	lds	r24, 0x0B2C
    5630:	88 23       	and	r24, r24
    5632:	09 f4       	brne	.+2      	; 0x5636 <nrk_error_print+0xc>
    5634:	9e c0       	rjmp	.+316    	; 0x5772 <nrk_error_print+0x148>
    5636:	0e 94 d2 28 	call	0x51a4	; 0x51a4 <nrk_int_disable>
    563a:	0e 94 d2 28 	call	0x51a4	; 0x51a4 <nrk_int_disable>
    563e:	82 e7       	ldi	r24, 0x72	; 114
    5640:	93 e0       	ldi	r25, 0x03	; 3
    5642:	0e 94 dc 27 	call	0x4fb8	; 0x4fb8 <nrk_kprintf>
    5646:	80 91 48 08 	lds	r24, 0x0848
    564a:	99 27       	eor	r25, r25
    564c:	9f 93       	push	r25
    564e:	8f 93       	push	r24
    5650:	84 ec       	ldi	r24, 0xC4	; 196
    5652:	97 e0       	ldi	r25, 0x07	; 7
    5654:	9f 93       	push	r25
    5656:	8f 93       	push	r24
    5658:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    565c:	8e e6       	ldi	r24, 0x6E	; 110
    565e:	93 e0       	ldi	r25, 0x03	; 3
    5660:	0e 94 dc 27 	call	0x4fb8	; 0x4fb8 <nrk_kprintf>
    5664:	0f 90       	pop	r0
    5666:	0f 90       	pop	r0
    5668:	0f 90       	pop	r0
    566a:	0f 90       	pop	r0
    566c:	80 91 2c 0b 	lds	r24, 0x0B2C
    5670:	84 31       	cpi	r24, 0x14	; 20
    5672:	10 f0       	brcs	.+4      	; 0x5678 <nrk_error_print+0x4e>
    5674:	10 92 2c 0b 	sts	0x0B2C, r1
    5678:	80 91 2c 0b 	lds	r24, 0x0B2C
    567c:	99 27       	eor	r25, r25
    567e:	aa 27       	eor	r26, r26
    5680:	bb 27       	eor	r27, r27
    5682:	fc 01       	movw	r30, r24
    5684:	31 97       	sbiw	r30, 0x01	; 1
    5686:	e2 31       	cpi	r30, 0x12	; 18
    5688:	f1 05       	cpc	r31, r1
    568a:	f0 f5       	brcc	.+124    	; 0x5708 <nrk_error_print+0xde>
    568c:	ea 59       	subi	r30, 0x9A	; 154
    568e:	ff 4f       	sbci	r31, 0xFF	; 255
    5690:	ee 0f       	add	r30, r30
    5692:	ff 1f       	adc	r31, r31
    5694:	05 90       	lpm	r0, Z+
    5696:	f4 91       	lpm	r31, Z
    5698:	e0 2d       	mov	r30, r0
    569a:	09 94       	ijmp
    569c:	87 e4       	ldi	r24, 0x47	; 71
    569e:	93 e0       	ldi	r25, 0x03	; 3
    56a0:	35 c0       	rjmp	.+106    	; 0x570c <nrk_error_print+0xe2>
    56a2:	83 e3       	ldi	r24, 0x33	; 51
    56a4:	93 e0       	ldi	r25, 0x03	; 3
    56a6:	32 c0       	rjmp	.+100    	; 0x570c <nrk_error_print+0xe2>
    56a8:	8d e1       	ldi	r24, 0x1D	; 29
    56aa:	93 e0       	ldi	r25, 0x03	; 3
    56ac:	2f c0       	rjmp	.+94     	; 0x570c <nrk_error_print+0xe2>
    56ae:	82 e0       	ldi	r24, 0x02	; 2
    56b0:	93 e0       	ldi	r25, 0x03	; 3
    56b2:	2c c0       	rjmp	.+88     	; 0x570c <nrk_error_print+0xe2>
    56b4:	8c ee       	ldi	r24, 0xEC	; 236
    56b6:	92 e0       	ldi	r25, 0x02	; 2
    56b8:	29 c0       	rjmp	.+82     	; 0x570c <nrk_error_print+0xe2>
    56ba:	84 ed       	ldi	r24, 0xD4	; 212
    56bc:	92 e0       	ldi	r25, 0x02	; 2
    56be:	26 c0       	rjmp	.+76     	; 0x570c <nrk_error_print+0xe2>
    56c0:	81 ec       	ldi	r24, 0xC1	; 193
    56c2:	92 e0       	ldi	r25, 0x02	; 2
    56c4:	23 c0       	rjmp	.+70     	; 0x570c <nrk_error_print+0xe2>
    56c6:	8e ea       	ldi	r24, 0xAE	; 174
    56c8:	92 e0       	ldi	r25, 0x02	; 2
    56ca:	20 c0       	rjmp	.+64     	; 0x570c <nrk_error_print+0xe2>
    56cc:	80 e9       	ldi	r24, 0x90	; 144
    56ce:	92 e0       	ldi	r25, 0x02	; 2
    56d0:	1d c0       	rjmp	.+58     	; 0x570c <nrk_error_print+0xe2>
    56d2:	8b e6       	ldi	r24, 0x6B	; 107
    56d4:	92 e0       	ldi	r25, 0x02	; 2
    56d6:	1a c0       	rjmp	.+52     	; 0x570c <nrk_error_print+0xe2>
    56d8:	8f e5       	ldi	r24, 0x5F	; 95
    56da:	92 e0       	ldi	r25, 0x02	; 2
    56dc:	17 c0       	rjmp	.+46     	; 0x570c <nrk_error_print+0xe2>
    56de:	84 e4       	ldi	r24, 0x44	; 68
    56e0:	92 e0       	ldi	r25, 0x02	; 2
    56e2:	14 c0       	rjmp	.+40     	; 0x570c <nrk_error_print+0xe2>
    56e4:	85 e3       	ldi	r24, 0x35	; 53
    56e6:	92 e0       	ldi	r25, 0x02	; 2
    56e8:	11 c0       	rjmp	.+34     	; 0x570c <nrk_error_print+0xe2>
    56ea:	84 e2       	ldi	r24, 0x24	; 36
    56ec:	92 e0       	ldi	r25, 0x02	; 2
    56ee:	0e c0       	rjmp	.+28     	; 0x570c <nrk_error_print+0xe2>
    56f0:	80 e1       	ldi	r24, 0x10	; 16
    56f2:	92 e0       	ldi	r25, 0x02	; 2
    56f4:	0b c0       	rjmp	.+22     	; 0x570c <nrk_error_print+0xe2>
    56f6:	80 ef       	ldi	r24, 0xF0	; 240
    56f8:	91 e0       	ldi	r25, 0x01	; 1
    56fa:	08 c0       	rjmp	.+16     	; 0x570c <nrk_error_print+0xe2>
    56fc:	88 ed       	ldi	r24, 0xD8	; 216
    56fe:	91 e0       	ldi	r25, 0x01	; 1
    5700:	05 c0       	rjmp	.+10     	; 0x570c <nrk_error_print+0xe2>
    5702:	8d eb       	ldi	r24, 0xBD	; 189
    5704:	91 e0       	ldi	r25, 0x01	; 1
    5706:	02 c0       	rjmp	.+4      	; 0x570c <nrk_error_print+0xe2>
    5708:	86 eb       	ldi	r24, 0xB6	; 182
    570a:	91 e0       	ldi	r25, 0x01	; 1
    570c:	0e 94 dc 27 	call	0x4fb8	; 0x4fb8 <nrk_kprintf>
    5710:	60 91 e1 1b 	lds	r22, 0x1BE1
    5714:	70 91 e2 1b 	lds	r23, 0x1BE2
    5718:	8d e0       	ldi	r24, 0x0D	; 13
    571a:	90 e0       	ldi	r25, 0x00	; 0
    571c:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
    5720:	60 91 e1 1b 	lds	r22, 0x1BE1
    5724:	70 91 e2 1b 	lds	r23, 0x1BE2
    5728:	8a e0       	ldi	r24, 0x0A	; 10
    572a:	90 e0       	ldi	r25, 0x00	; 0
    572c:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
    5730:	82 e0       	ldi	r24, 0x02	; 2
    5732:	90 e0       	ldi	r25, 0x00	; 0
    5734:	0e 94 2e 27 	call	0x4e5c	; 0x4e5c <nrk_led_set>
    5738:	83 e0       	ldi	r24, 0x03	; 3
    573a:	90 e0       	ldi	r25, 0x00	; 0
    573c:	0e 94 11 27 	call	0x4e22	; 0x4e22 <nrk_led_clr>
    5740:	10 e0       	ldi	r17, 0x00	; 0
    5742:	88 ee       	ldi	r24, 0xE8	; 232
    5744:	93 e0       	ldi	r25, 0x03	; 3
    5746:	0e 94 2c 39 	call	0x7258	; 0x7258 <nrk_spin_wait_us>
    574a:	1f 5f       	subi	r17, 0xFF	; 255
    574c:	14 36       	cpi	r17, 0x64	; 100
    574e:	c9 f7       	brne	.-14     	; 0x5742 <nrk_error_print+0x118>
    5750:	83 e0       	ldi	r24, 0x03	; 3
    5752:	90 e0       	ldi	r25, 0x00	; 0
    5754:	0e 94 2e 27 	call	0x4e5c	; 0x4e5c <nrk_led_set>
    5758:	82 e0       	ldi	r24, 0x02	; 2
    575a:	90 e0       	ldi	r25, 0x00	; 0
    575c:	0e 94 11 27 	call	0x4e22	; 0x4e22 <nrk_led_clr>
    5760:	10 e0       	ldi	r17, 0x00	; 0
    5762:	88 ee       	ldi	r24, 0xE8	; 232
    5764:	93 e0       	ldi	r25, 0x03	; 3
    5766:	0e 94 2c 39 	call	0x7258	; 0x7258 <nrk_spin_wait_us>
    576a:	1f 5f       	subi	r17, 0xFF	; 255
    576c:	14 36       	cpi	r17, 0x64	; 100
    576e:	c9 f7       	brne	.-14     	; 0x5762 <nrk_error_print+0x138>
    5770:	df cf       	rjmp	.-66     	; 0x5730 <nrk_error_print+0x106>
    5772:	80 e0       	ldi	r24, 0x00	; 0
    5774:	90 e0       	ldi	r25, 0x00	; 0
    5776:	1f 91       	pop	r17
    5778:	08 95       	ret

0000577a <nrk_kernel_error_add>:
    577a:	80 93 2c 0b 	sts	0x0B2C, r24
    577e:	60 93 48 08 	sts	0x0848, r22
    5782:	0e 94 15 2b 	call	0x562a	; 0x562a <nrk_error_print>
    5786:	08 95       	ret

00005788 <nrk_error_add>:
    // Poll the SPI status byte until the crystal oscillator is stable
    do {
	    DISABLE_GLOBAL_INT();
	    FASTSPI_UPD_STATUS(spiStatusByte);
	    ENABLE_GLOBAL_INT();
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));
    5788:	80 93 2c 0b 	sts	0x0B2C, r24

    578c:	e0 91 ba 1b 	lds	r30, 0x1BBA
    5790:	f0 91 bb 1b 	lds	r31, 0x1BBB
    5794:	80 85       	ldd	r24, Z+8	; 0x08
    5796:	80 93 48 08 	sts	0x0848, r24
} // halRfWaitForCrystalOscillator

    579a:	0e 94 15 2b 	call	0x562a	; 0x562a <nrk_error_print>
    579e:	08 95       	ret

000057a0 <nrk_stack_check_pid>:
    57a0:	99 27       	eor	r25, r25
    57a2:	87 fd       	sbrc	r24, 7
    57a4:	90 95       	com	r25
    57a6:	fc 01       	movw	r30, r24
    57a8:	25 e0       	ldi	r18, 0x05	; 5
    57aa:	ee 0f       	add	r30, r30
    57ac:	ff 1f       	adc	r31, r31
    57ae:	2a 95       	dec	r18
    57b0:	e1 f7       	brne	.-8      	; 0x57aa <nrk_stack_check_pid+0xa>
    57b2:	e8 0f       	add	r30, r24
    57b4:	f9 1f       	adc	r31, r25
    57b6:	e2 5c       	subi	r30, 0xC2	; 194
    57b8:	f4 4e       	sbci	r31, 0xE4	; 228
    57ba:	a2 81       	ldd	r26, Z+2	; 0x02
    57bc:	b3 81       	ldd	r27, Z+3	; 0x03
    57be:	8c 91       	ld	r24, X
    57c0:	85 35       	cpi	r24, 0x55	; 85
    57c2:	29 f0       	breq	.+10     	; 0x57ce <nrk_stack_check_pid+0x2e>
    57c4:	85 e5       	ldi	r24, 0x55	; 85
    57c6:	8c 93       	st	X, r24
    57c8:	8f ef       	ldi	r24, 0xFF	; 255
    57ca:	9f ef       	ldi	r25, 0xFF	; 255
    57cc:	08 95       	ret
    57ce:	80 81       	ld	r24, Z
    57d0:	91 81       	ldd	r25, Z+1	; 0x01
    57d2:	80 50       	subi	r24, 0x00	; 0
    57d4:	92 42       	sbci	r25, 0x22	; 34
    57d6:	18 f4       	brcc	.+6      	; 0x57de <nrk_stack_check_pid+0x3e>
    57d8:	81 e0       	ldi	r24, 0x01	; 1
    57da:	90 e0       	ldi	r25, 0x00	; 0
    57dc:	08 95       	ret
    57de:	82 e1       	ldi	r24, 0x12	; 18
    57e0:	0e 94 c4 2b 	call	0x5788	; 0x5788 <nrk_error_add>
    57e4:	8f ef       	ldi	r24, 0xFF	; 255
    57e6:	9f ef       	ldi	r25, 0xFF	; 255
    57e8:	08 95       	ret

000057ea <dump_stack_info>:

//-------------------------------------------------------------------------------------------------------
//	void rfWaitForCrystalOscillator(void)
//
//	DESCRIPTION:
//		Waits for the crystal oscillator to become stable. The flag is polled via the SPI status byte.
    57ea:	6f 92       	push	r6
    57ec:	7f 92       	push	r7
    57ee:	8f 92       	push	r8
    57f0:	9f 92       	push	r9
    57f2:	af 92       	push	r10
    57f4:	bf 92       	push	r11
    57f6:	cf 92       	push	r12
    57f8:	df 92       	push	r13
    57fa:	ef 92       	push	r14
    57fc:	ff 92       	push	r15
    57fe:	0f 93       	push	r16
    5800:	1f 93       	push	r17
    5802:	cf 93       	push	r28
    5804:	df 93       	push	r29
//      
//      Note that this function will lock up if the SXOSCON command strobe has not been given before the
//      function call. Also note that global interrupts will always be enabled when this function 
//      returns.
//-------------------------------------------------------------------------------------------------------
    5806:	8e e7       	ldi	r24, 0x7E	; 126
    5808:	93 e0       	ldi	r25, 0x03	; 3
    580a:	0e 94 dc 27 	call	0x4fb8	; 0x4fb8 <nrk_kprintf>
void halRfWaitForCrystalOscillator(void) {
    uint8_t spiStatusByte;
    580e:	e0 91 ba 1b 	lds	r30, 0x1BBA
    5812:	f0 91 bb 1b 	lds	r31, 0x1BBB
    5816:	80 85       	ldd	r24, Z+8	; 0x08
    5818:	99 27       	eor	r25, r25
    581a:	87 fd       	sbrc	r24, 7
    581c:	90 95       	com	r25
    581e:	9f 93       	push	r25
    5820:	8f 93       	push	r24
    5822:	87 ec       	ldi	r24, 0xC7	; 199
    5824:	97 e0       	ldi	r25, 0x07	; 7
    5826:	9f 93       	push	r25
    5828:	8f 93       	push	r24
    582a:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>

    582e:	e0 91 ba 1b 	lds	r30, 0x1BBA
    5832:	f0 91 bb 1b 	lds	r31, 0x1BBB
    5836:	02 81       	ldd	r16, Z+2	; 0x02
    5838:	13 81       	ldd	r17, Z+3	; 0x03
    // Poll the SPI status byte until the crystal oscillator is stable
    do {
    583a:	1f 93       	push	r17
    583c:	0f 93       	push	r16
    583e:	80 ed       	ldi	r24, 0xD0	; 208
    5840:	97 e0       	ldi	r25, 0x07	; 7
    5842:	9f 93       	push	r25
    5844:	8f 93       	push	r24
    5846:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
	    DISABLE_GLOBAL_INT();
    584a:	f8 01       	movw	r30, r16
    584c:	80 81       	ld	r24, Z
    584e:	99 27       	eor	r25, r25
    5850:	9f 93       	push	r25
    5852:	8f 93       	push	r24
    5854:	5d ed       	ldi	r21, 0xDD	; 221
    5856:	c5 2e       	mov	r12, r21
    5858:	57 e0       	ldi	r21, 0x07	; 7
    585a:	d5 2e       	mov	r13, r21
    585c:	df 92       	push	r13
    585e:	cf 92       	push	r12
    5860:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
	    FASTSPI_UPD_STATUS(spiStatusByte);
	    ENABLE_GLOBAL_INT();
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));
    5864:	e0 91 ba 1b 	lds	r30, 0x1BBA
    5868:	f0 91 bb 1b 	lds	r31, 0x1BBB
    586c:	80 81       	ld	r24, Z
    586e:	91 81       	ldd	r25, Z+1	; 0x01
    5870:	9f 93       	push	r25
    5872:	8f 93       	push	r24
    5874:	4a ee       	ldi	r20, 0xEA	; 234
    5876:	e4 2e       	mov	r14, r20
    5878:	47 e0       	ldi	r20, 0x07	; 7
    587a:	f4 2e       	mov	r15, r20
    587c:	ff 92       	push	r15
    587e:	ef 92       	push	r14
    5880:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>

    5884:	80 91 ba 1b 	lds	r24, 0x1BBA
    5888:	90 91 bb 1b 	lds	r25, 0x1BBB
    588c:	9f 93       	push	r25
    588e:	8f 93       	push	r24
    5890:	04 ef       	ldi	r16, 0xF4	; 244
    5892:	17 e0       	ldi	r17, 0x07	; 7
    5894:	1f 93       	push	r17
    5896:	0f 93       	push	r16
    5898:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    589c:	ce e3       	ldi	r28, 0x3E	; 62
    589e:	db e1       	ldi	r29, 0x1B	; 27
    58a0:	aa 24       	eor	r10, r10
    58a2:	bb 24       	eor	r11, r11
    58a4:	8d b7       	in	r24, 0x3d	; 61
    58a6:	9e b7       	in	r25, 0x3e	; 62
    58a8:	44 96       	adiw	r24, 0x14	; 20
    58aa:	0f b6       	in	r0, 0x3f	; 63
    58ac:	f8 94       	cli
    58ae:	9e bf       	out	0x3e, r25	; 62
    58b0:	0f be       	out	0x3f, r0	; 63
    58b2:	8d bf       	out	0x3d, r24	; 61
} // halRfWaitForCrystalOscillator

    58b4:	34 e0       	ldi	r19, 0x04	; 4
    58b6:	63 2e       	mov	r6, r19
    58b8:	38 e0       	ldi	r19, 0x08	; 8
    58ba:	73 2e       	mov	r7, r19
    58bc:	46 01       	movw	r8, r12
    58be:	67 01       	movw	r12, r14
    58c0:	78 01       	movw	r14, r16
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));

} // halRfWaitForCrystalOscillator

    58c2:	0a 81       	ldd	r16, Y+2	; 0x02
    58c4:	1b 81       	ldd	r17, Y+3	; 0x03
    58c6:	1f 93       	push	r17
    58c8:	0f 93       	push	r16
    58ca:	bf 92       	push	r11
    58cc:	af 92       	push	r10
    58ce:	7f 92       	push	r7
    58d0:	6f 92       	push	r6
    58d2:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    58d6:	f8 01       	movw	r30, r16
    58d8:	80 81       	ld	r24, Z
    58da:	99 27       	eor	r25, r25
    58dc:	9f 93       	push	r25
    58de:	8f 93       	push	r24
    58e0:	9f 92       	push	r9
    58e2:	8f 92       	push	r8
    58e4:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    58e8:	88 81       	ld	r24, Y
    58ea:	99 81       	ldd	r25, Y+1	; 0x01
    58ec:	9f 93       	push	r25
    58ee:	8f 93       	push	r24
    58f0:	df 92       	push	r13
    58f2:	cf 92       	push	r12
    58f4:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    58f8:	df 93       	push	r29
    58fa:	cf 93       	push	r28
    58fc:	ff 92       	push	r15
    58fe:	ef 92       	push	r14
    5900:	0e 94 aa 3f 	call	0x7f54	; 0x7f54 <printf>
    5904:	08 94       	sec
    5906:	a1 1c       	adc	r10, r1
    5908:	b1 1c       	adc	r11, r1
    590a:	a1 96       	adiw	r28, 0x21	; 33
	    FASTSPI_UPD_STATUS(spiStatusByte);
	    ENABLE_GLOBAL_INT();
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));

} // halRfWaitForCrystalOscillator

    590c:	8d b7       	in	r24, 0x3d	; 61
    590e:	9e b7       	in	r25, 0x3e	; 62
    5910:	42 96       	adiw	r24, 0x12	; 18
    5912:	0f b6       	in	r0, 0x3f	; 63
    5914:	f8 94       	cli
    5916:	9e bf       	out	0x3e, r25	; 62
    5918:	0f be       	out	0x3f, r0	; 63
    591a:	8d bf       	out	0x3d, r24	; 61
    591c:	93 e0       	ldi	r25, 0x03	; 3
    591e:	a9 16       	cp	r10, r25
    5920:	b1 04       	cpc	r11, r1
    5922:	79 f6       	brne	.-98     	; 0x58c2 <dump_stack_info+0xd8>
    5924:	df 91       	pop	r29
    5926:	cf 91       	pop	r28
    5928:	1f 91       	pop	r17
    592a:	0f 91       	pop	r16
    592c:	ff 90       	pop	r15
    592e:	ef 90       	pop	r14
    5930:	df 90       	pop	r13
    5932:	cf 90       	pop	r12
    5934:	bf 90       	pop	r11
    5936:	af 90       	pop	r10
    5938:	9f 90       	pop	r9
    593a:	8f 90       	pop	r8
    593c:	7f 90       	pop	r7
    593e:	6f 90       	pop	r6
    5940:	08 95       	ret

00005942 <nrk_stack_check>:
    5942:	cf 93       	push	r28
    5944:	df 93       	push	r29
    5946:	e0 91 ba 1b 	lds	r30, 0x1BBA
    594a:	f0 91 bb 1b 	lds	r31, 0x1BBB
    594e:	c2 81       	ldd	r28, Z+2	; 0x02
    5950:	d3 81       	ldd	r29, Z+3	; 0x03
    5952:	88 81       	ld	r24, Y
    5954:	85 35       	cpi	r24, 0x55	; 85
    5956:	39 f0       	breq	.+14     	; 0x5966 <nrk_stack_check+0x24>
    5958:	0e 94 f5 2b 	call	0x57ea	; 0x57ea <dump_stack_info>
    595c:	81 e0       	ldi	r24, 0x01	; 1
    595e:	0e 94 c4 2b 	call	0x5788	; 0x5788 <nrk_error_add>
    5962:	85 e5       	ldi	r24, 0x55	; 85
    5964:	88 83       	st	Y, r24
    5966:	e0 91 ba 1b 	lds	r30, 0x1BBA
    596a:	f0 91 bb 1b 	lds	r31, 0x1BBB
    596e:	80 81       	ld	r24, Z
    5970:	91 81       	ldd	r25, Z+1	; 0x01
    5972:	80 50       	subi	r24, 0x00	; 0
    5974:	92 42       	sbci	r25, 0x22	; 34
    5976:	28 f0       	brcs	.+10     	; 0x5982 <nrk_stack_check+0x40>
    5978:	0e 94 f5 2b 	call	0x57ea	; 0x57ea <dump_stack_info>
    597c:	82 e1       	ldi	r24, 0x12	; 18
    597e:	0e 94 c4 2b 	call	0x5788	; 0x5788 <nrk_error_add>
    5982:	df 91       	pop	r29
    5984:	cf 91       	pop	r28
    5986:	08 95       	ret

00005988 <nrk_signal_create>:
    uint8_t spiStatusByte;

    // Poll the SPI status byte until the crystal oscillator is stable
    do {
	    DISABLE_GLOBAL_INT();
	    FASTSPI_UPD_STATUS(spiStatusByte);
    5988:	40 91 23 09 	lds	r20, 0x0923
    598c:	50 91 24 09 	lds	r21, 0x0924
    5990:	60 91 25 09 	lds	r22, 0x0925
    5994:	70 91 26 09 	lds	r23, 0x0926
    5998:	20 e0       	ldi	r18, 0x00	; 0
    599a:	30 e0       	ldi	r19, 0x00	; 0
    599c:	db 01       	movw	r26, r22
    599e:	ca 01       	movw	r24, r20
    59a0:	02 2e       	mov	r0, r18
    59a2:	04 c0       	rjmp	.+8      	; 0x59ac <nrk_signal_create+0x24>
    59a4:	b6 95       	lsr	r27
    59a6:	a7 95       	ror	r26
    59a8:	97 95       	ror	r25
    59aa:	87 95       	ror	r24
    59ac:	0a 94       	dec	r0
    59ae:	d2 f7       	brpl	.-12     	; 0x59a4 <nrk_signal_create+0x1c>
    59b0:	81 70       	andi	r24, 0x01	; 1
    59b2:	90 70       	andi	r25, 0x00	; 0
    59b4:	89 2b       	or	r24, r25
    59b6:	e9 f4       	brne	.+58     	; 0x59f2 <nrk_signal_create+0x6a>
	    ENABLE_GLOBAL_INT();
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));
    59b8:	81 e0       	ldi	r24, 0x01	; 1
    59ba:	90 e0       	ldi	r25, 0x00	; 0
    59bc:	a0 e0       	ldi	r26, 0x00	; 0
    59be:	b0 e0       	ldi	r27, 0x00	; 0
    59c0:	02 2e       	mov	r0, r18
    59c2:	04 c0       	rjmp	.+8      	; 0x59cc <nrk_signal_create+0x44>
    59c4:	88 0f       	add	r24, r24
    59c6:	99 1f       	adc	r25, r25
    59c8:	aa 1f       	adc	r26, r26
    59ca:	bb 1f       	adc	r27, r27
    59cc:	0a 94       	dec	r0
    59ce:	d2 f7       	brpl	.-12     	; 0x59c4 <nrk_signal_create+0x3c>
    59d0:	84 2b       	or	r24, r20
    59d2:	95 2b       	or	r25, r21
    59d4:	a6 2b       	or	r26, r22
    59d6:	b7 2b       	or	r27, r23
    59d8:	80 93 23 09 	sts	0x0923, r24
    59dc:	90 93 24 09 	sts	0x0924, r25
    59e0:	a0 93 25 09 	sts	0x0925, r26
    59e4:	b0 93 26 09 	sts	0x0926, r27

    59e8:	82 2f       	mov	r24, r18
    59ea:	99 27       	eor	r25, r25
    59ec:	87 fd       	sbrc	r24, 7
    59ee:	90 95       	com	r25
    59f0:	08 95       	ret
    59f2:	2f 5f       	subi	r18, 0xFF	; 255
    59f4:	3f 4f       	sbci	r19, 0xFF	; 255
//-------------------------------------------------------------------------------------------------------
void halRfWaitForCrystalOscillator(void) {
    uint8_t spiStatusByte;

    // Poll the SPI status byte until the crystal oscillator is stable
    do {
    59f6:	20 32       	cpi	r18, 0x20	; 32
    59f8:	31 05       	cpc	r19, r1
    59fa:	81 f6       	brne	.-96     	; 0x599c <nrk_signal_create+0x14>
    59fc:	8f ef       	ldi	r24, 0xFF	; 255
    59fe:	9f ef       	ldi	r25, 0xFF	; 255
} // halRfWaitForCrystalOscillator

    5a00:	08 95       	ret

00005a02 <nrk_signal_get_registered_mask>:
    5a02:	e0 91 ba 1b 	lds	r30, 0x1BBA
    5a06:	f0 91 bb 1b 	lds	r31, 0x1BBB
    5a0a:	65 85       	ldd	r22, Z+13	; 0x0d
    5a0c:	76 85       	ldd	r23, Z+14	; 0x0e
    5a0e:	87 85       	ldd	r24, Z+15	; 0x0f
    5a10:	90 89       	ldd	r25, Z+16	; 0x10
    5a12:	08 95       	ret

00005a14 <nrk_signal_unregister>:
    5a14:	ef 92       	push	r14
    5a16:	ff 92       	push	r15
    5a18:	0f 93       	push	r16
    5a1a:	1f 93       	push	r17
    5a1c:	21 e0       	ldi	r18, 0x01	; 1
    5a1e:	30 e0       	ldi	r19, 0x00	; 0
    5a20:	40 e0       	ldi	r20, 0x00	; 0
    5a22:	50 e0       	ldi	r21, 0x00	; 0
    5a24:	04 c0       	rjmp	.+8      	; 0x5a2e <nrk_signal_unregister+0x1a>
    5a26:	22 0f       	add	r18, r18
    5a28:	33 1f       	adc	r19, r19
    5a2a:	44 1f       	adc	r20, r20
    5a2c:	55 1f       	adc	r21, r21
    5a2e:	8a 95       	dec	r24
    5a30:	d2 f7       	brpl	.-12     	; 0x5a26 <nrk_signal_unregister+0x12>
    5a32:	e0 91 ba 1b 	lds	r30, 0x1BBA
    5a36:	f0 91 bb 1b 	lds	r31, 0x1BBB
    5a3a:	e5 84       	ldd	r14, Z+13	; 0x0d
    5a3c:	f6 84       	ldd	r15, Z+14	; 0x0e
    5a3e:	07 85       	ldd	r16, Z+15	; 0x0f
    5a40:	10 89       	ldd	r17, Z+16	; 0x10
    5a42:	da 01       	movw	r26, r20
    5a44:	c9 01       	movw	r24, r18
    5a46:	8e 21       	and	r24, r14
    5a48:	9f 21       	and	r25, r15
    5a4a:	a0 23       	and	r26, r16
    5a4c:	b1 23       	and	r27, r17
    5a4e:	00 97       	sbiw	r24, 0x00	; 0
    5a50:	a1 05       	cpc	r26, r1
    5a52:	b1 05       	cpc	r27, r1
    5a54:	19 f4       	brne	.+6      	; 0x5a5c <nrk_signal_unregister+0x48>
    5a56:	8f ef       	ldi	r24, 0xFF	; 255
    5a58:	9f ef       	ldi	r25, 0xFF	; 255
    5a5a:	1a c0       	rjmp	.+52     	; 0x5a90 <nrk_signal_unregister+0x7c>
    5a5c:	20 95       	com	r18
    5a5e:	30 95       	com	r19
    5a60:	40 95       	com	r20
    5a62:	50 95       	com	r21
    5a64:	e2 22       	and	r14, r18
    5a66:	f3 22       	and	r15, r19
    5a68:	04 23       	and	r16, r20
    5a6a:	15 23       	and	r17, r21
    5a6c:	e5 86       	std	Z+13, r14	; 0x0d
    5a6e:	f6 86       	std	Z+14, r15	; 0x0e
    5a70:	07 87       	std	Z+15, r16	; 0x0f
    5a72:	10 8b       	std	Z+16, r17	; 0x10
    5a74:	81 89       	ldd	r24, Z+17	; 0x11
    5a76:	92 89       	ldd	r25, Z+18	; 0x12
    5a78:	a3 89       	ldd	r26, Z+19	; 0x13
    5a7a:	b4 89       	ldd	r27, Z+20	; 0x14
    5a7c:	82 23       	and	r24, r18
    5a7e:	93 23       	and	r25, r19
    5a80:	a4 23       	and	r26, r20
    5a82:	b5 23       	and	r27, r21
    5a84:	81 8b       	std	Z+17, r24	; 0x11
    5a86:	92 8b       	std	Z+18, r25	; 0x12
    5a88:	a3 8b       	std	Z+19, r26	; 0x13
    5a8a:	b4 8b       	std	Z+20, r27	; 0x14
    5a8c:	81 e0       	ldi	r24, 0x01	; 1
    5a8e:	90 e0       	ldi	r25, 0x00	; 0
    5a90:	1f 91       	pop	r17
    5a92:	0f 91       	pop	r16
    5a94:	ff 90       	pop	r15
    5a96:	ef 90       	pop	r14
    5a98:	08 95       	ret

00005a9a <nrk_signal_register>:
    5a9a:	68 2f       	mov	r22, r24
    5a9c:	77 27       	eor	r23, r23
    5a9e:	67 fd       	sbrc	r22, 7
    5aa0:	70 95       	com	r23
    5aa2:	80 91 23 09 	lds	r24, 0x0923
    5aa6:	90 91 24 09 	lds	r25, 0x0924
    5aaa:	a0 91 25 09 	lds	r26, 0x0925
    5aae:	b0 91 26 09 	lds	r27, 0x0926
    5ab2:	06 2e       	mov	r0, r22
    5ab4:	04 c0       	rjmp	.+8      	; 0x5abe <nrk_signal_register+0x24>
    5ab6:	b6 95       	lsr	r27
    5ab8:	a7 95       	ror	r26
    5aba:	97 95       	ror	r25
    5abc:	87 95       	ror	r24
    5abe:	0a 94       	dec	r0
    5ac0:	d2 f7       	brpl	.-12     	; 0x5ab6 <nrk_signal_register+0x1c>
    5ac2:	81 70       	andi	r24, 0x01	; 1
    5ac4:	90 70       	andi	r25, 0x00	; 0
    5ac6:	89 2b       	or	r24, r25
    5ac8:	19 f4       	brne	.+6      	; 0x5ad0 <nrk_signal_register+0x36>
    5aca:	8f ef       	ldi	r24, 0xFF	; 255
    5acc:	9f ef       	ldi	r25, 0xFF	; 255
    5ace:	08 95       	ret
    5ad0:	e0 91 ba 1b 	lds	r30, 0x1BBA
    5ad4:	f0 91 bb 1b 	lds	r31, 0x1BBB
    5ad8:	21 e0       	ldi	r18, 0x01	; 1
    5ada:	30 e0       	ldi	r19, 0x00	; 0
    5adc:	40 e0       	ldi	r20, 0x00	; 0
    5ade:	50 e0       	ldi	r21, 0x00	; 0
    5ae0:	04 c0       	rjmp	.+8      	; 0x5aea <nrk_signal_register+0x50>
    5ae2:	22 0f       	add	r18, r18
    5ae4:	33 1f       	adc	r19, r19
    5ae6:	44 1f       	adc	r20, r20
    5ae8:	55 1f       	adc	r21, r21
    5aea:	6a 95       	dec	r22
    5aec:	d2 f7       	brpl	.-12     	; 0x5ae2 <nrk_signal_register+0x48>
    5aee:	85 85       	ldd	r24, Z+13	; 0x0d
    5af0:	96 85       	ldd	r25, Z+14	; 0x0e
    5af2:	a7 85       	ldd	r26, Z+15	; 0x0f
    5af4:	b0 89       	ldd	r27, Z+16	; 0x10
    5af6:	82 2b       	or	r24, r18
    5af8:	93 2b       	or	r25, r19
    5afa:	a4 2b       	or	r26, r20
    5afc:	b5 2b       	or	r27, r21
    5afe:	85 87       	std	Z+13, r24	; 0x0d
    5b00:	96 87       	std	Z+14, r25	; 0x0e
    5b02:	a7 87       	std	Z+15, r26	; 0x0f
    5b04:	b0 8b       	std	Z+16, r27	; 0x10
    5b06:	81 e0       	ldi	r24, 0x01	; 1
    5b08:	90 e0       	ldi	r25, 0x00	; 0
    5b0a:	08 95       	ret

00005b0c <nrk_sem_create>:
    5b0c:	38 2f       	mov	r19, r24
    5b0e:	80 91 b9 1b 	lds	r24, 0x1BB9
    5b12:	88 23       	and	r24, r24
    5b14:	19 f0       	breq	.+6      	; 0x5b1c <nrk_sem_create+0x10>
    5b16:	80 e0       	ldi	r24, 0x00	; 0
    5b18:	90 e0       	ldi	r25, 0x00	; 0
    5b1a:	08 95       	ret
    5b1c:	80 91 a3 1b 	lds	r24, 0x1BA3
    5b20:	8f 3f       	cpi	r24, 0xFF	; 255
    5b22:	11 f4       	brne	.+4      	; 0x5b28 <nrk_sem_create+0x1c>
    5b24:	20 e0       	ldi	r18, 0x00	; 0
    5b26:	07 c0       	rjmp	.+14     	; 0x5b36 <nrk_sem_create+0x2a>
    5b28:	80 91 a6 1b 	lds	r24, 0x1BA6
    5b2c:	8f 3f       	cpi	r24, 0xFF	; 255
    5b2e:	11 f0       	breq	.+4      	; 0x5b34 <nrk_sem_create+0x28>
    5b30:	22 e0       	ldi	r18, 0x02	; 2
    5b32:	01 c0       	rjmp	.+2      	; 0x5b36 <nrk_sem_create+0x2a>
    5b34:	21 e0       	ldi	r18, 0x01	; 1
    5b36:	82 2f       	mov	r24, r18
    5b38:	99 27       	eor	r25, r25
    5b3a:	fc 01       	movw	r30, r24
    5b3c:	ee 0f       	add	r30, r30
    5b3e:	ff 1f       	adc	r31, r31
    5b40:	e8 0f       	add	r30, r24
    5b42:	f9 1f       	adc	r31, r25
    5b44:	ed 55       	subi	r30, 0x5D	; 93
    5b46:	f4 4e       	sbci	r31, 0xE4	; 228
    5b48:	32 83       	std	Z+2, r19	; 0x02
    5b4a:	30 83       	st	Z, r19
    5b4c:	61 83       	std	Z+1, r22	; 0x01
    5b4e:	81 e0       	ldi	r24, 0x01	; 1
    5b50:	80 93 b9 1b 	sts	0x1BB9, r24
    5b54:	83 e0       	ldi	r24, 0x03	; 3
    5b56:	28 9f       	mul	r18, r24
    5b58:	c0 01       	movw	r24, r0
    5b5a:	11 24       	eor	r1, r1
    5b5c:	8d 55       	subi	r24, 0x5D	; 93
    5b5e:	94 4e       	sbci	r25, 0xE4	; 228
    5b60:	08 95       	ret

00005b62 <nrk_get_resource_index>:
    5b62:	2b e1       	ldi	r18, 0x1B	; 27
    5b64:	83 3a       	cpi	r24, 0xA3	; 163
    5b66:	92 07       	cpc	r25, r18
    5b68:	11 f4       	brne	.+4      	; 0x5b6e <nrk_get_resource_index+0xc>
    5b6a:	80 e0       	ldi	r24, 0x00	; 0
    5b6c:	07 c0       	rjmp	.+14     	; 0x5b7c <nrk_get_resource_index+0x1a>
    5b6e:	86 5a       	subi	r24, 0xA6	; 166
    5b70:	9b 41       	sbci	r25, 0x1B	; 27
    5b72:	19 f0       	breq	.+6      	; 0x5b7a <nrk_get_resource_index+0x18>
    5b74:	8f ef       	ldi	r24, 0xFF	; 255
    5b76:	9f ef       	ldi	r25, 0xFF	; 255
    5b78:	08 95       	ret
    5b7a:	81 e0       	ldi	r24, 0x01	; 1
    5b7c:	99 27       	eor	r25, r25
    5b7e:	87 fd       	sbrc	r24, 7
    5b80:	90 95       	com	r25
    5b82:	08 95       	ret

00005b84 <nrk_sem_delete>:
    5b84:	0e 94 b1 2d 	call	0x5b62	; 0x5b62 <nrk_get_resource_index>
    5b88:	8f 3f       	cpi	r24, 0xFF	; 255
    5b8a:	11 f4       	brne	.+4      	; 0x5b90 <nrk_sem_delete+0xc>
    5b8c:	81 e0       	ldi	r24, 0x01	; 1
    5b8e:	02 c0       	rjmp	.+4      	; 0x5b94 <nrk_sem_delete+0x10>
    5b90:	82 30       	cpi	r24, 0x02	; 2
    5b92:	29 f4       	brne	.+10     	; 0x5b9e <nrk_sem_delete+0x1a>
    5b94:	0e 94 f8 2a 	call	0x55f0	; 0x55f0 <_nrk_errno_set>
    5b98:	8f ef       	ldi	r24, 0xFF	; 255
    5b9a:	9f ef       	ldi	r25, 0xFF	; 255
    5b9c:	08 95       	ret
    5b9e:	99 27       	eor	r25, r25
    5ba0:	87 fd       	sbrc	r24, 7
    5ba2:	90 95       	com	r25
    5ba4:	fc 01       	movw	r30, r24
    5ba6:	ee 0f       	add	r30, r30
    5ba8:	ff 1f       	adc	r31, r31
    5baa:	e8 0f       	add	r30, r24
    5bac:	f9 1f       	adc	r31, r25
    5bae:	ed 55       	subi	r30, 0x5D	; 93
    5bb0:	f4 4e       	sbci	r31, 0xE4	; 228
    5bb2:	8f ef       	ldi	r24, 0xFF	; 255
    5bb4:	80 83       	st	Z, r24
    5bb6:	82 83       	std	Z+2, r24	; 0x02
    5bb8:	81 83       	std	Z+1, r24	; 0x01
    5bba:	80 91 b9 1b 	lds	r24, 0x1BB9
    5bbe:	81 50       	subi	r24, 0x01	; 1
    5bc0:	80 93 b9 1b 	sts	0x1BB9, r24
    5bc4:	81 e0       	ldi	r24, 0x01	; 1
    5bc6:	90 e0       	ldi	r25, 0x00	; 0
    5bc8:	08 95       	ret

00005bca <nrk_sem_query>:
    5bca:	0e 94 b1 2d 	call	0x5b62	; 0x5b62 <nrk_get_resource_index>
    5bce:	8f 3f       	cpi	r24, 0xFF	; 255
    5bd0:	11 f4       	brne	.+4      	; 0x5bd6 <nrk_sem_query+0xc>
    5bd2:	81 e0       	ldi	r24, 0x01	; 1
    5bd4:	02 c0       	rjmp	.+4      	; 0x5bda <nrk_sem_query+0x10>
    5bd6:	82 30       	cpi	r24, 0x02	; 2
    5bd8:	29 f4       	brne	.+10     	; 0x5be4 <nrk_sem_query+0x1a>
    5bda:	0e 94 f8 2a 	call	0x55f0	; 0x55f0 <_nrk_errno_set>
    5bde:	8f ef       	ldi	r24, 0xFF	; 255
    5be0:	9f ef       	ldi	r25, 0xFF	; 255
    5be2:	08 95       	ret
    5be4:	99 27       	eor	r25, r25
    5be6:	87 fd       	sbrc	r24, 7
    5be8:	90 95       	com	r25
    5bea:	fc 01       	movw	r30, r24
    5bec:	ee 0f       	add	r30, r30
    5bee:	ff 1f       	adc	r31, r31
    5bf0:	e8 0f       	add	r30, r24
    5bf2:	f9 1f       	adc	r31, r25
    5bf4:	ed 55       	subi	r30, 0x5D	; 93
    5bf6:	f4 4e       	sbci	r31, 0xE4	; 228
    5bf8:	82 81       	ldd	r24, Z+2	; 0x02
    5bfa:	99 27       	eor	r25, r25
    5bfc:	87 fd       	sbrc	r24, 7
    5bfe:	90 95       	com	r25
    5c00:	08 95       	ret

00005c02 <nrk_sem_post>:
    5c02:	1f 93       	push	r17
    5c04:	cf 93       	push	r28
    5c06:	df 93       	push	r29
    5c08:	0e 94 b1 2d 	call	0x5b62	; 0x5b62 <nrk_get_resource_index>
    5c0c:	18 2f       	mov	r17, r24
    5c0e:	8f 3f       	cpi	r24, 0xFF	; 255
    5c10:	11 f4       	brne	.+4      	; 0x5c16 <nrk_sem_post+0x14>
    5c12:	81 e0       	ldi	r24, 0x01	; 1
    5c14:	03 c0       	rjmp	.+6      	; 0x5c1c <nrk_sem_post+0x1a>
    5c16:	82 30       	cpi	r24, 0x02	; 2
    5c18:	31 f4       	brne	.+12     	; 0x5c26 <nrk_sem_post+0x24>
    5c1a:	82 e0       	ldi	r24, 0x02	; 2
    5c1c:	0e 94 f8 2a 	call	0x55f0	; 0x55f0 <_nrk_errno_set>
    5c20:	8f ef       	ldi	r24, 0xFF	; 255
    5c22:	9f ef       	ldi	r25, 0xFF	; 255
    5c24:	3e c0       	rjmp	.+124    	; 0x5ca2 <nrk_sem_post+0xa0>
    5c26:	99 27       	eor	r25, r25
    5c28:	87 fd       	sbrc	r24, 7
    5c2a:	90 95       	com	r25
    5c2c:	ec 01       	movw	r28, r24
    5c2e:	cc 0f       	add	r28, r28
    5c30:	dd 1f       	adc	r29, r29
    5c32:	c8 0f       	add	r28, r24
    5c34:	d9 1f       	adc	r29, r25
    5c36:	cd 55       	subi	r28, 0x5D	; 93
    5c38:	d4 4e       	sbci	r29, 0xE4	; 228
    5c3a:	9a 81       	ldd	r25, Y+2	; 0x02
    5c3c:	88 81       	ld	r24, Y
    5c3e:	98 17       	cp	r25, r24
    5c40:	74 f5       	brge	.+92     	; 0x5c9e <nrk_sem_post+0x9c>
    5c42:	0e 94 d2 28 	call	0x51a4	; 0x51a4 <nrk_int_disable>
    5c46:	8a 81       	ldd	r24, Y+2	; 0x02
    5c48:	8f 5f       	subi	r24, 0xFF	; 255
    5c4a:	8a 83       	std	Y+2, r24	; 0x02
    5c4c:	e0 91 ba 1b 	lds	r30, 0x1BBA
    5c50:	f0 91 bb 1b 	lds	r31, 0x1BBB
    5c54:	14 82       	std	Z+4, r1	; 0x04
    5c56:	e5 e4       	ldi	r30, 0x45	; 69
    5c58:	fb e1       	ldi	r31, 0x1B	; 27
    5c5a:	21 2f       	mov	r18, r17
    5c5c:	33 27       	eor	r19, r19
    5c5e:	27 fd       	sbrc	r18, 7
    5c60:	30 95       	com	r19
    5c62:	43 2f       	mov	r20, r19
    5c64:	53 2f       	mov	r21, r19
    5c66:	80 81       	ld	r24, Z
    5c68:	82 30       	cpi	r24, 0x02	; 2
    5c6a:	91 f4       	brne	.+36     	; 0x5c90 <nrk_sem_post+0x8e>
    5c6c:	82 85       	ldd	r24, Z+10	; 0x0a
    5c6e:	93 85       	ldd	r25, Z+11	; 0x0b
    5c70:	a4 85       	ldd	r26, Z+12	; 0x0c
    5c72:	b5 85       	ldd	r27, Z+13	; 0x0d
    5c74:	82 17       	cp	r24, r18
    5c76:	93 07       	cpc	r25, r19
    5c78:	a4 07       	cpc	r26, r20
    5c7a:	b5 07       	cpc	r27, r21
    5c7c:	49 f4       	brne	.+18     	; 0x5c90 <nrk_sem_post+0x8e>
    5c7e:	83 e0       	ldi	r24, 0x03	; 3
    5c80:	82 83       	std	Z+2, r24	; 0x02
    5c82:	17 86       	std	Z+15, r1	; 0x0f
    5c84:	16 86       	std	Z+14, r1	; 0x0e
    5c86:	10 82       	st	Z, r1
    5c88:	12 86       	std	Z+10, r1	; 0x0a
    5c8a:	13 86       	std	Z+11, r1	; 0x0b
    5c8c:	14 86       	std	Z+12, r1	; 0x0c
    5c8e:	15 86       	std	Z+13, r1	; 0x0d
    5c90:	b1 96       	adiw	r30, 0x21	; 33
    5c92:	8b e1       	ldi	r24, 0x1B	; 27
    5c94:	e8 3a       	cpi	r30, 0xA8	; 168
    5c96:	f8 07       	cpc	r31, r24
    5c98:	31 f7       	brne	.-52     	; 0x5c66 <nrk_sem_post+0x64>
    5c9a:	0e 94 d4 28 	call	0x51a8	; 0x51a8 <nrk_int_enable>
    5c9e:	81 e0       	ldi	r24, 0x01	; 1
    5ca0:	90 e0       	ldi	r25, 0x00	; 0
    5ca2:	df 91       	pop	r29
    5ca4:	cf 91       	pop	r28
    5ca6:	1f 91       	pop	r17
    5ca8:	08 95       	ret

00005caa <nrk_event_signal>:
    5caa:	df 92       	push	r13
    5cac:	ef 92       	push	r14
    5cae:	ff 92       	push	r15
    5cb0:	0f 93       	push	r16
    5cb2:	1f 93       	push	r17
    5cb4:	e1 e0       	ldi	r30, 0x01	; 1
    5cb6:	ee 2e       	mov	r14, r30
    5cb8:	f1 2c       	mov	r15, r1
    5cba:	01 2d       	mov	r16, r1
    5cbc:	11 2d       	mov	r17, r1
    5cbe:	04 c0       	rjmp	.+8      	; 0x5cc8 <nrk_event_signal+0x1e>
    5cc0:	ee 0c       	add	r14, r14
    5cc2:	ff 1c       	adc	r15, r15
    5cc4:	00 1f       	adc	r16, r16
    5cc6:	11 1f       	adc	r17, r17
    5cc8:	8a 95       	dec	r24
    5cca:	d2 f7       	brpl	.-12     	; 0x5cc0 <nrk_event_signal+0x16>
    5ccc:	80 91 23 09 	lds	r24, 0x0923
    5cd0:	90 91 24 09 	lds	r25, 0x0924
    5cd4:	a0 91 25 09 	lds	r26, 0x0925
    5cd8:	b0 91 26 09 	lds	r27, 0x0926
    5cdc:	8e 21       	and	r24, r14
    5cde:	9f 21       	and	r25, r15
    5ce0:	a0 23       	and	r26, r16
    5ce2:	b1 23       	and	r27, r17
    5ce4:	00 97       	sbiw	r24, 0x00	; 0
    5ce6:	a1 05       	cpc	r26, r1
    5ce8:	b1 05       	cpc	r27, r1
    5cea:	11 f4       	brne	.+4      	; 0x5cf0 <nrk_event_signal+0x46>
    5cec:	81 e0       	ldi	r24, 0x01	; 1
    5cee:	43 c0       	rjmp	.+134    	; 0x5d76 <nrk_event_signal+0xcc>
    5cf0:	0e 94 d2 28 	call	0x51a4	; 0x51a4 <nrk_int_disable>
    5cf4:	e5 e4       	ldi	r30, 0x45	; 69
    5cf6:	fb e1       	ldi	r31, 0x1B	; 27
    5cf8:	dd 24       	eor	r13, r13
    5cfa:	80 81       	ld	r24, Z
    5cfc:	81 30       	cpi	r24, 0x01	; 1
    5cfe:	b9 f4       	brne	.+46     	; 0x5d2e <nrk_event_signal+0x84>
    5d00:	82 85       	ldd	r24, Z+10	; 0x0a
    5d02:	93 85       	ldd	r25, Z+11	; 0x0b
    5d04:	a4 85       	ldd	r26, Z+12	; 0x0c
    5d06:	b5 85       	ldd	r27, Z+13	; 0x0d
    5d08:	8e 21       	and	r24, r14
    5d0a:	9f 21       	and	r25, r15
    5d0c:	a0 23       	and	r26, r16
    5d0e:	b1 23       	and	r27, r17
    5d10:	00 97       	sbiw	r24, 0x00	; 0
    5d12:	a1 05       	cpc	r26, r1
    5d14:	b1 05       	cpc	r27, r1
    5d16:	59 f0       	breq	.+22     	; 0x5d2e <nrk_event_signal+0x84>
    5d18:	83 e0       	ldi	r24, 0x03	; 3
    5d1a:	82 83       	std	Z+2, r24	; 0x02
    5d1c:	17 86       	std	Z+15, r1	; 0x0f
    5d1e:	16 86       	std	Z+14, r1	; 0x0e
    5d20:	10 82       	st	Z, r1
    5d22:	e2 86       	std	Z+10, r14	; 0x0a
    5d24:	f3 86       	std	Z+11, r15	; 0x0b
    5d26:	04 87       	std	Z+12, r16	; 0x0c
    5d28:	15 87       	std	Z+13, r17	; 0x0d
    5d2a:	dd 24       	eor	r13, r13
    5d2c:	d3 94       	inc	r13
    5d2e:	80 81       	ld	r24, Z
    5d30:	82 30       	cpi	r24, 0x02	; 2
    5d32:	a1 f4       	brne	.+40     	; 0x5d5c <nrk_event_signal+0xb2>
    5d34:	82 85       	ldd	r24, Z+10	; 0x0a
    5d36:	93 85       	ldd	r25, Z+11	; 0x0b
    5d38:	a4 85       	ldd	r26, Z+12	; 0x0c
    5d3a:	b5 85       	ldd	r27, Z+13	; 0x0d
    5d3c:	8e 15       	cp	r24, r14
    5d3e:	9f 05       	cpc	r25, r15
    5d40:	a0 07       	cpc	r26, r16
    5d42:	b1 07       	cpc	r27, r17
    5d44:	59 f4       	brne	.+22     	; 0x5d5c <nrk_event_signal+0xb2>
    5d46:	83 e0       	ldi	r24, 0x03	; 3
    5d48:	82 83       	std	Z+2, r24	; 0x02
    5d4a:	17 86       	std	Z+15, r1	; 0x0f
    5d4c:	16 86       	std	Z+14, r1	; 0x0e
    5d4e:	10 82       	st	Z, r1
    5d50:	12 86       	std	Z+10, r1	; 0x0a
    5d52:	13 86       	std	Z+11, r1	; 0x0b
    5d54:	14 86       	std	Z+12, r1	; 0x0c
    5d56:	15 86       	std	Z+13, r1	; 0x0d
    5d58:	dd 24       	eor	r13, r13
    5d5a:	d3 94       	inc	r13
    5d5c:	b1 96       	adiw	r30, 0x21	; 33
    5d5e:	8b e1       	ldi	r24, 0x1B	; 27
    5d60:	e8 3a       	cpi	r30, 0xA8	; 168
    5d62:	f8 07       	cpc	r31, r24
    5d64:	51 f6       	brne	.-108    	; 0x5cfa <nrk_event_signal+0x50>
    5d66:	0e 94 d4 28 	call	0x51a8	; 0x51a8 <nrk_int_enable>
    5d6a:	dd 20       	and	r13, r13
    5d6c:	19 f0       	breq	.+6      	; 0x5d74 <nrk_event_signal+0xca>
    5d6e:	81 e0       	ldi	r24, 0x01	; 1
    5d70:	90 e0       	ldi	r25, 0x00	; 0
    5d72:	05 c0       	rjmp	.+10     	; 0x5d7e <nrk_event_signal+0xd4>
    5d74:	82 e0       	ldi	r24, 0x02	; 2
    5d76:	0e 94 f8 2a 	call	0x55f0	; 0x55f0 <_nrk_errno_set>
    5d7a:	8f ef       	ldi	r24, 0xFF	; 255
    5d7c:	9f ef       	ldi	r25, 0xFF	; 255
    5d7e:	1f 91       	pop	r17
    5d80:	0f 91       	pop	r16
    5d82:	ff 90       	pop	r15
    5d84:	ef 90       	pop	r14
    5d86:	df 90       	pop	r13
    5d88:	08 95       	ret

00005d8a <nrk_signal_delete>:
    5d8a:	ef 92       	push	r14
    5d8c:	ff 92       	push	r15
    5d8e:	0f 93       	push	r16
    5d90:	1f 93       	push	r17
    5d92:	cf 93       	push	r28
    5d94:	df 93       	push	r29
    5d96:	c8 2f       	mov	r28, r24
    5d98:	dd 27       	eor	r29, r29
    5d9a:	c7 fd       	sbrc	r28, 7
    5d9c:	d0 95       	com	r29
    5d9e:	f1 e0       	ldi	r31, 0x01	; 1
    5da0:	ef 2e       	mov	r14, r31
    5da2:	f1 2c       	mov	r15, r1
    5da4:	01 2d       	mov	r16, r1
    5da6:	11 2d       	mov	r17, r1
    5da8:	0c 2e       	mov	r0, r28
    5daa:	04 c0       	rjmp	.+8      	; 0x5db4 <nrk_signal_delete+0x2a>
    5dac:	ee 0c       	add	r14, r14
    5dae:	ff 1c       	adc	r15, r15
    5db0:	00 1f       	adc	r16, r16
    5db2:	11 1f       	adc	r17, r17
    5db4:	0a 94       	dec	r0
    5db6:	d2 f7       	brpl	.-12     	; 0x5dac <nrk_signal_delete+0x22>
    5db8:	80 91 23 09 	lds	r24, 0x0923
    5dbc:	90 91 24 09 	lds	r25, 0x0924
    5dc0:	a0 91 25 09 	lds	r26, 0x0925
    5dc4:	b0 91 26 09 	lds	r27, 0x0926
    5dc8:	8e 21       	and	r24, r14
    5dca:	9f 21       	and	r25, r15
    5dcc:	a0 23       	and	r26, r16
    5dce:	b1 23       	and	r27, r17
    5dd0:	00 97       	sbiw	r24, 0x00	; 0
    5dd2:	a1 05       	cpc	r26, r1
    5dd4:	b1 05       	cpc	r27, r1
    5dd6:	19 f4       	brne	.+6      	; 0x5dde <nrk_signal_delete+0x54>
    5dd8:	8f ef       	ldi	r24, 0xFF	; 255
    5dda:	9f ef       	ldi	r25, 0xFF	; 255
    5ddc:	5d c0       	rjmp	.+186    	; 0x5e98 <nrk_signal_delete+0x10e>
    5dde:	0e 94 d2 28 	call	0x51a4	; 0x51a4 <nrk_int_disable>
    5de2:	ee e3       	ldi	r30, 0x3E	; 62
    5de4:	fb e1       	ldi	r31, 0x1B	; 27
    5de6:	a8 01       	movw	r20, r16
    5de8:	97 01       	movw	r18, r14
    5dea:	20 95       	com	r18
    5dec:	30 95       	com	r19
    5dee:	40 95       	com	r20
    5df0:	50 95       	com	r21
    5df2:	80 85       	ldd	r24, Z+8	; 0x08
    5df4:	8f 3f       	cpi	r24, 0xFF	; 255
    5df6:	41 f1       	breq	.+80     	; 0x5e48 <nrk_signal_delete+0xbe>
    5df8:	85 85       	ldd	r24, Z+13	; 0x0d
    5dfa:	96 85       	ldd	r25, Z+14	; 0x0e
    5dfc:	a7 85       	ldd	r26, Z+15	; 0x0f
    5dfe:	b0 89       	ldd	r27, Z+16	; 0x10
    5e00:	8e 15       	cp	r24, r14
    5e02:	9f 05       	cpc	r25, r15
    5e04:	a0 07       	cpc	r26, r16
    5e06:	b1 07       	cpc	r27, r17
    5e08:	39 f4       	brne	.+14     	; 0x5e18 <nrk_signal_delete+0x8e>
    5e0a:	11 8a       	std	Z+17, r1	; 0x11
    5e0c:	12 8a       	std	Z+18, r1	; 0x12
    5e0e:	13 8a       	std	Z+19, r1	; 0x13
    5e10:	14 8a       	std	Z+20, r1	; 0x14
    5e12:	17 82       	std	Z+7, r1	; 0x07
    5e14:	83 e0       	ldi	r24, 0x03	; 3
    5e16:	81 87       	std	Z+9, r24	; 0x09
    5e18:	85 85       	ldd	r24, Z+13	; 0x0d
    5e1a:	96 85       	ldd	r25, Z+14	; 0x0e
    5e1c:	a7 85       	ldd	r26, Z+15	; 0x0f
    5e1e:	b0 89       	ldd	r27, Z+16	; 0x10
    5e20:	82 23       	and	r24, r18
    5e22:	93 23       	and	r25, r19
    5e24:	a4 23       	and	r26, r20
    5e26:	b5 23       	and	r27, r21
    5e28:	85 87       	std	Z+13, r24	; 0x0d
    5e2a:	96 87       	std	Z+14, r25	; 0x0e
    5e2c:	a7 87       	std	Z+15, r26	; 0x0f
    5e2e:	b0 8b       	std	Z+16, r27	; 0x10
    5e30:	81 89       	ldd	r24, Z+17	; 0x11
    5e32:	92 89       	ldd	r25, Z+18	; 0x12
    5e34:	a3 89       	ldd	r26, Z+19	; 0x13
    5e36:	b4 89       	ldd	r27, Z+20	; 0x14
    5e38:	82 23       	and	r24, r18
    5e3a:	93 23       	and	r25, r19
    5e3c:	a4 23       	and	r26, r20
    5e3e:	b5 23       	and	r27, r21
    5e40:	81 8b       	std	Z+17, r24	; 0x11
    5e42:	92 8b       	std	Z+18, r25	; 0x12
    5e44:	a3 8b       	std	Z+19, r26	; 0x13
    5e46:	b4 8b       	std	Z+20, r27	; 0x14
    5e48:	b1 96       	adiw	r30, 0x21	; 33
    5e4a:	8b e1       	ldi	r24, 0x1B	; 27
    5e4c:	e1 3a       	cpi	r30, 0xA1	; 161
    5e4e:	f8 07       	cpc	r31, r24
    5e50:	81 f6       	brne	.-96     	; 0x5df2 <nrk_signal_delete+0x68>
    5e52:	2e ef       	ldi	r18, 0xFE	; 254
    5e54:	3f ef       	ldi	r19, 0xFF	; 255
    5e56:	4f ef       	ldi	r20, 0xFF	; 255
    5e58:	5f ef       	ldi	r21, 0xFF	; 255
    5e5a:	04 c0       	rjmp	.+8      	; 0x5e64 <nrk_signal_delete+0xda>
    5e5c:	22 0f       	add	r18, r18
    5e5e:	33 1f       	adc	r19, r19
    5e60:	44 1f       	adc	r20, r20
    5e62:	55 1f       	adc	r21, r21
    5e64:	ca 95       	dec	r28
    5e66:	d2 f7       	brpl	.-12     	; 0x5e5c <nrk_signal_delete+0xd2>
    5e68:	80 91 23 09 	lds	r24, 0x0923
    5e6c:	90 91 24 09 	lds	r25, 0x0924
    5e70:	a0 91 25 09 	lds	r26, 0x0925
    5e74:	b0 91 26 09 	lds	r27, 0x0926
    5e78:	82 23       	and	r24, r18
    5e7a:	93 23       	and	r25, r19
    5e7c:	a4 23       	and	r26, r20
    5e7e:	b5 23       	and	r27, r21
    5e80:	80 93 23 09 	sts	0x0923, r24
    5e84:	90 93 24 09 	sts	0x0924, r25
    5e88:	a0 93 25 09 	sts	0x0925, r26
    5e8c:	b0 93 26 09 	sts	0x0926, r27
    5e90:	0e 94 d4 28 	call	0x51a8	; 0x51a8 <nrk_int_enable>
    5e94:	81 e0       	ldi	r24, 0x01	; 1
    5e96:	90 e0       	ldi	r25, 0x00	; 0
    5e98:	df 91       	pop	r29
    5e9a:	cf 91       	pop	r28
    5e9c:	1f 91       	pop	r17
    5e9e:	0f 91       	pop	r16
    5ea0:	ff 90       	pop	r15
    5ea2:	ef 90       	pop	r14
    5ea4:	08 95       	ret

00005ea6 <nrk_sem_pend>:
    5ea6:	1f 93       	push	r17
    5ea8:	cf 93       	push	r28
    5eaa:	df 93       	push	r29
    5eac:	0e 94 b1 2d 	call	0x5b62	; 0x5b62 <nrk_get_resource_index>
    5eb0:	18 2f       	mov	r17, r24
    5eb2:	8f 3f       	cpi	r24, 0xFF	; 255
    5eb4:	11 f4       	brne	.+4      	; 0x5eba <nrk_sem_pend+0x14>
    5eb6:	81 e0       	ldi	r24, 0x01	; 1
    5eb8:	03 c0       	rjmp	.+6      	; 0x5ec0 <nrk_sem_pend+0x1a>
    5eba:	82 30       	cpi	r24, 0x02	; 2
    5ebc:	31 f4       	brne	.+12     	; 0x5eca <nrk_sem_pend+0x24>
    5ebe:	82 e0       	ldi	r24, 0x02	; 2
    5ec0:	0e 94 f8 2a 	call	0x55f0	; 0x55f0 <_nrk_errno_set>
    5ec4:	8f ef       	ldi	r24, 0xFF	; 255
    5ec6:	9f ef       	ldi	r25, 0xFF	; 255
    5ec8:	3e c0       	rjmp	.+124    	; 0x5f46 <nrk_sem_pend+0xa0>
    5eca:	0e 94 d2 28 	call	0x51a4	; 0x51a4 <nrk_int_disable>
    5ece:	81 2f       	mov	r24, r17
    5ed0:	99 27       	eor	r25, r25
    5ed2:	87 fd       	sbrc	r24, 7
    5ed4:	90 95       	com	r25
    5ed6:	ec 01       	movw	r28, r24
    5ed8:	cc 0f       	add	r28, r28
    5eda:	dd 1f       	adc	r29, r29
    5edc:	c8 0f       	add	r28, r24
    5ede:	d9 1f       	adc	r29, r25
    5ee0:	cd 55       	subi	r28, 0x5D	; 93
    5ee2:	d4 4e       	sbci	r29, 0xE4	; 228
    5ee4:	8a 81       	ldd	r24, Y+2	; 0x02
    5ee6:	88 23       	and	r24, r24
    5ee8:	d9 f4       	brne	.+54     	; 0x5f20 <nrk_sem_pend+0x7a>
    5eea:	e0 91 ba 1b 	lds	r30, 0x1BBA
    5eee:	f0 91 bb 1b 	lds	r31, 0x1BBB
    5ef2:	87 81       	ldd	r24, Z+7	; 0x07
    5ef4:	82 60       	ori	r24, 0x02	; 2
    5ef6:	87 83       	std	Z+7, r24	; 0x07
    5ef8:	e0 91 ba 1b 	lds	r30, 0x1BBA
    5efc:	f0 91 bb 1b 	lds	r31, 0x1BBB
    5f00:	81 2f       	mov	r24, r17
    5f02:	99 27       	eor	r25, r25
    5f04:	87 fd       	sbrc	r24, 7
    5f06:	90 95       	com	r25
    5f08:	a9 2f       	mov	r26, r25
    5f0a:	b9 2f       	mov	r27, r25
    5f0c:	81 8b       	std	Z+17, r24	; 0x11
    5f0e:	92 8b       	std	Z+18, r25	; 0x12
    5f10:	a3 8b       	std	Z+19, r26	; 0x13
    5f12:	b4 8b       	std	Z+20, r27	; 0x14
    5f14:	0e 94 d4 28 	call	0x51a8	; 0x51a8 <nrk_int_enable>
    5f18:	80 e0       	ldi	r24, 0x00	; 0
    5f1a:	90 e0       	ldi	r25, 0x00	; 0
    5f1c:	0e 94 f8 31 	call	0x63f0	; 0x63f0 <nrk_wait_until_ticks>
    5f20:	8a 81       	ldd	r24, Y+2	; 0x02
    5f22:	81 50       	subi	r24, 0x01	; 1
    5f24:	8a 83       	std	Y+2, r24	; 0x02
    5f26:	e0 91 ba 1b 	lds	r30, 0x1BBA
    5f2a:	f0 91 bb 1b 	lds	r31, 0x1BBB
    5f2e:	89 81       	ldd	r24, Y+1	; 0x01
    5f30:	83 87       	std	Z+11, r24	; 0x0b
    5f32:	e0 91 ba 1b 	lds	r30, 0x1BBA
    5f36:	f0 91 bb 1b 	lds	r31, 0x1BBB
    5f3a:	81 e0       	ldi	r24, 0x01	; 1
    5f3c:	84 83       	std	Z+4, r24	; 0x04
    5f3e:	0e 94 d4 28 	call	0x51a8	; 0x51a8 <nrk_int_enable>
    5f42:	81 e0       	ldi	r24, 0x01	; 1
    5f44:	90 e0       	ldi	r25, 0x00	; 0
    5f46:	df 91       	pop	r29
    5f48:	cf 91       	pop	r28
    5f4a:	1f 91       	pop	r17
    5f4c:	08 95       	ret

00005f4e <nrk_event_wait>:
    5f4e:	9b 01       	movw	r18, r22
    5f50:	ac 01       	movw	r20, r24
    5f52:	e0 91 ba 1b 	lds	r30, 0x1BBA
    5f56:	f0 91 bb 1b 	lds	r31, 0x1BBB
    5f5a:	85 85       	ldd	r24, Z+13	; 0x0d
    5f5c:	96 85       	ldd	r25, Z+14	; 0x0e
    5f5e:	a7 85       	ldd	r26, Z+15	; 0x0f
    5f60:	b0 89       	ldd	r27, Z+16	; 0x10
    5f62:	82 23       	and	r24, r18
    5f64:	93 23       	and	r25, r19
    5f66:	a4 23       	and	r26, r20
    5f68:	b5 23       	and	r27, r21
    5f6a:	00 97       	sbiw	r24, 0x00	; 0
    5f6c:	a1 05       	cpc	r26, r1
    5f6e:	b1 05       	cpc	r27, r1
    5f70:	29 f4       	brne	.+10     	; 0x5f7c <nrk_event_wait+0x2e>
    5f72:	60 e0       	ldi	r22, 0x00	; 0
    5f74:	70 e0       	ldi	r23, 0x00	; 0
    5f76:	80 e0       	ldi	r24, 0x00	; 0
    5f78:	90 e0       	ldi	r25, 0x00	; 0
    5f7a:	08 95       	ret
    5f7c:	21 8b       	std	Z+17, r18	; 0x11
    5f7e:	32 8b       	std	Z+18, r19	; 0x12
    5f80:	43 8b       	std	Z+19, r20	; 0x13
    5f82:	54 8b       	std	Z+20, r21	; 0x14
    5f84:	81 e0       	ldi	r24, 0x01	; 1
    5f86:	87 83       	std	Z+7, r24	; 0x07
    5f88:	00 90 aa 1b 	lds	r0, 0x1BAA
    5f8c:	04 c0       	rjmp	.+8      	; 0x5f96 <nrk_event_wait+0x48>
    5f8e:	56 95       	lsr	r21
    5f90:	47 95       	ror	r20
    5f92:	37 95       	ror	r19
    5f94:	27 95       	ror	r18
    5f96:	0a 94       	dec	r0
    5f98:	d2 f7       	brpl	.-12     	; 0x5f8e <nrk_event_wait+0x40>
    5f9a:	c9 01       	movw	r24, r18
    5f9c:	81 70       	andi	r24, 0x01	; 1
    5f9e:	90 70       	andi	r25, 0x00	; 0
    5fa0:	89 2b       	or	r24, r25
    5fa2:	19 f0       	breq	.+6      	; 0x5faa <nrk_event_wait+0x5c>
    5fa4:	0e 94 93 31 	call	0x6326	; 0x6326 <nrk_wait_until_nw>
    5fa8:	04 c0       	rjmp	.+8      	; 0x5fb2 <nrk_event_wait+0x64>
    5faa:	80 e0       	ldi	r24, 0x00	; 0
    5fac:	90 e0       	ldi	r25, 0x00	; 0
    5fae:	0e 94 f8 31 	call	0x63f0	; 0x63f0 <nrk_wait_until_ticks>
    5fb2:	e0 91 ba 1b 	lds	r30, 0x1BBA
    5fb6:	f0 91 bb 1b 	lds	r31, 0x1BBB
    5fba:	61 89       	ldd	r22, Z+17	; 0x11
    5fbc:	72 89       	ldd	r23, Z+18	; 0x12
    5fbe:	83 89       	ldd	r24, Z+19	; 0x13
    5fc0:	94 89       	ldd	r25, Z+20	; 0x14
    5fc2:	08 95       	ret

00005fc4 <nrk_get_high_ready_task_ID>:
//      returns.
//-------------------------------------------------------------------------------------------------------
void halRfWaitForCrystalOscillator(void) {
    uint8_t spiStatusByte;

    // Poll the SPI status byte until the crystal oscillator is stable
    5fc4:	e0 91 af 1b 	lds	r30, 0x1BAF
    5fc8:	f0 91 b0 1b 	lds	r31, 0x1BB0
    5fcc:	80 81       	ld	r24, Z
    do {
	    DISABLE_GLOBAL_INT();
    5fce:	99 27       	eor	r25, r25
    5fd0:	08 95       	ret

00005fd2 <nrk_print_readyQ>:
	    FASTSPI_UPD_STATUS(spiStatusByte);
	    ENABLE_GLOBAL_INT();
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));

} // halRfWaitForCrystalOscillator
    5fd2:	e0 91 af 1b 	lds	r30, 0x1BAF
    5fd6:	f0 91 b0 1b 	lds	r31, 0x1BB0
    5fda:	03 c0       	rjmp	.+6      	; 0x5fe2 <nrk_print_readyQ+0x10>

    5fdc:	03 80       	ldd	r0, Z+3	; 0x03
    5fde:	f4 81       	ldd	r31, Z+4	; 0x04
    5fe0:	e0 2d       	mov	r30, r0
	    ENABLE_GLOBAL_INT();
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));

} // halRfWaitForCrystalOscillator

    5fe2:	30 97       	sbiw	r30, 0x00	; 0
    5fe4:	d9 f7       	brne	.-10     	; 0x5fdc <nrk_print_readyQ+0xa>
    5fe6:	08 95       	ret

00005fe8 <nrk_add_to_readyQ>:
    5fe8:	cf 93       	push	r28
    5fea:	df 93       	push	r29
    5fec:	48 2f       	mov	r20, r24
    5fee:	c0 91 3c 1b 	lds	r28, 0x1B3C
    5ff2:	d0 91 3d 1b 	lds	r29, 0x1B3D
    5ff6:	20 97       	sbiw	r28, 0x00	; 0
    5ff8:	09 f4       	brne	.+2      	; 0x5ffc <nrk_add_to_readyQ+0x14>
    5ffa:	7a c0       	rjmp	.+244    	; 0x60f0 <nrk_add_to_readyQ+0x108>
    5ffc:	a0 91 af 1b 	lds	r26, 0x1BAF
    6000:	b0 91 b0 1b 	lds	r27, 0x1BB0
    6004:	10 97       	sbiw	r26, 0x00	; 0
    6006:	b9 f1       	breq	.+110    	; 0x6076 <nrk_add_to_readyQ+0x8e>
    6008:	99 27       	eor	r25, r25
    600a:	87 fd       	sbrc	r24, 7
    600c:	90 95       	com	r25
    600e:	9c 01       	movw	r18, r24
    6010:	65 e0       	ldi	r22, 0x05	; 5
    6012:	22 0f       	add	r18, r18
    6014:	33 1f       	adc	r19, r19
    6016:	6a 95       	dec	r22
    6018:	e1 f7       	brne	.-8      	; 0x6012 <nrk_add_to_readyQ+0x2a>
    601a:	28 0f       	add	r18, r24
    601c:	39 1f       	adc	r19, r25
    601e:	22 5c       	subi	r18, 0xC2	; 194
    6020:	34 4e       	sbci	r19, 0xE4	; 228
    6022:	8c 91       	ld	r24, X
    6024:	99 27       	eor	r25, r25
    6026:	bc 01       	movw	r22, r24
    6028:	55 e0       	ldi	r21, 0x05	; 5
    602a:	66 0f       	add	r22, r22
    602c:	77 1f       	adc	r23, r23
    602e:	5a 95       	dec	r21
    6030:	e1 f7       	brne	.-8      	; 0x602a <nrk_add_to_readyQ+0x42>
    6032:	68 0f       	add	r22, r24
    6034:	79 1f       	adc	r23, r25
    6036:	62 5c       	subi	r22, 0xC2	; 194
    6038:	74 4e       	sbci	r23, 0xE4	; 228
    603a:	fb 01       	movw	r30, r22
    603c:	84 81       	ldd	r24, Z+4	; 0x04
    603e:	88 23       	and	r24, r24
    6040:	29 f0       	breq	.+10     	; 0x604c <nrk_add_to_readyQ+0x64>
    6042:	93 85       	ldd	r25, Z+11	; 0x0b
    6044:	f9 01       	movw	r30, r18
    6046:	82 85       	ldd	r24, Z+10	; 0x0a
    6048:	98 17       	cp	r25, r24
    604a:	a8 f0       	brcs	.+42     	; 0x6076 <nrk_add_to_readyQ+0x8e>
    604c:	f9 01       	movw	r30, r18
    604e:	84 81       	ldd	r24, Z+4	; 0x04
    6050:	88 23       	and	r24, r24
    6052:	31 f0       	breq	.+12     	; 0x6060 <nrk_add_to_readyQ+0x78>
    6054:	fb 01       	movw	r30, r22
    6056:	92 85       	ldd	r25, Z+10	; 0x0a
    6058:	f9 01       	movw	r30, r18
    605a:	83 85       	ldd	r24, Z+11	; 0x0b
    605c:	98 17       	cp	r25, r24
    605e:	58 f0       	brcs	.+22     	; 0x6076 <nrk_add_to_readyQ+0x8e>
    6060:	fb 01       	movw	r30, r22
    6062:	92 85       	ldd	r25, Z+10	; 0x0a
    6064:	f9 01       	movw	r30, r18
    6066:	82 85       	ldd	r24, Z+10	; 0x0a
    6068:	98 17       	cp	r25, r24
    606a:	28 f0       	brcs	.+10     	; 0x6076 <nrk_add_to_readyQ+0x8e>
    606c:	fd 01       	movw	r30, r26
    606e:	a3 81       	ldd	r26, Z+3	; 0x03
    6070:	b4 81       	ldd	r27, Z+4	; 0x04
    6072:	10 97       	sbiw	r26, 0x00	; 0
    6074:	b1 f6       	brne	.-84     	; 0x6022 <nrk_add_to_readyQ+0x3a>
    6076:	48 83       	st	Y, r20
    6078:	e0 91 3c 1b 	lds	r30, 0x1B3C
    607c:	f0 91 3d 1b 	lds	r31, 0x1B3D
    6080:	23 81       	ldd	r18, Z+3	; 0x03
    6082:	34 81       	ldd	r19, Z+4	; 0x04
    6084:	30 93 3d 1b 	sts	0x1B3D, r19
    6088:	20 93 3c 1b 	sts	0x1B3C, r18
    608c:	80 91 af 1b 	lds	r24, 0x1BAF
    6090:	90 91 b0 1b 	lds	r25, 0x1BB0
    6094:	a8 17       	cp	r26, r24
    6096:	b9 07       	cpc	r27, r25
    6098:	a1 f4       	brne	.+40     	; 0x60c2 <nrk_add_to_readyQ+0xda>
    609a:	10 97       	sbiw	r26, 0x00	; 0
    609c:	31 f0       	breq	.+12     	; 0x60aa <nrk_add_to_readyQ+0xc2>
    609e:	bc 83       	std	Y+4, r27	; 0x04
    60a0:	ab 83       	std	Y+3, r26	; 0x03
    60a2:	1a 82       	std	Y+2, r1	; 0x02
    60a4:	19 82       	std	Y+1, r1	; 0x01
    60a6:	fd 01       	movw	r30, r26
    60a8:	05 c0       	rjmp	.+10     	; 0x60b4 <nrk_add_to_readyQ+0xcc>
    60aa:	1c 82       	std	Y+4, r1	; 0x04
    60ac:	1b 82       	std	Y+3, r1	; 0x03
    60ae:	1a 82       	std	Y+2, r1	; 0x02
    60b0:	19 82       	std	Y+1, r1	; 0x01
    60b2:	f9 01       	movw	r30, r18
    60b4:	d2 83       	std	Z+2, r29	; 0x02
    60b6:	c1 83       	std	Z+1, r28	; 0x01
    60b8:	d0 93 b0 1b 	sts	0x1BB0, r29
    60bc:	c0 93 af 1b 	sts	0x1BAF, r28
    60c0:	17 c0       	rjmp	.+46     	; 0x60f0 <nrk_add_to_readyQ+0x108>
    60c2:	fd 01       	movw	r30, r26
    60c4:	81 81       	ldd	r24, Z+1	; 0x01
    60c6:	92 81       	ldd	r25, Z+2	; 0x02
    60c8:	a2 17       	cp	r26, r18
    60ca:	b3 07       	cpc	r27, r19
    60cc:	51 f0       	breq	.+20     	; 0x60e2 <nrk_add_to_readyQ+0xfa>
    60ce:	9a 83       	std	Y+2, r25	; 0x02
    60d0:	89 83       	std	Y+1, r24	; 0x01
    60d2:	bc 83       	std	Y+4, r27	; 0x04
    60d4:	ab 83       	std	Y+3, r26	; 0x03
    60d6:	81 81       	ldd	r24, Z+1	; 0x01
    60d8:	92 81       	ldd	r25, Z+2	; 0x02
    60da:	fc 01       	movw	r30, r24
    60dc:	d4 83       	std	Z+4, r29	; 0x04
    60de:	c3 83       	std	Z+3, r28	; 0x03
    60e0:	04 c0       	rjmp	.+8      	; 0x60ea <nrk_add_to_readyQ+0x102>
    60e2:	1c 82       	std	Y+4, r1	; 0x04
    60e4:	1b 82       	std	Y+3, r1	; 0x03
    60e6:	9a 83       	std	Y+2, r25	; 0x02
    60e8:	89 83       	std	Y+1, r24	; 0x01
    60ea:	fd 01       	movw	r30, r26
    60ec:	d2 83       	std	Z+2, r29	; 0x02
    60ee:	c1 83       	std	Z+1, r28	; 0x01
    60f0:	df 91       	pop	r29
    60f2:	cf 91       	pop	r28
    60f4:	08 95       	ret

000060f6 <nrk_rem_from_readyQ>:
    60f6:	cf 93       	push	r28
    60f8:	df 93       	push	r29
    60fa:	a0 91 af 1b 	lds	r26, 0x1BAF
    60fe:	b0 91 b0 1b 	lds	r27, 0x1BB0
    6102:	10 97       	sbiw	r26, 0x00	; 0
    6104:	09 f4       	brne	.+2      	; 0x6108 <nrk_rem_from_readyQ+0x12>
    6106:	46 c0       	rjmp	.+140    	; 0x6194 <nrk_rem_from_readyQ+0x9e>
    6108:	48 2f       	mov	r20, r24
    610a:	55 27       	eor	r21, r21
    610c:	47 fd       	sbrc	r20, 7
    610e:	50 95       	com	r21
    6110:	8c 91       	ld	r24, X
    6112:	99 27       	eor	r25, r25
    6114:	84 17       	cp	r24, r20
    6116:	95 07       	cpc	r25, r21
    6118:	69 f4       	brne	.+26     	; 0x6134 <nrk_rem_from_readyQ+0x3e>
    611a:	ed 01       	movw	r28, r26
    611c:	eb 81       	ldd	r30, Y+3	; 0x03
    611e:	fc 81       	ldd	r31, Y+4	; 0x04
    6120:	f0 93 b0 1b 	sts	0x1BB0, r31
    6124:	e0 93 af 1b 	sts	0x1BAF, r30
    6128:	12 82       	std	Z+2, r1	; 0x02
    612a:	11 82       	std	Z+1, r1	; 0x01
    612c:	16 c0       	rjmp	.+44     	; 0x615a <nrk_rem_from_readyQ+0x64>
    612e:	d9 01       	movw	r26, r18
    6130:	23 2b       	or	r18, r19
    6132:	81 f1       	breq	.+96     	; 0x6194 <nrk_rem_from_readyQ+0x9e>
    6134:	8c 91       	ld	r24, X
    6136:	99 27       	eor	r25, r25
    6138:	fd 01       	movw	r30, r26
    613a:	23 81       	ldd	r18, Z+3	; 0x03
    613c:	34 81       	ldd	r19, Z+4	; 0x04
    613e:	84 17       	cp	r24, r20
    6140:	95 07       	cpc	r25, r21
    6142:	a9 f7       	brne	.-22     	; 0x612e <nrk_rem_from_readyQ+0x38>
    6144:	c1 81       	ldd	r28, Z+1	; 0x01
    6146:	d2 81       	ldd	r29, Z+2	; 0x02
    6148:	3c 83       	std	Y+4, r19	; 0x04
    614a:	2b 83       	std	Y+3, r18	; 0x03
    614c:	83 81       	ldd	r24, Z+3	; 0x03
    614e:	94 81       	ldd	r25, Z+4	; 0x04
    6150:	00 97       	sbiw	r24, 0x00	; 0
    6152:	19 f0       	breq	.+6      	; 0x615a <nrk_rem_from_readyQ+0x64>
    6154:	fc 01       	movw	r30, r24
    6156:	d2 83       	std	Z+2, r29	; 0x02
    6158:	c1 83       	std	Z+1, r28	; 0x01
    615a:	e0 91 3c 1b 	lds	r30, 0x1B3C
    615e:	f0 91 3d 1b 	lds	r31, 0x1B3D
    6162:	30 97       	sbiw	r30, 0x00	; 0
    6164:	41 f4       	brne	.+16     	; 0x6176 <nrk_rem_from_readyQ+0x80>
    6166:	b0 93 3d 1b 	sts	0x1B3D, r27
    616a:	a0 93 3c 1b 	sts	0x1B3C, r26
    616e:	ed 01       	movw	r28, r26
    6170:	1c 82       	std	Y+4, r1	; 0x04
    6172:	1b 82       	std	Y+3, r1	; 0x03
    6174:	09 c0       	rjmp	.+18     	; 0x6188 <nrk_rem_from_readyQ+0x92>
    6176:	ed 01       	movw	r28, r26
    6178:	fc 83       	std	Y+4, r31	; 0x04
    617a:	eb 83       	std	Y+3, r30	; 0x03
    617c:	b2 83       	std	Z+2, r27	; 0x02
    617e:	a1 83       	std	Z+1, r26	; 0x01
    6180:	b0 93 3d 1b 	sts	0x1B3D, r27
    6184:	a0 93 3c 1b 	sts	0x1B3C, r26
    6188:	e0 91 3c 1b 	lds	r30, 0x1B3C
    618c:	f0 91 3d 1b 	lds	r31, 0x1B3D
    6190:	12 82       	std	Z+2, r1	; 0x02
    6192:	11 82       	std	Z+1, r1	; 0x01
    6194:	df 91       	pop	r29
    6196:	cf 91       	pop	r28
    6198:	08 95       	ret

0000619a <nrk_get_pid>:
    619a:	e0 91 ba 1b 	lds	r30, 0x1BBA
    619e:	f0 91 bb 1b 	lds	r31, 0x1BBB
    61a2:	80 85       	ldd	r24, Z+8	; 0x08
    61a4:	99 27       	eor	r25, r25
    61a6:	08 95       	ret

000061a8 <_nrk_wait_for_scheduler>:
    61a8:	0e 94 b3 3c 	call	0x7966	; 0x7966 <nrk_idle>
    61ac:	e0 91 ba 1b 	lds	r30, 0x1BBA
    61b0:	f0 91 bb 1b 	lds	r31, 0x1BBB
    61b4:	85 81       	ldd	r24, Z+5	; 0x05
    61b6:	88 23       	and	r24, r24
    61b8:	b9 f7       	brne	.-18     	; 0x61a8 <_nrk_wait_for_scheduler>
    61ba:	08 95       	ret

000061bc <nrk_wait>:
    61bc:	ff 92       	push	r15
    61be:	0f 93       	push	r16
    61c0:	1f 93       	push	r17
    61c2:	cf 93       	push	r28
    61c4:	df 93       	push	r29
    61c6:	cd b7       	in	r28, 0x3d	; 61
    61c8:	de b7       	in	r29, 0x3e	; 62
    61ca:	28 97       	sbiw	r28, 0x08	; 8
    61cc:	0f b6       	in	r0, 0x3f	; 63
    61ce:	f8 94       	cli
    61d0:	de bf       	out	0x3e, r29	; 62
    61d2:	0f be       	out	0x3f, r0	; 63
    61d4:	cd bf       	out	0x3d, r28	; 61
    61d6:	29 83       	std	Y+1, r18	; 0x01
    61d8:	3a 83       	std	Y+2, r19	; 0x02
    61da:	4b 83       	std	Y+3, r20	; 0x03
    61dc:	5c 83       	std	Y+4, r21	; 0x04
    61de:	6d 83       	std	Y+5, r22	; 0x05
    61e0:	7e 83       	std	Y+6, r23	; 0x06
    61e2:	8f 83       	std	Y+7, r24	; 0x07
    61e4:	98 87       	std	Y+8, r25	; 0x08
    61e6:	0e 94 a1 2c 	call	0x5942	; 0x5942 <nrk_stack_check>
    61ea:	0e 94 d2 28 	call	0x51a4	; 0x51a4 <nrk_int_disable>
    61ee:	e0 91 ba 1b 	lds	r30, 0x1BBA
    61f2:	f0 91 bb 1b 	lds	r31, 0x1BBB
    61f6:	81 e0       	ldi	r24, 0x01	; 1
    61f8:	85 83       	std	Z+5, r24	; 0x05
    61fa:	81 e0       	ldi	r24, 0x01	; 1
    61fc:	90 e0       	ldi	r25, 0x00	; 0
    61fe:	90 a3       	std	Z+32, r25	; 0x20
    6200:	87 8f       	std	Z+31, r24	; 0x1f
    6202:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    6206:	f8 2e       	mov	r15, r24
    6208:	29 81       	ldd	r18, Y+1	; 0x01
    620a:	3a 81       	ldd	r19, Y+2	; 0x02
    620c:	4b 81       	ldd	r20, Y+3	; 0x03
    620e:	5c 81       	ldd	r21, Y+4	; 0x04
    6210:	6d 81       	ldd	r22, Y+5	; 0x05
    6212:	7e 81       	ldd	r23, Y+6	; 0x06
    6214:	8f 81       	ldd	r24, Y+7	; 0x07
    6216:	98 85       	ldd	r25, Y+8	; 0x08
    6218:	0e 94 40 34 	call	0x6880	; 0x6880 <_nrk_time_to_ticks>
    621c:	e0 91 ba 1b 	lds	r30, 0x1BBA
    6220:	f0 91 bb 1b 	lds	r31, 0x1BBB
    6224:	0f 2d       	mov	r16, r15
    6226:	11 27       	eor	r17, r17
    6228:	80 0f       	add	r24, r16
    622a:	91 1f       	adc	r25, r17
    622c:	96 8b       	std	Z+22, r25	; 0x16
    622e:	85 8b       	std	Z+21, r24	; 0x15
    6230:	87 ef       	ldi	r24, 0xF7	; 247
    6232:	8f 15       	cp	r24, r15
    6234:	70 f0       	brcs	.+28     	; 0x6252 <nrk_wait+0x96>
    6236:	0e 94 7e 39 	call	0x72fc	; 0x72fc <_nrk_get_next_wakeup>
    623a:	0e 5f       	subi	r16, 0xFE	; 254
    623c:	1f 4f       	sbci	r17, 0xFF	; 255
    623e:	99 27       	eor	r25, r25
    6240:	80 17       	cp	r24, r16
    6242:	91 07       	cpc	r25, r17
    6244:	34 f0       	brlt	.+12     	; 0x6252 <nrk_wait+0x96>
    6246:	8f 2d       	mov	r24, r15
    6248:	8e 5f       	subi	r24, 0xFE	; 254
    624a:	80 93 36 0c 	sts	0x0C36, r24
    624e:	0e 94 83 39 	call	0x7306	; 0x7306 <_nrk_set_next_wakeup>
    6252:	0e 94 d4 28 	call	0x51a8	; 0x51a8 <nrk_int_enable>
    6256:	0e 94 d4 30 	call	0x61a8	; 0x61a8 <_nrk_wait_for_scheduler>
    625a:	81 e0       	ldi	r24, 0x01	; 1
    625c:	90 e0       	ldi	r25, 0x00	; 0
    625e:	28 96       	adiw	r28, 0x08	; 8
    6260:	0f b6       	in	r0, 0x3f	; 63
    6262:	f8 94       	cli
    6264:	de bf       	out	0x3e, r29	; 62
    6266:	0f be       	out	0x3f, r0	; 63
    6268:	cd bf       	out	0x3d, r28	; 61
    626a:	df 91       	pop	r29
    626c:	cf 91       	pop	r28
    626e:	1f 91       	pop	r17
    6270:	0f 91       	pop	r16
    6272:	ff 90       	pop	r15
    6274:	08 95       	ret

00006276 <nrk_wait_until>:
    6276:	8f 92       	push	r8
    6278:	9f 92       	push	r9
    627a:	af 92       	push	r10
    627c:	bf 92       	push	r11
    627e:	cf 92       	push	r12
    6280:	df 92       	push	r13
    6282:	ef 92       	push	r14
    6284:	ff 92       	push	r15
    6286:	0f 93       	push	r16
    6288:	1f 93       	push	r17
    628a:	cf 93       	push	r28
    628c:	df 93       	push	r29
    628e:	cd b7       	in	r28, 0x3d	; 61
    6290:	de b7       	in	r29, 0x3e	; 62
    6292:	60 97       	sbiw	r28, 0x10	; 16
    6294:	0f b6       	in	r0, 0x3f	; 63
    6296:	f8 94       	cli
    6298:	de bf       	out	0x3e, r29	; 62
    629a:	0f be       	out	0x3f, r0	; 63
    629c:	cd bf       	out	0x3d, r28	; 61
    629e:	29 87       	std	Y+9, r18	; 0x09
    62a0:	3a 87       	std	Y+10, r19	; 0x0a
    62a2:	4b 87       	std	Y+11, r20	; 0x0b
    62a4:	5c 87       	std	Y+12, r21	; 0x0c
    62a6:	6d 87       	std	Y+13, r22	; 0x0d
    62a8:	7e 87       	std	Y+14, r23	; 0x0e
    62aa:	8f 87       	std	Y+15, r24	; 0x0f
    62ac:	98 8b       	std	Y+16, r25	; 0x10
    62ae:	ce 01       	movw	r24, r28
    62b0:	01 96       	adiw	r24, 0x01	; 1
    62b2:	0e 94 a6 35 	call	0x6b4c	; 0x6b4c <nrk_time_get>
    62b6:	89 80       	ldd	r8, Y+1	; 0x01
    62b8:	9a 80       	ldd	r9, Y+2	; 0x02
    62ba:	ab 80       	ldd	r10, Y+3	; 0x03
    62bc:	bc 80       	ldd	r11, Y+4	; 0x04
    62be:	cd 80       	ldd	r12, Y+5	; 0x05
    62c0:	de 80       	ldd	r13, Y+6	; 0x06
    62c2:	ef 80       	ldd	r14, Y+7	; 0x07
    62c4:	f8 84       	ldd	r15, Y+8	; 0x08
    62c6:	09 85       	ldd	r16, Y+9	; 0x09
    62c8:	1a 85       	ldd	r17, Y+10	; 0x0a
    62ca:	2b 85       	ldd	r18, Y+11	; 0x0b
    62cc:	3c 85       	ldd	r19, Y+12	; 0x0c
    62ce:	4d 85       	ldd	r20, Y+13	; 0x0d
    62d0:	5e 85       	ldd	r21, Y+14	; 0x0e
    62d2:	6f 85       	ldd	r22, Y+15	; 0x0f
    62d4:	78 89       	ldd	r23, Y+16	; 0x10
    62d6:	ce 01       	movw	r24, r28
    62d8:	09 96       	adiw	r24, 0x09	; 9
    62da:	0e 94 21 33 	call	0x6642	; 0x6642 <nrk_time_sub>
    62de:	88 23       	and	r24, r24
    62e0:	19 f4       	brne	.+6      	; 0x62e8 <nrk_wait_until+0x72>
    62e2:	8f ef       	ldi	r24, 0xFF	; 255
    62e4:	9f ef       	ldi	r25, 0xFF	; 255
    62e6:	0c c0       	rjmp	.+24     	; 0x6300 <nrk_wait_until+0x8a>
    62e8:	29 85       	ldd	r18, Y+9	; 0x09
    62ea:	3a 85       	ldd	r19, Y+10	; 0x0a
    62ec:	4b 85       	ldd	r20, Y+11	; 0x0b
    62ee:	5c 85       	ldd	r21, Y+12	; 0x0c
    62f0:	6d 85       	ldd	r22, Y+13	; 0x0d
    62f2:	7e 85       	ldd	r23, Y+14	; 0x0e
    62f4:	8f 85       	ldd	r24, Y+15	; 0x0f
    62f6:	98 89       	ldd	r25, Y+16	; 0x10
    62f8:	0e 94 de 30 	call	0x61bc	; 0x61bc <nrk_wait>
    62fc:	81 e0       	ldi	r24, 0x01	; 1
    62fe:	90 e0       	ldi	r25, 0x00	; 0
    6300:	60 96       	adiw	r28, 0x10	; 16
    6302:	0f b6       	in	r0, 0x3f	; 63
    6304:	f8 94       	cli
    6306:	de bf       	out	0x3e, r29	; 62
    6308:	0f be       	out	0x3f, r0	; 63
    630a:	cd bf       	out	0x3d, r28	; 61
    630c:	df 91       	pop	r29
    630e:	cf 91       	pop	r28
    6310:	1f 91       	pop	r17
    6312:	0f 91       	pop	r16
    6314:	ff 90       	pop	r15
    6316:	ef 90       	pop	r14
    6318:	df 90       	pop	r13
    631a:	cf 90       	pop	r12
    631c:	bf 90       	pop	r11
    631e:	af 90       	pop	r10
    6320:	9f 90       	pop	r9
    6322:	8f 90       	pop	r8
    6324:	08 95       	ret

00006326 <nrk_wait_until_nw>:
    6326:	1f 93       	push	r17
    6328:	0e 94 d2 28 	call	0x51a4	; 0x51a4 <nrk_int_disable>
    632c:	e0 91 ba 1b 	lds	r30, 0x1BBA
    6330:	f0 91 bb 1b 	lds	r31, 0x1BBB
    6334:	81 e0       	ldi	r24, 0x01	; 1
    6336:	85 83       	std	Z+5, r24	; 0x05
    6338:	86 83       	std	Z+6, r24	; 0x06
    633a:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    633e:	18 2f       	mov	r17, r24
    6340:	88 3f       	cpi	r24, 0xF8	; 248
    6342:	80 f4       	brcc	.+32     	; 0x6364 <nrk_wait_until_nw+0x3e>
    6344:	0e 94 7e 39 	call	0x72fc	; 0x72fc <_nrk_get_next_wakeup>
    6348:	21 2f       	mov	r18, r17
    634a:	33 27       	eor	r19, r19
    634c:	2e 5f       	subi	r18, 0xFE	; 254
    634e:	3f 4f       	sbci	r19, 0xFF	; 255
    6350:	99 27       	eor	r25, r25
    6352:	82 17       	cp	r24, r18
    6354:	93 07       	cpc	r25, r19
    6356:	34 f0       	brlt	.+12     	; 0x6364 <nrk_wait_until_nw+0x3e>
    6358:	81 2f       	mov	r24, r17
    635a:	8e 5f       	subi	r24, 0xFE	; 254
    635c:	80 93 36 0c 	sts	0x0C36, r24
    6360:	0e 94 83 39 	call	0x7306	; 0x7306 <_nrk_set_next_wakeup>
    6364:	0e 94 d4 28 	call	0x51a8	; 0x51a8 <nrk_int_enable>
    6368:	0e 94 d4 30 	call	0x61a8	; 0x61a8 <_nrk_wait_for_scheduler>
    636c:	81 e0       	ldi	r24, 0x01	; 1
    636e:	90 e0       	ldi	r25, 0x00	; 0
    6370:	1f 91       	pop	r17
    6372:	08 95       	ret

00006374 <nrk_set_next_wakeup>:
    6374:	1f 93       	push	r17
    6376:	cf 93       	push	r28
    6378:	df 93       	push	r29
    637a:	cd b7       	in	r28, 0x3d	; 61
    637c:	de b7       	in	r29, 0x3e	; 62
    637e:	28 97       	sbiw	r28, 0x08	; 8
    6380:	0f b6       	in	r0, 0x3f	; 63
    6382:	f8 94       	cli
    6384:	de bf       	out	0x3e, r29	; 62
    6386:	0f be       	out	0x3f, r0	; 63
    6388:	cd bf       	out	0x3d, r28	; 61
    638a:	29 83       	std	Y+1, r18	; 0x01
    638c:	3a 83       	std	Y+2, r19	; 0x02
    638e:	4b 83       	std	Y+3, r20	; 0x03
    6390:	5c 83       	std	Y+4, r21	; 0x04
    6392:	6d 83       	std	Y+5, r22	; 0x05
    6394:	7e 83       	std	Y+6, r23	; 0x06
    6396:	8f 83       	std	Y+7, r24	; 0x07
    6398:	98 87       	std	Y+8, r25	; 0x08
    639a:	0e 94 d2 28 	call	0x51a4	; 0x51a4 <nrk_int_disable>
    639e:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    63a2:	18 2f       	mov	r17, r24
    63a4:	29 81       	ldd	r18, Y+1	; 0x01
    63a6:	3a 81       	ldd	r19, Y+2	; 0x02
    63a8:	4b 81       	ldd	r20, Y+3	; 0x03
    63aa:	5c 81       	ldd	r21, Y+4	; 0x04
    63ac:	6d 81       	ldd	r22, Y+5	; 0x05
    63ae:	7e 81       	ldd	r23, Y+6	; 0x06
    63b0:	8f 81       	ldd	r24, Y+7	; 0x07
    63b2:	98 85       	ldd	r25, Y+8	; 0x08
    63b4:	0e 94 40 34 	call	0x6880	; 0x6880 <_nrk_time_to_ticks>
    63b8:	83 30       	cpi	r24, 0x03	; 3
    63ba:	91 05       	cpc	r25, r1
    63bc:	18 f4       	brcc	.+6      	; 0x63c4 <nrk_set_next_wakeup+0x50>
    63be:	8f ef       	ldi	r24, 0xFF	; 255
    63c0:	9f ef       	ldi	r25, 0xFF	; 255
    63c2:	0c c0       	rjmp	.+24     	; 0x63dc <nrk_set_next_wakeup+0x68>
    63c4:	e0 91 ba 1b 	lds	r30, 0x1BBA
    63c8:	f0 91 bb 1b 	lds	r31, 0x1BBB
    63cc:	81 0f       	add	r24, r17
    63ce:	91 1d       	adc	r25, r1
    63d0:	96 8b       	std	Z+22, r25	; 0x16
    63d2:	85 8b       	std	Z+21, r24	; 0x15
    63d4:	0e 94 d4 28 	call	0x51a8	; 0x51a8 <nrk_int_enable>
    63d8:	81 e0       	ldi	r24, 0x01	; 1
    63da:	90 e0       	ldi	r25, 0x00	; 0
    63dc:	28 96       	adiw	r28, 0x08	; 8
    63de:	0f b6       	in	r0, 0x3f	; 63
    63e0:	f8 94       	cli
    63e2:	de bf       	out	0x3e, r29	; 62
    63e4:	0f be       	out	0x3f, r0	; 63
    63e6:	cd bf       	out	0x3d, r28	; 61
    63e8:	df 91       	pop	r29
    63ea:	cf 91       	pop	r28
    63ec:	1f 91       	pop	r17
    63ee:	08 95       	ret

000063f0 <nrk_wait_until_ticks>:
    63f0:	0f 93       	push	r16
    63f2:	1f 93       	push	r17
    63f4:	8c 01       	movw	r16, r24
    63f6:	0e 94 d2 28 	call	0x51a4	; 0x51a4 <nrk_int_disable>
    63fa:	e0 91 ba 1b 	lds	r30, 0x1BBA
    63fe:	f0 91 bb 1b 	lds	r31, 0x1BBB
    6402:	81 e0       	ldi	r24, 0x01	; 1
    6404:	85 83       	std	Z+5, r24	; 0x05
    6406:	16 8b       	std	Z+22, r17	; 0x16
    6408:	05 8b       	std	Z+21, r16	; 0x15
    640a:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    640e:	08 2f       	mov	r16, r24
    6410:	88 3f       	cpi	r24, 0xF8	; 248
    6412:	80 f4       	brcc	.+32     	; 0x6434 <nrk_wait_until_ticks+0x44>
    6414:	0e 94 7e 39 	call	0x72fc	; 0x72fc <_nrk_get_next_wakeup>
    6418:	20 2f       	mov	r18, r16
    641a:	33 27       	eor	r19, r19
    641c:	2e 5f       	subi	r18, 0xFE	; 254
    641e:	3f 4f       	sbci	r19, 0xFF	; 255
    6420:	99 27       	eor	r25, r25
    6422:	82 17       	cp	r24, r18
    6424:	93 07       	cpc	r25, r19
    6426:	34 f0       	brlt	.+12     	; 0x6434 <nrk_wait_until_ticks+0x44>
    6428:	80 2f       	mov	r24, r16
    642a:	8e 5f       	subi	r24, 0xFE	; 254
    642c:	80 93 36 0c 	sts	0x0C36, r24
    6430:	0e 94 83 39 	call	0x7306	; 0x7306 <_nrk_set_next_wakeup>
    6434:	0e 94 d4 28 	call	0x51a8	; 0x51a8 <nrk_int_enable>
    6438:	0e 94 d4 30 	call	0x61a8	; 0x61a8 <_nrk_wait_for_scheduler>
    643c:	81 e0       	ldi	r24, 0x01	; 1
    643e:	90 e0       	ldi	r25, 0x00	; 0
    6440:	1f 91       	pop	r17
    6442:	0f 91       	pop	r16
    6444:	08 95       	ret

00006446 <nrk_wait_ticks>:
    6446:	ff 92       	push	r15
    6448:	0f 93       	push	r16
    644a:	1f 93       	push	r17
    644c:	cf 93       	push	r28
    644e:	df 93       	push	r29
    6450:	8c 01       	movw	r16, r24
    6452:	0e 94 d2 28 	call	0x51a4	; 0x51a4 <nrk_int_disable>
    6456:	e0 91 ba 1b 	lds	r30, 0x1BBA
    645a:	f0 91 bb 1b 	lds	r31, 0x1BBB
    645e:	81 e0       	ldi	r24, 0x01	; 1
    6460:	85 83       	std	Z+5, r24	; 0x05
    6462:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    6466:	f8 2e       	mov	r15, r24
    6468:	e0 91 ba 1b 	lds	r30, 0x1BBA
    646c:	f0 91 bb 1b 	lds	r31, 0x1BBB
    6470:	c8 2f       	mov	r28, r24
    6472:	dd 27       	eor	r29, r29
    6474:	0c 0f       	add	r16, r28
    6476:	1d 1f       	adc	r17, r29
    6478:	16 8b       	std	Z+22, r17	; 0x16
    647a:	05 8b       	std	Z+21, r16	; 0x15
    647c:	87 ef       	ldi	r24, 0xF7	; 247
    647e:	8f 15       	cp	r24, r15
    6480:	68 f0       	brcs	.+26     	; 0x649c <nrk_wait_ticks+0x56>
    6482:	0e 94 7e 39 	call	0x72fc	; 0x72fc <_nrk_get_next_wakeup>
    6486:	22 96       	adiw	r28, 0x02	; 2
    6488:	99 27       	eor	r25, r25
    648a:	8c 17       	cp	r24, r28
    648c:	9d 07       	cpc	r25, r29
    648e:	34 f0       	brlt	.+12     	; 0x649c <nrk_wait_ticks+0x56>
    6490:	8f 2d       	mov	r24, r15
    6492:	8e 5f       	subi	r24, 0xFE	; 254
    6494:	80 93 36 0c 	sts	0x0C36, r24
    6498:	0e 94 83 39 	call	0x7306	; 0x7306 <_nrk_set_next_wakeup>
    649c:	0e 94 d4 28 	call	0x51a8	; 0x51a8 <nrk_int_enable>
    64a0:	0e 94 d4 30 	call	0x61a8	; 0x61a8 <_nrk_wait_for_scheduler>
    64a4:	81 e0       	ldi	r24, 0x01	; 1
    64a6:	90 e0       	ldi	r25, 0x00	; 0
    64a8:	df 91       	pop	r29
    64aa:	cf 91       	pop	r28
    64ac:	1f 91       	pop	r17
    64ae:	0f 91       	pop	r16
    64b0:	ff 90       	pop	r15
    64b2:	08 95       	ret

000064b4 <nrk_wait_until_next_n_periods>:
    64b4:	1f 93       	push	r17
    64b6:	cf 93       	push	r28
    64b8:	df 93       	push	r29
    64ba:	ec 01       	movw	r28, r24
    64bc:	0e 94 a1 2c 	call	0x5942	; 0x5942 <nrk_stack_check>
    64c0:	20 97       	sbiw	r28, 0x00	; 0
    64c2:	11 f4       	brne	.+4      	; 0x64c8 <nrk_wait_until_next_n_periods+0x14>
    64c4:	c1 e0       	ldi	r28, 0x01	; 1
    64c6:	d0 e0       	ldi	r29, 0x00	; 0
    64c8:	0e 94 d2 28 	call	0x51a4	; 0x51a4 <nrk_int_disable>
    64cc:	e0 91 ba 1b 	lds	r30, 0x1BBA
    64d0:	f0 91 bb 1b 	lds	r31, 0x1BBB
    64d4:	81 e0       	ldi	r24, 0x01	; 1
    64d6:	85 83       	std	Z+5, r24	; 0x05
    64d8:	d0 a3       	std	Z+32, r29	; 0x20
    64da:	c7 8f       	std	Z+31, r28	; 0x1f
    64dc:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    64e0:	18 2f       	mov	r17, r24
    64e2:	88 3f       	cpi	r24, 0xF8	; 248
    64e4:	80 f4       	brcc	.+32     	; 0x6506 <nrk_wait_until_next_n_periods+0x52>
    64e6:	0e 94 7e 39 	call	0x72fc	; 0x72fc <_nrk_get_next_wakeup>
    64ea:	21 2f       	mov	r18, r17
    64ec:	33 27       	eor	r19, r19
    64ee:	2e 5f       	subi	r18, 0xFE	; 254
    64f0:	3f 4f       	sbci	r19, 0xFF	; 255
    64f2:	99 27       	eor	r25, r25
    64f4:	82 17       	cp	r24, r18
    64f6:	93 07       	cpc	r25, r19
    64f8:	34 f0       	brlt	.+12     	; 0x6506 <nrk_wait_until_next_n_periods+0x52>
    64fa:	81 2f       	mov	r24, r17
    64fc:	8e 5f       	subi	r24, 0xFE	; 254
    64fe:	80 93 36 0c 	sts	0x0C36, r24
    6502:	0e 94 83 39 	call	0x7306	; 0x7306 <_nrk_set_next_wakeup>
    6506:	0e 94 d4 28 	call	0x51a8	; 0x51a8 <nrk_int_enable>
    650a:	0e 94 d4 30 	call	0x61a8	; 0x61a8 <_nrk_wait_for_scheduler>
    650e:	81 e0       	ldi	r24, 0x01	; 1
    6510:	90 e0       	ldi	r25, 0x00	; 0
    6512:	df 91       	pop	r29
    6514:	cf 91       	pop	r28
    6516:	1f 91       	pop	r17
    6518:	08 95       	ret

0000651a <nrk_wait_until_next_period>:
    651a:	1f 93       	push	r17
    651c:	0e 94 a1 2c 	call	0x5942	; 0x5942 <nrk_stack_check>
    6520:	0e 94 d2 28 	call	0x51a4	; 0x51a4 <nrk_int_disable>
    6524:	e0 91 ba 1b 	lds	r30, 0x1BBA
    6528:	f0 91 bb 1b 	lds	r31, 0x1BBB
    652c:	81 e0       	ldi	r24, 0x01	; 1
    652e:	90 e0       	ldi	r25, 0x00	; 0
    6530:	90 a3       	std	Z+32, r25	; 0x20
    6532:	87 8f       	std	Z+31, r24	; 0x1f
    6534:	81 e0       	ldi	r24, 0x01	; 1
    6536:	85 83       	std	Z+5, r24	; 0x05
    6538:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    653c:	18 2f       	mov	r17, r24
    653e:	88 3f       	cpi	r24, 0xF8	; 248
    6540:	80 f4       	brcc	.+32     	; 0x6562 <nrk_wait_until_next_period+0x48>
    6542:	0e 94 7e 39 	call	0x72fc	; 0x72fc <_nrk_get_next_wakeup>
    6546:	21 2f       	mov	r18, r17
    6548:	33 27       	eor	r19, r19
    654a:	2e 5f       	subi	r18, 0xFE	; 254
    654c:	3f 4f       	sbci	r19, 0xFF	; 255
    654e:	99 27       	eor	r25, r25
    6550:	82 17       	cp	r24, r18
    6552:	93 07       	cpc	r25, r19
    6554:	34 f0       	brlt	.+12     	; 0x6562 <nrk_wait_until_next_period+0x48>
    6556:	81 2f       	mov	r24, r17
    6558:	8e 5f       	subi	r24, 0xFE	; 254
    655a:	80 93 36 0c 	sts	0x0C36, r24
    655e:	0e 94 83 39 	call	0x7306	; 0x7306 <_nrk_set_next_wakeup>
    6562:	0e 94 d4 28 	call	0x51a8	; 0x51a8 <nrk_int_enable>
    6566:	0e 94 d4 30 	call	0x61a8	; 0x61a8 <_nrk_wait_for_scheduler>
    656a:	81 e0       	ldi	r24, 0x01	; 1
    656c:	90 e0       	ldi	r25, 0x00	; 0
    656e:	1f 91       	pop	r17
    6570:	08 95       	ret

00006572 <nrk_terminate_task>:
    6572:	e0 91 ba 1b 	lds	r30, 0x1BBA
    6576:	f0 91 bb 1b 	lds	r31, 0x1BBB
    657a:	80 85       	ldd	r24, Z+8	; 0x08
    657c:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <nrk_rem_from_readyQ>
    6580:	e0 91 ba 1b 	lds	r30, 0x1BBA
    6584:	f0 91 bb 1b 	lds	r31, 0x1BBB
    6588:	84 e0       	ldi	r24, 0x04	; 4
    658a:	81 87       	std	Z+9, r24	; 0x09
    658c:	0e 94 8d 32 	call	0x651a	; 0x651a <nrk_wait_until_next_period>
    6590:	81 e0       	ldi	r24, 0x01	; 1
    6592:	90 e0       	ldi	r25, 0x00	; 0
    6594:	08 95       	ret

00006596 <nrk_activate_task>:
    6596:	ef 92       	push	r14
    6598:	ff 92       	push	r15
    659a:	0f 93       	push	r16
    659c:	1f 93       	push	r17
    659e:	cf 93       	push	r28
    65a0:	df 93       	push	r29
    65a2:	ec 01       	movw	r28, r24
    65a4:	4b 81       	ldd	r20, Y+3	; 0x03
    65a6:	5c 81       	ldd	r21, Y+4	; 0x04
    65a8:	69 81       	ldd	r22, Y+1	; 0x01
    65aa:	7a 81       	ldd	r23, Y+2	; 0x02
    65ac:	8d 81       	ldd	r24, Y+5	; 0x05
    65ae:	9e 81       	ldd	r25, Y+6	; 0x06
    65b0:	0e 94 c2 3c 	call	0x7984	; 0x7984 <nrk_task_stk_init>
    65b4:	bc 01       	movw	r22, r24
    65b6:	8f 81       	ldd	r24, Y+7	; 0x07
    65b8:	88 23       	and	r24, r24
    65ba:	69 f0       	breq	.+26     	; 0x65d6 <nrk_activate_task+0x40>
    65bc:	4b 81       	ldd	r20, Y+3	; 0x03
    65be:	5c 81       	ldd	r21, Y+4	; 0x04
    65c0:	ee 24       	eor	r14, r14
    65c2:	ff 24       	eor	r15, r15
    65c4:	00 e0       	ldi	r16, 0x00	; 0
    65c6:	10 e0       	ldi	r17, 0x00	; 0
    65c8:	20 e0       	ldi	r18, 0x00	; 0
    65ca:	30 e0       	ldi	r19, 0x00	; 0
    65cc:	ce 01       	movw	r24, r28
    65ce:	0e 94 dc 28 	call	0x51b8	; 0x51b8 <nrk_TCB_init>
    65d2:	1f 82       	std	Y+7, r1	; 0x07
    65d4:	16 c0       	rjmp	.+44     	; 0x6602 <nrk_activate_task+0x6c>
    65d6:	88 81       	ld	r24, Y
    65d8:	99 27       	eor	r25, r25
    65da:	87 fd       	sbrc	r24, 7
    65dc:	90 95       	com	r25
    65de:	fc 01       	movw	r30, r24
    65e0:	a5 e0       	ldi	r26, 0x05	; 5
    65e2:	ee 0f       	add	r30, r30
    65e4:	ff 1f       	adc	r31, r31
    65e6:	aa 95       	dec	r26
    65e8:	e1 f7       	brne	.-8      	; 0x65e2 <nrk_activate_task+0x4c>
    65ea:	e8 0f       	add	r30, r24
    65ec:	f9 1f       	adc	r31, r25
    65ee:	e2 5c       	subi	r30, 0xC2	; 194
    65f0:	f4 4e       	sbci	r31, 0xE4	; 228
    65f2:	81 85       	ldd	r24, Z+9	; 0x09
    65f4:	83 30       	cpi	r24, 0x03	; 3
    65f6:	19 f0       	breq	.+6      	; 0x65fe <nrk_activate_task+0x68>
    65f8:	8f ef       	ldi	r24, 0xFF	; 255
    65fa:	9f ef       	ldi	r25, 0xFF	; 255
    65fc:	1b c0       	rjmp	.+54     	; 0x6634 <nrk_activate_task+0x9e>
    65fe:	71 83       	std	Z+1, r23	; 0x01
    6600:	60 83       	st	Z, r22
    6602:	88 81       	ld	r24, Y
    6604:	99 27       	eor	r25, r25
    6606:	87 fd       	sbrc	r24, 7
    6608:	90 95       	com	r25
    660a:	fc 01       	movw	r30, r24
    660c:	75 e0       	ldi	r23, 0x05	; 5
    660e:	ee 0f       	add	r30, r30
    6610:	ff 1f       	adc	r31, r31
    6612:	7a 95       	dec	r23
    6614:	e1 f7       	brne	.-8      	; 0x660e <nrk_activate_task+0x78>
    6616:	e8 0f       	add	r30, r24
    6618:	f9 1f       	adc	r31, r25
    661a:	e2 5c       	subi	r30, 0xC2	; 194
    661c:	f4 4e       	sbci	r31, 0xE4	; 228
    661e:	85 89       	ldd	r24, Z+21	; 0x15
    6620:	96 89       	ldd	r25, Z+22	; 0x16
    6622:	89 2b       	or	r24, r25
    6624:	29 f4       	brne	.+10     	; 0x6630 <nrk_activate_task+0x9a>
    6626:	82 e0       	ldi	r24, 0x02	; 2
    6628:	81 87       	std	Z+9, r24	; 0x09
    662a:	88 81       	ld	r24, Y
    662c:	0e 94 f4 2f 	call	0x5fe8	; 0x5fe8 <nrk_add_to_readyQ>
    6630:	81 e0       	ldi	r24, 0x01	; 1
    6632:	90 e0       	ldi	r25, 0x00	; 0
    6634:	df 91       	pop	r29
    6636:	cf 91       	pop	r28
    6638:	1f 91       	pop	r17
    663a:	0f 91       	pop	r16
    663c:	ff 90       	pop	r15
    663e:	ef 90       	pop	r14
    6640:	08 95       	ret

00006642 <nrk_time_sub>:
    6642:	8f 92       	push	r8
    6644:	9f 92       	push	r9
    6646:	af 92       	push	r10
    6648:	bf 92       	push	r11
    664a:	cf 92       	push	r12
    664c:	df 92       	push	r13
    664e:	ef 92       	push	r14
    6650:	ff 92       	push	r15
    6652:	0f 93       	push	r16
    6654:	1f 93       	push	r17
    6656:	cf 93       	push	r28
    6658:	df 93       	push	r29
    665a:	cd b7       	in	r28, 0x3d	; 61
    665c:	de b7       	in	r29, 0x3e	; 62
    665e:	60 97       	sbiw	r28, 0x10	; 16
    6660:	0f b6       	in	r0, 0x3f	; 63
    6662:	f8 94       	cli
    6664:	de bf       	out	0x3e, r29	; 62
    6666:	0f be       	out	0x3f, r0	; 63
    6668:	cd bf       	out	0x3d, r28	; 61
    666a:	fc 01       	movw	r30, r24
    666c:	09 83       	std	Y+1, r16	; 0x01
    666e:	1a 83       	std	Y+2, r17	; 0x02
    6670:	2b 83       	std	Y+3, r18	; 0x03
    6672:	3c 83       	std	Y+4, r19	; 0x04
    6674:	4d 83       	std	Y+5, r20	; 0x05
    6676:	5e 83       	std	Y+6, r21	; 0x06
    6678:	6f 83       	std	Y+7, r22	; 0x07
    667a:	78 87       	std	Y+8, r23	; 0x08
    667c:	89 86       	std	Y+9, r8	; 0x09
    667e:	9a 86       	std	Y+10, r9	; 0x0a
    6680:	ab 86       	std	Y+11, r10	; 0x0b
    6682:	bc 86       	std	Y+12, r11	; 0x0c
    6684:	cd 86       	std	Y+13, r12	; 0x0d
    6686:	de 86       	std	Y+14, r13	; 0x0e
    6688:	ef 86       	std	Y+15, r14	; 0x0f
    668a:	f8 8a       	std	Y+16, r15	; 0x10
    668c:	2d 81       	ldd	r18, Y+5	; 0x05
    668e:	3e 81       	ldd	r19, Y+6	; 0x06
    6690:	4f 81       	ldd	r20, Y+7	; 0x07
    6692:	58 85       	ldd	r21, Y+8	; 0x08
    6694:	89 81       	ldd	r24, Y+1	; 0x01
    6696:	9a 81       	ldd	r25, Y+2	; 0x02
    6698:	ab 81       	ldd	r26, Y+3	; 0x03
    669a:	bc 81       	ldd	r27, Y+4	; 0x04
    669c:	ad 84       	ldd	r10, Y+13	; 0x0d
    669e:	be 84       	ldd	r11, Y+14	; 0x0e
    66a0:	cf 84       	ldd	r12, Y+15	; 0x0f
    66a2:	d8 88       	ldd	r13, Y+16	; 0x10
    66a4:	e9 84       	ldd	r14, Y+9	; 0x09
    66a6:	fa 84       	ldd	r15, Y+10	; 0x0a
    66a8:	0b 85       	ldd	r16, Y+11	; 0x0b
    66aa:	1c 85       	ldd	r17, Y+12	; 0x0c
    66ac:	8e 15       	cp	r24, r14
    66ae:	9f 05       	cpc	r25, r15
    66b0:	a0 07       	cpc	r26, r16
    66b2:	b1 07       	cpc	r27, r17
    66b4:	08 f4       	brcc	.+2      	; 0x66b8 <nrk_time_sub+0x76>
    66b6:	3f c0       	rjmp	.+126    	; 0x6736 <nrk_time_sub+0xf4>
    66b8:	e8 16       	cp	r14, r24
    66ba:	f9 06       	cpc	r15, r25
    66bc:	0a 07       	cpc	r16, r26
    66be:	1b 07       	cpc	r17, r27
    66c0:	91 f4       	brne	.+36     	; 0x66e6 <nrk_time_sub+0xa4>
    66c2:	2a 15       	cp	r18, r10
    66c4:	3b 05       	cpc	r19, r11
    66c6:	4c 05       	cpc	r20, r12
    66c8:	5d 05       	cpc	r21, r13
    66ca:	a8 f1       	brcs	.+106    	; 0x6736 <nrk_time_sub+0xf4>
    66cc:	2a 19       	sub	r18, r10
    66ce:	3b 09       	sbc	r19, r11
    66d0:	4c 09       	sbc	r20, r12
    66d2:	5d 09       	sbc	r21, r13
    66d4:	24 83       	std	Z+4, r18	; 0x04
    66d6:	35 83       	std	Z+5, r19	; 0x05
    66d8:	46 83       	std	Z+6, r20	; 0x06
    66da:	57 83       	std	Z+7, r21	; 0x07
    66dc:	10 82       	st	Z, r1
    66de:	11 82       	std	Z+1, r1	; 0x01
    66e0:	12 82       	std	Z+2, r1	; 0x02
    66e2:	13 82       	std	Z+3, r1	; 0x03
    66e4:	1c c0       	rjmp	.+56     	; 0x671e <nrk_time_sub+0xdc>
    66e6:	2a 15       	cp	r18, r10
    66e8:	3b 05       	cpc	r19, r11
    66ea:	4c 05       	cpc	r20, r12
    66ec:	5d 05       	cpc	r21, r13
    66ee:	d0 f4       	brcc	.+52     	; 0x6724 <nrk_time_sub+0xe2>
    66f0:	01 97       	sbiw	r24, 0x01	; 1
    66f2:	a1 09       	sbc	r26, r1
    66f4:	b1 09       	sbc	r27, r1
    66f6:	8e 19       	sub	r24, r14
    66f8:	9f 09       	sbc	r25, r15
    66fa:	a0 0b       	sbc	r26, r16
    66fc:	b1 0b       	sbc	r27, r17
    66fe:	80 83       	st	Z, r24
    6700:	91 83       	std	Z+1, r25	; 0x01
    6702:	a2 83       	std	Z+2, r26	; 0x02
    6704:	b3 83       	std	Z+3, r27	; 0x03
    6706:	20 50       	subi	r18, 0x00	; 0
    6708:	36 43       	sbci	r19, 0x36	; 54
    670a:	45 46       	sbci	r20, 0x65	; 101
    670c:	54 4c       	sbci	r21, 0xC4	; 196
    670e:	2a 19       	sub	r18, r10
    6710:	3b 09       	sbc	r19, r11
    6712:	4c 09       	sbc	r20, r12
    6714:	5d 09       	sbc	r21, r13
    6716:	24 83       	std	Z+4, r18	; 0x04
    6718:	35 83       	std	Z+5, r19	; 0x05
    671a:	46 83       	std	Z+6, r20	; 0x06
    671c:	57 83       	std	Z+7, r21	; 0x07
    671e:	81 e0       	ldi	r24, 0x01	; 1
    6720:	90 e0       	ldi	r25, 0x00	; 0
    6722:	0b c0       	rjmp	.+22     	; 0x673a <nrk_time_sub+0xf8>
    6724:	8e 19       	sub	r24, r14
    6726:	9f 09       	sbc	r25, r15
    6728:	a0 0b       	sbc	r26, r16
    672a:	b1 0b       	sbc	r27, r17
    672c:	80 83       	st	Z, r24
    672e:	91 83       	std	Z+1, r25	; 0x01
    6730:	a2 83       	std	Z+2, r26	; 0x02
    6732:	b3 83       	std	Z+3, r27	; 0x03
    6734:	ec cf       	rjmp	.-40     	; 0x670e <nrk_time_sub+0xcc>
    6736:	80 e0       	ldi	r24, 0x00	; 0
    6738:	90 e0       	ldi	r25, 0x00	; 0
    673a:	60 96       	adiw	r28, 0x10	; 16
    673c:	0f b6       	in	r0, 0x3f	; 63
    673e:	f8 94       	cli
    6740:	de bf       	out	0x3e, r29	; 62
    6742:	0f be       	out	0x3f, r0	; 63
    6744:	cd bf       	out	0x3d, r28	; 61
    6746:	df 91       	pop	r29
    6748:	cf 91       	pop	r28
    674a:	1f 91       	pop	r17
    674c:	0f 91       	pop	r16
    674e:	ff 90       	pop	r15
    6750:	ef 90       	pop	r14
    6752:	df 90       	pop	r13
    6754:	cf 90       	pop	r12
    6756:	bf 90       	pop	r11
    6758:	af 90       	pop	r10
    675a:	9f 90       	pop	r9
    675c:	8f 90       	pop	r8
    675e:	08 95       	ret

00006760 <nrk_time_compact_nanos>:
    6760:	fc 01       	movw	r30, r24
    6762:	13 c0       	rjmp	.+38     	; 0x678a <nrk_time_compact_nanos+0x2a>
    6764:	80 50       	subi	r24, 0x00	; 0
    6766:	9a 4c       	sbci	r25, 0xCA	; 202
    6768:	aa 49       	sbci	r26, 0x9A	; 154
    676a:	bb 43       	sbci	r27, 0x3B	; 59
    676c:	84 83       	std	Z+4, r24	; 0x04
    676e:	95 83       	std	Z+5, r25	; 0x05
    6770:	a6 83       	std	Z+6, r26	; 0x06
    6772:	b7 83       	std	Z+7, r27	; 0x07
    6774:	80 81       	ld	r24, Z
    6776:	91 81       	ldd	r25, Z+1	; 0x01
    6778:	a2 81       	ldd	r26, Z+2	; 0x02
    677a:	b3 81       	ldd	r27, Z+3	; 0x03
    677c:	01 96       	adiw	r24, 0x01	; 1
    677e:	a1 1d       	adc	r26, r1
    6780:	b1 1d       	adc	r27, r1
    6782:	80 83       	st	Z, r24
    6784:	91 83       	std	Z+1, r25	; 0x01
    6786:	a2 83       	std	Z+2, r26	; 0x02
    6788:	b3 83       	std	Z+3, r27	; 0x03
    678a:	84 81       	ldd	r24, Z+4	; 0x04
    678c:	95 81       	ldd	r25, Z+5	; 0x05
    678e:	a6 81       	ldd	r26, Z+6	; 0x06
    6790:	b7 81       	ldd	r27, Z+7	; 0x07
    6792:	80 30       	cpi	r24, 0x00	; 0
    6794:	2a ec       	ldi	r18, 0xCA	; 202
    6796:	92 07       	cpc	r25, r18
    6798:	2a e9       	ldi	r18, 0x9A	; 154
    679a:	a2 07       	cpc	r26, r18
    679c:	2b e3       	ldi	r18, 0x3B	; 59
    679e:	b2 07       	cpc	r27, r18
    67a0:	08 f7       	brcc	.-62     	; 0x6764 <nrk_time_compact_nanos+0x4>
    67a2:	08 95       	ret

000067a4 <nrk_time_add>:
    67a4:	8f 92       	push	r8
    67a6:	9f 92       	push	r9
    67a8:	af 92       	push	r10
    67aa:	bf 92       	push	r11
    67ac:	cf 92       	push	r12
    67ae:	df 92       	push	r13
    67b0:	ef 92       	push	r14
    67b2:	ff 92       	push	r15
    67b4:	0f 93       	push	r16
    67b6:	1f 93       	push	r17
    67b8:	cf 93       	push	r28
    67ba:	df 93       	push	r29
    67bc:	cd b7       	in	r28, 0x3d	; 61
    67be:	de b7       	in	r29, 0x3e	; 62
    67c0:	60 97       	sbiw	r28, 0x10	; 16
    67c2:	0f b6       	in	r0, 0x3f	; 63
    67c4:	f8 94       	cli
    67c6:	de bf       	out	0x3e, r29	; 62
    67c8:	0f be       	out	0x3f, r0	; 63
    67ca:	cd bf       	out	0x3d, r28	; 61
    67cc:	fc 01       	movw	r30, r24
    67ce:	09 83       	std	Y+1, r16	; 0x01
    67d0:	1a 83       	std	Y+2, r17	; 0x02
    67d2:	2b 83       	std	Y+3, r18	; 0x03
    67d4:	3c 83       	std	Y+4, r19	; 0x04
    67d6:	4d 83       	std	Y+5, r20	; 0x05
    67d8:	5e 83       	std	Y+6, r21	; 0x06
    67da:	6f 83       	std	Y+7, r22	; 0x07
    67dc:	78 87       	std	Y+8, r23	; 0x08
    67de:	89 86       	std	Y+9, r8	; 0x09
    67e0:	9a 86       	std	Y+10, r9	; 0x0a
    67e2:	ab 86       	std	Y+11, r10	; 0x0b
    67e4:	bc 86       	std	Y+12, r11	; 0x0c
    67e6:	cd 86       	std	Y+13, r12	; 0x0d
    67e8:	de 86       	std	Y+14, r13	; 0x0e
    67ea:	ef 86       	std	Y+15, r14	; 0x0f
    67ec:	f8 8a       	std	Y+16, r15	; 0x10
    67ee:	ad 80       	ldd	r10, Y+5	; 0x05
    67f0:	be 80       	ldd	r11, Y+6	; 0x06
    67f2:	cf 80       	ldd	r12, Y+7	; 0x07
    67f4:	d8 84       	ldd	r13, Y+8	; 0x08
    67f6:	ed 84       	ldd	r14, Y+13	; 0x0d
    67f8:	fe 84       	ldd	r15, Y+14	; 0x0e
    67fa:	0f 85       	ldd	r16, Y+15	; 0x0f
    67fc:	18 89       	ldd	r17, Y+16	; 0x10
    67fe:	89 85       	ldd	r24, Y+9	; 0x09
    6800:	9a 85       	ldd	r25, Y+10	; 0x0a
    6802:	ab 85       	ldd	r26, Y+11	; 0x0b
    6804:	bc 85       	ldd	r27, Y+12	; 0x0c
    6806:	29 81       	ldd	r18, Y+1	; 0x01
    6808:	3a 81       	ldd	r19, Y+2	; 0x02
    680a:	4b 81       	ldd	r20, Y+3	; 0x03
    680c:	5c 81       	ldd	r21, Y+4	; 0x04
    680e:	82 0f       	add	r24, r18
    6810:	93 1f       	adc	r25, r19
    6812:	a4 1f       	adc	r26, r20
    6814:	b5 1f       	adc	r27, r21
    6816:	80 83       	st	Z, r24
    6818:	91 83       	std	Z+1, r25	; 0x01
    681a:	a2 83       	std	Z+2, r26	; 0x02
    681c:	b3 83       	std	Z+3, r27	; 0x03
    681e:	ea 0c       	add	r14, r10
    6820:	fb 1c       	adc	r15, r11
    6822:	0c 1d       	adc	r16, r12
    6824:	1d 1d       	adc	r17, r13
    6826:	e4 82       	std	Z+4, r14	; 0x04
    6828:	f5 82       	std	Z+5, r15	; 0x05
    682a:	06 83       	std	Z+6, r16	; 0x06
    682c:	17 83       	std	Z+7, r17	; 0x07
    682e:	cf 01       	movw	r24, r30
    6830:	0e 94 b0 33 	call	0x6760	; 0x6760 <nrk_time_compact_nanos>
    6834:	81 e0       	ldi	r24, 0x01	; 1
    6836:	90 e0       	ldi	r25, 0x00	; 0
    6838:	60 96       	adiw	r28, 0x10	; 16
    683a:	0f b6       	in	r0, 0x3f	; 63
    683c:	f8 94       	cli
    683e:	de bf       	out	0x3e, r29	; 62
    6840:	0f be       	out	0x3f, r0	; 63
    6842:	cd bf       	out	0x3d, r28	; 61
    6844:	df 91       	pop	r29
    6846:	cf 91       	pop	r28
    6848:	1f 91       	pop	r17
    684a:	0f 91       	pop	r16
    684c:	ff 90       	pop	r15
    684e:	ef 90       	pop	r14
    6850:	df 90       	pop	r13
    6852:	cf 90       	pop	r12
    6854:	bf 90       	pop	r11
    6856:	af 90       	pop	r10
    6858:	9f 90       	pop	r9
    685a:	8f 90       	pop	r8
    685c:	08 95       	ret

0000685e <nrk_time_set>:
    685e:	60 93 b1 1b 	sts	0x1BB1, r22
    6862:	70 93 b2 1b 	sts	0x1BB2, r23
    6866:	80 93 b3 1b 	sts	0x1BB3, r24
    686a:	90 93 b4 1b 	sts	0x1BB4, r25
    686e:	20 93 b5 1b 	sts	0x1BB5, r18
    6872:	30 93 b6 1b 	sts	0x1BB6, r19
    6876:	40 93 b7 1b 	sts	0x1BB7, r20
    687a:	50 93 b8 1b 	sts	0x1BB8, r21
    687e:	08 95       	ret

00006880 <_nrk_time_to_ticks>:
    6880:	8f 92       	push	r8
    6882:	9f 92       	push	r9
    6884:	af 92       	push	r10
    6886:	bf 92       	push	r11
    6888:	cf 92       	push	r12
    688a:	df 92       	push	r13
    688c:	ef 92       	push	r14
    688e:	ff 92       	push	r15
    6890:	0f 93       	push	r16
    6892:	1f 93       	push	r17
    6894:	cf 93       	push	r28
    6896:	df 93       	push	r29
    6898:	cd b7       	in	r28, 0x3d	; 61
    689a:	de b7       	in	r29, 0x3e	; 62
    689c:	28 97       	sbiw	r28, 0x08	; 8
    689e:	0f b6       	in	r0, 0x3f	; 63
    68a0:	f8 94       	cli
    68a2:	de bf       	out	0x3e, r29	; 62
    68a4:	0f be       	out	0x3f, r0	; 63
    68a6:	cd bf       	out	0x3d, r28	; 61
    68a8:	29 83       	std	Y+1, r18	; 0x01
    68aa:	3a 83       	std	Y+2, r19	; 0x02
    68ac:	4b 83       	std	Y+3, r20	; 0x03
    68ae:	5c 83       	std	Y+4, r21	; 0x04
    68b0:	6d 83       	std	Y+5, r22	; 0x05
    68b2:	7e 83       	std	Y+6, r23	; 0x06
    68b4:	8f 83       	std	Y+7, r24	; 0x07
    68b6:	98 87       	std	Y+8, r25	; 0x08
    68b8:	8d 80       	ldd	r8, Y+5	; 0x05
    68ba:	9e 80       	ldd	r9, Y+6	; 0x06
    68bc:	af 80       	ldd	r10, Y+7	; 0x07
    68be:	b8 84       	ldd	r11, Y+8	; 0x08
    68c0:	e9 80       	ldd	r14, Y+1	; 0x01
    68c2:	fa 80       	ldd	r15, Y+2	; 0x02
    68c4:	0b 81       	ldd	r16, Y+3	; 0x03
    68c6:	1c 81       	ldd	r17, Y+4	; 0x04
    68c8:	e1 14       	cp	r14, r1
    68ca:	f1 04       	cpc	r15, r1
    68cc:	01 05       	cpc	r16, r1
    68ce:	11 05       	cpc	r17, r1
    68d0:	01 f1       	breq	.+64     	; 0x6912 <_nrk_time_to_ticks+0x92>
    68d2:	80 e0       	ldi	r24, 0x00	; 0
    68d4:	9a ec       	ldi	r25, 0xCA	; 202
    68d6:	aa e9       	ldi	r26, 0x9A	; 154
    68d8:	bb e3       	ldi	r27, 0x3B	; 59
    68da:	88 0e       	add	r8, r24
    68dc:	99 1e       	adc	r9, r25
    68de:	aa 1e       	adc	r10, r26
    68e0:	bb 1e       	adc	r11, r27
    68e2:	c5 01       	movw	r24, r10
    68e4:	b4 01       	movw	r22, r8
    68e6:	23 eb       	ldi	r18, 0xB3	; 179
    68e8:	36 ee       	ldi	r19, 0xE6	; 230
    68ea:	4e e0       	ldi	r20, 0x0E	; 14
    68ec:	50 e0       	ldi	r21, 0x00	; 0
    68ee:	0e 94 b9 41 	call	0x8372	; 0x8372 <__udivmodsi4>
    68f2:	69 01       	movw	r12, r18
    68f4:	08 94       	sec
    68f6:	e1 08       	sbc	r14, r1
    68f8:	f1 08       	sbc	r15, r1
    68fa:	01 09       	sbc	r16, r1
    68fc:	11 09       	sbc	r17, r1
    68fe:	8a e0       	ldi	r24, 0x0A	; 10
    6900:	ee 0c       	add	r14, r14
    6902:	ff 1c       	adc	r15, r15
    6904:	00 1f       	adc	r16, r16
    6906:	11 1f       	adc	r17, r17
    6908:	8a 95       	dec	r24
    690a:	d1 f7       	brne	.-12     	; 0x6900 <_nrk_time_to_ticks+0x80>
    690c:	ce 0c       	add	r12, r14
    690e:	df 1c       	adc	r13, r15
    6910:	09 c0       	rjmp	.+18     	; 0x6924 <_nrk_time_to_ticks+0xa4>
    6912:	c5 01       	movw	r24, r10
    6914:	b4 01       	movw	r22, r8
    6916:	23 eb       	ldi	r18, 0xB3	; 179
    6918:	36 ee       	ldi	r19, 0xE6	; 230
    691a:	4e e0       	ldi	r20, 0x0E	; 14
    691c:	50 e0       	ldi	r21, 0x00	; 0
    691e:	0e 94 b9 41 	call	0x8372	; 0x8372 <__udivmodsi4>
    6922:	69 01       	movw	r12, r18
    6924:	b6 01       	movw	r22, r12
    6926:	02 c0       	rjmp	.+4      	; 0x692c <_nrk_time_to_ticks+0xac>
    6928:	60 50       	subi	r22, 0x00	; 0
    692a:	74 40       	sbci	r23, 0x04	; 4
    692c:	94 e0       	ldi	r25, 0x04	; 4
    692e:	61 30       	cpi	r22, 0x01	; 1
    6930:	79 07       	cpc	r23, r25
    6932:	d0 f7       	brcc	.-12     	; 0x6928 <_nrk_time_to_ticks+0xa8>
    6934:	88 27       	eor	r24, r24
    6936:	99 27       	eor	r25, r25
    6938:	23 eb       	ldi	r18, 0xB3	; 179
    693a:	36 ee       	ldi	r19, 0xE6	; 230
    693c:	4e e0       	ldi	r20, 0x0E	; 14
    693e:	50 e0       	ldi	r21, 0x00	; 0
    6940:	0e 94 73 41 	call	0x82e6	; 0x82e6 <__mulsi3>
    6944:	67 5a       	subi	r22, 0xA7	; 167
    6946:	7c 48       	sbci	r23, 0x8C	; 140
    6948:	88 4f       	sbci	r24, 0xF8	; 248
    694a:	9f 4f       	sbci	r25, 0xFF	; 255
    694c:	68 15       	cp	r22, r8
    694e:	79 05       	cpc	r23, r9
    6950:	8a 05       	cpc	r24, r10
    6952:	9b 05       	cpc	r25, r11
    6954:	18 f4       	brcc	.+6      	; 0x695c <_nrk_time_to_ticks+0xdc>
    6956:	08 94       	sec
    6958:	c1 1c       	adc	r12, r1
    695a:	d1 1c       	adc	r13, r1
    695c:	c6 01       	movw	r24, r12
    695e:	28 96       	adiw	r28, 0x08	; 8
    6960:	0f b6       	in	r0, 0x3f	; 63
    6962:	f8 94       	cli
    6964:	de bf       	out	0x3e, r29	; 62
    6966:	0f be       	out	0x3f, r0	; 63
    6968:	cd bf       	out	0x3d, r28	; 61
    696a:	df 91       	pop	r29
    696c:	cf 91       	pop	r28
    696e:	1f 91       	pop	r17
    6970:	0f 91       	pop	r16
    6972:	ff 90       	pop	r15
    6974:	ef 90       	pop	r14
    6976:	df 90       	pop	r13
    6978:	cf 90       	pop	r12
    697a:	bf 90       	pop	r11
    697c:	af 90       	pop	r10
    697e:	9f 90       	pop	r9
    6980:	8f 90       	pop	r8
    6982:	08 95       	ret

00006984 <_nrk_ticks_to_time>:
    6984:	2f 92       	push	r2
    6986:	3f 92       	push	r3
    6988:	4f 92       	push	r4
    698a:	5f 92       	push	r5
    698c:	6f 92       	push	r6
    698e:	7f 92       	push	r7
    6990:	8f 92       	push	r8
    6992:	9f 92       	push	r9
    6994:	af 92       	push	r10
    6996:	bf 92       	push	r11
    6998:	cf 92       	push	r12
    699a:	df 92       	push	r13
    699c:	ef 92       	push	r14
    699e:	ff 92       	push	r15
    69a0:	0f 93       	push	r16
    69a2:	1f 93       	push	r17
    69a4:	cf 93       	push	r28
    69a6:	df 93       	push	r29
    69a8:	cd b7       	in	r28, 0x3d	; 61
    69aa:	de b7       	in	r29, 0x3e	; 62
    69ac:	28 97       	sbiw	r28, 0x08	; 8
    69ae:	0f b6       	in	r0, 0x3f	; 63
    69b0:	f8 94       	cli
    69b2:	de bf       	out	0x3e, r29	; 62
    69b4:	0f be       	out	0x3f, r0	; 63
    69b6:	cd bf       	out	0x3d, r28	; 61
    69b8:	7b 01       	movw	r14, r22
    69ba:	8c 01       	movw	r16, r24
    69bc:	73 70       	andi	r23, 0x03	; 3
    69be:	80 70       	andi	r24, 0x00	; 0
    69c0:	90 70       	andi	r25, 0x00	; 0
    69c2:	23 eb       	ldi	r18, 0xB3	; 179
    69c4:	36 ee       	ldi	r19, 0xE6	; 230
    69c6:	4e e0       	ldi	r20, 0x0E	; 14
    69c8:	50 e0       	ldi	r21, 0x00	; 0
    69ca:	0e 94 73 41 	call	0x82e6	; 0x82e6 <__mulsi3>
    69ce:	6d 83       	std	Y+5, r22	; 0x05
    69d0:	7e 83       	std	Y+6, r23	; 0x06
    69d2:	8f 83       	std	Y+7, r24	; 0x07
    69d4:	98 87       	std	Y+8, r25	; 0x08
    69d6:	9a e0       	ldi	r25, 0x0A	; 10
    69d8:	16 95       	lsr	r17
    69da:	07 95       	ror	r16
    69dc:	f7 94       	ror	r15
    69de:	e7 94       	ror	r14
    69e0:	9a 95       	dec	r25
    69e2:	d1 f7       	brne	.-12     	; 0x69d8 <_nrk_ticks_to_time+0x54>
    69e4:	e9 82       	std	Y+1, r14	; 0x01
    69e6:	fa 82       	std	Y+2, r15	; 0x02
    69e8:	0b 83       	std	Y+3, r16	; 0x03
    69ea:	1c 83       	std	Y+4, r17	; 0x04
    69ec:	98 85       	ldd	r25, Y+8	; 0x08
    69ee:	29 80       	ldd	r2, Y+1	; 0x01
    69f0:	3a 80       	ldd	r3, Y+2	; 0x02
    69f2:	4b 80       	ldd	r4, Y+3	; 0x03
    69f4:	5c 80       	ldd	r5, Y+4	; 0x04
    69f6:	6d 80       	ldd	r6, Y+5	; 0x05
    69f8:	7e 80       	ldd	r7, Y+6	; 0x06
    69fa:	8f 80       	ldd	r8, Y+7	; 0x07
    69fc:	22 2d       	mov	r18, r2
    69fe:	33 2d       	mov	r19, r3
    6a00:	44 2d       	mov	r20, r4
    6a02:	55 2d       	mov	r21, r5
    6a04:	66 2d       	mov	r22, r6
    6a06:	77 2d       	mov	r23, r7
    6a08:	88 2d       	mov	r24, r8
    6a0a:	28 96       	adiw	r28, 0x08	; 8
    6a0c:	0f b6       	in	r0, 0x3f	; 63
    6a0e:	f8 94       	cli
    6a10:	de bf       	out	0x3e, r29	; 62
    6a12:	0f be       	out	0x3f, r0	; 63
    6a14:	cd bf       	out	0x3d, r28	; 61
    6a16:	df 91       	pop	r29
    6a18:	cf 91       	pop	r28
    6a1a:	1f 91       	pop	r17
    6a1c:	0f 91       	pop	r16
    6a1e:	ff 90       	pop	r15
    6a20:	ef 90       	pop	r14
    6a22:	df 90       	pop	r13
    6a24:	cf 90       	pop	r12
    6a26:	bf 90       	pop	r11
    6a28:	af 90       	pop	r10
    6a2a:	9f 90       	pop	r9
    6a2c:	8f 90       	pop	r8
    6a2e:	7f 90       	pop	r7
    6a30:	6f 90       	pop	r6
    6a32:	5f 90       	pop	r5
    6a34:	4f 90       	pop	r4
    6a36:	3f 90       	pop	r3
    6a38:	2f 90       	pop	r2
    6a3a:	08 95       	ret

00006a3c <_nrk_time_to_ticks_long>:
    6a3c:	af 92       	push	r10
    6a3e:	bf 92       	push	r11
    6a40:	cf 92       	push	r12
    6a42:	df 92       	push	r13
    6a44:	ef 92       	push	r14
    6a46:	ff 92       	push	r15
    6a48:	0f 93       	push	r16
    6a4a:	1f 93       	push	r17
    6a4c:	cf 93       	push	r28
    6a4e:	df 93       	push	r29
    6a50:	cd b7       	in	r28, 0x3d	; 61
    6a52:	de b7       	in	r29, 0x3e	; 62
    6a54:	28 97       	sbiw	r28, 0x08	; 8
    6a56:	0f b6       	in	r0, 0x3f	; 63
    6a58:	f8 94       	cli
    6a5a:	de bf       	out	0x3e, r29	; 62
    6a5c:	0f be       	out	0x3f, r0	; 63
    6a5e:	cd bf       	out	0x3d, r28	; 61
    6a60:	29 83       	std	Y+1, r18	; 0x01
    6a62:	3a 83       	std	Y+2, r19	; 0x02
    6a64:	4b 83       	std	Y+3, r20	; 0x03
    6a66:	5c 83       	std	Y+4, r21	; 0x04
    6a68:	6d 83       	std	Y+5, r22	; 0x05
    6a6a:	7e 83       	std	Y+6, r23	; 0x06
    6a6c:	8f 83       	std	Y+7, r24	; 0x07
    6a6e:	98 87       	std	Y+8, r25	; 0x08
    6a70:	ad 80       	ldd	r10, Y+5	; 0x05
    6a72:	be 80       	ldd	r11, Y+6	; 0x06
    6a74:	cf 80       	ldd	r12, Y+7	; 0x07
    6a76:	d8 84       	ldd	r13, Y+8	; 0x08
    6a78:	e9 80       	ldd	r14, Y+1	; 0x01
    6a7a:	fa 80       	ldd	r15, Y+2	; 0x02
    6a7c:	0b 81       	ldd	r16, Y+3	; 0x03
    6a7e:	1c 81       	ldd	r17, Y+4	; 0x04
    6a80:	e1 14       	cp	r14, r1
    6a82:	f1 04       	cpc	r15, r1
    6a84:	01 05       	cpc	r16, r1
    6a86:	11 05       	cpc	r17, r1
    6a88:	09 f1       	breq	.+66     	; 0x6acc <_nrk_time_to_ticks_long+0x90>
    6a8a:	80 e0       	ldi	r24, 0x00	; 0
    6a8c:	9a ec       	ldi	r25, 0xCA	; 202
    6a8e:	aa e9       	ldi	r26, 0x9A	; 154
    6a90:	bb e3       	ldi	r27, 0x3B	; 59
    6a92:	a8 0e       	add	r10, r24
    6a94:	b9 1e       	adc	r11, r25
    6a96:	ca 1e       	adc	r12, r26
    6a98:	db 1e       	adc	r13, r27
    6a9a:	c6 01       	movw	r24, r12
    6a9c:	b5 01       	movw	r22, r10
    6a9e:	23 eb       	ldi	r18, 0xB3	; 179
    6aa0:	36 ee       	ldi	r19, 0xE6	; 230
    6aa2:	4e e0       	ldi	r20, 0x0E	; 14
    6aa4:	50 e0       	ldi	r21, 0x00	; 0
    6aa6:	0e 94 b9 41 	call	0x8372	; 0x8372 <__udivmodsi4>
    6aaa:	08 94       	sec
    6aac:	e1 08       	sbc	r14, r1
    6aae:	f1 08       	sbc	r15, r1
    6ab0:	01 09       	sbc	r16, r1
    6ab2:	11 09       	sbc	r17, r1
    6ab4:	6a e0       	ldi	r22, 0x0A	; 10
    6ab6:	ee 0c       	add	r14, r14
    6ab8:	ff 1c       	adc	r15, r15
    6aba:	00 1f       	adc	r16, r16
    6abc:	11 1f       	adc	r17, r17
    6abe:	6a 95       	dec	r22
    6ac0:	d1 f7       	brne	.-12     	; 0x6ab6 <_nrk_time_to_ticks_long+0x7a>
    6ac2:	e2 0e       	add	r14, r18
    6ac4:	f3 1e       	adc	r15, r19
    6ac6:	04 1f       	adc	r16, r20
    6ac8:	15 1f       	adc	r17, r21
    6aca:	0a c0       	rjmp	.+20     	; 0x6ae0 <_nrk_time_to_ticks_long+0xa4>
    6acc:	c6 01       	movw	r24, r12
    6ace:	b5 01       	movw	r22, r10
    6ad0:	23 eb       	ldi	r18, 0xB3	; 179
    6ad2:	36 ee       	ldi	r19, 0xE6	; 230
    6ad4:	4e e0       	ldi	r20, 0x0E	; 14
    6ad6:	50 e0       	ldi	r21, 0x00	; 0
    6ad8:	0e 94 b9 41 	call	0x8372	; 0x8372 <__udivmodsi4>
    6adc:	79 01       	movw	r14, r18
    6ade:	8a 01       	movw	r16, r20
    6ae0:	c8 01       	movw	r24, r16
    6ae2:	b7 01       	movw	r22, r14
    6ae4:	04 c0       	rjmp	.+8      	; 0x6aee <_nrk_time_to_ticks_long+0xb2>
    6ae6:	60 50       	subi	r22, 0x00	; 0
    6ae8:	74 40       	sbci	r23, 0x04	; 4
    6aea:	80 40       	sbci	r24, 0x00	; 0
    6aec:	90 40       	sbci	r25, 0x00	; 0
    6aee:	61 30       	cpi	r22, 0x01	; 1
    6af0:	a4 e0       	ldi	r26, 0x04	; 4
    6af2:	7a 07       	cpc	r23, r26
    6af4:	a0 e0       	ldi	r26, 0x00	; 0
    6af6:	8a 07       	cpc	r24, r26
    6af8:	a0 e0       	ldi	r26, 0x00	; 0
    6afa:	9a 07       	cpc	r25, r26
    6afc:	a0 f7       	brcc	.-24     	; 0x6ae6 <_nrk_time_to_ticks_long+0xaa>
    6afe:	23 eb       	ldi	r18, 0xB3	; 179
    6b00:	36 ee       	ldi	r19, 0xE6	; 230
    6b02:	4e e0       	ldi	r20, 0x0E	; 14
    6b04:	50 e0       	ldi	r21, 0x00	; 0
    6b06:	0e 94 73 41 	call	0x82e6	; 0x82e6 <__mulsi3>
    6b0a:	67 5a       	subi	r22, 0xA7	; 167
    6b0c:	7c 48       	sbci	r23, 0x8C	; 140
    6b0e:	88 4f       	sbci	r24, 0xF8	; 248
    6b10:	9f 4f       	sbci	r25, 0xFF	; 255
    6b12:	6a 15       	cp	r22, r10
    6b14:	7b 05       	cpc	r23, r11
    6b16:	8c 05       	cpc	r24, r12
    6b18:	9d 05       	cpc	r25, r13
    6b1a:	28 f4       	brcc	.+10     	; 0x6b26 <_nrk_time_to_ticks_long+0xea>
    6b1c:	08 94       	sec
    6b1e:	e1 1c       	adc	r14, r1
    6b20:	f1 1c       	adc	r15, r1
    6b22:	01 1d       	adc	r16, r1
    6b24:	11 1d       	adc	r17, r1
    6b26:	c8 01       	movw	r24, r16
    6b28:	b7 01       	movw	r22, r14
    6b2a:	28 96       	adiw	r28, 0x08	; 8
    6b2c:	0f b6       	in	r0, 0x3f	; 63
    6b2e:	f8 94       	cli
    6b30:	de bf       	out	0x3e, r29	; 62
    6b32:	0f be       	out	0x3f, r0	; 63
    6b34:	cd bf       	out	0x3d, r28	; 61
    6b36:	df 91       	pop	r29
    6b38:	cf 91       	pop	r28
    6b3a:	1f 91       	pop	r17
    6b3c:	0f 91       	pop	r16
    6b3e:	ff 90       	pop	r15
    6b40:	ef 90       	pop	r14
    6b42:	df 90       	pop	r13
    6b44:	cf 90       	pop	r12
    6b46:	bf 90       	pop	r11
    6b48:	af 90       	pop	r10
    6b4a:	08 95       	ret

00006b4c <nrk_time_get>:
void halRfWaitForCrystalOscillator(void) {
    uint8_t spiStatusByte;

    // Poll the SPI status byte until the crystal oscillator is stable
    do {
	    DISABLE_GLOBAL_INT();
    6b4c:	ef 92       	push	r14
    6b4e:	ff 92       	push	r15
    6b50:	0f 93       	push	r16
    6b52:	1f 93       	push	r17
    6b54:	cf 93       	push	r28
    6b56:	df 93       	push	r29
    6b58:	ec 01       	movw	r28, r24
	    FASTSPI_UPD_STATUS(spiStatusByte);
    6b5a:	80 91 b1 1b 	lds	r24, 0x1BB1
    6b5e:	90 91 b2 1b 	lds	r25, 0x1BB2
    6b62:	a0 91 b3 1b 	lds	r26, 0x1BB3
    6b66:	b0 91 b4 1b 	lds	r27, 0x1BB4
    6b6a:	88 83       	st	Y, r24
    6b6c:	99 83       	std	Y+1, r25	; 0x01
    6b6e:	aa 83       	std	Y+2, r26	; 0x02
    6b70:	bb 83       	std	Y+3, r27	; 0x03
	    ENABLE_GLOBAL_INT();
    6b72:	e0 90 b5 1b 	lds	r14, 0x1BB5
    6b76:	f0 90 b6 1b 	lds	r15, 0x1BB6
    6b7a:	00 91 b7 1b 	lds	r16, 0x1BB7
    6b7e:	10 91 b8 1b 	lds	r17, 0x1BB8
    6b82:	ec 82       	std	Y+4, r14	; 0x04
    6b84:	fd 82       	std	Y+5, r15	; 0x05
    6b86:	0e 83       	std	Y+6, r16	; 0x06
    6b88:	1f 83       	std	Y+7, r17	; 0x07
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));

    6b8a:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    6b8e:	99 27       	eor	r25, r25
    6b90:	aa 27       	eor	r26, r26
    6b92:	bb 27       	eor	r27, r27
    6b94:	bc 01       	movw	r22, r24
    6b96:	cd 01       	movw	r24, r26
    6b98:	23 eb       	ldi	r18, 0xB3	; 179
    6b9a:	36 ee       	ldi	r19, 0xE6	; 230
    6b9c:	4e e0       	ldi	r20, 0x0E	; 14
    6b9e:	50 e0       	ldi	r21, 0x00	; 0
    6ba0:	0e 94 73 41 	call	0x82e6	; 0x82e6 <__mulsi3>
    6ba4:	e6 0e       	add	r14, r22
    6ba6:	f7 1e       	adc	r15, r23
    6ba8:	08 1f       	adc	r16, r24
    6baa:	19 1f       	adc	r17, r25
    6bac:	ec 82       	std	Y+4, r14	; 0x04
    6bae:	fd 82       	std	Y+5, r15	; 0x05
    6bb0:	0e 83       	std	Y+6, r16	; 0x06
    6bb2:	1f 83       	std	Y+7, r17	; 0x07
    6bb4:	13 c0       	rjmp	.+38     	; 0x6bdc <nrk_time_get+0x90>
} // halRfWaitForCrystalOscillator

    6bb6:	80 50       	subi	r24, 0x00	; 0
    6bb8:	9a 4c       	sbci	r25, 0xCA	; 202
    6bba:	aa 49       	sbci	r26, 0x9A	; 154
    6bbc:	bb 43       	sbci	r27, 0x3B	; 59
    6bbe:	8c 83       	std	Y+4, r24	; 0x04
    6bc0:	9d 83       	std	Y+5, r25	; 0x05
    6bc2:	ae 83       	std	Y+6, r26	; 0x06
    6bc4:	bf 83       	std	Y+7, r27	; 0x07
    6bc6:	88 81       	ld	r24, Y
    6bc8:	99 81       	ldd	r25, Y+1	; 0x01
    6bca:	aa 81       	ldd	r26, Y+2	; 0x02
    6bcc:	bb 81       	ldd	r27, Y+3	; 0x03
    6bce:	01 96       	adiw	r24, 0x01	; 1
    6bd0:	a1 1d       	adc	r26, r1
    6bd2:	b1 1d       	adc	r27, r1
    6bd4:	88 83       	st	Y, r24
    6bd6:	99 83       	std	Y+1, r25	; 0x01
    6bd8:	aa 83       	std	Y+2, r26	; 0x02
    6bda:	bb 83       	std	Y+3, r27	; 0x03
	    DISABLE_GLOBAL_INT();
	    FASTSPI_UPD_STATUS(spiStatusByte);
	    ENABLE_GLOBAL_INT();
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));

} // halRfWaitForCrystalOscillator
    6bdc:	8c 81       	ldd	r24, Y+4	; 0x04
    6bde:	9d 81       	ldd	r25, Y+5	; 0x05
    6be0:	ae 81       	ldd	r26, Y+6	; 0x06
    6be2:	bf 81       	ldd	r27, Y+7	; 0x07
    6be4:	80 30       	cpi	r24, 0x00	; 0
    6be6:	2a ec       	ldi	r18, 0xCA	; 202
    6be8:	92 07       	cpc	r25, r18
    6bea:	2a e9       	ldi	r18, 0x9A	; 154
    6bec:	a2 07       	cpc	r26, r18
    6bee:	2b e3       	ldi	r18, 0x3B	; 59
    6bf0:	b2 07       	cpc	r27, r18
    6bf2:	08 f7       	brcc	.-62     	; 0x6bb6 <nrk_time_get+0x6a>
    6bf4:	df 91       	pop	r29
    6bf6:	cf 91       	pop	r28
    6bf8:	1f 91       	pop	r17
    6bfa:	0f 91       	pop	r16
    6bfc:	ff 90       	pop	r15
    6bfe:	ef 90       	pop	r14
    6c00:	08 95       	ret

00006c02 <nrk_idle_task>:
void halRfWaitForCrystalOscillator(void) {
    uint8_t spiStatusByte;

    // Poll the SPI status byte until the crystal oscillator is stable
    do {
	    DISABLE_GLOBAL_INT();
    6c02:	0e 94 a1 2c 	call	0x5942	; 0x5942 <nrk_stack_check>
	    FASTSPI_UPD_STATUS(spiStatusByte);
	    ENABLE_GLOBAL_INT();
    6c06:	0e 94 7e 39 	call	0x72fc	; 0x72fc <_nrk_get_next_wakeup>
    6c0a:	8b 30       	cpi	r24, 0x0B	; 11
    6c0c:	18 f4       	brcc	.+6      	; 0x6c14 <nrk_idle_task+0x12>
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));

    6c0e:	81 e0       	ldi	r24, 0x01	; 1
    6c10:	80 93 ae 1b 	sts	0x1BAE, r24
    6c14:	0e 94 b3 3c 	call	0x7966	; 0x7966 <nrk_idle>
    6c18:	80 91 3b 0b 	lds	r24, 0x0B3B
    6c1c:	85 35       	cpi	r24, 0x55	; 85
    6c1e:	19 f0       	breq	.+6      	; 0x6c26 <nrk_idle_task+0x24>
    6c20:	88 e0       	ldi	r24, 0x08	; 8
    6c22:	0e 94 c4 2b 	call	0x5788	; 0x5788 <nrk_error_add>
    6c26:	80 91 7e 21 	lds	r24, 0x217E
    6c2a:	85 35       	cpi	r24, 0x55	; 85
    6c2c:	51 f3       	breq	.-44     	; 0x6c02 <nrk_idle_task>
    6c2e:	88 e0       	ldi	r24, 0x08	; 8
    6c30:	0e 94 c4 2b 	call	0x5788	; 0x5788 <nrk_error_add>
    6c34:	e6 cf       	rjmp	.-52     	; 0x6c02 <nrk_idle_task>

00006c36 <_nrk_scheduler>:
	    DISABLE_GLOBAL_INT();
	    FASTSPI_UPD_STATUS(spiStatusByte);
	    ENABLE_GLOBAL_INT();
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));

} // halRfWaitForCrystalOscillator
    6c36:	8f 92       	push	r8
    6c38:	9f 92       	push	r9
    6c3a:	af 92       	push	r10
    6c3c:	bf 92       	push	r11
    6c3e:	cf 92       	push	r12
    6c40:	df 92       	push	r13
    6c42:	ef 92       	push	r14
    6c44:	ff 92       	push	r15
    6c46:	0f 93       	push	r16
    6c48:	1f 93       	push	r17
    6c4a:	cf 93       	push	r28
    6c4c:	df 93       	push	r29

    6c4e:	0e 94 d2 28 	call	0x51a4	; 0x51a4 <nrk_int_disable>
    6c52:	0e 94 3a 39 	call	0x7274	; 0x7274 <_nrk_high_speed_timer_reset>
    6c56:	0e 94 42 39 	call	0x7284	; 0x7284 <_nrk_high_speed_timer_get>
    6c5a:	4c 01       	movw	r8, r24
    6c5c:	8a ef       	ldi	r24, 0xFA	; 250
    6c5e:	0e 94 83 39 	call	0x7306	; 0x7306 <_nrk_set_next_wakeup>
    6c62:	60 91 36 0c 	lds	r22, 0x0C36
    6c66:	77 27       	eor	r23, r23
    6c68:	88 27       	eor	r24, r24
    6c6a:	99 27       	eor	r25, r25
    6c6c:	23 eb       	ldi	r18, 0xB3	; 179
    6c6e:	36 ee       	ldi	r19, 0xE6	; 230
    6c70:	4e e0       	ldi	r20, 0x0E	; 14
    6c72:	50 e0       	ldi	r21, 0x00	; 0
    6c74:	0e 94 73 41 	call	0x82e6	; 0x82e6 <__mulsi3>
    6c78:	7b 01       	movw	r14, r22
    6c7a:	8c 01       	movw	r16, r24
    6c7c:	80 91 b5 1b 	lds	r24, 0x1BB5
    6c80:	90 91 b6 1b 	lds	r25, 0x1BB6
    6c84:	a0 91 b7 1b 	lds	r26, 0x1BB7
    6c88:	b0 91 b8 1b 	lds	r27, 0x1BB8
    6c8c:	e8 0e       	add	r14, r24
    6c8e:	f9 1e       	adc	r15, r25
    6c90:	0a 1f       	adc	r16, r26
    6c92:	1b 1f       	adc	r17, r27
    6c94:	c8 01       	movw	r24, r16
    6c96:	b7 01       	movw	r22, r14
    6c98:	0e 94 b9 41 	call	0x8372	; 0x8372 <__udivmodsi4>
    6c9c:	a8 01       	movw	r20, r16
    6c9e:	97 01       	movw	r18, r14
    6ca0:	26 1b       	sub	r18, r22
    6ca2:	37 0b       	sbc	r19, r23
    6ca4:	48 0b       	sbc	r20, r24
    6ca6:	59 0b       	sbc	r21, r25
    6ca8:	80 91 b1 1b 	lds	r24, 0x1BB1
    6cac:	90 91 b2 1b 	lds	r25, 0x1BB2
    6cb0:	a0 91 b3 1b 	lds	r26, 0x1BB3
    6cb4:	b0 91 b4 1b 	lds	r27, 0x1BB4
    6cb8:	1b c0       	rjmp	.+54     	; 0x6cf0 <_nrk_scheduler+0xba>
    6cba:	e1 2c       	mov	r14, r1
    6cbc:	66 e3       	ldi	r22, 0x36	; 54
    6cbe:	f6 2e       	mov	r15, r22
    6cc0:	65 e6       	ldi	r22, 0x65	; 101
    6cc2:	06 2f       	mov	r16, r22
    6cc4:	64 ec       	ldi	r22, 0xC4	; 196
    6cc6:	16 2f       	mov	r17, r22
    6cc8:	e2 0e       	add	r14, r18
    6cca:	f3 1e       	adc	r15, r19
    6ccc:	04 1f       	adc	r16, r20
    6cce:	15 1f       	adc	r17, r21
    6cd0:	c8 01       	movw	r24, r16
    6cd2:	b7 01       	movw	r22, r14
    6cd4:	23 eb       	ldi	r18, 0xB3	; 179
    6cd6:	36 ee       	ldi	r19, 0xE6	; 230
    6cd8:	4e e0       	ldi	r20, 0x0E	; 14
    6cda:	50 e0       	ldi	r21, 0x00	; 0
    6cdc:	0e 94 b9 41 	call	0x8372	; 0x8372 <__udivmodsi4>
    6ce0:	a8 01       	movw	r20, r16
    6ce2:	97 01       	movw	r18, r14
    6ce4:	26 1b       	sub	r18, r22
    6ce6:	37 0b       	sbc	r19, r23
    6ce8:	48 0b       	sbc	r20, r24
    6cea:	59 0b       	sbc	r21, r25
    6cec:	d6 01       	movw	r26, r12
    6cee:	c5 01       	movw	r24, r10
    6cf0:	5c 01       	movw	r10, r24
    6cf2:	6d 01       	movw	r12, r26
    6cf4:	08 94       	sec
    6cf6:	a1 1c       	adc	r10, r1
    6cf8:	b1 1c       	adc	r11, r1
    6cfa:	c1 1c       	adc	r12, r1
    6cfc:	d1 1c       	adc	r13, r1
    6cfe:	20 30       	cpi	r18, 0x00	; 0
    6d00:	6a ec       	ldi	r22, 0xCA	; 202
    6d02:	36 07       	cpc	r19, r22
    6d04:	6a e9       	ldi	r22, 0x9A	; 154
    6d06:	46 07       	cpc	r20, r22
    6d08:	6b e3       	ldi	r22, 0x3B	; 59
    6d0a:	56 07       	cpc	r21, r22
    6d0c:	b0 f6       	brcc	.-84     	; 0x6cba <_nrk_scheduler+0x84>
    6d0e:	80 93 b1 1b 	sts	0x1BB1, r24
    6d12:	90 93 b2 1b 	sts	0x1BB2, r25
    6d16:	a0 93 b3 1b 	sts	0x1BB3, r26
    6d1a:	b0 93 b4 1b 	sts	0x1BB4, r27
    6d1e:	20 93 b5 1b 	sts	0x1BB5, r18
    6d22:	30 93 b6 1b 	sts	0x1BB6, r19
    6d26:	40 93 b7 1b 	sts	0x1BB7, r20
    6d2a:	50 93 b8 1b 	sts	0x1BB8, r21
    6d2e:	e0 91 ba 1b 	lds	r30, 0x1BBA
    6d32:	f0 91 bb 1b 	lds	r31, 0x1BBB
    6d36:	85 81       	ldd	r24, Z+5	; 0x05
    6d38:	88 23       	and	r24, r24
    6d3a:	19 f1       	breq	.+70     	; 0x6d82 <_nrk_scheduler+0x14c>
    6d3c:	81 85       	ldd	r24, Z+9	; 0x09
    6d3e:	84 30       	cpi	r24, 0x04	; 4
    6d40:	01 f1       	breq	.+64     	; 0x6d82 <_nrk_scheduler+0x14c>
    6d42:	87 81       	ldd	r24, Z+7	; 0x07
    6d44:	82 30       	cpi	r24, 0x02	; 2
    6d46:	29 f0       	breq	.+10     	; 0x6d52 <_nrk_scheduler+0x11c>
    6d48:	88 23       	and	r24, r24
    6d4a:	41 f0       	breq	.+16     	; 0x6d5c <_nrk_scheduler+0x126>
    6d4c:	86 81       	ldd	r24, Z+6	; 0x06
    6d4e:	88 23       	and	r24, r24
    6d50:	11 f4       	brne	.+4      	; 0x6d56 <_nrk_scheduler+0x120>
    6d52:	85 e0       	ldi	r24, 0x05	; 5
    6d54:	01 c0       	rjmp	.+2      	; 0x6d58 <_nrk_scheduler+0x122>
    6d56:	83 e0       	ldi	r24, 0x03	; 3
    6d58:	81 87       	std	Z+9, r24	; 0x09
    6d5a:	0c c0       	rjmp	.+24     	; 0x6d74 <_nrk_scheduler+0x13e>
    6d5c:	83 e0       	ldi	r24, 0x03	; 3
    6d5e:	81 87       	std	Z+9, r24	; 0x09
    6d60:	e0 91 ba 1b 	lds	r30, 0x1BBA
    6d64:	f0 91 bb 1b 	lds	r31, 0x1BBB
    6d68:	17 82       	std	Z+7, r1	; 0x07
    6d6a:	e0 91 ba 1b 	lds	r30, 0x1BBA
    6d6e:	f0 91 bb 1b 	lds	r31, 0x1BBB
    6d72:	16 82       	std	Z+6, r1	; 0x06
    6d74:	e0 91 ba 1b 	lds	r30, 0x1BBA
    6d78:	f0 91 bb 1b 	lds	r31, 0x1BBB
    6d7c:	80 85       	ldd	r24, Z+8	; 0x08
    6d7e:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <nrk_rem_from_readyQ>
    6d82:	e0 91 ba 1b 	lds	r30, 0x1BBA
    6d86:	f0 91 bb 1b 	lds	r31, 0x1BBB
    6d8a:	85 8d       	ldd	r24, Z+29	; 0x1d
    6d8c:	96 8d       	ldd	r25, Z+30	; 0x1e
    6d8e:	89 2b       	or	r24, r25
    6d90:	91 f1       	breq	.+100    	; 0x6df6 <_nrk_scheduler+0x1c0>
    6d92:	60 85       	ldd	r22, Z+8	; 0x08
    6d94:	66 23       	and	r22, r22
    6d96:	79 f1       	breq	.+94     	; 0x6df6 <_nrk_scheduler+0x1c0>
    6d98:	81 85       	ldd	r24, Z+9	; 0x09
    6d9a:	84 30       	cpi	r24, 0x04	; 4
    6d9c:	61 f1       	breq	.+88     	; 0x6df6 <_nrk_scheduler+0x1c0>
    6d9e:	21 8d       	ldd	r18, Z+25	; 0x19
    6da0:	32 8d       	ldd	r19, Z+26	; 0x1a
    6da2:	80 91 36 0c 	lds	r24, 0x0C36
    6da6:	99 27       	eor	r25, r25
    6da8:	28 17       	cp	r18, r24
    6daa:	39 07       	cpc	r19, r25
    6dac:	50 f4       	brcc	.+20     	; 0x6dc2 <_nrk_scheduler+0x18c>
    6dae:	82 e0       	ldi	r24, 0x02	; 2
    6db0:	0e 94 bd 2b 	call	0x577a	; 0x577a <nrk_kernel_error_add>
    6db4:	e0 91 ba 1b 	lds	r30, 0x1BBA
    6db8:	f0 91 bb 1b 	lds	r31, 0x1BBB
    6dbc:	12 8e       	std	Z+26, r1	; 0x1a
    6dbe:	11 8e       	std	Z+25, r1	; 0x19
    6dc0:	04 c0       	rjmp	.+8      	; 0x6dca <_nrk_scheduler+0x194>
    6dc2:	28 1b       	sub	r18, r24
    6dc4:	39 0b       	sbc	r19, r25
    6dc6:	32 8f       	std	Z+26, r19	; 0x1a
    6dc8:	21 8f       	std	Z+25, r18	; 0x19
    6dca:	e0 91 ba 1b 	lds	r30, 0x1BBA
    6dce:	f0 91 bb 1b 	lds	r31, 0x1BBB
    6dd2:	10 85       	ldd	r17, Z+8	; 0x08
    6dd4:	81 8d       	ldd	r24, Z+25	; 0x19
    6dd6:	92 8d       	ldd	r25, Z+26	; 0x1a
    6dd8:	89 2b       	or	r24, r25
    6dda:	69 f4       	brne	.+26     	; 0x6df6 <_nrk_scheduler+0x1c0>
    6ddc:	61 2f       	mov	r22, r17
    6dde:	83 e0       	ldi	r24, 0x03	; 3
    6de0:	0e 94 bd 2b 	call	0x577a	; 0x577a <nrk_kernel_error_add>
    6de4:	e0 91 ba 1b 	lds	r30, 0x1BBA
    6de8:	f0 91 bb 1b 	lds	r31, 0x1BBB
    6dec:	83 e0       	ldi	r24, 0x03	; 3
    6dee:	81 87       	std	Z+9, r24	; 0x09
    6df0:	81 2f       	mov	r24, r17
    6df2:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <nrk_rem_from_readyQ>
    6df6:	ce e3       	ldi	r28, 0x3E	; 62
    6df8:	db e1       	ldi	r29, 0x1B	; 27
    6dfa:	00 e6       	ldi	r16, 0x60	; 96
    6dfc:	1a ee       	ldi	r17, 0xEA	; 234
    6dfe:	cc 24       	eor	r12, r12
    6e00:	dd 24       	eor	r13, r13
    6e02:	4c 2d       	mov	r20, r12
    6e04:	88 85       	ldd	r24, Y+8	; 0x08
    6e06:	8f 3f       	cpi	r24, 0xFF	; 255
    6e08:	09 f4       	brne	.+2      	; 0x6e0c <_nrk_scheduler+0x1d6>
    6e0a:	89 c0       	rjmp	.+274    	; 0x6f1e <_nrk_scheduler+0x2e8>
    6e0c:	1d 82       	std	Y+5, r1	; 0x05
    6e0e:	88 23       	and	r24, r24
    6e10:	91 f1       	breq	.+100    	; 0x6e76 <_nrk_scheduler+0x240>
    6e12:	89 85       	ldd	r24, Y+9	; 0x09
    6e14:	84 30       	cpi	r24, 0x04	; 4
    6e16:	79 f1       	breq	.+94     	; 0x6e76 <_nrk_scheduler+0x240>
    6e18:	2d 89       	ldd	r18, Y+21	; 0x15
    6e1a:	3e 89       	ldd	r19, Y+22	; 0x16
    6e1c:	80 91 36 0c 	lds	r24, 0x0C36
    6e20:	99 27       	eor	r25, r25
    6e22:	28 17       	cp	r18, r24
    6e24:	39 07       	cpc	r19, r25
    6e26:	28 f0       	brcs	.+10     	; 0x6e32 <_nrk_scheduler+0x1fc>
    6e28:	28 1b       	sub	r18, r24
    6e2a:	39 0b       	sbc	r19, r25
    6e2c:	3e 8b       	std	Y+22, r19	; 0x16
    6e2e:	2d 8b       	std	Y+21, r18	; 0x15
    6e30:	02 c0       	rjmp	.+4      	; 0x6e36 <_nrk_scheduler+0x200>
    6e32:	1e 8a       	std	Y+22, r1	; 0x16
    6e34:	1d 8a       	std	Y+21, r1	; 0x15
    6e36:	2f 89       	ldd	r18, Y+23	; 0x17
    6e38:	38 8d       	ldd	r19, Y+24	; 0x18
    6e3a:	28 17       	cp	r18, r24
    6e3c:	39 07       	cpc	r19, r25
    6e3e:	28 f0       	brcs	.+10     	; 0x6e4a <_nrk_scheduler+0x214>
    6e40:	28 1b       	sub	r18, r24
    6e42:	39 0b       	sbc	r19, r25
    6e44:	38 8f       	std	Y+24, r19	; 0x18
    6e46:	2f 8b       	std	Y+23, r18	; 0x17
    6e48:	0e c0       	rjmp	.+28     	; 0x6e66 <_nrk_scheduler+0x230>
    6e4a:	6b 8d       	ldd	r22, Y+27	; 0x1b
    6e4c:	7c 8d       	ldd	r23, Y+28	; 0x1c
    6e4e:	86 17       	cp	r24, r22
    6e50:	97 07       	cpc	r25, r23
    6e52:	28 f4       	brcc	.+10     	; 0x6e5e <_nrk_scheduler+0x228>
    6e54:	68 1b       	sub	r22, r24
    6e56:	79 0b       	sbc	r23, r25
    6e58:	78 8f       	std	Y+24, r23	; 0x18
    6e5a:	6f 8b       	std	Y+23, r22	; 0x17
    6e5c:	04 c0       	rjmp	.+8      	; 0x6e66 <_nrk_scheduler+0x230>
    6e5e:	0e 94 92 41 	call	0x8324	; 0x8324 <__udivmodhi4>
    6e62:	98 8f       	std	Y+24, r25	; 0x18
    6e64:	8f 8b       	std	Y+23, r24	; 0x17
    6e66:	8f 89       	ldd	r24, Y+23	; 0x17
    6e68:	98 8d       	ldd	r25, Y+24	; 0x18
    6e6a:	89 2b       	or	r24, r25
    6e6c:	21 f4       	brne	.+8      	; 0x6e76 <_nrk_scheduler+0x240>
    6e6e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    6e70:	9c 8d       	ldd	r25, Y+28	; 0x1c
    6e72:	98 8f       	std	Y+24, r25	; 0x18
    6e74:	8f 8b       	std	Y+23, r24	; 0x17
    6e76:	89 85       	ldd	r24, Y+9	; 0x09
    6e78:	83 30       	cpi	r24, 0x03	; 3
    6e7a:	09 f0       	breq	.+2      	; 0x6e7e <_nrk_scheduler+0x248>
    6e7c:	50 c0       	rjmp	.+160    	; 0x6f1e <_nrk_scheduler+0x2e8>
    6e7e:	8d 89       	ldd	r24, Y+21	; 0x15
    6e80:	9e 89       	ldd	r25, Y+22	; 0x16
    6e82:	89 2b       	or	r24, r25
    6e84:	09 f0       	breq	.+2      	; 0x6e88 <_nrk_scheduler+0x252>
    6e86:	43 c0       	rjmp	.+134    	; 0x6f0e <_nrk_scheduler+0x2d8>
    6e88:	8f 81       	ldd	r24, Y+7	; 0x07
    6e8a:	88 23       	and	r24, r24
    6e8c:	a1 f0       	breq	.+40     	; 0x6eb6 <_nrk_scheduler+0x280>
    6e8e:	8e 81       	ldd	r24, Y+6	; 0x06
    6e90:	88 23       	and	r24, r24
    6e92:	89 f0       	breq	.+34     	; 0x6eb6 <_nrk_scheduler+0x280>
    6e94:	81 e0       	ldi	r24, 0x01	; 1
    6e96:	90 e0       	ldi	r25, 0x00	; 0
    6e98:	a0 e0       	ldi	r26, 0x00	; 0
    6e9a:	b0 e0       	ldi	r27, 0x00	; 0
    6e9c:	00 90 aa 1b 	lds	r0, 0x1BAA
    6ea0:	04 c0       	rjmp	.+8      	; 0x6eaa <_nrk_scheduler+0x274>
    6ea2:	88 0f       	add	r24, r24
    6ea4:	99 1f       	adc	r25, r25
    6ea6:	aa 1f       	adc	r26, r26
    6ea8:	bb 1f       	adc	r27, r27
    6eaa:	0a 94       	dec	r0
    6eac:	d2 f7       	brpl	.-12     	; 0x6ea2 <_nrk_scheduler+0x26c>
    6eae:	89 8b       	std	Y+17, r24	; 0x11
    6eb0:	9a 8b       	std	Y+18, r25	; 0x12
    6eb2:	ab 8b       	std	Y+19, r26	; 0x13
    6eb4:	bc 8b       	std	Y+20, r27	; 0x14
    6eb6:	1f 82       	std	Y+7, r1	; 0x07
    6eb8:	1e 82       	std	Y+6, r1	; 0x06
    6eba:	1d 82       	std	Y+5, r1	; 0x05
    6ebc:	2f 8d       	ldd	r18, Y+31	; 0x1f
    6ebe:	38 a1       	ldd	r19, Y+32	; 0x20
    6ec0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    6ec2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    6ec4:	21 30       	cpi	r18, 0x01	; 1
    6ec6:	31 05       	cpc	r19, r1
    6ec8:	61 f4       	brne	.+24     	; 0x6ee2 <_nrk_scheduler+0x2ac>
    6eca:	9a 8f       	std	Y+26, r25	; 0x1a
    6ecc:	89 8f       	std	Y+25, r24	; 0x19
    6ece:	82 e0       	ldi	r24, 0x02	; 2
    6ed0:	89 87       	std	Y+9, r24	; 0x09
    6ed2:	8f 89       	ldd	r24, Y+23	; 0x17
    6ed4:	98 8d       	ldd	r25, Y+24	; 0x18
    6ed6:	9e 8b       	std	Y+22, r25	; 0x16
    6ed8:	8d 8b       	std	Y+21, r24	; 0x15
    6eda:	84 2f       	mov	r24, r20
    6edc:	0e 94 f4 2f 	call	0x5fe8	; 0x5fe8 <nrk_add_to_readyQ>
    6ee0:	16 c0       	rjmp	.+44     	; 0x6f0e <_nrk_scheduler+0x2d8>
    6ee2:	9a 8f       	std	Y+26, r25	; 0x1a
    6ee4:	89 8f       	std	Y+25, r24	; 0x19
    6ee6:	21 50       	subi	r18, 0x01	; 1
    6ee8:	30 40       	sbci	r19, 0x00	; 0
    6eea:	8b 8d       	ldd	r24, Y+27	; 0x1b
    6eec:	9c 8d       	ldd	r25, Y+28	; 0x1c
    6eee:	ac 01       	movw	r20, r24
    6ef0:	24 9f       	mul	r18, r20
    6ef2:	c0 01       	movw	r24, r0
    6ef4:	25 9f       	mul	r18, r21
    6ef6:	90 0d       	add	r25, r0
    6ef8:	34 9f       	mul	r19, r20
    6efa:	90 0d       	add	r25, r0
    6efc:	11 24       	eor	r1, r1
    6efe:	9e 8b       	std	Y+22, r25	; 0x16
    6f00:	8d 8b       	std	Y+21, r24	; 0x15
    6f02:	98 8f       	std	Y+24, r25	; 0x18
    6f04:	8f 8b       	std	Y+23, r24	; 0x17
    6f06:	81 e0       	ldi	r24, 0x01	; 1
    6f08:	90 e0       	ldi	r25, 0x00	; 0
    6f0a:	98 a3       	std	Y+32, r25	; 0x20
    6f0c:	8f 8f       	std	Y+31, r24	; 0x1f
    6f0e:	8d 89       	ldd	r24, Y+21	; 0x15
    6f10:	9e 89       	ldd	r25, Y+22	; 0x16
    6f12:	00 97       	sbiw	r24, 0x00	; 0
    6f14:	21 f0       	breq	.+8      	; 0x6f1e <_nrk_scheduler+0x2e8>
    6f16:	80 17       	cp	r24, r16
    6f18:	91 07       	cpc	r25, r17
    6f1a:	08 f4       	brcc	.+2      	; 0x6f1e <_nrk_scheduler+0x2e8>
    6f1c:	8c 01       	movw	r16, r24
    6f1e:	08 94       	sec
    6f20:	c1 1c       	adc	r12, r1
    6f22:	d1 1c       	adc	r13, r1
    6f24:	a1 96       	adiw	r28, 0x21	; 33
    6f26:	53 e0       	ldi	r21, 0x03	; 3
    6f28:	c5 16       	cp	r12, r21
    6f2a:	d1 04       	cpc	r13, r1
    6f2c:	09 f0       	breq	.+2      	; 0x6f30 <_nrk_scheduler+0x2fa>
    6f2e:	69 cf       	rjmp	.-302    	; 0x6e02 <_nrk_scheduler+0x1cc>
    6f30:	0e 94 e2 2f 	call	0x5fc4	; 0x5fc4 <nrk_get_high_ready_task_ID>
    6f34:	e8 2e       	mov	r14, r24
    6f36:	99 27       	eor	r25, r25
    6f38:	87 fd       	sbrc	r24, 7
    6f3a:	90 95       	com	r25
    6f3c:	fc 01       	movw	r30, r24
    6f3e:	25 e0       	ldi	r18, 0x05	; 5
    6f40:	ee 0f       	add	r30, r30
    6f42:	ff 1f       	adc	r31, r31
    6f44:	2a 95       	dec	r18
    6f46:	e1 f7       	brne	.-8      	; 0x6f40 <_nrk_scheduler+0x30a>
    6f48:	e8 0f       	add	r30, r24
    6f4a:	f9 1f       	adc	r31, r25
    6f4c:	e2 5c       	subi	r30, 0xC2	; 194
    6f4e:	f4 4e       	sbci	r31, 0xE4	; 228
    6f50:	42 85       	ldd	r20, Z+10	; 0x0a
    6f52:	40 93 bc 1b 	sts	0x1BBC, r20
    6f56:	81 e2       	ldi	r24, 0x21	; 33
    6f58:	6e 2d       	mov	r22, r14
    6f5a:	68 02       	muls	r22, r24
    6f5c:	90 01       	movw	r18, r0
    6f5e:	11 24       	eor	r1, r1
    6f60:	22 5c       	subi	r18, 0xC2	; 194
    6f62:	34 4e       	sbci	r19, 0xE4	; 228
    6f64:	30 93 ac 1b 	sts	0x1BAC, r19
    6f68:	20 93 ab 1b 	sts	0x1BAB, r18
    6f6c:	ee 20       	and	r14, r14
    6f6e:	91 f0       	breq	.+36     	; 0x6f94 <_nrk_scheduler+0x35e>
    6f70:	85 8d       	ldd	r24, Z+29	; 0x1d
    6f72:	96 8d       	ldd	r25, Z+30	; 0x1e
    6f74:	89 2b       	or	r24, r25
    6f76:	51 f0       	breq	.+20     	; 0x6f8c <_nrk_scheduler+0x356>
    6f78:	81 8d       	ldd	r24, Z+25	; 0x19
    6f7a:	92 8d       	ldd	r25, Z+26	; 0x1a
    6f7c:	8a 3f       	cpi	r24, 0xFA	; 250
    6f7e:	91 05       	cpc	r25, r1
    6f80:	28 f4       	brcc	.+10     	; 0x6f8c <_nrk_scheduler+0x356>
    6f82:	80 17       	cp	r24, r16
    6f84:	91 07       	cpc	r25, r17
    6f86:	e0 f4       	brcc	.+56     	; 0x6fc0 <_nrk_scheduler+0x38a>
    6f88:	8c 01       	movw	r16, r24
    6f8a:	1a c0       	rjmp	.+52     	; 0x6fc0 <_nrk_scheduler+0x38a>
    6f8c:	0b 3f       	cpi	r16, 0xFB	; 251
    6f8e:	11 05       	cpc	r17, r1
    6f90:	b8 f0       	brcs	.+46     	; 0x6fc0 <_nrk_scheduler+0x38a>
    6f92:	14 c0       	rjmp	.+40     	; 0x6fbc <_nrk_scheduler+0x386>
    6f94:	0b 30       	cpi	r16, 0x0B	; 11
    6f96:	11 05       	cpc	r17, r1
    6f98:	98 f0       	brcs	.+38     	; 0x6fc0 <_nrk_scheduler+0x38a>
    6f9a:	c8 01       	movw	r24, r16
    6f9c:	0a 97       	sbiw	r24, 0x0a	; 10
    6f9e:	8a 3f       	cpi	r24, 0xFA	; 250
    6fa0:	91 05       	cpc	r25, r1
    6fa2:	30 f4       	brcc	.+12     	; 0x6fb0 <_nrk_scheduler+0x37a>
    6fa4:	8c 01       	movw	r16, r24
    6fa6:	09 97       	sbiw	r24, 0x09	; 9
    6fa8:	58 f4       	brcc	.+22     	; 0x6fc0 <_nrk_scheduler+0x38a>
    6faa:	09 e0       	ldi	r16, 0x09	; 9
    6fac:	10 e0       	ldi	r17, 0x00	; 0
    6fae:	08 c0       	rjmp	.+16     	; 0x6fc0 <_nrk_scheduler+0x38a>
    6fb0:	05 50       	subi	r16, 0x05	; 5
    6fb2:	11 40       	sbci	r17, 0x01	; 1
    6fb4:	18 f4       	brcc	.+6      	; 0x6fbc <_nrk_scheduler+0x386>
    6fb6:	00 ef       	ldi	r16, 0xF0	; 240
    6fb8:	10 e0       	ldi	r17, 0x00	; 0
    6fba:	02 c0       	rjmp	.+4      	; 0x6fc0 <_nrk_scheduler+0x38a>
    6fbc:	0a ef       	ldi	r16, 0xFA	; 250
    6fbe:	10 e0       	ldi	r17, 0x00	; 0
    6fc0:	40 93 ad 1b 	sts	0x1BAD, r20
    6fc4:	30 93 bb 1b 	sts	0x1BBB, r19
    6fc8:	20 93 ba 1b 	sts	0x1BBA, r18
    6fcc:	00 93 36 0c 	sts	0x0C36, r16
    6fd0:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    6fd4:	99 27       	eor	r25, r25
    6fd6:	80 17       	cp	r24, r16
    6fd8:	91 07       	cpc	r25, r17
    6fda:	40 f0       	brcs	.+16     	; 0x6fec <_nrk_scheduler+0x3b6>
    6fdc:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <_nrk_os_timer_get>
    6fe0:	08 2f       	mov	r16, r24
    6fe2:	11 27       	eor	r17, r17
    6fe4:	0e 5f       	subi	r16, 0xFE	; 254
    6fe6:	1f 4f       	sbci	r17, 0xFF	; 255
    6fe8:	00 93 36 0c 	sts	0x0C36, r16
    6fec:	ee 20       	and	r14, r14
    6fee:	11 f0       	breq	.+4      	; 0x6ff4 <_nrk_scheduler+0x3be>
    6ff0:	10 92 ae 1b 	sts	0x1BAE, r1
    6ff4:	80 2f       	mov	r24, r16
    6ff6:	0e 94 83 39 	call	0x7306	; 0x7306 <_nrk_set_next_wakeup>
    6ffa:	6e ee       	ldi	r22, 0xEE	; 238
    6ffc:	72 e0       	ldi	r23, 0x02	; 2
    6ffe:	c4 01       	movw	r24, r8
    7000:	0e 94 77 3a 	call	0x74ee	; 0x74ee <nrk_high_speed_timer_wait>
    7004:	0e 94 11 3d 	call	0x7a22	; 0x7a22 <nrk_stack_pointer_restore>
    7008:	0e 94 3e 3d 	call	0x7a7c	; 0x7a7c <nrk_start_high_ready_task>
    700c:	df 91       	pop	r29
    700e:	cf 91       	pop	r28
    7010:	1f 91       	pop	r17
    7012:	0f 91       	pop	r16
    7014:	ff 90       	pop	r15
    7016:	ef 90       	pop	r14
    7018:	df 90       	pop	r13
    701a:	cf 90       	pop	r12
    701c:	bf 90       	pop	r11
    701e:	af 90       	pop	r10
    7020:	9f 90       	pop	r9
    7022:	8f 90       	pop	r8
    7024:	08 95       	ret

00007026 <nrk_register_driver>:
    7026:	20 91 d1 1b 	lds	r18, 0x1BD1
    702a:	12 16       	cp	r1, r18
    702c:	1c f4       	brge	.+6      	; 0x7034 <nrk_register_driver+0xe>
    702e:	8f ef       	ldi	r24, 0xFF	; 255
    7030:	9f ef       	ldi	r25, 0xFF	; 255
    7032:	08 95       	ret
    7034:	e2 2f       	mov	r30, r18
    7036:	ff 27       	eor	r31, r31
    7038:	e7 fd       	sbrc	r30, 7
    703a:	f0 95       	com	r31
    703c:	ee 0f       	add	r30, r30
    703e:	ff 1f       	adc	r31, r31
    7040:	ee 0f       	add	r30, r30
    7042:	ff 1f       	adc	r31, r31
    7044:	df 01       	movw	r26, r30
    7046:	ae 52       	subi	r26, 0x2E	; 46
    7048:	b4 4e       	sbci	r27, 0xE4	; 228
    704a:	6c 93       	st	X, r22
    704c:	ec 52       	subi	r30, 0x2C	; 44
    704e:	f4 4e       	sbci	r31, 0xE4	; 228
    7050:	91 83       	std	Z+1, r25	; 0x01
    7052:	80 83       	st	Z, r24
    7054:	2f 5f       	subi	r18, 0xFF	; 255
    7056:	20 93 d1 1b 	sts	0x1BD1, r18
    705a:	81 e0       	ldi	r24, 0x01	; 1
    705c:	90 e0       	ldi	r25, 0x00	; 0
    705e:	08 95       	ret

00007060 <nrk_open>:
    7060:	0f 93       	push	r16
    7062:	1f 93       	push	r17
    7064:	cf 93       	push	r28
    7066:	df 93       	push	r29
    7068:	06 2f       	mov	r16, r22
    706a:	90 91 d1 1b 	lds	r25, 0x1BD1
    706e:	a9 2f       	mov	r26, r25
    7070:	bb 27       	eor	r27, r27
    7072:	a7 fd       	sbrc	r26, 7
    7074:	b0 95       	com	r27
    7076:	40 e0       	ldi	r20, 0x00	; 0
    7078:	50 e0       	ldi	r21, 0x00	; 0
    707a:	68 2f       	mov	r22, r24
    707c:	77 27       	eor	r23, r23
    707e:	34 c0       	rjmp	.+104    	; 0x70e8 <nrk_open+0x88>
    7080:	4f 5f       	subi	r20, 0xFF	; 255
    7082:	5f 4f       	sbci	r21, 0xFF	; 255
    7084:	e9 01       	movw	r28, r18
    7086:	cc 0f       	add	r28, r28
    7088:	dd 1f       	adc	r29, r29
    708a:	cc 0f       	add	r28, r28
    708c:	dd 1f       	adc	r29, r29
    708e:	fe 01       	movw	r30, r28
    7090:	ee 52       	subi	r30, 0x2E	; 46
    7092:	f4 4e       	sbci	r31, 0xE4	; 228
    7094:	80 81       	ld	r24, Z
    7096:	99 27       	eor	r25, r25
    7098:	87 fd       	sbrc	r24, 7
    709a:	90 95       	com	r25
    709c:	86 17       	cp	r24, r22
    709e:	97 07       	cpc	r25, r23
    70a0:	19 f5       	brne	.+70     	; 0x70e8 <nrk_open+0x88>
    70a2:	f9 01       	movw	r30, r18
    70a4:	ea 52       	subi	r30, 0x2A	; 42
    70a6:	f4 4e       	sbci	r31, 0xE4	; 228
    70a8:	80 81       	ld	r24, Z
    70aa:	88 23       	and	r24, r24
    70ac:	71 f4       	brne	.+28     	; 0x70ca <nrk_open+0x6a>
    70ae:	81 e0       	ldi	r24, 0x01	; 1
    70b0:	80 83       	st	Z, r24
    70b2:	fe 01       	movw	r30, r28
    70b4:	ec 52       	subi	r30, 0x2C	; 44
    70b6:	f4 4e       	sbci	r31, 0xE4	; 228
    70b8:	01 90       	ld	r0, Z+
    70ba:	f0 81       	ld	r31, Z
    70bc:	e0 2d       	mov	r30, r0
    70be:	20 e0       	ldi	r18, 0x00	; 0
    70c0:	40 e0       	ldi	r20, 0x00	; 0
    70c2:	50 e0       	ldi	r21, 0x00	; 0
    70c4:	60 2f       	mov	r22, r16
    70c6:	80 e0       	ldi	r24, 0x00	; 0
    70c8:	09 95       	icall
    70ca:	cc 52       	subi	r28, 0x2C	; 44
    70cc:	d4 4e       	sbci	r29, 0xE4	; 228
    70ce:	e8 81       	ld	r30, Y
    70d0:	f9 81       	ldd	r31, Y+1	; 0x01
    70d2:	20 e0       	ldi	r18, 0x00	; 0
    70d4:	40 e0       	ldi	r20, 0x00	; 0
    70d6:	50 e0       	ldi	r21, 0x00	; 0
    70d8:	60 2f       	mov	r22, r16
    70da:	81 e0       	ldi	r24, 0x01	; 1
    70dc:	09 95       	icall
    70de:	81 2f       	mov	r24, r17
    70e0:	99 27       	eor	r25, r25
    70e2:	87 fd       	sbrc	r24, 7
    70e4:	90 95       	com	r25
    70e6:	08 c0       	rjmp	.+16     	; 0x70f8 <nrk_open+0x98>
    70e8:	14 2f       	mov	r17, r20
    70ea:	24 2f       	mov	r18, r20
    70ec:	33 27       	eor	r19, r19
    70ee:	2a 17       	cp	r18, r26
    70f0:	3b 07       	cpc	r19, r27
    70f2:	34 f2       	brlt	.-116    	; 0x7080 <nrk_open+0x20>
    70f4:	8f ef       	ldi	r24, 0xFF	; 255
    70f6:	9f ef       	ldi	r25, 0xFF	; 255
    70f8:	df 91       	pop	r29
    70fa:	cf 91       	pop	r28
    70fc:	1f 91       	pop	r17
    70fe:	0f 91       	pop	r16
    7100:	08 95       	ret

00007102 <nrk_get_status>:
    7102:	e8 2f       	mov	r30, r24
    7104:	ff 27       	eor	r31, r31
    7106:	80 91 d1 1b 	lds	r24, 0x1BD1
    710a:	99 27       	eor	r25, r25
    710c:	87 fd       	sbrc	r24, 7
    710e:	90 95       	com	r25
    7110:	8e 17       	cp	r24, r30
    7112:	9f 07       	cpc	r25, r31
    7114:	34 f4       	brge	.+12     	; 0x7122 <nrk_get_status+0x20>
    7116:	81 e0       	ldi	r24, 0x01	; 1
    7118:	0e 94 f8 2a 	call	0x55f0	; 0x55f0 <_nrk_errno_set>
    711c:	8f ef       	ldi	r24, 0xFF	; 255
    711e:	9f ef       	ldi	r25, 0xFF	; 255
    7120:	08 95       	ret
    7122:	ee 0f       	add	r30, r30
    7124:	ff 1f       	adc	r31, r31
    7126:	ee 0f       	add	r30, r30
    7128:	ff 1f       	adc	r31, r31
    712a:	ec 52       	subi	r30, 0x2C	; 44
    712c:	f4 4e       	sbci	r31, 0xE4	; 228
    712e:	01 90       	ld	r0, Z+
    7130:	f0 81       	ld	r31, Z
    7132:	e0 2d       	mov	r30, r0
    7134:	20 e0       	ldi	r18, 0x00	; 0
    7136:	40 e0       	ldi	r20, 0x00	; 0
    7138:	50 e0       	ldi	r21, 0x00	; 0
    713a:	83 e0       	ldi	r24, 0x03	; 3
    713c:	09 95       	icall
    713e:	99 27       	eor	r25, r25
    7140:	87 fd       	sbrc	r24, 7
    7142:	90 95       	com	r25
    7144:	08 95       	ret

00007146 <nrk_set_status>:
    7146:	24 2f       	mov	r18, r20
    7148:	e8 2f       	mov	r30, r24
    714a:	ff 27       	eor	r31, r31
    714c:	80 91 d1 1b 	lds	r24, 0x1BD1
    7150:	99 27       	eor	r25, r25
    7152:	87 fd       	sbrc	r24, 7
    7154:	90 95       	com	r25
    7156:	8e 17       	cp	r24, r30
    7158:	9f 07       	cpc	r25, r31
    715a:	34 f4       	brge	.+12     	; 0x7168 <nrk_set_status+0x22>
    715c:	81 e0       	ldi	r24, 0x01	; 1
    715e:	0e 94 f8 2a 	call	0x55f0	; 0x55f0 <_nrk_errno_set>
    7162:	8f ef       	ldi	r24, 0xFF	; 255
    7164:	9f ef       	ldi	r25, 0xFF	; 255
    7166:	08 95       	ret
    7168:	ee 0f       	add	r30, r30
    716a:	ff 1f       	adc	r31, r31
    716c:	ee 0f       	add	r30, r30
    716e:	ff 1f       	adc	r31, r31
    7170:	ec 52       	subi	r30, 0x2C	; 44
    7172:	f4 4e       	sbci	r31, 0xE4	; 228
    7174:	01 90       	ld	r0, Z+
    7176:	f0 81       	ld	r31, Z
    7178:	e0 2d       	mov	r30, r0
    717a:	40 e0       	ldi	r20, 0x00	; 0
    717c:	50 e0       	ldi	r21, 0x00	; 0
    717e:	84 e0       	ldi	r24, 0x04	; 4
    7180:	09 95       	icall
    7182:	99 27       	eor	r25, r25
    7184:	87 fd       	sbrc	r24, 7
    7186:	90 95       	com	r25
    7188:	08 95       	ret

0000718a <nrk_read>:
    718a:	24 2f       	mov	r18, r20
    718c:	e8 2f       	mov	r30, r24
    718e:	ff 27       	eor	r31, r31
    7190:	80 91 d1 1b 	lds	r24, 0x1BD1
    7194:	99 27       	eor	r25, r25
    7196:	87 fd       	sbrc	r24, 7
    7198:	90 95       	com	r25
    719a:	8e 17       	cp	r24, r30
    719c:	9f 07       	cpc	r25, r31
    719e:	34 f4       	brge	.+12     	; 0x71ac <nrk_read+0x22>
    71a0:	81 e0       	ldi	r24, 0x01	; 1
    71a2:	0e 94 f8 2a 	call	0x55f0	; 0x55f0 <_nrk_errno_set>
    71a6:	8f ef       	ldi	r24, 0xFF	; 255
    71a8:	9f ef       	ldi	r25, 0xFF	; 255
    71aa:	08 95       	ret
    71ac:	ee 0f       	add	r30, r30
    71ae:	ff 1f       	adc	r31, r31
    71b0:	ee 0f       	add	r30, r30
    71b2:	ff 1f       	adc	r31, r31
    71b4:	ec 52       	subi	r30, 0x2C	; 44
    71b6:	f4 4e       	sbci	r31, 0xE4	; 228
    71b8:	01 90       	ld	r0, Z+
    71ba:	f0 81       	ld	r31, Z
    71bc:	e0 2d       	mov	r30, r0
    71be:	ab 01       	movw	r20, r22
    71c0:	60 e0       	ldi	r22, 0x00	; 0
    71c2:	85 e0       	ldi	r24, 0x05	; 5
    71c4:	09 95       	icall
    71c6:	99 27       	eor	r25, r25
    71c8:	87 fd       	sbrc	r24, 7
    71ca:	90 95       	com	r25
    71cc:	08 95       	ret

000071ce <nrk_write>:
    71ce:	24 2f       	mov	r18, r20
    71d0:	e8 2f       	mov	r30, r24
    71d2:	ff 27       	eor	r31, r31
    71d4:	80 91 d1 1b 	lds	r24, 0x1BD1
    71d8:	99 27       	eor	r25, r25
    71da:	87 fd       	sbrc	r24, 7
    71dc:	90 95       	com	r25
    71de:	8e 17       	cp	r24, r30
    71e0:	9f 07       	cpc	r25, r31
    71e2:	34 f4       	brge	.+12     	; 0x71f0 <nrk_write+0x22>
    71e4:	81 e0       	ldi	r24, 0x01	; 1
    71e6:	0e 94 f8 2a 	call	0x55f0	; 0x55f0 <_nrk_errno_set>
    71ea:	8f ef       	ldi	r24, 0xFF	; 255
    71ec:	9f ef       	ldi	r25, 0xFF	; 255
    71ee:	08 95       	ret
    71f0:	ee 0f       	add	r30, r30
    71f2:	ff 1f       	adc	r31, r31
    71f4:	ee 0f       	add	r30, r30
    71f6:	ff 1f       	adc	r31, r31
    71f8:	ec 52       	subi	r30, 0x2C	; 44
    71fa:	f4 4e       	sbci	r31, 0xE4	; 228
    71fc:	01 90       	ld	r0, Z+
    71fe:	f0 81       	ld	r31, Z
    7200:	e0 2d       	mov	r30, r0
    7202:	ab 01       	movw	r20, r22
    7204:	60 e0       	ldi	r22, 0x00	; 0
    7206:	86 e0       	ldi	r24, 0x06	; 6
    7208:	09 95       	icall
    720a:	99 27       	eor	r25, r25
    720c:	87 fd       	sbrc	r24, 7
    720e:	90 95       	com	r25
    7210:	08 95       	ret

00007212 <nrk_close>:
    7212:	e8 2f       	mov	r30, r24
    7214:	ff 27       	eor	r31, r31
    7216:	80 91 d1 1b 	lds	r24, 0x1BD1
    721a:	99 27       	eor	r25, r25
    721c:	87 fd       	sbrc	r24, 7
    721e:	90 95       	com	r25
    7220:	8e 17       	cp	r24, r30
    7222:	9f 07       	cpc	r25, r31
    7224:	34 f4       	brge	.+12     	; 0x7232 <nrk_close+0x20>
    7226:	81 e0       	ldi	r24, 0x01	; 1
    7228:	0e 94 f8 2a 	call	0x55f0	; 0x55f0 <_nrk_errno_set>
    722c:	8f ef       	ldi	r24, 0xFF	; 255
    722e:	9f ef       	ldi	r25, 0xFF	; 255
    7230:	08 95       	ret
    7232:	ee 0f       	add	r30, r30
    7234:	ff 1f       	adc	r31, r31
    7236:	ee 0f       	add	r30, r30
    7238:	ff 1f       	adc	r31, r31
    723a:	ec 52       	subi	r30, 0x2C	; 44
    723c:	f4 4e       	sbci	r31, 0xE4	; 228
    723e:	01 90       	ld	r0, Z+
    7240:	f0 81       	ld	r31, Z
    7242:	e0 2d       	mov	r30, r0
    7244:	20 e0       	ldi	r18, 0x00	; 0
    7246:	40 e0       	ldi	r20, 0x00	; 0
    7248:	50 e0       	ldi	r21, 0x00	; 0
    724a:	60 e0       	ldi	r22, 0x00	; 0
    724c:	82 e0       	ldi	r24, 0x02	; 2
    724e:	09 95       	icall
    7250:	99 27       	eor	r25, r25
    7252:	87 fd       	sbrc	r24, 7
    7254:	90 95       	com	r25
    7256:	08 95       	ret

00007258 <nrk_spin_wait_us>:
	...
//      returns.
//-------------------------------------------------------------------------------------------------------
void halRfWaitForCrystalOscillator(void) {
    uint8_t spiStatusByte;

    // Poll the SPI status byte until the crystal oscillator is stable
    7260:	01 97       	sbiw	r24, 0x01	; 1
    7262:	d1 f7       	brne	.-12     	; 0x7258 <nrk_spin_wait_us>
    7264:	08 95       	ret

00007266 <_nrk_high_speed_timer_stop>:
    7266:	10 92 81 00 	sts	0x0081, r1
    726a:	08 95       	ret

0000726c <_nrk_high_speed_timer_start>:
    726c:	81 e0       	ldi	r24, 0x01	; 1
    726e:	80 93 81 00 	sts	0x0081, r24
    7272:	08 95       	ret

00007274 <_nrk_high_speed_timer_reset>:
    7274:	83 b5       	in	r24, 0x23	; 35
    7276:	81 60       	ori	r24, 0x01	; 1
    7278:	83 bd       	out	0x23, r24	; 35
    727a:	10 92 85 00 	sts	0x0085, r1
    727e:	10 92 84 00 	sts	0x0084, r1
    7282:	08 95       	ret

00007284 <_nrk_high_speed_timer_get>:
    7284:	cf 93       	push	r28
    7286:	df 93       	push	r29
    7288:	cd b7       	in	r28, 0x3d	; 61
    728a:	de b7       	in	r29, 0x3e	; 62
    728c:	22 97       	sbiw	r28, 0x02	; 2
    728e:	0f b6       	in	r0, 0x3f	; 63
    7290:	f8 94       	cli
    7292:	de bf       	out	0x3e, r29	; 62
    7294:	0f be       	out	0x3f, r0	; 63
    7296:	cd bf       	out	0x3d, r28	; 61
    7298:	80 91 84 00 	lds	r24, 0x0084
    729c:	90 91 85 00 	lds	r25, 0x0085
    72a0:	9a 83       	std	Y+2, r25	; 0x02
    72a2:	89 83       	std	Y+1, r24	; 0x01
    72a4:	89 81       	ldd	r24, Y+1	; 0x01
    72a6:	9a 81       	ldd	r25, Y+2	; 0x02
    72a8:	22 96       	adiw	r28, 0x02	; 2
    72aa:	0f b6       	in	r0, 0x3f	; 63
    72ac:	f8 94       	cli
    72ae:	de bf       	out	0x3e, r29	; 62
    72b0:	0f be       	out	0x3f, r0	; 63
    72b2:	cd bf       	out	0x3d, r28	; 61
    72b4:	df 91       	pop	r29
    72b6:	cf 91       	pop	r28
    72b8:	08 95       	ret

000072ba <_nrk_os_timer_stop>:
    72ba:	10 92 b1 00 	sts	0x00B1, r1
    72be:	e0 e7       	ldi	r30, 0x70	; 112
    72c0:	f0 e0       	ldi	r31, 0x00	; 0
    72c2:	80 81       	ld	r24, Z
    72c4:	8d 7f       	andi	r24, 0xFD	; 253
    72c6:	80 83       	st	Z, r24
    72c8:	80 81       	ld	r24, Z
    72ca:	8e 7f       	andi	r24, 0xFE	; 254
    72cc:	80 83       	st	Z, r24
    72ce:	08 95       	ret

000072d0 <_nrk_os_timer_set>:
    72d0:	80 93 b2 00 	sts	0x00B2, r24
    72d4:	08 95       	ret

000072d6 <_nrk_os_timer_start>:
    72d6:	e0 e7       	ldi	r30, 0x70	; 112
    72d8:	f0 e0       	ldi	r31, 0x00	; 0
    72da:	80 81       	ld	r24, Z
    72dc:	83 60       	ori	r24, 0x03	; 3
    72de:	80 83       	st	Z, r24
    72e0:	83 e0       	ldi	r24, 0x03	; 3
    72e2:	80 93 b1 00 	sts	0x00B1, r24
    72e6:	08 95       	ret

000072e8 <_nrk_os_timer_reset>:
    72e8:	83 b5       	in	r24, 0x23	; 35
    72ea:	82 60       	ori	r24, 0x02	; 2
    72ec:	83 bd       	out	0x23, r24	; 35
    72ee:	10 92 b2 00 	sts	0x00B2, r1
    72f2:	10 92 d6 0b 	sts	0x0BD6, r1
    72f6:	10 92 36 0c 	sts	0x0C36, r1
    72fa:	08 95       	ret

000072fc <_nrk_get_next_wakeup>:
    72fc:	80 91 b3 00 	lds	r24, 0x00B3
    7300:	8f 5f       	subi	r24, 0xFF	; 255
    7302:	99 27       	eor	r25, r25
    7304:	08 95       	ret

00007306 <_nrk_set_next_wakeup>:
    7306:	81 50       	subi	r24, 0x01	; 1
    7308:	80 93 b3 00 	sts	0x00B3, r24
    730c:	08 95       	ret

0000730e <nrk_timer_int_stop>:
    730e:	88 23       	and	r24, r24
    7310:	11 f4       	brne	.+4      	; 0x7316 <nrk_timer_int_stop+0x8>
    7312:	10 92 71 00 	sts	0x0071, r1
    7316:	8f ef       	ldi	r24, 0xFF	; 255
    7318:	9f ef       	ldi	r25, 0xFF	; 255
    731a:	08 95       	ret

0000731c <nrk_timer_int_reset>:
    731c:	88 23       	and	r24, r24
    731e:	19 f0       	breq	.+6      	; 0x7326 <nrk_timer_int_reset+0xa>
    7320:	8f ef       	ldi	r24, 0xFF	; 255
    7322:	9f ef       	ldi	r25, 0xFF	; 255
    7324:	08 95       	ret
    7326:	10 92 95 00 	sts	0x0095, r1
    732a:	10 92 94 00 	sts	0x0094, r1
    732e:	81 e0       	ldi	r24, 0x01	; 1
    7330:	90 e0       	ldi	r25, 0x00	; 0
    7332:	08 95       	ret

00007334 <nrk_timer_int_read>:
    7334:	88 23       	and	r24, r24
    7336:	19 f0       	breq	.+6      	; 0x733e <nrk_timer_int_read+0xa>
    7338:	80 e0       	ldi	r24, 0x00	; 0
    733a:	90 e0       	ldi	r25, 0x00	; 0
    733c:	08 95       	ret
    733e:	80 91 94 00 	lds	r24, 0x0094
    7342:	90 91 95 00 	lds	r25, 0x0095
    7346:	08 95       	ret

00007348 <nrk_timer_int_start>:
    7348:	88 23       	and	r24, r24
    734a:	19 f0       	breq	.+6      	; 0x7352 <nrk_timer_int_start+0xa>
    734c:	8f ef       	ldi	r24, 0xFF	; 255
    734e:	9f ef       	ldi	r25, 0xFF	; 255
    7350:	08 95       	ret
    7352:	82 e0       	ldi	r24, 0x02	; 2
    7354:	80 93 71 00 	sts	0x0071, r24
    7358:	81 e0       	ldi	r24, 0x01	; 1
    735a:	90 e0       	ldi	r25, 0x00	; 0
    735c:	08 95       	ret

0000735e <nrk_timer_int_configure>:
    735e:	88 23       	and	r24, r24
    7360:	19 f0       	breq	.+6      	; 0x7368 <nrk_timer_int_configure+0xa>
    7362:	8f ef       	ldi	r24, 0xFF	; 255
    7364:	9f ef       	ldi	r25, 0xFF	; 255
    7366:	08 95       	ret
    7368:	cb 01       	movw	r24, r22
    736a:	01 97       	sbiw	r24, 0x01	; 1
    736c:	05 97       	sbiw	r24, 0x05	; 5
    736e:	10 f4       	brcc	.+4      	; 0x7374 <nrk_timer_int_configure+0x16>
    7370:	60 93 24 0c 	sts	0x0C24, r22
    7374:	10 92 90 00 	sts	0x0090, r1
    7378:	88 e0       	ldi	r24, 0x08	; 8
    737a:	80 93 91 00 	sts	0x0091, r24
    737e:	85 2f       	mov	r24, r21
    7380:	99 27       	eor	r25, r25
    7382:	80 93 99 00 	sts	0x0099, r24
    7386:	40 93 98 00 	sts	0x0098, r20
    738a:	30 93 c8 0b 	sts	0x0BC8, r19
    738e:	20 93 c7 0b 	sts	0x0BC7, r18
    7392:	80 91 24 0c 	lds	r24, 0x0C24
    7396:	81 30       	cpi	r24, 0x01	; 1
    7398:	21 f4       	brne	.+8      	; 0x73a2 <nrk_timer_int_configure+0x44>
    739a:	80 91 91 00 	lds	r24, 0x0091
    739e:	81 60       	ori	r24, 0x01	; 1
    73a0:	0b c0       	rjmp	.+22     	; 0x73b8 <nrk_timer_int_configure+0x5a>
    73a2:	82 30       	cpi	r24, 0x02	; 2
    73a4:	21 f4       	brne	.+8      	; 0x73ae <nrk_timer_int_configure+0x50>
    73a6:	80 91 91 00 	lds	r24, 0x0091
    73aa:	82 60       	ori	r24, 0x02	; 2
    73ac:	05 c0       	rjmp	.+10     	; 0x73b8 <nrk_timer_int_configure+0x5a>
    73ae:	83 30       	cpi	r24, 0x03	; 3
    73b0:	31 f4       	brne	.+12     	; 0x73be <nrk_timer_int_configure+0x60>
    73b2:	80 91 91 00 	lds	r24, 0x0091
    73b6:	83 60       	ori	r24, 0x03	; 3
    73b8:	80 93 91 00 	sts	0x0091, r24
    73bc:	08 c0       	rjmp	.+16     	; 0x73ce <nrk_timer_int_configure+0x70>
    73be:	84 30       	cpi	r24, 0x04	; 4
    73c0:	21 f4       	brne	.+8      	; 0x73ca <nrk_timer_int_configure+0x6c>
    73c2:	80 91 91 00 	lds	r24, 0x0091
    73c6:	84 60       	ori	r24, 0x04	; 4
    73c8:	f7 cf       	rjmp	.-18     	; 0x73b8 <nrk_timer_int_configure+0x5a>
    73ca:	85 30       	cpi	r24, 0x05	; 5
    73cc:	19 f0       	breq	.+6      	; 0x73d4 <nrk_timer_int_configure+0x76>
    73ce:	81 e0       	ldi	r24, 0x01	; 1
    73d0:	90 e0       	ldi	r25, 0x00	; 0
    73d2:	08 95       	ret
    73d4:	80 91 91 00 	lds	r24, 0x0091
    73d8:	85 60       	ori	r24, 0x05	; 5
    73da:	80 93 91 00 	sts	0x0091, r24
    73de:	81 e0       	ldi	r24, 0x01	; 1
    73e0:	90 e0       	ldi	r25, 0x00	; 0
    73e2:	08 95       	ret

000073e4 <_nrk_os_timer_get>:
    73e4:	80 91 b2 00 	lds	r24, 0x00B2
    73e8:	99 27       	eor	r25, r25
    73ea:	08 95       	ret

000073ec <__vector_13>:
    73ec:	0f 92       	push	r0
    73ee:	0f b6       	in	r0, 0x3f	; 63
    73f0:	0f 92       	push	r0
    73f2:	1f 92       	push	r1
    73f4:	2f 92       	push	r2
    73f6:	3f 92       	push	r3
    73f8:	4f 92       	push	r4
    73fa:	5f 92       	push	r5
    73fc:	6f 92       	push	r6
    73fe:	7f 92       	push	r7
    7400:	8f 92       	push	r8
    7402:	9f 92       	push	r9
    7404:	af 92       	push	r10
    7406:	bf 92       	push	r11
    7408:	cf 92       	push	r12
    740a:	df 92       	push	r13
    740c:	ef 92       	push	r14
    740e:	ff 92       	push	r15
    7410:	0f 93       	push	r16
    7412:	1f 93       	push	r17
    7414:	2f 93       	push	r18
    7416:	3f 93       	push	r19
    7418:	4f 93       	push	r20
    741a:	5f 93       	push	r21
    741c:	6f 93       	push	r22
    741e:	7f 93       	push	r23
    7420:	8f 93       	push	r24
    7422:	9f 93       	push	r25
    7424:	af 93       	push	r26
    7426:	bf 93       	push	r27
    7428:	cf 93       	push	r28
    742a:	df 93       	push	r29
    742c:	ef 93       	push	r30
    742e:	ff 93       	push	r31
    7430:	a0 91 ba 1b 	lds	r26, 0x1BBA
    7434:	b0 91 bb 1b 	lds	r27, 0x1BBB
    7438:	0d b6       	in	r0, 0x3d	; 61
    743a:	0d 92       	st	X+, r0
    743c:	0e b6       	in	r0, 0x3e	; 62
    743e:	0d 92       	st	X+, r0
    7440:	1f 92       	push	r1
    7442:	a0 91 a5 0a 	lds	r26, 0x0AA5
    7446:	b0 91 a6 0a 	lds	r27, 0x0AA6
    744a:	1e 90       	ld	r1, -X
    744c:	be bf       	out	0x3e, r27	; 62
    744e:	ad bf       	out	0x3d, r26	; 61
    7450:	08 95       	ret

00007452 <__vector_17>:
    7452:	1f 92       	push	r1
    7454:	0f 92       	push	r0
    7456:	0f b6       	in	r0, 0x3f	; 63
    7458:	0f 92       	push	r0
    745a:	11 24       	eor	r1, r1
    745c:	0f 90       	pop	r0
    745e:	0f be       	out	0x3f, r0	; 63
    7460:	0f 90       	pop	r0
    7462:	1f 90       	pop	r1
    7464:	18 95       	reti

00007466 <__vector_32>:
    7466:	1f 92       	push	r1
    7468:	0f 92       	push	r0
    746a:	0f b6       	in	r0, 0x3f	; 63
    746c:	0f 92       	push	r0
    746e:	11 24       	eor	r1, r1
    7470:	2f 93       	push	r18
    7472:	3f 93       	push	r19
    7474:	4f 93       	push	r20
    7476:	5f 93       	push	r21
    7478:	6f 93       	push	r22
    747a:	7f 93       	push	r23
    747c:	8f 93       	push	r24
    747e:	9f 93       	push	r25
    7480:	af 93       	push	r26
    7482:	bf 93       	push	r27
    7484:	ef 93       	push	r30
    7486:	ff 93       	push	r31
    7488:	e0 91 c7 0b 	lds	r30, 0x0BC7
    748c:	f0 91 c8 0b 	lds	r31, 0x0BC8
    7490:	30 97       	sbiw	r30, 0x00	; 0
    7492:	11 f0       	breq	.+4      	; 0x7498 <__vector_32+0x32>
    7494:	09 95       	icall
    7496:	04 c0       	rjmp	.+8      	; 0x74a0 <__vector_32+0x3a>
    7498:	60 e0       	ldi	r22, 0x00	; 0
    749a:	8a e0       	ldi	r24, 0x0A	; 10
    749c:	0e 94 bd 2b 	call	0x577a	; 0x577a <nrk_kernel_error_add>
    74a0:	ff 91       	pop	r31
    74a2:	ef 91       	pop	r30
    74a4:	bf 91       	pop	r27
    74a6:	af 91       	pop	r26
    74a8:	9f 91       	pop	r25
    74aa:	8f 91       	pop	r24
    74ac:	7f 91       	pop	r23
    74ae:	6f 91       	pop	r22
    74b0:	5f 91       	pop	r21
    74b2:	4f 91       	pop	r20
    74b4:	3f 91       	pop	r19
    74b6:	2f 91       	pop	r18
    74b8:	0f 90       	pop	r0
    74ba:	0f be       	out	0x3f, r0	; 63
    74bc:	0f 90       	pop	r0
    74be:	1f 90       	pop	r1
    74c0:	18 95       	reti

000074c2 <__vector_default>:
    74c2:	1f 92       	push	r1
    74c4:	0f 92       	push	r0
    74c6:	0f b6       	in	r0, 0x3f	; 63
    74c8:	0f 92       	push	r0
    74ca:	11 24       	eor	r1, r1
    74cc:	2f 93       	push	r18
    74ce:	3f 93       	push	r19
    74d0:	4f 93       	push	r20
    74d2:	5f 93       	push	r21
    74d4:	6f 93       	push	r22
    74d6:	7f 93       	push	r23
    74d8:	8f 93       	push	r24
    74da:	9f 93       	push	r25
    74dc:	af 93       	push	r26
    74de:	bf 93       	push	r27
    74e0:	ef 93       	push	r30
    74e2:	ff 93       	push	r31
    74e4:	60 e0       	ldi	r22, 0x00	; 0
    74e6:	8a e0       	ldi	r24, 0x0A	; 10
    74e8:	0e 94 bd 2b 	call	0x577a	; 0x577a <nrk_kernel_error_add>
    74ec:	ff cf       	rjmp	.-2      	; 0x74ec <__vector_default+0x2a>

000074ee <nrk_high_speed_timer_wait>:
    74ee:	cf 93       	push	r28
    74f0:	df 93       	push	r29
    74f2:	cd b7       	in	r28, 0x3d	; 61
    74f4:	de b7       	in	r29, 0x3e	; 62
    74f6:	22 97       	sbiw	r28, 0x02	; 2
    74f8:	0f b6       	in	r0, 0x3f	; 63
    74fa:	f8 94       	cli
    74fc:	de bf       	out	0x3e, r29	; 62
    74fe:	0f be       	out	0x3f, r0	; 63
    7500:	cd bf       	out	0x3d, r28	; 61
    7502:	fc 01       	movw	r30, r24
    7504:	8f ef       	ldi	r24, 0xFF	; 255
    7506:	e9 37       	cpi	r30, 0x79	; 121
    7508:	f8 07       	cpc	r31, r24
    750a:	10 f0       	brcs	.+4      	; 0x7510 <nrk_high_speed_timer_wait+0x22>
    750c:	e0 e0       	ldi	r30, 0x00	; 0
    750e:	f0 e0       	ldi	r31, 0x00	; 0
    7510:	9f 01       	movw	r18, r30
    7512:	44 27       	eor	r20, r20
    7514:	55 27       	eor	r21, r21
    7516:	cb 01       	movw	r24, r22
    7518:	aa 27       	eor	r26, r26
    751a:	bb 27       	eor	r27, r27
    751c:	28 0f       	add	r18, r24
    751e:	39 1f       	adc	r19, r25
    7520:	4a 1f       	adc	r20, r26
    7522:	5b 1f       	adc	r21, r27
    7524:	21 30       	cpi	r18, 0x01	; 1
    7526:	80 e0       	ldi	r24, 0x00	; 0
    7528:	38 07       	cpc	r19, r24
    752a:	81 e0       	ldi	r24, 0x01	; 1
    752c:	48 07       	cpc	r20, r24
    752e:	80 e0       	ldi	r24, 0x00	; 0
    7530:	58 07       	cpc	r21, r24
    7532:	78 f0       	brcs	.+30     	; 0x7552 <nrk_high_speed_timer_wait+0x64>
    7534:	80 91 84 00 	lds	r24, 0x0084
    7538:	90 91 85 00 	lds	r25, 0x0085
    753c:	9a 83       	std	Y+2, r25	; 0x02
    753e:	89 83       	std	Y+1, r24	; 0x01
    7540:	89 81       	ldd	r24, Y+1	; 0x01
    7542:	9a 81       	ldd	r25, Y+2	; 0x02
    7544:	e8 17       	cp	r30, r24
    7546:	f9 07       	cpc	r31, r25
    7548:	a8 f3       	brcs	.-22     	; 0x7534 <nrk_high_speed_timer_wait+0x46>
    754a:	20 50       	subi	r18, 0x00	; 0
    754c:	30 40       	sbci	r19, 0x00	; 0
    754e:	41 40       	sbci	r20, 0x01	; 1
    7550:	50 40       	sbci	r21, 0x00	; 0
    7552:	80 91 84 00 	lds	r24, 0x0084
    7556:	90 91 85 00 	lds	r25, 0x0085
    755a:	9a 83       	std	Y+2, r25	; 0x02
    755c:	89 83       	std	Y+1, r24	; 0x01
    755e:	89 81       	ldd	r24, Y+1	; 0x01
    7560:	9a 81       	ldd	r25, Y+2	; 0x02
    7562:	82 17       	cp	r24, r18
    7564:	93 07       	cpc	r25, r19
    7566:	a8 f3       	brcs	.-22     	; 0x7552 <nrk_high_speed_timer_wait+0x64>
    7568:	22 96       	adiw	r28, 0x02	; 2
    756a:	0f b6       	in	r0, 0x3f	; 63
    756c:	f8 94       	cli
    756e:	de bf       	out	0x3e, r29	; 62
    7570:	0f be       	out	0x3f, r0	; 63
    7572:	cd bf       	out	0x3d, r28	; 61
    7574:	df 91       	pop	r29
    7576:	cf 91       	pop	r28
    7578:	08 95       	ret

0000757a <_nrk_setup_timer>:
    // Poll the SPI status byte until the crystal oscillator is stable
    do {
	    DISABLE_GLOBAL_INT();
	    FASTSPI_UPD_STATUS(spiStatusByte);
	    ENABLE_GLOBAL_INT();
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));
    757a:	ef 92       	push	r14
    757c:	ff 92       	push	r15
    757e:	1f 93       	push	r17

    7580:	9e ef       	ldi	r25, 0xFE	; 254
    7582:	90 93 36 0c 	sts	0x0C36, r25
} // halRfWaitForCrystalOscillator

    7586:	80 e2       	ldi	r24, 0x20	; 32
    7588:	80 93 b6 00 	sts	0x00B6, r24
    758c:	90 93 b3 00 	sts	0x00B3, r25
    7590:	13 e0       	ldi	r17, 0x03	; 3
    7592:	17 bb       	out	0x17, r17	; 23
    7594:	82 e0       	ldi	r24, 0x02	; 2
    7596:	80 93 b0 00 	sts	0x00B0, r24
    759a:	91 eb       	ldi	r25, 0xB1	; 177
    759c:	e9 2e       	mov	r14, r25
    759e:	f1 2c       	mov	r15, r1
    75a0:	f7 01       	movw	r30, r14
    75a2:	10 83       	st	Z, r17
    75a4:	83 b5       	in	r24, 0x23	; 35
    75a6:	82 60       	ori	r24, 0x02	; 2
    75a8:	83 bd       	out	0x23, r24	; 35
    75aa:	17 bb       	out	0x17, r17	; 23
    75ac:	14 bd       	out	0x24, r17	; 36
    75ae:	83 b5       	in	r24, 0x23	; 35
    75b0:	82 60       	ori	r24, 0x02	; 2
    75b2:	83 bd       	out	0x23, r24	; 35
    75b4:	10 92 80 00 	sts	0x0080, r1
    75b8:	81 e0       	ldi	r24, 0x01	; 1
    75ba:	80 93 81 00 	sts	0x0081, r24
    75be:	10 92 85 00 	sts	0x0085, r1
    75c2:	10 92 84 00 	sts	0x0084, r1
    75c6:	83 b5       	in	r24, 0x23	; 35
    75c8:	82 60       	ori	r24, 0x02	; 2
    75ca:	83 bd       	out	0x23, r24	; 35
    75cc:	83 b5       	in	r24, 0x23	; 35
    75ce:	81 60       	ori	r24, 0x01	; 1
    75d0:	83 bd       	out	0x23, r24	; 35
    75d2:	0e 94 74 39 	call	0x72e8	; 0x72e8 <_nrk_os_timer_reset>
    75d6:	e0 e7       	ldi	r30, 0x70	; 112
    75d8:	f0 e0       	ldi	r31, 0x00	; 0
    75da:	80 81       	ld	r24, Z
    75dc:	83 60       	ori	r24, 0x03	; 3
    75de:	80 83       	st	Z, r24
    75e0:	f7 01       	movw	r30, r14
    75e2:	10 83       	st	Z, r17
    75e4:	10 92 d6 0b 	sts	0x0BD6, r1
    75e8:	1f 91       	pop	r17
    75ea:	ff 90       	pop	r15
    75ec:	ef 90       	pop	r14
    75ee:	08 95       	ret

000075f0 <nrk_ext_int_enable>:
//
//	DESCRIPTION:
//		Waits for the crystal oscillator to become stable. The flag is polled via the SPI status byte.
//      
//      Note that this function will lock up if the SXOSCON command strobe has not been given before the
//      function call. Also note that global interrupts will always be enabled when this function 
    75f0:	88 23       	and	r24, r24
    75f2:	11 f4       	brne	.+4      	; 0x75f8 <nrk_ext_int_enable+0x8>
    75f4:	e8 9a       	sbi	0x1d, 0	; 29
    75f6:	33 c0       	rjmp	.+102    	; 0x765e <nrk_ext_int_enable+0x6e>
//      returns.
    75f8:	81 30       	cpi	r24, 0x01	; 1
    75fa:	11 f4       	brne	.+4      	; 0x7600 <nrk_ext_int_enable+0x10>
    75fc:	e9 9a       	sbi	0x1d, 1	; 29
    75fe:	2f c0       	rjmp	.+94     	; 0x765e <nrk_ext_int_enable+0x6e>
//-------------------------------------------------------------------------------------------------------
    7600:	82 30       	cpi	r24, 0x02	; 2
    7602:	11 f4       	brne	.+4      	; 0x7608 <nrk_ext_int_enable+0x18>
    7604:	ea 9a       	sbi	0x1d, 2	; 29
    7606:	2b c0       	rjmp	.+86     	; 0x765e <nrk_ext_int_enable+0x6e>
void halRfWaitForCrystalOscillator(void) {
    7608:	83 30       	cpi	r24, 0x03	; 3
    760a:	21 f4       	brne	.+8      	; 0x7614 <nrk_ext_int_enable+0x24>
    760c:	80 91 6b 00 	lds	r24, 0x006B
    7610:	81 60       	ori	r24, 0x01	; 1
    7612:	23 c0       	rjmp	.+70     	; 0x765a <nrk_ext_int_enable+0x6a>
    uint8_t spiStatusByte;
    7614:	84 30       	cpi	r24, 0x04	; 4
    7616:	21 f4       	brne	.+8      	; 0x7620 <nrk_ext_int_enable+0x30>
    7618:	80 91 6b 00 	lds	r24, 0x006B
    761c:	82 60       	ori	r24, 0x02	; 2
    761e:	1d c0       	rjmp	.+58     	; 0x765a <nrk_ext_int_enable+0x6a>

    7620:	85 30       	cpi	r24, 0x05	; 5
    7622:	21 f4       	brne	.+8      	; 0x762c <nrk_ext_int_enable+0x3c>
    7624:	80 91 6b 00 	lds	r24, 0x006B
    7628:	84 60       	ori	r24, 0x04	; 4
    762a:	17 c0       	rjmp	.+46     	; 0x765a <nrk_ext_int_enable+0x6a>
    // Poll the SPI status byte until the crystal oscillator is stable
    762c:	86 30       	cpi	r24, 0x06	; 6
    762e:	21 f4       	brne	.+8      	; 0x7638 <nrk_ext_int_enable+0x48>
    7630:	80 91 6b 00 	lds	r24, 0x006B
    7634:	88 60       	ori	r24, 0x08	; 8
    7636:	11 c0       	rjmp	.+34     	; 0x765a <nrk_ext_int_enable+0x6a>
    do {
    7638:	87 30       	cpi	r24, 0x07	; 7
    763a:	21 f4       	brne	.+8      	; 0x7644 <nrk_ext_int_enable+0x54>
    763c:	80 91 6b 00 	lds	r24, 0x006B
    7640:	80 61       	ori	r24, 0x10	; 16
    7642:	0b c0       	rjmp	.+22     	; 0x765a <nrk_ext_int_enable+0x6a>
	    DISABLE_GLOBAL_INT();
    7644:	88 30       	cpi	r24, 0x08	; 8
    7646:	21 f4       	brne	.+8      	; 0x7650 <nrk_ext_int_enable+0x60>
    7648:	80 91 6b 00 	lds	r24, 0x006B
    764c:	80 62       	ori	r24, 0x20	; 32
    764e:	05 c0       	rjmp	.+10     	; 0x765a <nrk_ext_int_enable+0x6a>
	    FASTSPI_UPD_STATUS(spiStatusByte);
    7650:	89 30       	cpi	r24, 0x09	; 9
    7652:	41 f4       	brne	.+16     	; 0x7664 <nrk_ext_int_enable+0x74>
    7654:	80 91 6b 00 	lds	r24, 0x006B
    7658:	80 64       	ori	r24, 0x40	; 64
    765a:	80 93 6b 00 	sts	0x006B, r24
    765e:	81 e0       	ldi	r24, 0x01	; 1
    7660:	90 e0       	ldi	r25, 0x00	; 0
    7662:	08 95       	ret
	    ENABLE_GLOBAL_INT();
    7664:	8a 30       	cpi	r24, 0x0A	; 10
    7666:	19 f0       	breq	.+6      	; 0x766e <nrk_ext_int_enable+0x7e>
    7668:	8f ef       	ldi	r24, 0xFF	; 255
    766a:	9f ef       	ldi	r25, 0xFF	; 255
    766c:	08 95       	ret
    766e:	80 91 6b 00 	lds	r24, 0x006B
    7672:	80 68       	ori	r24, 0x80	; 128
    7674:	80 93 6b 00 	sts	0x006B, r24
    7678:	81 e0       	ldi	r24, 0x01	; 1
    767a:	90 e0       	ldi	r25, 0x00	; 0
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));

    767c:	08 95       	ret

0000767e <nrk_ext_int_disable>:
} // halRfWaitForCrystalOscillator

    767e:	88 23       	and	r24, r24
    7680:	11 f4       	brne	.+4      	; 0x7686 <nrk_ext_int_disable+0x8>
    7682:	e8 98       	cbi	0x1d, 0	; 29
    7684:	31 c0       	rjmp	.+98     	; 0x76e8 <nrk_ext_int_disable+0x6a>
    7686:	81 30       	cpi	r24, 0x01	; 1
    7688:	11 f0       	breq	.+4      	; 0x768e <nrk_ext_int_disable+0x10>
    768a:	82 30       	cpi	r24, 0x02	; 2
    768c:	11 f4       	brne	.+4      	; 0x7692 <nrk_ext_int_disable+0x14>
    768e:	e9 98       	cbi	0x1d, 1	; 29
    7690:	2b c0       	rjmp	.+86     	; 0x76e8 <nrk_ext_int_disable+0x6a>
    7692:	83 30       	cpi	r24, 0x03	; 3
    7694:	21 f4       	brne	.+8      	; 0x769e <nrk_ext_int_disable+0x20>
    7696:	80 91 6b 00 	lds	r24, 0x006B
    769a:	8e 7f       	andi	r24, 0xFE	; 254
    769c:	23 c0       	rjmp	.+70     	; 0x76e4 <nrk_ext_int_disable+0x66>
    769e:	84 30       	cpi	r24, 0x04	; 4
    76a0:	21 f4       	brne	.+8      	; 0x76aa <nrk_ext_int_disable+0x2c>
    76a2:	80 91 6b 00 	lds	r24, 0x006B
    76a6:	8d 7f       	andi	r24, 0xFD	; 253
    76a8:	1d c0       	rjmp	.+58     	; 0x76e4 <nrk_ext_int_disable+0x66>
    76aa:	85 30       	cpi	r24, 0x05	; 5
    76ac:	21 f4       	brne	.+8      	; 0x76b6 <nrk_ext_int_disable+0x38>
    76ae:	80 91 6b 00 	lds	r24, 0x006B
    76b2:	8b 7f       	andi	r24, 0xFB	; 251
    76b4:	17 c0       	rjmp	.+46     	; 0x76e4 <nrk_ext_int_disable+0x66>
    76b6:	86 30       	cpi	r24, 0x06	; 6
    76b8:	21 f4       	brne	.+8      	; 0x76c2 <nrk_ext_int_disable+0x44>
    76ba:	80 91 6b 00 	lds	r24, 0x006B
    76be:	87 7f       	andi	r24, 0xF7	; 247
    76c0:	11 c0       	rjmp	.+34     	; 0x76e4 <nrk_ext_int_disable+0x66>
    76c2:	87 30       	cpi	r24, 0x07	; 7
    76c4:	21 f4       	brne	.+8      	; 0x76ce <nrk_ext_int_disable+0x50>
    76c6:	80 91 6b 00 	lds	r24, 0x006B
    76ca:	8f 7e       	andi	r24, 0xEF	; 239
    76cc:	0b c0       	rjmp	.+22     	; 0x76e4 <nrk_ext_int_disable+0x66>
    76ce:	88 30       	cpi	r24, 0x08	; 8
    76d0:	21 f4       	brne	.+8      	; 0x76da <nrk_ext_int_disable+0x5c>
    76d2:	80 91 6b 00 	lds	r24, 0x006B
    76d6:	8f 7d       	andi	r24, 0xDF	; 223
    76d8:	05 c0       	rjmp	.+10     	; 0x76e4 <nrk_ext_int_disable+0x66>
    76da:	89 30       	cpi	r24, 0x09	; 9
    76dc:	41 f4       	brne	.+16     	; 0x76ee <nrk_ext_int_disable+0x70>
    76de:	80 91 6b 00 	lds	r24, 0x006B
    76e2:	8f 7b       	andi	r24, 0xBF	; 191
    76e4:	80 93 6b 00 	sts	0x006B, r24
    76e8:	81 e0       	ldi	r24, 0x01	; 1
    76ea:	90 e0       	ldi	r25, 0x00	; 0
    76ec:	08 95       	ret
    76ee:	8a 30       	cpi	r24, 0x0A	; 10
    76f0:	19 f0       	breq	.+6      	; 0x76f8 <nrk_ext_int_disable+0x7a>
    76f2:	8f ef       	ldi	r24, 0xFF	; 255
    76f4:	9f ef       	ldi	r25, 0xFF	; 255
    76f6:	08 95       	ret
    76f8:	80 91 6b 00 	lds	r24, 0x006B
    76fc:	8f 77       	andi	r24, 0x7F	; 127
    76fe:	80 93 6b 00 	sts	0x006B, r24
    7702:	81 e0       	ldi	r24, 0x01	; 1
    7704:	90 e0       	ldi	r25, 0x00	; 0
    7706:	08 95       	ret

00007708 <nrk_ext_int_configure>:
    7708:	88 23       	and	r24, r24
    770a:	39 f5       	brne	.+78     	; 0x775a <nrk_ext_int_configure+0x52>
    770c:	50 93 da 1b 	sts	0x1BDA, r21
    7710:	40 93 d9 1b 	sts	0x1BD9, r20
    7714:	66 23       	and	r22, r22
    7716:	21 f4       	brne	.+8      	; 0x7720 <nrk_ext_int_configure+0x18>
    7718:	80 91 69 00 	lds	r24, 0x0069
    771c:	8c 7f       	andi	r24, 0xFC	; 252
    771e:	45 c0       	rjmp	.+138    	; 0x77aa <nrk_ext_int_configure+0xa2>
    7720:	61 30       	cpi	r22, 0x01	; 1
    7722:	49 f4       	brne	.+18     	; 0x7736 <nrk_ext_int_configure+0x2e>
    7724:	80 91 69 00 	lds	r24, 0x0069
    7728:	8d 7f       	andi	r24, 0xFD	; 253
    772a:	80 93 69 00 	sts	0x0069, r24
    772e:	80 91 69 00 	lds	r24, 0x0069
    7732:	81 60       	ori	r24, 0x01	; 1
    7734:	3a c0       	rjmp	.+116    	; 0x77aa <nrk_ext_int_configure+0xa2>
    7736:	62 30       	cpi	r22, 0x02	; 2
    7738:	49 f4       	brne	.+18     	; 0x774c <nrk_ext_int_configure+0x44>
    773a:	80 91 69 00 	lds	r24, 0x0069
    773e:	82 60       	ori	r24, 0x02	; 2
    7740:	80 93 69 00 	sts	0x0069, r24
    7744:	80 91 69 00 	lds	r24, 0x0069
    7748:	8e 7f       	andi	r24, 0xFE	; 254
    774a:	2f c0       	rjmp	.+94     	; 0x77aa <nrk_ext_int_configure+0xa2>
    774c:	63 30       	cpi	r22, 0x03	; 3
    774e:	09 f0       	breq	.+2      	; 0x7752 <nrk_ext_int_configure+0x4a>
    7750:	69 c0       	rjmp	.+210    	; 0x7824 <nrk_ext_int_configure+0x11c>
    7752:	80 91 69 00 	lds	r24, 0x0069
    7756:	83 60       	ori	r24, 0x03	; 3
    7758:	28 c0       	rjmp	.+80     	; 0x77aa <nrk_ext_int_configure+0xa2>
    775a:	81 30       	cpi	r24, 0x01	; 1
    775c:	49 f5       	brne	.+82     	; 0x77b0 <nrk_ext_int_configure+0xa8>
    775e:	50 93 d8 1b 	sts	0x1BD8, r21
    7762:	40 93 d7 1b 	sts	0x1BD7, r20
    7766:	66 23       	and	r22, r22
    7768:	21 f4       	brne	.+8      	; 0x7772 <nrk_ext_int_configure+0x6a>
    776a:	80 91 69 00 	lds	r24, 0x0069
    776e:	83 7f       	andi	r24, 0xF3	; 243
    7770:	1c c0       	rjmp	.+56     	; 0x77aa <nrk_ext_int_configure+0xa2>
    7772:	61 30       	cpi	r22, 0x01	; 1
    7774:	49 f4       	brne	.+18     	; 0x7788 <nrk_ext_int_configure+0x80>
    7776:	80 91 69 00 	lds	r24, 0x0069
    777a:	87 7f       	andi	r24, 0xF7	; 247
    777c:	80 93 69 00 	sts	0x0069, r24
    7780:	80 91 69 00 	lds	r24, 0x0069
    7784:	84 60       	ori	r24, 0x04	; 4
    7786:	11 c0       	rjmp	.+34     	; 0x77aa <nrk_ext_int_configure+0xa2>
    7788:	62 30       	cpi	r22, 0x02	; 2
    778a:	49 f4       	brne	.+18     	; 0x779e <nrk_ext_int_configure+0x96>
    778c:	80 91 69 00 	lds	r24, 0x0069
    7790:	88 60       	ori	r24, 0x08	; 8
    7792:	80 93 69 00 	sts	0x0069, r24
    7796:	80 91 69 00 	lds	r24, 0x0069
    779a:	8b 7f       	andi	r24, 0xFB	; 251
    779c:	06 c0       	rjmp	.+12     	; 0x77aa <nrk_ext_int_configure+0xa2>
    779e:	63 30       	cpi	r22, 0x03	; 3
    77a0:	09 f0       	breq	.+2      	; 0x77a4 <nrk_ext_int_configure+0x9c>
    77a2:	40 c0       	rjmp	.+128    	; 0x7824 <nrk_ext_int_configure+0x11c>
    77a4:	80 91 69 00 	lds	r24, 0x0069
    77a8:	8c 60       	ori	r24, 0x0C	; 12
    77aa:	80 93 69 00 	sts	0x0069, r24
    77ae:	37 c0       	rjmp	.+110    	; 0x781e <nrk_ext_int_configure+0x116>
    77b0:	82 30       	cpi	r24, 0x02	; 2
    77b2:	31 f5       	brne	.+76     	; 0x7800 <nrk_ext_int_configure+0xf8>
    77b4:	50 93 d8 1b 	sts	0x1BD8, r21
    77b8:	40 93 d7 1b 	sts	0x1BD7, r20
    77bc:	66 23       	and	r22, r22
    77be:	21 f4       	brne	.+8      	; 0x77c8 <nrk_ext_int_configure+0xc0>
    77c0:	80 91 69 00 	lds	r24, 0x0069
    77c4:	8f 7c       	andi	r24, 0xCF	; 207
    77c6:	f1 cf       	rjmp	.-30     	; 0x77aa <nrk_ext_int_configure+0xa2>
    77c8:	61 30       	cpi	r22, 0x01	; 1
    77ca:	49 f4       	brne	.+18     	; 0x77de <nrk_ext_int_configure+0xd6>
    77cc:	80 91 69 00 	lds	r24, 0x0069
    77d0:	8f 7d       	andi	r24, 0xDF	; 223
    77d2:	80 93 69 00 	sts	0x0069, r24
    77d6:	80 91 69 00 	lds	r24, 0x0069
    77da:	80 61       	ori	r24, 0x10	; 16
    77dc:	e6 cf       	rjmp	.-52     	; 0x77aa <nrk_ext_int_configure+0xa2>
    77de:	62 30       	cpi	r22, 0x02	; 2
    77e0:	49 f4       	brne	.+18     	; 0x77f4 <nrk_ext_int_configure+0xec>
    77e2:	80 91 69 00 	lds	r24, 0x0069
    77e6:	80 62       	ori	r24, 0x20	; 32
    77e8:	80 93 69 00 	sts	0x0069, r24
    77ec:	80 91 69 00 	lds	r24, 0x0069
    77f0:	8f 7e       	andi	r24, 0xEF	; 239
    77f2:	db cf       	rjmp	.-74     	; 0x77aa <nrk_ext_int_configure+0xa2>
    77f4:	63 30       	cpi	r22, 0x03	; 3
    77f6:	b1 f4       	brne	.+44     	; 0x7824 <nrk_ext_int_configure+0x11c>
    77f8:	80 91 69 00 	lds	r24, 0x0069
    77fc:	80 63       	ori	r24, 0x30	; 48
    77fe:	d5 cf       	rjmp	.-86     	; 0x77aa <nrk_ext_int_configure+0xa2>
    7800:	83 50       	subi	r24, 0x03	; 3
    7802:	88 30       	cpi	r24, 0x08	; 8
    7804:	18 f0       	brcs	.+6      	; 0x780c <nrk_ext_int_configure+0x104>
    7806:	8f ef       	ldi	r24, 0xFF	; 255
    7808:	9f ef       	ldi	r25, 0xFF	; 255
    780a:	08 95       	ret
    780c:	80 91 68 00 	lds	r24, 0x0068
    7810:	81 60       	ori	r24, 0x01	; 1
    7812:	80 93 68 00 	sts	0x0068, r24
    7816:	50 93 de 1b 	sts	0x1BDE, r21
    781a:	40 93 dd 1b 	sts	0x1BDD, r20
    781e:	81 e0       	ldi	r24, 0x01	; 1
    7820:	90 e0       	ldi	r25, 0x00	; 0
    7822:	08 95       	ret
    7824:	81 e0       	ldi	r24, 0x01	; 1
    7826:	90 e0       	ldi	r25, 0x00	; 0
    7828:	08 95       	ret

0000782a <__vector_1>:
    782a:	1f 92       	push	r1
    782c:	0f 92       	push	r0
    782e:	0f b6       	in	r0, 0x3f	; 63
    7830:	0f 92       	push	r0
    7832:	11 24       	eor	r1, r1
    7834:	2f 93       	push	r18
    7836:	3f 93       	push	r19
    7838:	4f 93       	push	r20
    783a:	5f 93       	push	r21
    783c:	6f 93       	push	r22
    783e:	7f 93       	push	r23
    7840:	8f 93       	push	r24
    7842:	9f 93       	push	r25
    7844:	af 93       	push	r26
    7846:	bf 93       	push	r27
    7848:	ef 93       	push	r30
    784a:	ff 93       	push	r31
    784c:	e0 91 d9 1b 	lds	r30, 0x1BD9
    7850:	f0 91 da 1b 	lds	r31, 0x1BDA
    7854:	30 97       	sbiw	r30, 0x00	; 0
    7856:	11 f0       	breq	.+4      	; 0x785c <__vector_1+0x32>
    7858:	09 95       	icall
    785a:	04 c0       	rjmp	.+8      	; 0x7864 <__vector_1+0x3a>
    785c:	60 e0       	ldi	r22, 0x00	; 0
    785e:	8a e0       	ldi	r24, 0x0A	; 10
    7860:	0e 94 bd 2b 	call	0x577a	; 0x577a <nrk_kernel_error_add>
    7864:	ff 91       	pop	r31
    7866:	ef 91       	pop	r30
    7868:	bf 91       	pop	r27
    786a:	af 91       	pop	r26
    786c:	9f 91       	pop	r25
    786e:	8f 91       	pop	r24
    7870:	7f 91       	pop	r23
    7872:	6f 91       	pop	r22
    7874:	5f 91       	pop	r21
    7876:	4f 91       	pop	r20
    7878:	3f 91       	pop	r19
    787a:	2f 91       	pop	r18
    787c:	0f 90       	pop	r0
    787e:	0f be       	out	0x3f, r0	; 63
    7880:	0f 90       	pop	r0
    7882:	1f 90       	pop	r1
    7884:	18 95       	reti

00007886 <__vector_9>:
    7886:	1f 92       	push	r1
    7888:	0f 92       	push	r0
    788a:	0f b6       	in	r0, 0x3f	; 63
    788c:	0f 92       	push	r0
    788e:	11 24       	eor	r1, r1
    7890:	2f 93       	push	r18
    7892:	3f 93       	push	r19
    7894:	4f 93       	push	r20
    7896:	5f 93       	push	r21
    7898:	6f 93       	push	r22
    789a:	7f 93       	push	r23
    789c:	8f 93       	push	r24
    789e:	9f 93       	push	r25
    78a0:	af 93       	push	r26
    78a2:	bf 93       	push	r27
    78a4:	ef 93       	push	r30
    78a6:	ff 93       	push	r31
    78a8:	e0 91 dd 1b 	lds	r30, 0x1BDD
    78ac:	f0 91 de 1b 	lds	r31, 0x1BDE
    78b0:	30 97       	sbiw	r30, 0x00	; 0
    78b2:	11 f0       	breq	.+4      	; 0x78b8 <__vector_9+0x32>
    78b4:	09 95       	icall
    78b6:	04 c0       	rjmp	.+8      	; 0x78c0 <__vector_9+0x3a>
    78b8:	60 e0       	ldi	r22, 0x00	; 0
    78ba:	8a e0       	ldi	r24, 0x0A	; 10
    78bc:	0e 94 bd 2b 	call	0x577a	; 0x577a <nrk_kernel_error_add>
    78c0:	ff 91       	pop	r31
    78c2:	ef 91       	pop	r30
    78c4:	bf 91       	pop	r27
    78c6:	af 91       	pop	r26
    78c8:	9f 91       	pop	r25
    78ca:	8f 91       	pop	r24
    78cc:	7f 91       	pop	r23
    78ce:	6f 91       	pop	r22
    78d0:	5f 91       	pop	r21
    78d2:	4f 91       	pop	r20
    78d4:	3f 91       	pop	r19
    78d6:	2f 91       	pop	r18
    78d8:	0f 90       	pop	r0
    78da:	0f be       	out	0x3f, r0	; 63
    78dc:	0f 90       	pop	r0
    78de:	1f 90       	pop	r1
    78e0:	18 95       	reti

000078e2 <_nrk_startup_ok>:
//-------------------------------------------------------------------------------------------------------
//	void rfWaitForCrystalOscillator(void)
//
//	DESCRIPTION:
//		Waits for the crystal oscillator to become stable. The flag is polled via the SPI status byte.
//      
    78e2:	80 91 b0 00 	lds	r24, 0x00B0
    78e6:	90 e0       	ldi	r25, 0x00	; 0
    78e8:	81 11       	cpse	r24, r1
    78ea:	91 e0       	ldi	r25, 0x01	; 1
    78ec:	81 e0       	ldi	r24, 0x01	; 1
    78ee:	98 27       	eor	r25, r24
//      Note that this function will lock up if the SXOSCON command strobe has not been given before the
//      function call. Also note that global interrupts will always be enabled when this function 
    78f0:	89 2f       	mov	r24, r25
    78f2:	99 27       	eor	r25, r25
    78f4:	08 95       	ret

000078f6 <update_watchdog>:
//      returns.
//-------------------------------------------------------------------------------------------------------
void halRfWaitForCrystalOscillator(void) {
    78f6:	08 95       	ret

000078f8 <nrk_watchdog_check>:
    78f8:	04 b6       	in	r0, 0x34	; 52
    78fa:	03 fc       	sbrc	r0, 3
    78fc:	03 c0       	rjmp	.+6      	; 0x7904 <nrk_watchdog_check+0xc>
    78fe:	81 e0       	ldi	r24, 0x01	; 1
    7900:	90 e0       	ldi	r25, 0x00	; 0
    7902:	08 95       	ret
    7904:	8f ef       	ldi	r24, 0xFF	; 255
    7906:	9f ef       	ldi	r25, 0xFF	; 255
    7908:	08 95       	ret

0000790a <nrk_watchdog_reset>:
    790a:	a8 95       	wdr
    790c:	08 95       	ret

0000790e <nrk_watchdog_disable>:
//-------------------------------------------------------------------------------------------------------
//	void rfWaitForCrystalOscillator(void)
//
//	DESCRIPTION:
//		Waits for the crystal oscillator to become stable. The flag is polled via the SPI status byte.
//      
    790e:	0e 94 d2 28 	call	0x51a4	; 0x51a4 <nrk_int_disable>
    7912:	a8 95       	wdr
//
//	DESCRIPTION:
//		Waits for the crystal oscillator to become stable. The flag is polled via the SPI status byte.
//      
//      Note that this function will lock up if the SXOSCON command strobe has not been given before the
//      function call. Also note that global interrupts will always be enabled when this function 
    7914:	84 b7       	in	r24, 0x34	; 52
    7916:	87 7f       	andi	r24, 0xF7	; 247
    7918:	84 bf       	out	0x34, r24	; 52
//      returns.
    791a:	e0 e6       	ldi	r30, 0x60	; 96
    791c:	f0 e0       	ldi	r31, 0x00	; 0
    791e:	80 81       	ld	r24, Z
    7920:	88 61       	ori	r24, 0x18	; 24
    7922:	80 83       	st	Z, r24
//-------------------------------------------------------------------------------------------------------
    7924:	10 82       	st	Z, r1
void halRfWaitForCrystalOscillator(void) {
    7926:	0e 94 d4 28 	call	0x51a8	; 0x51a8 <nrk_int_enable>
    792a:	08 95       	ret

0000792c <nrk_watchdog_enable>:

    // Poll the SPI status byte until the crystal oscillator is stable
    do {
	    DISABLE_GLOBAL_INT();
	    FASTSPI_UPD_STATUS(spiStatusByte);
	    ENABLE_GLOBAL_INT();
    792c:	0e 94 d2 28 	call	0x51a4	; 0x51a4 <nrk_int_disable>
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));
    7930:	84 b7       	in	r24, 0x34	; 52
    7932:	87 7f       	andi	r24, 0xF7	; 247
    7934:	84 bf       	out	0x34, r24	; 52
    7936:	a8 95       	wdr
	    DISABLE_GLOBAL_INT();
	    FASTSPI_UPD_STATUS(spiStatusByte);
	    ENABLE_GLOBAL_INT();
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));

} // halRfWaitForCrystalOscillator
    7938:	e0 e6       	ldi	r30, 0x60	; 96
    793a:	f0 e0       	ldi	r31, 0x00	; 0
    793c:	80 81       	ld	r24, Z
    793e:	88 61       	ori	r24, 0x18	; 24
    7940:	80 83       	st	Z, r24

    7942:	8d e0       	ldi	r24, 0x0D	; 13
    7944:	80 83       	st	Z, r24
    7946:	0e 94 d4 28 	call	0x51a8	; 0x51a8 <nrk_int_enable>
    794a:	08 95       	ret

0000794c <nrk_battery_save>:
    794c:	08 95       	ret

0000794e <nrk_sleep>:
    794e:	83 b7       	in	r24, 0x33	; 51
    7950:	81 7f       	andi	r24, 0xF1	; 241
    7952:	86 60       	ori	r24, 0x06	; 6
    7954:	83 bf       	out	0x33, r24	; 51
    7956:	83 b7       	in	r24, 0x33	; 51
    7958:	81 60       	ori	r24, 0x01	; 1
    795a:	83 bf       	out	0x33, r24	; 51
    795c:	88 95       	sleep
    795e:	83 b7       	in	r24, 0x33	; 51
    7960:	8e 7f       	andi	r24, 0xFE	; 254
    7962:	83 bf       	out	0x33, r24	; 51
    7964:	08 95       	ret

00007966 <nrk_idle>:
    7966:	83 b7       	in	r24, 0x33	; 51
    7968:	81 7f       	andi	r24, 0xF1	; 241
    796a:	83 bf       	out	0x33, r24	; 51
    796c:	83 b7       	in	r24, 0x33	; 51
    796e:	81 60       	ori	r24, 0x01	; 1
    7970:	83 bf       	out	0x33, r24	; 51
    7972:	88 95       	sleep
    7974:	83 b7       	in	r24, 0x33	; 51
    7976:	8e 7f       	andi	r24, 0xFE	; 254
    7978:	83 bf       	out	0x33, r24	; 51
    797a:	08 95       	ret

0000797c <nrk_task_set_entry_function>:
    797c:	fc 01       	movw	r30, r24
    797e:	76 83       	std	Z+6, r23	; 0x06
    7980:	65 83       	std	Z+5, r22	; 0x05
    7982:	08 95       	ret

00007984 <nrk_task_stk_init>:
    7984:	fb 01       	movw	r30, r22
    7986:	da 01       	movw	r26, r20
    7988:	25 e5       	ldi	r18, 0x55	; 85
    798a:	2c 93       	st	X, r18
    798c:	32 97       	sbiw	r30, 0x02	; 2
    798e:	29 2f       	mov	r18, r25
    7990:	33 27       	eor	r19, r19
    7992:	20 83       	st	Z, r18
    7994:	81 83       	std	Z+1, r24	; 0x01
    7996:	32 97       	sbiw	r30, 0x02	; 2
    7998:	11 82       	std	Z+1, r1	; 0x01
    799a:	10 82       	st	Z, r1
    799c:	32 97       	sbiw	r30, 0x02	; 2
    799e:	11 82       	std	Z+1, r1	; 0x01
    79a0:	10 82       	st	Z, r1
    79a2:	32 97       	sbiw	r30, 0x02	; 2
    79a4:	11 82       	std	Z+1, r1	; 0x01
    79a6:	10 82       	st	Z, r1
    79a8:	32 97       	sbiw	r30, 0x02	; 2
    79aa:	11 82       	std	Z+1, r1	; 0x01
    79ac:	10 82       	st	Z, r1
    79ae:	32 97       	sbiw	r30, 0x02	; 2
    79b0:	11 82       	std	Z+1, r1	; 0x01
    79b2:	10 82       	st	Z, r1
    79b4:	32 97       	sbiw	r30, 0x02	; 2
    79b6:	11 82       	std	Z+1, r1	; 0x01
    79b8:	10 82       	st	Z, r1
    79ba:	32 97       	sbiw	r30, 0x02	; 2
    79bc:	11 82       	std	Z+1, r1	; 0x01
    79be:	10 82       	st	Z, r1
    79c0:	32 97       	sbiw	r30, 0x02	; 2
    79c2:	11 82       	std	Z+1, r1	; 0x01
    79c4:	10 82       	st	Z, r1
    79c6:	32 97       	sbiw	r30, 0x02	; 2
    79c8:	11 82       	std	Z+1, r1	; 0x01
    79ca:	10 82       	st	Z, r1
    79cc:	32 97       	sbiw	r30, 0x02	; 2
    79ce:	11 82       	std	Z+1, r1	; 0x01
    79d0:	10 82       	st	Z, r1
    79d2:	32 97       	sbiw	r30, 0x02	; 2
    79d4:	11 82       	std	Z+1, r1	; 0x01
    79d6:	10 82       	st	Z, r1
    79d8:	32 97       	sbiw	r30, 0x02	; 2
    79da:	11 82       	std	Z+1, r1	; 0x01
    79dc:	10 82       	st	Z, r1
    79de:	32 97       	sbiw	r30, 0x02	; 2
    79e0:	11 82       	std	Z+1, r1	; 0x01
    79e2:	10 82       	st	Z, r1
    79e4:	32 97       	sbiw	r30, 0x02	; 2
    79e6:	11 82       	std	Z+1, r1	; 0x01
    79e8:	10 82       	st	Z, r1
    79ea:	32 97       	sbiw	r30, 0x02	; 2
    79ec:	11 82       	std	Z+1, r1	; 0x01
    79ee:	10 82       	st	Z, r1
    79f0:	32 97       	sbiw	r30, 0x02	; 2
    79f2:	11 82       	std	Z+1, r1	; 0x01
    79f4:	10 82       	st	Z, r1
    79f6:	32 97       	sbiw	r30, 0x02	; 2
    79f8:	11 82       	std	Z+1, r1	; 0x01
    79fa:	10 82       	st	Z, r1
    79fc:	cf 01       	movw	r24, r30
    79fe:	08 95       	ret

00007a00 <nrk_stack_pointer_init>:
    7a00:	85 e5       	ldi	r24, 0x55	; 85
    7a02:	80 93 7e 21 	sts	0x217E, r24
    7a06:	ee ef       	ldi	r30, 0xFE	; 254
    7a08:	f1 e2       	ldi	r31, 0x21	; 33
    7a0a:	f0 93 a6 0a 	sts	0x0AA6, r31
    7a0e:	e0 93 a5 0a 	sts	0x0AA5, r30
    7a12:	29 ed       	ldi	r18, 0xD9	; 217
    7a14:	38 e2       	ldi	r19, 0x28	; 40
    7a16:	83 2f       	mov	r24, r19
    7a18:	99 27       	eor	r25, r25
    7a1a:	80 83       	st	Z, r24
    7a1c:	20 93 ff 21 	sts	0x21FF, r18
    7a20:	08 95       	ret

00007a22 <nrk_stack_pointer_restore>:
    7a22:	29 ed       	ldi	r18, 0xD9	; 217
    7a24:	38 e2       	ldi	r19, 0x28	; 40
    7a26:	83 2f       	mov	r24, r19
    7a28:	99 27       	eor	r25, r25
    7a2a:	80 93 fe 21 	sts	0x21FE, r24
    7a2e:	20 93 ff 21 	sts	0x21FF, r18
    7a32:	08 95       	ret

00007a34 <nrk_target_start>:
    7a34:	0e 94 bd 3a 	call	0x757a	; 0x757a <_nrk_setup_timer>
    7a38:	0e 94 d4 28 	call	0x51a8	; 0x51a8 <nrk_int_enable>
    7a3c:	08 95       	ret

00007a3e <nrk_task_set_stk>:
    7a3e:	ef 92       	push	r14
    7a40:	ff 92       	push	r15
    7a42:	0f 93       	push	r16
    7a44:	1f 93       	push	r17
    7a46:	cf 93       	push	r28
    7a48:	df 93       	push	r29
    7a4a:	7c 01       	movw	r14, r24
    7a4c:	8b 01       	movw	r16, r22
    7a4e:	ea 01       	movw	r28, r20
    7a50:	40 32       	cpi	r20, 0x20	; 32
    7a52:	51 05       	cpc	r21, r1
    7a54:	18 f4       	brcc	.+6      	; 0x7a5c <nrk_task_set_stk+0x1e>
    7a56:	81 e1       	ldi	r24, 0x11	; 17
    7a58:	0e 94 c4 2b 	call	0x5788	; 0x5788 <nrk_error_add>
    7a5c:	c8 01       	movw	r24, r16
    7a5e:	01 97       	sbiw	r24, 0x01	; 1
    7a60:	8c 0f       	add	r24, r28
    7a62:	9d 1f       	adc	r25, r29
    7a64:	f7 01       	movw	r30, r14
    7a66:	92 83       	std	Z+2, r25	; 0x02
    7a68:	81 83       	std	Z+1, r24	; 0x01
    7a6a:	14 83       	std	Z+4, r17	; 0x04
    7a6c:	03 83       	std	Z+3, r16	; 0x03
    7a6e:	df 91       	pop	r29
    7a70:	cf 91       	pop	r28
    7a72:	1f 91       	pop	r17
    7a74:	0f 91       	pop	r16
    7a76:	ff 90       	pop	r15
    7a78:	ef 90       	pop	r14
    7a7a:	08 95       	ret

00007a7c <nrk_start_high_ready_task>:

.global nrk_start_high_ready_task 

nrk_start_high_ready_task:

	lds r26,nrk_high_ready_TCB		
    7a7c:	a0 91 ab 1b 	lds	r26, 0x1BAB
	lds r27,nrk_high_ready_TCB+1
    7a80:	b0 91 ac 1b 	lds	r27, 0x1BAC

    	;x points to &OSTCB[x]
    
	ld r28,x+
    7a84:	cd 91       	ld	r28, X+
	out __SP_L__, r28
    7a86:	cd bf       	out	0x3d, r28	; 61
	ld r29,x+
    7a88:	dd 91       	ld	r29, X+
	out __SP_H__, r29
    7a8a:	de bf       	out	0x3e, r29	; 62
  
	pop r31	
    7a8c:	ff 91       	pop	r31
	pop r30
    7a8e:	ef 91       	pop	r30
	pop r29
    7a90:	df 91       	pop	r29
	pop r28
    7a92:	cf 91       	pop	r28
	pop r27
    7a94:	bf 91       	pop	r27
	pop r26
    7a96:	af 91       	pop	r26
	pop r25
    7a98:	9f 91       	pop	r25
	pop r24			
    7a9a:	8f 91       	pop	r24
	pop r23
    7a9c:	7f 91       	pop	r23
	pop r22
    7a9e:	6f 91       	pop	r22
	pop r21
    7aa0:	5f 91       	pop	r21
	pop r20	
    7aa2:	4f 91       	pop	r20
	pop r19
    7aa4:	3f 91       	pop	r19
	pop r18	
    7aa6:	2f 91       	pop	r18
	pop r17
    7aa8:	1f 91       	pop	r17
	pop r16
    7aaa:	0f 91       	pop	r16
	pop r15
    7aac:	ff 90       	pop	r15
	pop r14
    7aae:	ef 90       	pop	r14
	pop r13
    7ab0:	df 90       	pop	r13
	pop r12
    7ab2:	cf 90       	pop	r12
	pop r11
    7ab4:	bf 90       	pop	r11
	pop r10
    7ab6:	af 90       	pop	r10
	pop r9
    7ab8:	9f 90       	pop	r9
	pop r8
    7aba:	8f 90       	pop	r8
	pop r7
    7abc:	7f 90       	pop	r7
	pop r6
    7abe:	6f 90       	pop	r6
	pop r5
    7ac0:	5f 90       	pop	r5
	pop r4
    7ac2:	4f 90       	pop	r4
	pop r3
    7ac4:	3f 90       	pop	r3
	pop r2
    7ac6:	2f 90       	pop	r2
	pop r1
    7ac8:	1f 90       	pop	r1
	pop r0
    7aca:	0f 90       	pop	r0
	out __SREG__, r0
    7acc:	0f be       	out	0x3f, r0	; 63
	pop r0	
    7ace:	0f 90       	pop	r0
	   
    	reti 
    7ad0:	18 95       	reti

00007ad2 <vfprintf>:
    7ad2:	ab e0       	ldi	r26, 0x0B	; 11
    7ad4:	b0 e0       	ldi	r27, 0x00	; 0
    7ad6:	ef e6       	ldi	r30, 0x6F	; 111
    7ad8:	fd e3       	ldi	r31, 0x3D	; 61
    7ada:	0c 94 db 41 	jmp	0x83b6	; 0x83b6 <__prologue_saves__>
    7ade:	4c 01       	movw	r8, r24
    7ae0:	6b 01       	movw	r12, r22
    7ae2:	7a 01       	movw	r14, r20
    7ae4:	fc 01       	movw	r30, r24
    7ae6:	17 82       	std	Z+7, r1	; 0x07
    7ae8:	16 82       	std	Z+6, r1	; 0x06
    7aea:	83 81       	ldd	r24, Z+3	; 0x03
    7aec:	81 fd       	sbrc	r24, 1
    7aee:	08 c0       	rjmp	.+16     	; 0x7b00 <vfprintf+0x2e>
    7af0:	8f ef       	ldi	r24, 0xFF	; 255
    7af2:	9f ef       	ldi	r25, 0xFF	; 255
    7af4:	1a c1       	rjmp	.+564    	; 0x7d2a <vfprintf+0x258>
    7af6:	22 e0       	ldi	r18, 0x02	; 2
    7af8:	30 e0       	ldi	r19, 0x00	; 0
    7afa:	e2 0e       	add	r14, r18
    7afc:	f3 1e       	adc	r15, r19
    7afe:	0c c0       	rjmp	.+24     	; 0x7b18 <vfprintf+0x46>
    7b00:	94 e9       	ldi	r25, 0x94	; 148
    7b02:	29 2e       	mov	r2, r25
    7b04:	93 e0       	ldi	r25, 0x03	; 3
    7b06:	39 2e       	mov	r3, r25
    7b08:	3e 01       	movw	r6, r28
    7b0a:	08 94       	sec
    7b0c:	61 1c       	adc	r6, r1
    7b0e:	71 1c       	adc	r7, r1
    7b10:	8d e8       	ldi	r24, 0x8D	; 141
    7b12:	48 2e       	mov	r4, r24
    7b14:	83 e0       	ldi	r24, 0x03	; 3
    7b16:	58 2e       	mov	r5, r24
    7b18:	f4 01       	movw	r30, r8
    7b1a:	03 81       	ldd	r16, Z+3	; 0x03
    7b1c:	f6 01       	movw	r30, r12
    7b1e:	03 fd       	sbrc	r16, 3
    7b20:	85 91       	lpm	r24, Z+
    7b22:	03 ff       	sbrs	r16, 3
    7b24:	81 91       	ld	r24, Z+
    7b26:	6f 01       	movw	r12, r30
    7b28:	88 23       	and	r24, r24
    7b2a:	09 f4       	brne	.+2      	; 0x7b2e <vfprintf+0x5c>
    7b2c:	fb c0       	rjmp	.+502    	; 0x7d24 <vfprintf+0x252>
    7b2e:	85 32       	cpi	r24, 0x25	; 37
    7b30:	59 f4       	brne	.+22     	; 0x7b48 <vfprintf+0x76>
    7b32:	03 fd       	sbrc	r16, 3
    7b34:	65 91       	lpm	r22, Z+
    7b36:	03 ff       	sbrs	r16, 3
    7b38:	61 91       	ld	r22, Z+
    7b3a:	6f 01       	movw	r12, r30
    7b3c:	65 32       	cpi	r22, 0x25	; 37
    7b3e:	19 f0       	breq	.+6      	; 0x7b46 <vfprintf+0x74>
    7b40:	16 2f       	mov	r17, r22
    7b42:	bb 24       	eor	r11, r11
    7b44:	1c c0       	rjmp	.+56     	; 0x7b7e <vfprintf+0xac>
    7b46:	85 e2       	ldi	r24, 0x25	; 37
    7b48:	b4 01       	movw	r22, r8
    7b4a:	99 27       	eor	r25, r25
    7b4c:	2a c0       	rjmp	.+84     	; 0x7ba2 <vfprintf+0xd0>
    7b4e:	11 23       	and	r17, r17
    7b50:	59 f1       	breq	.+86     	; 0x7ba8 <vfprintf+0xd6>
    7b52:	61 2f       	mov	r22, r17
    7b54:	77 27       	eor	r23, r23
    7b56:	c1 01       	movw	r24, r2
    7b58:	0e 94 14 3f 	call	0x7e28	; 0x7e28 <strchr_P>
    7b5c:	89 2b       	or	r24, r25
    7b5e:	49 f4       	brne	.+18     	; 0x7b72 <vfprintf+0xa0>
    7b60:	13 32       	cpi	r17, 0x23	; 35
    7b62:	19 f4       	brne	.+6      	; 0x7b6a <vfprintf+0x98>
    7b64:	f0 e1       	ldi	r31, 0x10	; 16
    7b66:	bf 2a       	or	r11, r31
    7b68:	04 c0       	rjmp	.+8      	; 0x7b72 <vfprintf+0xa0>
    7b6a:	1c 36       	cpi	r17, 0x6C	; 108
    7b6c:	61 f4       	brne	.+24     	; 0x7b86 <vfprintf+0xb4>
    7b6e:	20 e8       	ldi	r18, 0x80	; 128
    7b70:	b2 2a       	or	r11, r18
    7b72:	f6 01       	movw	r30, r12
    7b74:	03 fd       	sbrc	r16, 3
    7b76:	15 91       	lpm	r17, Z+
    7b78:	03 ff       	sbrs	r16, 3
    7b7a:	11 91       	ld	r17, Z+
    7b7c:	6f 01       	movw	r12, r30
    7b7e:	b7 fe       	sbrs	r11, 7
    7b80:	e6 cf       	rjmp	.-52     	; 0x7b4e <vfprintf+0x7c>
    7b82:	11 23       	and	r17, r17
    7b84:	89 f0       	breq	.+34     	; 0x7ba8 <vfprintf+0xd6>
    7b86:	61 2f       	mov	r22, r17
    7b88:	77 27       	eor	r23, r23
    7b8a:	c2 01       	movw	r24, r4
    7b8c:	0e 94 14 3f 	call	0x7e28	; 0x7e28 <strchr_P>
    7b90:	89 2b       	or	r24, r25
    7b92:	51 f0       	breq	.+20     	; 0x7ba8 <vfprintf+0xd6>
    7b94:	24 e0       	ldi	r18, 0x04	; 4
    7b96:	30 e0       	ldi	r19, 0x00	; 0
    7b98:	e2 0e       	add	r14, r18
    7b9a:	f3 1e       	adc	r15, r19
    7b9c:	b4 01       	movw	r22, r8
    7b9e:	8f e3       	ldi	r24, 0x3F	; 63
    7ba0:	90 e0       	ldi	r25, 0x00	; 0
    7ba2:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
    7ba6:	b8 cf       	rjmp	.-144    	; 0x7b18 <vfprintf+0x46>
    7ba8:	13 36       	cpi	r17, 0x63	; 99
    7baa:	29 f0       	breq	.+10     	; 0x7bb6 <vfprintf+0xe4>
    7bac:	13 37       	cpi	r17, 0x73	; 115
    7bae:	81 f0       	breq	.+32     	; 0x7bd0 <vfprintf+0xfe>
    7bb0:	13 35       	cpi	r17, 0x53	; 83
    7bb2:	f9 f4       	brne	.+62     	; 0x7bf2 <vfprintf+0x120>
    7bb4:	0b c0       	rjmp	.+22     	; 0x7bcc <vfprintf+0xfa>
    7bb6:	87 01       	movw	r16, r14
    7bb8:	0e 5f       	subi	r16, 0xFE	; 254
    7bba:	1f 4f       	sbci	r17, 0xFF	; 255
    7bbc:	b4 01       	movw	r22, r8
    7bbe:	f7 01       	movw	r30, r14
    7bc0:	80 81       	ld	r24, Z
    7bc2:	91 81       	ldd	r25, Z+1	; 0x01
    7bc4:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
    7bc8:	78 01       	movw	r14, r16
    7bca:	a6 cf       	rjmp	.-180    	; 0x7b18 <vfprintf+0x46>
    7bcc:	f1 e0       	ldi	r31, 0x01	; 1
    7bce:	bf 2a       	or	r11, r31
    7bd0:	f7 01       	movw	r30, r14
    7bd2:	00 81       	ld	r16, Z
    7bd4:	11 81       	ldd	r17, Z+1	; 0x01
    7bd6:	04 c0       	rjmp	.+8      	; 0x7be0 <vfprintf+0x10e>
    7bd8:	b4 01       	movw	r22, r8
    7bda:	99 27       	eor	r25, r25
    7bdc:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
    7be0:	f8 01       	movw	r30, r16
    7be2:	b0 fc       	sbrc	r11, 0
    7be4:	85 91       	lpm	r24, Z+
    7be6:	b0 fe       	sbrs	r11, 0
    7be8:	81 91       	ld	r24, Z+
    7bea:	8f 01       	movw	r16, r30
    7bec:	88 23       	and	r24, r24
    7bee:	a1 f7       	brne	.-24     	; 0x7bd8 <vfprintf+0x106>
    7bf0:	82 cf       	rjmp	.-252    	; 0x7af6 <vfprintf+0x24>
    7bf2:	14 36       	cpi	r17, 0x64	; 100
    7bf4:	11 f0       	breq	.+4      	; 0x7bfa <vfprintf+0x128>
    7bf6:	19 36       	cpi	r17, 0x69	; 105
    7bf8:	49 f5       	brne	.+82     	; 0x7c4c <vfprintf+0x17a>
    7bfa:	b7 fe       	sbrs	r11, 7
    7bfc:	0a c0       	rjmp	.+20     	; 0x7c12 <vfprintf+0x140>
    7bfe:	f7 01       	movw	r30, r14
    7c00:	60 81       	ld	r22, Z
    7c02:	71 81       	ldd	r23, Z+1	; 0x01
    7c04:	82 81       	ldd	r24, Z+2	; 0x02
    7c06:	93 81       	ldd	r25, Z+3	; 0x03
    7c08:	24 e0       	ldi	r18, 0x04	; 4
    7c0a:	30 e0       	ldi	r19, 0x00	; 0
    7c0c:	e2 0e       	add	r14, r18
    7c0e:	f3 1e       	adc	r15, r19
    7c10:	0d c0       	rjmp	.+26     	; 0x7c2c <vfprintf+0x15a>
    7c12:	f7 01       	movw	r30, r14
    7c14:	80 81       	ld	r24, Z
    7c16:	91 81       	ldd	r25, Z+1	; 0x01
    7c18:	9c 01       	movw	r18, r24
    7c1a:	b9 01       	movw	r22, r18
    7c1c:	88 27       	eor	r24, r24
    7c1e:	77 fd       	sbrc	r23, 7
    7c20:	80 95       	com	r24
    7c22:	98 2f       	mov	r25, r24
    7c24:	42 e0       	ldi	r20, 0x02	; 2
    7c26:	50 e0       	ldi	r21, 0x00	; 0
    7c28:	e4 0e       	add	r14, r20
    7c2a:	f5 1e       	adc	r15, r21
    7c2c:	5f ee       	ldi	r21, 0xEF	; 239
    7c2e:	b5 22       	and	r11, r21
    7c30:	97 ff       	sbrs	r25, 7
    7c32:	09 c0       	rjmp	.+18     	; 0x7c46 <vfprintf+0x174>
    7c34:	90 95       	com	r25
    7c36:	80 95       	com	r24
    7c38:	70 95       	com	r23
    7c3a:	61 95       	neg	r22
    7c3c:	7f 4f       	sbci	r23, 0xFF	; 255
    7c3e:	8f 4f       	sbci	r24, 0xFF	; 255
    7c40:	9f 4f       	sbci	r25, 0xFF	; 255
    7c42:	e0 e4       	ldi	r30, 0x40	; 64
    7c44:	be 2a       	or	r11, r30
    7c46:	2a e0       	ldi	r18, 0x0A	; 10
    7c48:	30 e0       	ldi	r19, 0x00	; 0
    7c4a:	3a c0       	rjmp	.+116    	; 0x7cc0 <vfprintf+0x1ee>
    7c4c:	10 37       	cpi	r17, 0x70	; 112
    7c4e:	b1 f0       	breq	.+44     	; 0x7c7c <vfprintf+0x1aa>
    7c50:	11 37       	cpi	r17, 0x71	; 113
    7c52:	30 f4       	brcc	.+12     	; 0x7c60 <vfprintf+0x18e>
    7c54:	18 35       	cpi	r17, 0x58	; 88
    7c56:	c9 f0       	breq	.+50     	; 0x7c8a <vfprintf+0x1b8>
    7c58:	1f 36       	cpi	r17, 0x6F	; 111
    7c5a:	09 f0       	breq	.+2      	; 0x7c5e <vfprintf+0x18c>
    7c5c:	63 c0       	rjmp	.+198    	; 0x7d24 <vfprintf+0x252>
    7c5e:	06 c0       	rjmp	.+12     	; 0x7c6c <vfprintf+0x19a>
    7c60:	15 37       	cpi	r17, 0x75	; 117
    7c62:	39 f0       	breq	.+14     	; 0x7c72 <vfprintf+0x1a0>
    7c64:	18 37       	cpi	r17, 0x78	; 120
    7c66:	09 f0       	breq	.+2      	; 0x7c6a <vfprintf+0x198>
    7c68:	5d c0       	rjmp	.+186    	; 0x7d24 <vfprintf+0x252>
    7c6a:	0a c0       	rjmp	.+20     	; 0x7c80 <vfprintf+0x1ae>
    7c6c:	28 e0       	ldi	r18, 0x08	; 8
    7c6e:	30 e0       	ldi	r19, 0x00	; 0
    7c70:	10 c0       	rjmp	.+32     	; 0x7c92 <vfprintf+0x1c0>
    7c72:	ff ee       	ldi	r31, 0xEF	; 239
    7c74:	bf 22       	and	r11, r31
    7c76:	2a e0       	ldi	r18, 0x0A	; 10
    7c78:	30 e0       	ldi	r19, 0x00	; 0
    7c7a:	0b c0       	rjmp	.+22     	; 0x7c92 <vfprintf+0x1c0>
    7c7c:	20 e1       	ldi	r18, 0x10	; 16
    7c7e:	b2 2a       	or	r11, r18
    7c80:	34 e2       	ldi	r19, 0x24	; 36
    7c82:	b3 2a       	or	r11, r19
    7c84:	20 e1       	ldi	r18, 0x10	; 16
    7c86:	30 e0       	ldi	r19, 0x00	; 0
    7c88:	04 c0       	rjmp	.+8      	; 0x7c92 <vfprintf+0x1c0>
    7c8a:	44 e0       	ldi	r20, 0x04	; 4
    7c8c:	b4 2a       	or	r11, r20
    7c8e:	20 e1       	ldi	r18, 0x10	; 16
    7c90:	32 e0       	ldi	r19, 0x02	; 2
    7c92:	b7 fe       	sbrs	r11, 7
    7c94:	0a c0       	rjmp	.+20     	; 0x7caa <vfprintf+0x1d8>
    7c96:	f7 01       	movw	r30, r14
    7c98:	60 81       	ld	r22, Z
    7c9a:	71 81       	ldd	r23, Z+1	; 0x01
    7c9c:	82 81       	ldd	r24, Z+2	; 0x02
    7c9e:	93 81       	ldd	r25, Z+3	; 0x03
    7ca0:	44 e0       	ldi	r20, 0x04	; 4
    7ca2:	50 e0       	ldi	r21, 0x00	; 0
    7ca4:	e4 0e       	add	r14, r20
    7ca6:	f5 1e       	adc	r15, r21
    7ca8:	0b c0       	rjmp	.+22     	; 0x7cc0 <vfprintf+0x1ee>
    7caa:	f7 01       	movw	r30, r14
    7cac:	80 81       	ld	r24, Z
    7cae:	91 81       	ldd	r25, Z+1	; 0x01
    7cb0:	ac 01       	movw	r20, r24
    7cb2:	ba 01       	movw	r22, r20
    7cb4:	88 27       	eor	r24, r24
    7cb6:	99 27       	eor	r25, r25
    7cb8:	e2 e0       	ldi	r30, 0x02	; 2
    7cba:	f0 e0       	ldi	r31, 0x00	; 0
    7cbc:	ee 0e       	add	r14, r30
    7cbe:	ff 1e       	adc	r15, r31
    7cc0:	a3 01       	movw	r20, r6
    7cc2:	0e 94 f4 3f 	call	0x7fe8	; 0x7fe8 <__ultoa_invert>
    7cc6:	a8 2e       	mov	r10, r24
    7cc8:	a6 18       	sub	r10, r6
    7cca:	0b 2d       	mov	r16, r11
    7ccc:	11 27       	eor	r17, r17
    7cce:	06 ff       	sbrs	r16, 6
    7cd0:	05 c0       	rjmp	.+10     	; 0x7cdc <vfprintf+0x20a>
    7cd2:	b4 01       	movw	r22, r8
    7cd4:	8d e2       	ldi	r24, 0x2D	; 45
    7cd6:	90 e0       	ldi	r25, 0x00	; 0
    7cd8:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
    7cdc:	04 ff       	sbrs	r16, 4
    7cde:	15 c0       	rjmp	.+42     	; 0x7d0a <vfprintf+0x238>
    7ce0:	fe 01       	movw	r30, r28
    7ce2:	ea 0d       	add	r30, r10
    7ce4:	f1 1d       	adc	r31, r1
    7ce6:	80 81       	ld	r24, Z
    7ce8:	80 33       	cpi	r24, 0x30	; 48
    7cea:	79 f0       	breq	.+30     	; 0x7d0a <vfprintf+0x238>
    7cec:	b4 01       	movw	r22, r8
    7cee:	80 e3       	ldi	r24, 0x30	; 48
    7cf0:	90 e0       	ldi	r25, 0x00	; 0
    7cf2:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
    7cf6:	02 ff       	sbrs	r16, 2
    7cf8:	08 c0       	rjmp	.+16     	; 0x7d0a <vfprintf+0x238>
    7cfa:	00 72       	andi	r16, 0x20	; 32
    7cfc:	10 70       	andi	r17, 0x00	; 0
    7cfe:	b4 01       	movw	r22, r8
    7d00:	c8 01       	movw	r24, r16
    7d02:	88 5a       	subi	r24, 0xA8	; 168
    7d04:	9f 4f       	sbci	r25, 0xFF	; 255
    7d06:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
    7d0a:	aa 94       	dec	r10
    7d0c:	f3 01       	movw	r30, r6
    7d0e:	ea 0d       	add	r30, r10
    7d10:	f1 1d       	adc	r31, r1
    7d12:	80 81       	ld	r24, Z
    7d14:	b4 01       	movw	r22, r8
    7d16:	99 27       	eor	r25, r25
    7d18:	0e 94 7d 3f 	call	0x7efa	; 0x7efa <fputc>
    7d1c:	aa 20       	and	r10, r10
    7d1e:	09 f4       	brne	.+2      	; 0x7d22 <vfprintf+0x250>
    7d20:	fb ce       	rjmp	.-522    	; 0x7b18 <vfprintf+0x46>
    7d22:	f3 cf       	rjmp	.-26     	; 0x7d0a <vfprintf+0x238>
    7d24:	f4 01       	movw	r30, r8
    7d26:	86 81       	ldd	r24, Z+6	; 0x06
    7d28:	97 81       	ldd	r25, Z+7	; 0x07
    7d2a:	e2 e1       	ldi	r30, 0x12	; 18
    7d2c:	2b 96       	adiw	r28, 0x0b	; 11
    7d2e:	0c 94 f7 41 	jmp	0x83ee	; 0x83ee <__epilogue_restores__>

00007d32 <__ashldi3>:
    7d32:	a0 e1       	ldi	r26, 0x10	; 16
    7d34:	b0 e0       	ldi	r27, 0x00	; 0
    7d36:	ef e9       	ldi	r30, 0x9F	; 159
    7d38:	fe e3       	ldi	r31, 0x3E	; 62
    7d3a:	0c 94 db 41 	jmp	0x83b6	; 0x83b6 <__prologue_saves__>
    7d3e:	22 2e       	mov	r2, r18
    7d40:	33 2e       	mov	r3, r19
    7d42:	44 2e       	mov	r4, r20
    7d44:	55 2e       	mov	r5, r21
    7d46:	66 2e       	mov	r6, r22
    7d48:	77 2e       	mov	r7, r23
    7d4a:	88 2e       	mov	r8, r24
    7d4c:	99 2e       	mov	r9, r25
    7d4e:	00 23       	and	r16, r16
    7d50:	09 f4       	brne	.+2      	; 0x7d54 <__ashldi3+0x22>
    7d52:	5e c0       	rjmp	.+188    	; 0x7e10 <__ashldi3+0xde>
    7d54:	88 e0       	ldi	r24, 0x08	; 8
    7d56:	fe 01       	movw	r30, r28
    7d58:	31 96       	adiw	r30, 0x01	; 1
    7d5a:	11 92       	st	Z+, r1
    7d5c:	8a 95       	dec	r24
    7d5e:	e9 f7       	brne	.-6      	; 0x7d5a <__ashldi3+0x28>
    7d60:	29 83       	std	Y+1, r18	; 0x01
    7d62:	3a 83       	std	Y+2, r19	; 0x02
    7d64:	4b 83       	std	Y+3, r20	; 0x03
    7d66:	5c 83       	std	Y+4, r21	; 0x04
    7d68:	6d 83       	std	Y+5, r22	; 0x05
    7d6a:	7e 83       	std	Y+6, r23	; 0x06
    7d6c:	8f 82       	std	Y+7, r8	; 0x07
    7d6e:	98 87       	std	Y+8, r25	; 0x08
    7d70:	80 e2       	ldi	r24, 0x20	; 32
    7d72:	80 1b       	sub	r24, r16
    7d74:	e8 2f       	mov	r30, r24
    7d76:	ff 27       	eor	r31, r31
    7d78:	e7 fd       	sbrc	r30, 7
    7d7a:	f0 95       	com	r31
    7d7c:	49 81       	ldd	r20, Y+1	; 0x01
    7d7e:	5a 81       	ldd	r21, Y+2	; 0x02
    7d80:	6b 81       	ldd	r22, Y+3	; 0x03
    7d82:	7c 81       	ldd	r23, Y+4	; 0x04
    7d84:	18 16       	cp	r1, r24
    7d86:	84 f0       	brlt	.+32     	; 0x7da8 <__ashldi3+0x76>
    7d88:	19 86       	std	Y+9, r1	; 0x09
    7d8a:	1a 86       	std	Y+10, r1	; 0x0a
    7d8c:	1b 86       	std	Y+11, r1	; 0x0b
    7d8e:	1c 86       	std	Y+12, r1	; 0x0c
    7d90:	88 27       	eor	r24, r24
    7d92:	99 27       	eor	r25, r25
    7d94:	8e 1b       	sub	r24, r30
    7d96:	9f 0b       	sbc	r25, r31
    7d98:	04 c0       	rjmp	.+8      	; 0x7da2 <__ashldi3+0x70>
    7d9a:	44 0f       	add	r20, r20
    7d9c:	55 1f       	adc	r21, r21
    7d9e:	66 1f       	adc	r22, r22
    7da0:	77 1f       	adc	r23, r23
    7da2:	8a 95       	dec	r24
    7da4:	d2 f7       	brpl	.-12     	; 0x7d9a <__ashldi3+0x68>
    7da6:	28 c0       	rjmp	.+80     	; 0x7df8 <__ashldi3+0xc6>
    7da8:	20 2f       	mov	r18, r16
    7daa:	33 27       	eor	r19, r19
    7dac:	27 fd       	sbrc	r18, 7
    7dae:	30 95       	com	r19
    7db0:	db 01       	movw	r26, r22
    7db2:	ca 01       	movw	r24, r20
    7db4:	02 2e       	mov	r0, r18
    7db6:	04 c0       	rjmp	.+8      	; 0x7dc0 <__ashldi3+0x8e>
    7db8:	88 0f       	add	r24, r24
    7dba:	99 1f       	adc	r25, r25
    7dbc:	aa 1f       	adc	r26, r26
    7dbe:	bb 1f       	adc	r27, r27
    7dc0:	0a 94       	dec	r0
    7dc2:	d2 f7       	brpl	.-12     	; 0x7db8 <__ashldi3+0x86>
    7dc4:	89 87       	std	Y+9, r24	; 0x09
    7dc6:	9a 87       	std	Y+10, r25	; 0x0a
    7dc8:	ab 87       	std	Y+11, r26	; 0x0b
    7dca:	bc 87       	std	Y+12, r27	; 0x0c
    7dcc:	04 c0       	rjmp	.+8      	; 0x7dd6 <__ashldi3+0xa4>
    7dce:	76 95       	lsr	r23
    7dd0:	67 95       	ror	r22
    7dd2:	57 95       	ror	r21
    7dd4:	47 95       	ror	r20
    7dd6:	ea 95       	dec	r30
    7dd8:	d2 f7       	brpl	.-12     	; 0x7dce <__ashldi3+0x9c>
    7dda:	8d 81       	ldd	r24, Y+5	; 0x05
    7ddc:	9e 81       	ldd	r25, Y+6	; 0x06
    7dde:	af 81       	ldd	r26, Y+7	; 0x07
    7de0:	b8 85       	ldd	r27, Y+8	; 0x08
    7de2:	04 c0       	rjmp	.+8      	; 0x7dec <__ashldi3+0xba>
    7de4:	88 0f       	add	r24, r24
    7de6:	99 1f       	adc	r25, r25
    7de8:	aa 1f       	adc	r26, r26
    7dea:	bb 1f       	adc	r27, r27
    7dec:	2a 95       	dec	r18
    7dee:	d2 f7       	brpl	.-12     	; 0x7de4 <__ashldi3+0xb2>
    7df0:	48 2b       	or	r20, r24
    7df2:	59 2b       	or	r21, r25
    7df4:	6a 2b       	or	r22, r26
    7df6:	7b 2b       	or	r23, r27
    7df8:	4d 87       	std	Y+13, r20	; 0x0d
    7dfa:	5e 87       	std	Y+14, r21	; 0x0e
    7dfc:	6f 87       	std	Y+15, r22	; 0x0f
    7dfe:	78 8b       	std	Y+16, r23	; 0x10
    7e00:	29 84       	ldd	r2, Y+9	; 0x09
    7e02:	3a 84       	ldd	r3, Y+10	; 0x0a
    7e04:	4b 84       	ldd	r4, Y+11	; 0x0b
    7e06:	5c 84       	ldd	r5, Y+12	; 0x0c
    7e08:	6d 84       	ldd	r6, Y+13	; 0x0d
    7e0a:	7e 84       	ldd	r7, Y+14	; 0x0e
    7e0c:	8f 84       	ldd	r8, Y+15	; 0x0f
    7e0e:	98 88       	ldd	r9, Y+16	; 0x10
    7e10:	22 2d       	mov	r18, r2
    7e12:	33 2d       	mov	r19, r3
    7e14:	44 2d       	mov	r20, r4
    7e16:	55 2d       	mov	r21, r5
    7e18:	66 2d       	mov	r22, r6
    7e1a:	77 2d       	mov	r23, r7
    7e1c:	88 2d       	mov	r24, r8
    7e1e:	99 2d       	mov	r25, r9
    7e20:	e2 e1       	ldi	r30, 0x12	; 18
    7e22:	60 96       	adiw	r28, 0x10	; 16
    7e24:	0c 94 f7 41 	jmp	0x83ee	; 0x83ee <__epilogue_restores__>

00007e28 <strchr_P>:
    7e28:	fc 01       	movw	r30, r24
    7e2a:	05 90       	lpm	r0, Z+
    7e2c:	06 16       	cp	r0, r22
    7e2e:	21 f0       	breq	.+8      	; 0x7e38 <strchr_P+0x10>
    7e30:	00 20       	and	r0, r0
    7e32:	d9 f7       	brne	.-10     	; 0x7e2a <strchr_P+0x2>
    7e34:	c0 01       	movw	r24, r0
    7e36:	08 95       	ret
    7e38:	31 97       	sbiw	r30, 0x01	; 1
    7e3a:	cf 01       	movw	r24, r30
    7e3c:	08 95       	ret

00007e3e <memcpy>:
    7e3e:	fb 01       	movw	r30, r22
    7e40:	dc 01       	movw	r26, r24
    7e42:	02 c0       	rjmp	.+4      	; 0x7e48 <memcpy+0xa>
    7e44:	01 90       	ld	r0, Z+
    7e46:	0d 92       	st	X+, r0
    7e48:	41 50       	subi	r20, 0x01	; 1
    7e4a:	50 40       	sbci	r21, 0x00	; 0
    7e4c:	d8 f7       	brcc	.-10     	; 0x7e44 <memcpy+0x6>
    7e4e:	08 95       	ret

00007e50 <strcpy>:
    7e50:	fb 01       	movw	r30, r22
    7e52:	dc 01       	movw	r26, r24
    7e54:	01 90       	ld	r0, Z+
    7e56:	0d 92       	st	X+, r0
    7e58:	00 20       	and	r0, r0
    7e5a:	e1 f7       	brne	.-8      	; 0x7e54 <strcpy+0x4>
    7e5c:	08 95       	ret

00007e5e <fdevopen>:
   not use for new code.
*/

FILE *
fdevopen(int (*put)(char, FILE *), int (*get)(FILE *))
{
    7e5e:	ef 92       	push	r14
    7e60:	ff 92       	push	r15
    7e62:	0f 93       	push	r16
    7e64:	1f 93       	push	r17
    7e66:	cf 93       	push	r28
    7e68:	df 93       	push	r29
    7e6a:	8c 01       	movw	r16, r24
    7e6c:	7b 01       	movw	r14, r22
	FILE *s;

	if (put == 0 && get == 0)
    7e6e:	89 2b       	or	r24, r25
    7e70:	11 f4       	brne	.+4      	; 0x7e76 <fdevopen+0x18>
    7e72:	67 2b       	or	r22, r23
    7e74:	d1 f1       	breq	.+116    	; 0x7eea <fdevopen+0x8c>
		return 0;

	if ((s = calloc(1, sizeof(FILE))) == 0)
    7e76:	6e e0       	ldi	r22, 0x0E	; 14
    7e78:	70 e0       	ldi	r23, 0x00	; 0
    7e7a:	81 e0       	ldi	r24, 0x01	; 1
    7e7c:	90 e0       	ldi	r25, 0x00	; 0
    7e7e:	0e 94 52 40 	call	0x80a4	; 0x80a4 <calloc>
    7e82:	fc 01       	movw	r30, r24
    7e84:	00 97       	sbiw	r24, 0x00	; 0
    7e86:	89 f1       	breq	.+98     	; 0x7eea <fdevopen+0x8c>
    7e88:	dc 01       	movw	r26, r24
		return 0;

	s->flags = __SMALLOC;
    7e8a:	80 e8       	ldi	r24, 0x80	; 128
    7e8c:	83 83       	std	Z+3, r24	; 0x03

	if (get != 0) {
    7e8e:	e1 14       	cp	r14, r1
    7e90:	f1 04       	cpc	r15, r1
    7e92:	71 f0       	breq	.+28     	; 0x7eb0 <fdevopen+0x52>
		s->get = get;
    7e94:	f3 86       	std	Z+11, r15	; 0x0b
    7e96:	e2 86       	std	Z+10, r14	; 0x0a
		s->flags |= __SRD;
    7e98:	81 e8       	ldi	r24, 0x81	; 129
    7e9a:	83 83       	std	Z+3, r24	; 0x03
		if (stdin == 0)
    7e9c:	80 91 df 1b 	lds	r24, 0x1BDF
    7ea0:	90 91 e0 1b 	lds	r25, 0x1BE0
    7ea4:	89 2b       	or	r24, r25
    7ea6:	21 f4       	brne	.+8      	; 0x7eb0 <fdevopen+0x52>
			stdin = s;
    7ea8:	f0 93 e0 1b 	sts	0x1BE0, r31
    7eac:	e0 93 df 1b 	sts	0x1BDF, r30
	}

	if (put != 0) {
    7eb0:	01 15       	cp	r16, r1
    7eb2:	11 05       	cpc	r17, r1
    7eb4:	e1 f0       	breq	.+56     	; 0x7eee <fdevopen+0x90>
		s->put = put;
    7eb6:	11 87       	std	Z+9, r17	; 0x09
    7eb8:	00 87       	std	Z+8, r16	; 0x08
		s->flags |= __SWR;
    7eba:	83 81       	ldd	r24, Z+3	; 0x03
    7ebc:	82 60       	ori	r24, 0x02	; 2
    7ebe:	83 83       	std	Z+3, r24	; 0x03
		if (stdout == 0) {
    7ec0:	80 91 e1 1b 	lds	r24, 0x1BE1
    7ec4:	90 91 e2 1b 	lds	r25, 0x1BE2
    7ec8:	89 2b       	or	r24, r25
    7eca:	89 f4       	brne	.+34     	; 0x7eee <fdevopen+0x90>
			stdout = s;
    7ecc:	f0 93 e2 1b 	sts	0x1BE2, r31
    7ed0:	e0 93 e1 1b 	sts	0x1BE1, r30
			if (stderr == 0)
    7ed4:	80 91 e3 1b 	lds	r24, 0x1BE3
    7ed8:	90 91 e4 1b 	lds	r25, 0x1BE4
    7edc:	89 2b       	or	r24, r25
    7ede:	39 f4       	brne	.+14     	; 0x7eee <fdevopen+0x90>
				stderr = s;
    7ee0:	f0 93 e4 1b 	sts	0x1BE4, r31
    7ee4:	e0 93 e3 1b 	sts	0x1BE3, r30
    7ee8:	02 c0       	rjmp	.+4      	; 0x7eee <fdevopen+0x90>
    7eea:	a0 e0       	ldi	r26, 0x00	; 0
    7eec:	b0 e0       	ldi	r27, 0x00	; 0
		}
	}

	return s;
}
    7eee:	cd 01       	movw	r24, r26
    7ef0:	e6 e0       	ldi	r30, 0x06	; 6
    7ef2:	cd b7       	in	r28, 0x3d	; 61
    7ef4:	de b7       	in	r29, 0x3e	; 62
    7ef6:	0c 94 03 42 	jmp	0x8406	; 0x8406 <__epilogue_restores__+0x18>

00007efa <fputc>:
#include <stdio.h>
#include <stdlib.h>

#include "stdio_private.h"

/** \file */
    7efa:	0f 93       	push	r16
    7efc:	1f 93       	push	r17
    7efe:	cf 93       	push	r28
    7f00:	df 93       	push	r29
    7f02:	8c 01       	movw	r16, r24
    7f04:	eb 01       	movw	r28, r22

/** \ingroup avr_stdio
    7f06:	8b 81       	ldd	r24, Y+3	; 0x03
    7f08:	99 27       	eor	r25, r25
    7f0a:	81 ff       	sbrs	r24, 1
    7f0c:	1b c0       	rjmp	.+54     	; 0x7f44 <fputc+0x4a>
   This function is a replacement for \c fopen().

   It opens a stream for a device where the actual device
    7f0e:	82 ff       	sbrs	r24, 2
    7f10:	0d c0       	rjmp	.+26     	; 0x7f2c <fputc+0x32>
   implementation needs to be provided by the application.  If
    7f12:	2e 81       	ldd	r18, Y+6	; 0x06
    7f14:	3f 81       	ldd	r19, Y+7	; 0x07
    7f16:	8c 81       	ldd	r24, Y+4	; 0x04
    7f18:	9d 81       	ldd	r25, Y+5	; 0x05
    7f1a:	28 17       	cp	r18, r24
    7f1c:	39 07       	cpc	r19, r25
    7f1e:	64 f4       	brge	.+24     	; 0x7f38 <fputc+0x3e>
   successful, a pointer to the structure for the opened stream is
    7f20:	e8 81       	ld	r30, Y
    7f22:	f9 81       	ldd	r31, Y+1	; 0x01
    7f24:	01 93       	st	Z+, r16
    7f26:	f9 83       	std	Y+1, r31	; 0x01
    7f28:	e8 83       	st	Y, r30
    7f2a:	06 c0       	rjmp	.+12     	; 0x7f38 <fputc+0x3e>
   returned.  Reasons for a possible failure currently include that
   neither the \c put nor the \c get argument have been provided, thus
   attempting to open a stream with no IO intent at all, or that
   insufficient dynamic memory is available to establish a new stream.
    7f2c:	e8 85       	ldd	r30, Y+8	; 0x08
    7f2e:	f9 85       	ldd	r31, Y+9	; 0x09
    7f30:	80 2f       	mov	r24, r16
    7f32:	09 95       	icall
    7f34:	89 2b       	or	r24, r25
    7f36:	31 f4       	brne	.+12     	; 0x7f44 <fputc+0x4a>

    7f38:	8e 81       	ldd	r24, Y+6	; 0x06
    7f3a:	9f 81       	ldd	r25, Y+7	; 0x07
    7f3c:	01 96       	adiw	r24, 0x01	; 1
    7f3e:	9f 83       	std	Y+7, r25	; 0x07
    7f40:	8e 83       	std	Y+6, r24	; 0x06
    7f42:	02 c0       	rjmp	.+4      	; 0x7f48 <fputc+0x4e>
   If the \c put function pointer is provided, the stream is opened
    7f44:	0f ef       	ldi	r16, 0xFF	; 255
    7f46:	1f ef       	ldi	r17, 0xFF	; 255
   with write intent.  The function passed as \c put shall take two
   arguments, the first a character to write to the device,
   and the second a pointer to FILE, and shall return 0
   if the output was successful, and a nonzero value if the character
    7f48:	c8 01       	movw	r24, r16
    7f4a:	df 91       	pop	r29
    7f4c:	cf 91       	pop	r28
    7f4e:	1f 91       	pop	r17
    7f50:	0f 91       	pop	r16
    7f52:	08 95       	ret

00007f54 <printf>:
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>

#include "stdio_private.h"

    7f54:	a2 e0       	ldi	r26, 0x02	; 2
    7f56:	b0 e0       	ldi	r27, 0x00	; 0
    7f58:	e0 eb       	ldi	r30, 0xB0	; 176
    7f5a:	ff e3       	ldi	r31, 0x3F	; 63
    7f5c:	0c 94 eb 41 	jmp	0x83d6	; 0x83d6 <__prologue_saves__+0x20>
    7f60:	fe 01       	movw	r30, r28
    7f62:	37 96       	adiw	r30, 0x07	; 7
    7f64:	61 91       	ld	r22, Z+
    7f66:	71 91       	ld	r23, Z+
/** \file */

/** \ingroup avr_stdio
   This function is a replacement for \c fopen().
    7f68:	fa 83       	std	Y+2, r31	; 0x02
    7f6a:	e9 83       	std	Y+1, r30	; 0x01

    7f6c:	af 01       	movw	r20, r30
    7f6e:	80 91 e1 1b 	lds	r24, 0x1BE1
    7f72:	90 91 e2 1b 	lds	r25, 0x1BE2
    7f76:	0e 94 69 3d 	call	0x7ad2	; 0x7ad2 <vfprintf>
    7f7a:	e2 e0       	ldi	r30, 0x02	; 2
    7f7c:	22 96       	adiw	r28, 0x02	; 2
    7f7e:	0c 94 07 42 	jmp	0x840e	; 0x840e <__epilogue_restores__+0x20>

00007f82 <puts>:
#include <stdio.h>
#include <stdlib.h>

#include "stdio_private.h"

/** \file */
    7f82:	0f 93       	push	r16
    7f84:	1f 93       	push	r17
    7f86:	cf 93       	push	r28
    7f88:	df 93       	push	r29
    7f8a:	8c 01       	movw	r16, r24

/** \ingroup avr_stdio
   This function is a replacement for \c fopen().

    7f8c:	e0 91 e1 1b 	lds	r30, 0x1BE1
    7f90:	f0 91 e2 1b 	lds	r31, 0x1BE2
    7f94:	83 81       	ldd	r24, Z+3	; 0x03
    7f96:	81 ff       	sbrs	r24, 1
    7f98:	1f c0       	rjmp	.+62     	; 0x7fd8 <puts+0x56>
    7f9a:	c0 e0       	ldi	r28, 0x00	; 0
    7f9c:	d0 e0       	ldi	r29, 0x00	; 0
    7f9e:	0a c0       	rjmp	.+20     	; 0x7fb4 <puts+0x32>
   It opens a stream for a device where the actual device
   implementation needs to be provided by the application.  If
   successful, a pointer to the structure for the opened stream is
   returned.  Reasons for a possible failure currently include that
    7fa0:	fd 01       	movw	r30, r26
    7fa2:	20 85       	ldd	r18, Z+8	; 0x08
    7fa4:	31 85       	ldd	r19, Z+9	; 0x09
    7fa6:	bd 01       	movw	r22, r26
    7fa8:	f9 01       	movw	r30, r18
    7faa:	09 95       	icall
    7fac:	89 2b       	or	r24, r25
    7fae:	11 f0       	breq	.+4      	; 0x7fb4 <puts+0x32>
    7fb0:	cf ef       	ldi	r28, 0xFF	; 255
    7fb2:	df ef       	ldi	r29, 0xFF	; 255
/** \ingroup avr_stdio
   This function is a replacement for \c fopen().

   It opens a stream for a device where the actual device
   implementation needs to be provided by the application.  If
   successful, a pointer to the structure for the opened stream is
    7fb4:	f8 01       	movw	r30, r16
    7fb6:	81 91       	ld	r24, Z+
    7fb8:	8f 01       	movw	r16, r30
    7fba:	a0 91 e1 1b 	lds	r26, 0x1BE1
    7fbe:	b0 91 e2 1b 	lds	r27, 0x1BE2
    7fc2:	88 23       	and	r24, r24
    7fc4:	69 f7       	brne	.-38     	; 0x7fa0 <puts+0x1e>
   returned.  Reasons for a possible failure currently include that
   neither the \c put nor the \c get argument have been provided, thus
   attempting to open a stream with no IO intent at all, or that
    7fc6:	fd 01       	movw	r30, r26
    7fc8:	20 85       	ldd	r18, Z+8	; 0x08
    7fca:	31 85       	ldd	r19, Z+9	; 0x09
    7fcc:	bd 01       	movw	r22, r26
    7fce:	8a e0       	ldi	r24, 0x0A	; 10
    7fd0:	f9 01       	movw	r30, r18
    7fd2:	09 95       	icall
    7fd4:	89 2b       	or	r24, r25
    7fd6:	11 f0       	breq	.+4      	; 0x7fdc <puts+0x5a>
    7fd8:	cf ef       	ldi	r28, 0xFF	; 255
    7fda:	df ef       	ldi	r29, 0xFF	; 255
   insufficient dynamic memory is available to establish a new stream.

   If the \c put function pointer is provided, the stream is opened
   with write intent.  The function passed as \c put shall take two
    7fdc:	ce 01       	movw	r24, r28
    7fde:	df 91       	pop	r29
    7fe0:	cf 91       	pop	r28
    7fe2:	1f 91       	pop	r17
    7fe4:	0f 91       	pop	r16
    7fe6:	08 95       	ret

00007fe8 <__ultoa_invert>:
    7fe8:	fa 01       	movw	r30, r20
    7fea:	aa 27       	eor	r26, r26
    7fec:	28 30       	cpi	r18, 0x08	; 8
    7fee:	51 f1       	breq	.+84     	; 0x8044 <__ultoa_invert+0x5c>
    7ff0:	20 31       	cpi	r18, 0x10	; 16
    7ff2:	81 f1       	breq	.+96     	; 0x8054 <__ultoa_invert+0x6c>
    7ff4:	e8 94       	clt
    7ff6:	6f 93       	push	r22
    7ff8:	6e 7f       	andi	r22, 0xFE	; 254
    7ffa:	6e 5f       	subi	r22, 0xFE	; 254
    7ffc:	7f 4f       	sbci	r23, 0xFF	; 255
    7ffe:	8f 4f       	sbci	r24, 0xFF	; 255
    8000:	9f 4f       	sbci	r25, 0xFF	; 255
    8002:	af 4f       	sbci	r26, 0xFF	; 255
    8004:	b1 e0       	ldi	r27, 0x01	; 1
    8006:	3e d0       	rcall	.+124    	; 0x8084 <__ultoa_invert+0x9c>
    8008:	b4 e0       	ldi	r27, 0x04	; 4
    800a:	3c d0       	rcall	.+120    	; 0x8084 <__ultoa_invert+0x9c>
    800c:	67 0f       	add	r22, r23
    800e:	78 1f       	adc	r23, r24
    8010:	89 1f       	adc	r24, r25
    8012:	9a 1f       	adc	r25, r26
    8014:	a1 1d       	adc	r26, r1
    8016:	68 0f       	add	r22, r24
    8018:	79 1f       	adc	r23, r25
    801a:	8a 1f       	adc	r24, r26
    801c:	91 1d       	adc	r25, r1
    801e:	a1 1d       	adc	r26, r1
    8020:	6a 0f       	add	r22, r26
    8022:	71 1d       	adc	r23, r1
    8024:	81 1d       	adc	r24, r1
    8026:	91 1d       	adc	r25, r1
    8028:	a1 1d       	adc	r26, r1
    802a:	20 d0       	rcall	.+64     	; 0x806c <__ultoa_invert+0x84>
    802c:	09 f4       	brne	.+2      	; 0x8030 <__ultoa_invert+0x48>
    802e:	68 94       	set
    8030:	3f 91       	pop	r19
    8032:	2a e0       	ldi	r18, 0x0A	; 10
    8034:	26 9f       	mul	r18, r22
    8036:	11 24       	eor	r1, r1
    8038:	30 19       	sub	r19, r0
    803a:	30 5d       	subi	r19, 0xD0	; 208
    803c:	31 93       	st	Z+, r19
    803e:	de f6       	brtc	.-74     	; 0x7ff6 <__ultoa_invert+0xe>
    8040:	cf 01       	movw	r24, r30
    8042:	08 95       	ret
    8044:	46 2f       	mov	r20, r22
    8046:	47 70       	andi	r20, 0x07	; 7
    8048:	40 5d       	subi	r20, 0xD0	; 208
    804a:	41 93       	st	Z+, r20
    804c:	b3 e0       	ldi	r27, 0x03	; 3
    804e:	0f d0       	rcall	.+30     	; 0x806e <__ultoa_invert+0x86>
    8050:	c9 f7       	brne	.-14     	; 0x8044 <__ultoa_invert+0x5c>
    8052:	f6 cf       	rjmp	.-20     	; 0x8040 <__ultoa_invert+0x58>
    8054:	46 2f       	mov	r20, r22
    8056:	4f 70       	andi	r20, 0x0F	; 15
    8058:	40 5d       	subi	r20, 0xD0	; 208
    805a:	4a 33       	cpi	r20, 0x3A	; 58
    805c:	18 f0       	brcs	.+6      	; 0x8064 <__ultoa_invert+0x7c>
    805e:	49 5d       	subi	r20, 0xD9	; 217
    8060:	31 fd       	sbrc	r19, 1
    8062:	40 52       	subi	r20, 0x20	; 32
    8064:	41 93       	st	Z+, r20
    8066:	02 d0       	rcall	.+4      	; 0x806c <__ultoa_invert+0x84>
    8068:	a9 f7       	brne	.-22     	; 0x8054 <__ultoa_invert+0x6c>
    806a:	ea cf       	rjmp	.-44     	; 0x8040 <__ultoa_invert+0x58>
    806c:	b4 e0       	ldi	r27, 0x04	; 4
    806e:	a6 95       	lsr	r26
    8070:	97 95       	ror	r25
    8072:	87 95       	ror	r24
    8074:	77 95       	ror	r23
    8076:	67 95       	ror	r22
    8078:	ba 95       	dec	r27
    807a:	c9 f7       	brne	.-14     	; 0x806e <__ultoa_invert+0x86>
    807c:	00 97       	sbiw	r24, 0x00	; 0
    807e:	61 05       	cpc	r22, r1
    8080:	71 05       	cpc	r23, r1
    8082:	08 95       	ret
    8084:	9b 01       	movw	r18, r22
    8086:	ac 01       	movw	r20, r24
    8088:	0a 2e       	mov	r0, r26
    808a:	06 94       	lsr	r0
    808c:	57 95       	ror	r21
    808e:	47 95       	ror	r20
    8090:	37 95       	ror	r19
    8092:	27 95       	ror	r18
    8094:	ba 95       	dec	r27
    8096:	c9 f7       	brne	.-14     	; 0x808a <__ultoa_invert+0xa2>
    8098:	62 0f       	add	r22, r18
    809a:	73 1f       	adc	r23, r19
    809c:	84 1f       	adc	r24, r20
    809e:	95 1f       	adc	r25, r21
    80a0:	a0 1d       	adc	r26, r0
    80a2:	08 95       	ret

000080a4 <calloc>:
#include <stdio.h>
#include <stdlib.h>

#include "stdio_private.h"

/** \file */
    80a4:	0f 93       	push	r16
    80a6:	1f 93       	push	r17
    80a8:	cf 93       	push	r28
    80aa:	df 93       	push	r29

/** \ingroup avr_stdio
   This function is a replacement for \c fopen().
    80ac:	68 9f       	mul	r22, r24
    80ae:	80 01       	movw	r16, r0
    80b0:	69 9f       	mul	r22, r25
    80b2:	10 0d       	add	r17, r0
    80b4:	78 9f       	mul	r23, r24
    80b6:	10 0d       	add	r17, r0
    80b8:	11 24       	eor	r1, r1
    80ba:	c8 01       	movw	r24, r16
    80bc:	0e 94 6e 40 	call	0x80dc	; 0x80dc <malloc>
    80c0:	ec 01       	movw	r28, r24
    80c2:	00 97       	sbiw	r24, 0x00	; 0
    80c4:	29 f0       	breq	.+10     	; 0x80d0 <calloc+0x2c>

   It opens a stream for a device where the actual device
    80c6:	a8 01       	movw	r20, r16
    80c8:	60 e0       	ldi	r22, 0x00	; 0
    80ca:	70 e0       	ldi	r23, 0x00	; 0
    80cc:	0e 94 6c 41 	call	0x82d8	; 0x82d8 <memset>
   implementation needs to be provided by the application.  If
   successful, a pointer to the structure for the opened stream is
    80d0:	ce 01       	movw	r24, r28
    80d2:	df 91       	pop	r29
    80d4:	cf 91       	pop	r28
    80d6:	1f 91       	pop	r17
    80d8:	0f 91       	pop	r16
    80da:	08 95       	ret

000080dc <malloc>:
   \c int type.  If an error occurs when trying to read from the
   device, it shall return \c _FDEV_ERR.
   If an end-of-file condition was reached while reading from the
   device, \c _FDEV_EOF shall be returned.

   If both functions are provided, the stream is opened with read
    80dc:	cf 93       	push	r28
    80de:	df 93       	push	r29
    80e0:	ac 01       	movw	r20, r24

   fdevopen() uses calloc() (und thus malloc()) in order to allocate
   the storage for the new stream.

   \note If the macro __STDIO_FDEVOPEN_COMPAT_12 is declared before
   including <stdio.h>, a function prototype for fdevopen() will be
    80e2:	02 97       	sbiw	r24, 0x02	; 2
    80e4:	10 f4       	brcc	.+4      	; 0x80ea <malloc+0xe>
    80e6:	42 e0       	ldi	r20, 0x02	; 2
    80e8:	50 e0       	ldi	r21, 0x00	; 0
*/

FILE *
fdevopen(int (*put)(char, FILE *), int (*get)(FILE *))
{
	FILE *s;
    80ea:	a0 91 e7 1b 	lds	r26, 0x1BE7
    80ee:	b0 91 e8 1b 	lds	r27, 0x1BE8
    80f2:	fd 01       	movw	r30, r26
    80f4:	c0 e0       	ldi	r28, 0x00	; 0
    80f6:	d0 e0       	ldi	r29, 0x00	; 0
    80f8:	20 e0       	ldi	r18, 0x00	; 0
    80fa:	30 e0       	ldi	r19, 0x00	; 0
    80fc:	20 c0       	rjmp	.+64     	; 0x813e <malloc+0x62>

	if (put == 0 && get == 0)
		return 0;
    80fe:	80 81       	ld	r24, Z
    8100:	91 81       	ldd	r25, Z+1	; 0x01
    8102:	84 17       	cp	r24, r20
    8104:	95 07       	cpc	r25, r21
    8106:	69 f4       	brne	.+26     	; 0x8122 <malloc+0x46>
    8108:	82 81       	ldd	r24, Z+2	; 0x02
    810a:	93 81       	ldd	r25, Z+3	; 0x03

	if ((s = calloc(1, sizeof(FILE))) == 0)
		return 0;

	s->flags = __SMALLOC;
    810c:	20 97       	sbiw	r28, 0x00	; 0
    810e:	19 f0       	breq	.+6      	; 0x8116 <malloc+0x3a>

    8110:	9b 83       	std	Y+3, r25	; 0x03
    8112:	8a 83       	std	Y+2, r24	; 0x02
    8114:	04 c0       	rjmp	.+8      	; 0x811e <malloc+0x42>
	if (get != 0) {
		s->get = get;
    8116:	90 93 e8 1b 	sts	0x1BE8, r25
    811a:	80 93 e7 1b 	sts	0x1BE7, r24
		s->flags |= __SRD;
    811e:	9f 01       	movw	r18, r30
    8120:	32 c0       	rjmp	.+100    	; 0x8186 <malloc+0xaa>
		if (stdin == 0)
			stdin = s;
    8122:	48 17       	cp	r20, r24
    8124:	59 07       	cpc	r21, r25
    8126:	38 f4       	brcc	.+14     	; 0x8136 <malloc+0x5a>
	}
    8128:	21 15       	cp	r18, r1
    812a:	31 05       	cpc	r19, r1
    812c:	19 f0       	breq	.+6      	; 0x8134 <malloc+0x58>
    812e:	82 17       	cp	r24, r18
    8130:	93 07       	cpc	r25, r19
    8132:	08 f4       	brcc	.+2      	; 0x8136 <malloc+0x5a>
    8134:	9c 01       	movw	r18, r24
FILE *
fdevopen(int (*put)(char, FILE *), int (*get)(FILE *))
{
	FILE *s;

	if (put == 0 && get == 0)
    8136:	ef 01       	movw	r28, r30
    8138:	02 80       	ldd	r0, Z+2	; 0x02
    813a:	f3 81       	ldd	r31, Z+3	; 0x03
    813c:	e0 2d       	mov	r30, r0

FILE *
fdevopen(int (*put)(char, FILE *), int (*get)(FILE *))
{
	FILE *s;

    813e:	30 97       	sbiw	r30, 0x00	; 0
    8140:	f1 f6       	brne	.-68     	; 0x80fe <malloc+0x22>
		}
	}

	return s;
}
    8142:	21 15       	cp	r18, r1
    8144:	31 05       	cpc	r19, r1
    8146:	99 f1       	breq	.+102    	; 0x81ae <malloc+0xd2>
    8148:	c9 01       	movw	r24, r18
    814a:	84 1b       	sub	r24, r20
    814c:	95 0b       	sbc	r25, r21
    814e:	04 97       	sbiw	r24, 0x04	; 4
    8150:	08 f4       	brcc	.+2      	; 0x8154 <malloc+0x78>
    8152:	a9 01       	movw	r20, r18
    8154:	e0 e0       	ldi	r30, 0x00	; 0
    8156:	f0 e0       	ldi	r31, 0x00	; 0
    8158:	28 c0       	rjmp	.+80     	; 0x81aa <malloc+0xce>
    815a:	8d 91       	ld	r24, X+
    815c:	9c 91       	ld	r25, X
    815e:	11 97       	sbiw	r26, 0x01	; 1
    8160:	82 17       	cp	r24, r18
    8162:	93 07       	cpc	r25, r19
    8164:	f9 f4       	brne	.+62     	; 0x81a4 <malloc+0xc8>
    8166:	48 17       	cp	r20, r24
    8168:	59 07       	cpc	r21, r25
    816a:	81 f4       	brne	.+32     	; 0x818c <malloc+0xb0>
    816c:	ed 01       	movw	r28, r26
    816e:	8a 81       	ldd	r24, Y+2	; 0x02
    8170:	9b 81       	ldd	r25, Y+3	; 0x03
    8172:	30 97       	sbiw	r30, 0x00	; 0
    8174:	19 f0       	breq	.+6      	; 0x817c <malloc+0xa0>
    8176:	93 83       	std	Z+3, r25	; 0x03
    8178:	82 83       	std	Z+2, r24	; 0x02
    817a:	04 c0       	rjmp	.+8      	; 0x8184 <malloc+0xa8>
    817c:	90 93 e8 1b 	sts	0x1BE8, r25
    8180:	80 93 e7 1b 	sts	0x1BE7, r24
    8184:	9d 01       	movw	r18, r26
    8186:	2e 5f       	subi	r18, 0xFE	; 254
    8188:	3f 4f       	sbci	r19, 0xFF	; 255
    818a:	4c c0       	rjmp	.+152    	; 0x8224 <malloc+0x148>
    818c:	84 1b       	sub	r24, r20
    818e:	95 0b       	sbc	r25, r21
    8190:	fd 01       	movw	r30, r26
    8192:	e8 0f       	add	r30, r24
    8194:	f9 1f       	adc	r31, r25
    8196:	41 93       	st	Z+, r20
    8198:	51 93       	st	Z+, r21
    819a:	02 97       	sbiw	r24, 0x02	; 2
    819c:	8d 93       	st	X+, r24
    819e:	9c 93       	st	X, r25
    81a0:	9f 01       	movw	r18, r30
    81a2:	40 c0       	rjmp	.+128    	; 0x8224 <malloc+0x148>
    81a4:	fd 01       	movw	r30, r26
    81a6:	a2 81       	ldd	r26, Z+2	; 0x02
    81a8:	b3 81       	ldd	r27, Z+3	; 0x03
}
    81aa:	10 97       	sbiw	r26, 0x00	; 0
    81ac:	b1 f6       	brne	.-84     	; 0x815a <malloc+0x7e>
    81ae:	80 91 e5 1b 	lds	r24, 0x1BE5
    81b2:	90 91 e6 1b 	lds	r25, 0x1BE6
    81b6:	89 2b       	or	r24, r25
    81b8:	41 f4       	brne	.+16     	; 0x81ca <malloc+0xee>
    81ba:	80 91 17 08 	lds	r24, 0x0817
    81be:	90 91 18 08 	lds	r25, 0x0818
    81c2:	90 93 e6 1b 	sts	0x1BE6, r25
    81c6:	80 93 e5 1b 	sts	0x1BE5, r24
    81ca:	20 91 19 08 	lds	r18, 0x0819
    81ce:	30 91 1a 08 	lds	r19, 0x081A
    81d2:	21 15       	cp	r18, r1
    81d4:	31 05       	cpc	r19, r1
    81d6:	49 f4       	brne	.+18     	; 0x81ea <malloc+0x10e>
    81d8:	8d b7       	in	r24, 0x3d	; 61
    81da:	28 2f       	mov	r18, r24
    81dc:	33 27       	eor	r19, r19
    81de:	80 91 15 08 	lds	r24, 0x0815
    81e2:	90 91 16 08 	lds	r25, 0x0816
    81e6:	28 1b       	sub	r18, r24
    81e8:	39 0b       	sbc	r19, r25
    81ea:	a0 91 e5 1b 	lds	r26, 0x1BE5
    81ee:	b0 91 e6 1b 	lds	r27, 0x1BE6
    81f2:	2a 1b       	sub	r18, r26
    81f4:	3b 0b       	sbc	r19, r27
    81f6:	24 17       	cp	r18, r20
    81f8:	35 07       	cpc	r19, r21
    81fa:	90 f0       	brcs	.+36     	; 0x8220 <malloc+0x144>
    81fc:	ca 01       	movw	r24, r20
    81fe:	02 96       	adiw	r24, 0x02	; 2
    8200:	28 17       	cp	r18, r24
    8202:	39 07       	cpc	r19, r25
    8204:	68 f0       	brcs	.+26     	; 0x8220 <malloc+0x144>
    8206:	9d 01       	movw	r18, r26
    8208:	2e 5f       	subi	r18, 0xFE	; 254
    820a:	3f 4f       	sbci	r19, 0xFF	; 255
    820c:	c9 01       	movw	r24, r18
    820e:	84 0f       	add	r24, r20
    8210:	95 1f       	adc	r25, r21
    8212:	90 93 e6 1b 	sts	0x1BE6, r25
    8216:	80 93 e5 1b 	sts	0x1BE5, r24
    821a:	4d 93       	st	X+, r20
    821c:	5c 93       	st	X, r21
    821e:	02 c0       	rjmp	.+4      	; 0x8224 <malloc+0x148>
    8220:	20 e0       	ldi	r18, 0x00	; 0
    8222:	30 e0       	ldi	r19, 0x00	; 0
    8224:	c9 01       	movw	r24, r18
    8226:	df 91       	pop	r29
    8228:	cf 91       	pop	r28
    822a:	08 95       	ret

0000822c <free>:
    822c:	cf 93       	push	r28
    822e:	df 93       	push	r29
    8230:	00 97       	sbiw	r24, 0x00	; 0
    8232:	09 f4       	brne	.+2      	; 0x8236 <free+0xa>
    8234:	4e c0       	rjmp	.+156    	; 0x82d2 <free+0xa6>
    8236:	ec 01       	movw	r28, r24
    8238:	22 97       	sbiw	r28, 0x02	; 2
    823a:	1b 82       	std	Y+3, r1	; 0x03
    823c:	1a 82       	std	Y+2, r1	; 0x02
    823e:	a0 91 e7 1b 	lds	r26, 0x1BE7
    8242:	b0 91 e8 1b 	lds	r27, 0x1BE8
    8246:	10 97       	sbiw	r26, 0x00	; 0
    8248:	11 f1       	breq	.+68     	; 0x828e <free+0x62>
    824a:	40 e0       	ldi	r20, 0x00	; 0
    824c:	50 e0       	ldi	r21, 0x00	; 0
    824e:	01 c0       	rjmp	.+2      	; 0x8252 <free+0x26>
    8250:	dc 01       	movw	r26, r24
    8252:	ac 17       	cp	r26, r28
    8254:	bd 07       	cpc	r27, r29
    8256:	00 f1       	brcs	.+64     	; 0x8298 <free+0x6c>
    8258:	bb 83       	std	Y+3, r27	; 0x03
    825a:	aa 83       	std	Y+2, r26	; 0x02
    825c:	fe 01       	movw	r30, r28
    825e:	21 91       	ld	r18, Z+
    8260:	31 91       	ld	r19, Z+
    8262:	e2 0f       	add	r30, r18
    8264:	f3 1f       	adc	r31, r19
    8266:	ea 17       	cp	r30, r26
    8268:	fb 07       	cpc	r31, r27
    826a:	71 f4       	brne	.+28     	; 0x8288 <free+0x5c>
    826c:	8d 91       	ld	r24, X+
    826e:	9c 91       	ld	r25, X
    8270:	11 97       	sbiw	r26, 0x01	; 1
    8272:	28 0f       	add	r18, r24
    8274:	39 1f       	adc	r19, r25
    8276:	2e 5f       	subi	r18, 0xFE	; 254
    8278:	3f 4f       	sbci	r19, 0xFF	; 255
    827a:	39 83       	std	Y+1, r19	; 0x01
    827c:	28 83       	st	Y, r18
    827e:	fd 01       	movw	r30, r26
    8280:	82 81       	ldd	r24, Z+2	; 0x02
    8282:	93 81       	ldd	r25, Z+3	; 0x03
    8284:	9b 83       	std	Y+3, r25	; 0x03
    8286:	8a 83       	std	Y+2, r24	; 0x02
    8288:	41 15       	cp	r20, r1
    828a:	51 05       	cpc	r21, r1
    828c:	59 f4       	brne	.+22     	; 0x82a4 <free+0x78>
    828e:	d0 93 e8 1b 	sts	0x1BE8, r29
    8292:	c0 93 e7 1b 	sts	0x1BE7, r28
    8296:	1d c0       	rjmp	.+58     	; 0x82d2 <free+0xa6>
    8298:	fd 01       	movw	r30, r26
    829a:	82 81       	ldd	r24, Z+2	; 0x02
    829c:	93 81       	ldd	r25, Z+3	; 0x03
    829e:	ad 01       	movw	r20, r26
    82a0:	00 97       	sbiw	r24, 0x00	; 0
    82a2:	b1 f6       	brne	.-84     	; 0x8250 <free+0x24>
    82a4:	fa 01       	movw	r30, r20
    82a6:	d3 83       	std	Z+3, r29	; 0x03
    82a8:	c2 83       	std	Z+2, r28	; 0x02
    82aa:	21 91       	ld	r18, Z+
    82ac:	31 91       	ld	r19, Z+
    82ae:	e2 0f       	add	r30, r18
    82b0:	f3 1f       	adc	r31, r19
    82b2:	ec 17       	cp	r30, r28
    82b4:	fd 07       	cpc	r31, r29
    82b6:	69 f4       	brne	.+26     	; 0x82d2 <free+0xa6>
    82b8:	88 81       	ld	r24, Y
    82ba:	99 81       	ldd	r25, Y+1	; 0x01
    82bc:	28 0f       	add	r18, r24
    82be:	39 1f       	adc	r19, r25
    82c0:	2e 5f       	subi	r18, 0xFE	; 254
    82c2:	3f 4f       	sbci	r19, 0xFF	; 255
    82c4:	fa 01       	movw	r30, r20
    82c6:	31 83       	std	Z+1, r19	; 0x01
    82c8:	20 83       	st	Z, r18
    82ca:	8a 81       	ldd	r24, Y+2	; 0x02
    82cc:	9b 81       	ldd	r25, Y+3	; 0x03
    82ce:	93 83       	std	Z+3, r25	; 0x03
    82d0:	82 83       	std	Z+2, r24	; 0x02
    82d2:	df 91       	pop	r29
    82d4:	cf 91       	pop	r28
    82d6:	08 95       	ret

000082d8 <memset>:
    82d8:	dc 01       	movw	r26, r24
    82da:	01 c0       	rjmp	.+2      	; 0x82de <memset+0x6>
    82dc:	6d 93       	st	X+, r22
    82de:	41 50       	subi	r20, 0x01	; 1
    82e0:	50 40       	sbci	r21, 0x00	; 0
    82e2:	e0 f7       	brcc	.-8      	; 0x82dc <memset+0x4>
    82e4:	08 95       	ret

000082e6 <__mulsi3>:
    82e6:	62 9f       	mul	r22, r18
    82e8:	d0 01       	movw	r26, r0
    82ea:	73 9f       	mul	r23, r19
    82ec:	f0 01       	movw	r30, r0
    82ee:	82 9f       	mul	r24, r18
    82f0:	e0 0d       	add	r30, r0
    82f2:	f1 1d       	adc	r31, r1
    82f4:	64 9f       	mul	r22, r20
    82f6:	e0 0d       	add	r30, r0
    82f8:	f1 1d       	adc	r31, r1
    82fa:	92 9f       	mul	r25, r18
    82fc:	f0 0d       	add	r31, r0
    82fe:	83 9f       	mul	r24, r19
    8300:	f0 0d       	add	r31, r0
    8302:	74 9f       	mul	r23, r20
    8304:	f0 0d       	add	r31, r0
    8306:	65 9f       	mul	r22, r21
    8308:	f0 0d       	add	r31, r0
    830a:	99 27       	eor	r25, r25
    830c:	72 9f       	mul	r23, r18
    830e:	b0 0d       	add	r27, r0
    8310:	e1 1d       	adc	r30, r1
    8312:	f9 1f       	adc	r31, r25
    8314:	63 9f       	mul	r22, r19
    8316:	b0 0d       	add	r27, r0
    8318:	e1 1d       	adc	r30, r1
    831a:	f9 1f       	adc	r31, r25
    831c:	bd 01       	movw	r22, r26
    831e:	cf 01       	movw	r24, r30
    8320:	11 24       	eor	r1, r1
    8322:	08 95       	ret

00008324 <__udivmodhi4>:
    8324:	aa 1b       	sub	r26, r26
    8326:	bb 1b       	sub	r27, r27
    8328:	51 e1       	ldi	r21, 0x11	; 17
    832a:	07 c0       	rjmp	.+14     	; 0x833a <__udivmodhi4_ep>

0000832c <__udivmodhi4_loop>:
    832c:	aa 1f       	adc	r26, r26
    832e:	bb 1f       	adc	r27, r27
    8330:	a6 17       	cp	r26, r22
    8332:	b7 07       	cpc	r27, r23
    8334:	10 f0       	brcs	.+4      	; 0x833a <__udivmodhi4_ep>
    8336:	a6 1b       	sub	r26, r22
    8338:	b7 0b       	sbc	r27, r23

0000833a <__udivmodhi4_ep>:
    833a:	88 1f       	adc	r24, r24
    833c:	99 1f       	adc	r25, r25
    833e:	5a 95       	dec	r21
    8340:	a9 f7       	brne	.-22     	; 0x832c <__udivmodhi4_loop>
    8342:	80 95       	com	r24
    8344:	90 95       	com	r25
    8346:	bc 01       	movw	r22, r24
    8348:	cd 01       	movw	r24, r26
    834a:	08 95       	ret

0000834c <__divmodhi4>:
    834c:	97 fb       	bst	r25, 7
    834e:	09 2e       	mov	r0, r25
    8350:	07 26       	eor	r0, r23
    8352:	0a d0       	rcall	.+20     	; 0x8368 <__divmodhi4_neg1>
    8354:	77 fd       	sbrc	r23, 7
    8356:	04 d0       	rcall	.+8      	; 0x8360 <__divmodhi4_neg2>
    8358:	e5 df       	rcall	.-54     	; 0x8324 <__udivmodhi4>
    835a:	06 d0       	rcall	.+12     	; 0x8368 <__divmodhi4_neg1>
    835c:	00 20       	and	r0, r0
    835e:	1a f4       	brpl	.+6      	; 0x8366 <__divmodhi4_exit>

00008360 <__divmodhi4_neg2>:
    8360:	70 95       	com	r23
    8362:	61 95       	neg	r22
    8364:	7f 4f       	sbci	r23, 0xFF	; 255

00008366 <__divmodhi4_exit>:
    8366:	08 95       	ret

00008368 <__divmodhi4_neg1>:
    8368:	f6 f7       	brtc	.-4      	; 0x8366 <__divmodhi4_exit>
    836a:	90 95       	com	r25
    836c:	81 95       	neg	r24
    836e:	9f 4f       	sbci	r25, 0xFF	; 255
    8370:	08 95       	ret

00008372 <__udivmodsi4>:
    8372:	a1 e2       	ldi	r26, 0x21	; 33
    8374:	1a 2e       	mov	r1, r26
    8376:	aa 1b       	sub	r26, r26
    8378:	bb 1b       	sub	r27, r27
    837a:	fd 01       	movw	r30, r26
    837c:	0d c0       	rjmp	.+26     	; 0x8398 <__udivmodsi4_ep>

0000837e <__udivmodsi4_loop>:
    837e:	aa 1f       	adc	r26, r26
    8380:	bb 1f       	adc	r27, r27
    8382:	ee 1f       	adc	r30, r30
    8384:	ff 1f       	adc	r31, r31
    8386:	a2 17       	cp	r26, r18
    8388:	b3 07       	cpc	r27, r19
    838a:	e4 07       	cpc	r30, r20
    838c:	f5 07       	cpc	r31, r21
    838e:	20 f0       	brcs	.+8      	; 0x8398 <__udivmodsi4_ep>
    8390:	a2 1b       	sub	r26, r18
    8392:	b3 0b       	sbc	r27, r19
    8394:	e4 0b       	sbc	r30, r20
    8396:	f5 0b       	sbc	r31, r21

00008398 <__udivmodsi4_ep>:
    8398:	66 1f       	adc	r22, r22
    839a:	77 1f       	adc	r23, r23
    839c:	88 1f       	adc	r24, r24
    839e:	99 1f       	adc	r25, r25
    83a0:	1a 94       	dec	r1
    83a2:	69 f7       	brne	.-38     	; 0x837e <__udivmodsi4_loop>
    83a4:	60 95       	com	r22
    83a6:	70 95       	com	r23
    83a8:	80 95       	com	r24
    83aa:	90 95       	com	r25
    83ac:	9b 01       	movw	r18, r22
    83ae:	ac 01       	movw	r20, r24
    83b0:	bd 01       	movw	r22, r26
    83b2:	cf 01       	movw	r24, r30
    83b4:	08 95       	ret

000083b6 <__prologue_saves__>:
    83b6:	2f 92       	push	r2
    83b8:	3f 92       	push	r3
    83ba:	4f 92       	push	r4
    83bc:	5f 92       	push	r5
    83be:	6f 92       	push	r6
    83c0:	7f 92       	push	r7
    83c2:	8f 92       	push	r8
    83c4:	9f 92       	push	r9
    83c6:	af 92       	push	r10
    83c8:	bf 92       	push	r11
    83ca:	cf 92       	push	r12
    83cc:	df 92       	push	r13
    83ce:	ef 92       	push	r14
    83d0:	ff 92       	push	r15
    83d2:	0f 93       	push	r16
    83d4:	1f 93       	push	r17
    83d6:	cf 93       	push	r28
    83d8:	df 93       	push	r29
    83da:	cd b7       	in	r28, 0x3d	; 61
    83dc:	de b7       	in	r29, 0x3e	; 62
    83de:	ca 1b       	sub	r28, r26
    83e0:	db 0b       	sbc	r29, r27
    83e2:	0f b6       	in	r0, 0x3f	; 63
    83e4:	f8 94       	cli
    83e6:	de bf       	out	0x3e, r29	; 62
    83e8:	0f be       	out	0x3f, r0	; 63
    83ea:	cd bf       	out	0x3d, r28	; 61
    83ec:	09 94       	ijmp

000083ee <__epilogue_restores__>:
    83ee:	2a 88       	ldd	r2, Y+18	; 0x12
    83f0:	39 88       	ldd	r3, Y+17	; 0x11
    83f2:	48 88       	ldd	r4, Y+16	; 0x10
    83f4:	5f 84       	ldd	r5, Y+15	; 0x0f
    83f6:	6e 84       	ldd	r6, Y+14	; 0x0e
    83f8:	7d 84       	ldd	r7, Y+13	; 0x0d
    83fa:	8c 84       	ldd	r8, Y+12	; 0x0c
    83fc:	9b 84       	ldd	r9, Y+11	; 0x0b
    83fe:	aa 84       	ldd	r10, Y+10	; 0x0a
    8400:	b9 84       	ldd	r11, Y+9	; 0x09
    8402:	c8 84       	ldd	r12, Y+8	; 0x08
    8404:	df 80       	ldd	r13, Y+7	; 0x07
    8406:	ee 80       	ldd	r14, Y+6	; 0x06
    8408:	fd 80       	ldd	r15, Y+5	; 0x05
    840a:	0c 81       	ldd	r16, Y+4	; 0x04
    840c:	1b 81       	ldd	r17, Y+3	; 0x03
    840e:	aa 81       	ldd	r26, Y+2	; 0x02
    8410:	b9 81       	ldd	r27, Y+1	; 0x01
    8412:	ce 0f       	add	r28, r30
    8414:	d1 1d       	adc	r29, r1
    8416:	0f b6       	in	r0, 0x3f	; 63
    8418:	f8 94       	cli
    841a:	de bf       	out	0x3e, r29	; 62
    841c:	0f be       	out	0x3f, r0	; 63
    841e:	cd bf       	out	0x3d, r28	; 61
    8420:	ed 01       	movw	r28, r26
    8422:	08 95       	ret

00008424 <__eeprom_read_byte_1F2021>:
    8424:	f9 99       	sbic	0x1f, 1	; 31
    8426:	fe cf       	rjmp	.-4      	; 0x8424 <__eeprom_read_byte_1F2021>
    8428:	b2 bd       	out	0x22, r27	; 34
    842a:	a1 bd       	out	0x21, r26	; 33
    842c:	f8 9a       	sbi	0x1f, 0	; 31
    842e:	11 96       	adiw	r26, 0x01	; 1
    8430:	00 b4       	in	r0, 0x20	; 32
    8432:	08 95       	ret

00008434 <__eeprom_write_byte_1F2021>:
    8434:	f9 99       	sbic	0x1f, 1	; 31
    8436:	fe cf       	rjmp	.-4      	; 0x8434 <__eeprom_write_byte_1F2021>
    8438:	b2 bd       	out	0x22, r27	; 34
    843a:	a1 bd       	out	0x21, r26	; 33
    843c:	00 bc       	out	0x20, r0	; 32
    843e:	11 96       	adiw	r26, 0x01	; 1
    8440:	0f b6       	in	r0, 0x3f	; 63
    8442:	f8 94       	cli
    8444:	fa 9a       	sbi	0x1f, 2	; 31
    8446:	f9 9a       	sbi	0x1f, 1	; 31
    8448:	0f be       	out	0x3f, r0	; 63
    844a:	08 95       	ret

0000844c <_exit>:
    844c:	ff cf       	rjmp	.-2      	; 0x844c <_exit>
