   1               		.file	"dlmo.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.global __do_copy_data
   8               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
 175               	.global	findGraph
 177               	findGraph:
 178               		.stabd	46,0,0
   1:../../../src/net/isa/dlmo.c **** /******************************************************************************
   2:../../../src/net/isa/dlmo.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:../../../src/net/isa/dlmo.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:../../../src/net/isa/dlmo.c **** *  All rights reserved.
   5:../../../src/net/isa/dlmo.c **** *
   6:../../../src/net/isa/dlmo.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:../../../src/net/isa/dlmo.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:../../../src/net/isa/dlmo.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:../../../src/net/isa/dlmo.c **** *
  10:../../../src/net/isa/dlmo.c **** *  This program is free software: you can redistribute it and/or modify
  11:../../../src/net/isa/dlmo.c **** *  it under the terms of the GNU General Public License as published by
  12:../../../src/net/isa/dlmo.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:../../../src/net/isa/dlmo.c **** *
  14:../../../src/net/isa/dlmo.c **** *  This program is distributed in the hope that it will be useful,
  15:../../../src/net/isa/dlmo.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:../../../src/net/isa/dlmo.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:../../../src/net/isa/dlmo.c **** *  GNU General Public License for more details.
  18:../../../src/net/isa/dlmo.c **** *
  19:../../../src/net/isa/dlmo.c **** *  You should have received a copy of the GNU General Public License
  20:../../../src/net/isa/dlmo.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:../../../src/net/isa/dlmo.c **** *
  22:../../../src/net/isa/dlmo.c **** *  Contributing Authors (specific to this file):
  23:../../../src/net/isa/dlmo.c **** *  Azriel Samson
  24:../../../src/net/isa/dlmo.c **** *  Vignesh Anantha Subramanium
  25:../../../src/net/isa/dlmo.c **** *******************************************************************************/
  26:../../../src/net/isa/dlmo.c **** 
  27:../../../src/net/isa/dlmo.c **** //#include <rtl_debug.h>
  28:../../../src/net/isa/dlmo.c **** #include <include.h>
  29:../../../src/net/isa/dlmo.c **** #include <ulib.h>
  30:../../../src/net/isa/dlmo.c **** #include <avr/sleep.h>
  31:../../../src/net/isa/dlmo.c **** #include <avr/wdt.h>
  32:../../../src/net/isa/dlmo.c **** #include <avr/eeprom.h>
  33:../../../src/net/isa/dlmo.c **** #include <stdio.h>
  34:../../../src/net/isa/dlmo.c **** #include <avr/interrupt.h>
  35:../../../src/net/isa/dlmo.c **** #include <nrk.h>
  36:../../../src/net/isa/dlmo.c **** #include <nrk_events.h>
  37:../../../src/net/isa/dlmo.c **** #include <nrk_timer.h>
  38:../../../src/net/isa/dlmo.c **** #include <nrk_error.h>
  39:../../../src/net/isa/dlmo.c **** //#include <rtl_defs.h>
  40:../../../src/net/isa/dlmo.c **** #include <stdlib.h>
  41:../../../src/net/isa/dlmo.c **** #include <isa_error.h>
  42:../../../src/net/isa/dlmo.c **** #include <dmo.h>
  43:../../../src/net/isa/dlmo.c **** #include <dlmo.h>
  44:../../../src/net/isa/dlmo.c **** #include <isa_messagetypes.h>
  45:../../../src/net/isa/dlmo.c **** 
  46:../../../src/net/isa/dlmo.c **** 
  47:../../../src/net/isa/dlmo.c **** //********************** Global variables*************************************
  48:../../../src/net/isa/dlmo.c **** volatile DLMO_LINK dlmoLink[DLMO_LINK_MAX_COUNT];
  49:../../../src/net/isa/dlmo.c **** volatile DLMO_NEIGHBOR dlmoNeighbor[DLMO_NEIGHBOR_MAX_COUNT];
  50:../../../src/net/isa/dlmo.c **** volatile DLMO_GRAPH dlmoGraph[DLMO_GRAPH_MAX_COUNT];
  51:../../../src/net/isa/dlmo.c **** volatile ISA_QUEUE isaQueue[TRANSMIT_QUEUE_MAX_SIZE] ;
  52:../../../src/net/isa/dlmo.c **** volatile DLMO_CANDIDATE dlmoCandidate;
  53:../../../src/net/isa/dlmo.c **** //ISA_QUEUE *isaQueuePointer[TRANSMIT_QUEUE_MAX_SIZE]
  54:../../../src/net/isa/dlmo.c **** uint8_t isa_sched[ISA_SLOTS_PER_FRAME];
  55:../../../src/net/isa/dlmo.c **** uint64_t isa_tdma_rx_mask;	//should not need this
  56:../../../src/net/isa/dlmo.c **** uint64_t isa_tdma_tx_mask;	// should not need this
  57:../../../src/net/isa/dlmo.c **** uint64_t isa_slot;	//Set to 1 if slot is in use
  58:../../../src/net/isa/dlmo.c **** uint8_t isaTxQueueSize; //holds the number of elements present in the Queue
  59:../../../src/net/isa/dlmo.c **** 
  60:../../../src/net/isa/dlmo.c **** /* Device management object*/
  61:../../../src/net/isa/dlmo.c ****  DMO dmo;
  62:../../../src/net/isa/dlmo.c ****  DLMO_DISCOVERY_ALERT discoveryAlert;
  63:../../../src/net/isa/dlmo.c **** 
  64:../../../src/net/isa/dlmo.c ****  /* Variables for neighbor table transmission */
  65:../../../src/net/isa/dlmo.c ****  nrk_time_t lastSentTime;
  66:../../../src/net/isa/dlmo.c ****  uint8_t nbr_buf[RF_MAX_PAYLOAD_SIZE];
  67:../../../src/net/isa/dlmo.c **** 
  68:../../../src/net/isa/dlmo.c **** //********************Local function definitions***********************************
  69:../../../src/net/isa/dlmo.c **** void configureSlot(uint8_t slotNumber, uint16_t neighborId, LinkType linkType, bool clockSource, ui
  70:../../../src/net/isa/dlmo.c **** void dlmoInit();
  71:../../../src/net/isa/dlmo.c **** DLMO_GRAPH* addGraph(uint16_t graphId, uint8_t neighborCount, uint16_t n1, uint16_t n2, uint16_t n3
  72:../../../src/net/isa/dlmo.c **** int8_t addLink(uint8_t slotNumber, uint16_t neighborId,uint16_t graphId , LinkType linkType, GraphT
  73:../../../src/net/isa/dlmo.c **** DLMO_NEIGHBOR* addNeighbor(uint16_t index,uint64_t EUI64, uint8_t groupCode1, uint8_t groupCode2, b
  74:../../../src/net/isa/dlmo.c **** int8_t dd_data_request(uint16_t srcAddr, uint16_t destAddr, uint8_t priority, bool discardEligible,
  75:../../../src/net/isa/dlmo.c **** void dd_data_indication(uint16_t srcAddr,uint16_t destAddr,uint8_t priority,bool discardEligibile, 
  76:../../../src/net/isa/dlmo.c **** void sendPacket(uint16_t destAddr,uint8_t graphId, uint8_t length, uint8_t *payload, void (*slot_ca
  77:../../../src/net/isa/dlmo.c **** int8_t enQueue(uint16_t neighbor, uint8_t priority, uint8_t length, uint8_t *payload,  void (*slot_
  78:../../../src/net/isa/dlmo.c **** void isaFreePacket(ISA_QUEUE *entry);
  79:../../../src/net/isa/dlmo.c **** 
  80:../../../src/net/isa/dlmo.c **** 
  81:../../../src/net/isa/dlmo.c **** /*------------------------------------------------- dlmoInit() -----
  82:../../../src/net/isa/dlmo.c ****          |  Function dlmoInit()
  83:../../../src/net/isa/dlmo.c ****          |
  84:../../../src/net/isa/dlmo.c ****          |  Purpose:  Called during initialization. This can also be used later to reset to
  85:../../../src/net/isa/dlmo.c ****          |		factory defaults if required. In its current state, it doesn't really do much
  86:../../../src/net/isa/dlmo.c ****          | 		except set the neighbor table reporting duration
  87:../../../src/net/isa/dlmo.c ****          |
  88:../../../src/net/isa/dlmo.c ****          |
  89:../../../src/net/isa/dlmo.c ****          |  Parameters:
  90:../../../src/net/isa/dlmo.c ****          |      NONE
  91:../../../src/net/isa/dlmo.c ****          |
  92:../../../src/net/isa/dlmo.c ****          |  Returns:
  93:../../../src/net/isa/dlmo.c ****          |		NONE
  94:../../../src/net/isa/dlmo.c ****          *-------------------------------------------------------------------*/
  95:../../../src/net/isa/dlmo.c **** void dlmoInit()
  96:../../../src/net/isa/dlmo.c **** {
  97:../../../src/net/isa/dlmo.c **** 	uint8_t i;
  98:../../../src/net/isa/dlmo.c **** 	//for LINK
  99:../../../src/net/isa/dlmo.c **** 	for (i=0; i<DLMO_LINK_MAX_COUNT; i++)
 100:../../../src/net/isa/dlmo.c **** 
 101:../../../src/net/isa/dlmo.c **** 		{
 102:../../../src/net/isa/dlmo.c **** 			(dlmoLink[i].isPresent = false);
 103:../../../src/net/isa/dlmo.c **** 		}
 104:../../../src/net/isa/dlmo.c **** 
 105:../../../src/net/isa/dlmo.c **** //for NEIGHBOR
 106:../../../src/net/isa/dlmo.c **** 	for(i=0; i<DLMO_NEIGHBOR_MAX_COUNT; i++)
 107:../../../src/net/isa/dlmo.c **** 	{
 108:../../../src/net/isa/dlmo.c **** 		dlmoNeighbor[i].isPresent = false;
 109:../../../src/net/isa/dlmo.c **** 	}
 110:../../../src/net/isa/dlmo.c **** 
 111:../../../src/net/isa/dlmo.c **** 		//Initialization for Transmit Queue
 112:../../../src/net/isa/dlmo.c **** 	isaTxQueueSize = 0; //Explicitly initialize this to 0
 113:../../../src/net/isa/dlmo.c **** /*
 114:../../../src/net/isa/dlmo.c **** 	for(i=0; i<TRANSMIT_QUEUE_MAX_SIZE; i++)
 115:../../../src/net/isa/dlmo.c **** 	{
 116:../../../src/net/isa/dlmo.c **** 		isaQueuePointer[i] = &isaQueue[i];
 117:../../../src/net/isa/dlmo.c **** 	}
 118:../../../src/net/isa/dlmo.c **** 
 119:../../../src/net/isa/dlmo.c **** */
 120:../../../src/net/isa/dlmo.c **** 
 121:../../../src/net/isa/dlmo.c **** 	// Initialize the dlmo.DiscoveryAlery field
 122:../../../src/net/isa/dlmo.c **** 	/* Device management object*/
 123:../../../src/net/isa/dlmo.c **** 	discoveryAlert.alertReport.alertReportDisabled = false;
 124:../../../src/net/isa/dlmo.c **** 	discoveryAlert.duration = 60; //in seconds
 125:../../../src/net/isa/dlmo.c **** 
 126:../../../src/net/isa/dlmo.c **** 	//initialize the lastSentTime to the startTime
 127:../../../src/net/isa/dlmo.c **** 	 nrk_time_get(&lastSentTime);
 128:../../../src/net/isa/dlmo.c **** 
 129:../../../src/net/isa/dlmo.c **** }
 130:../../../src/net/isa/dlmo.c **** 
 131:../../../src/net/isa/dlmo.c **** 
 132:../../../src/net/isa/dlmo.c **** DLMO_GRAPH* findGraph(uint16_t graphId){
 180               	.LM0:
 181               	.LFBB1:
 182               	/* prologue: frame size=0 */
 183               	/* prologue end (size=0) */
 184 0000 AC01      		movw r20,r24
 185 0002 20E0      		ldi r18,lo8(0)
 186 0004 30E0      		ldi r19,hi8(0)
 187               	.L2:
 188               	.LBB2:
 133:../../../src/net/isa/dlmo.c **** 	for(uint8_t i=0;i<DLMO_GRAPH_MAX_COUNT;i++)
 134:../../../src/net/isa/dlmo.c **** 		{
 135:../../../src/net/isa/dlmo.c **** 			if(graphId == dlmoGraph[i].index) return &dlmoGraph[i];
 190               	.LM1:
 191 0006 F901      		movw r30,r18
 192 0008 EE0F      		lsl r30
 193 000a FF1F      		rol r31
 194 000c C901      		movw r24,r18
 195 000e 73E0      		ldi r23,3
 196 0010 880F      	1:	lsl r24
 197 0012 991F      		rol r25
 198 0014 7A95      		dec r23
 199 0016 01F4      		brne 1b
 200 0018 E80F      		add r30,r24
 201 001a F91F      		adc r31,r25
 202 001c E050      		subi r30,lo8(-(dlmoGraph))
 203 001e F040      		sbci r31,hi8(-(dlmoGraph))
 204 0020 8081      		ld r24,Z
 205 0022 9181      		ldd r25,Z+1
 206 0024 4817      		cp r20,r24
 207 0026 5907      		cpc r21,r25
 208 0028 01F4      		brne .L3
 209 002a 8AE0      		ldi r24,lo8(10)
 210 002c 289F      		mul r18,r24
 211 002e C001      		movw r24,r0
 212 0030 1124      		clr r1
 213 0032 8050      		subi r24,lo8(-(dlmoGraph))
 214 0034 9040      		sbci r25,hi8(-(dlmoGraph))
 215 0036 0895      		ret
 216               	.L3:
 217 0038 2F5F      		subi r18,lo8(-(1))
 218 003a 3F4F      		sbci r19,hi8(-(1))
 220               	.LM2:
 221 003c 2A30      		cpi r18,10
 222 003e 3105      		cpc r19,__zero_reg__
 223 0040 01F4      		brne .L2
 224 0042 80E0      		ldi r24,lo8(0)
 225 0044 90E0      		ldi r25,hi8(0)
 226               	.LBE2:
 136:../../../src/net/isa/dlmo.c **** 		}
 137:../../../src/net/isa/dlmo.c **** 	return NULL;
 138:../../../src/net/isa/dlmo.c **** }
 228               	.LM3:
 229 0046 0895      		ret
 230               	/* epilogue: frame size=0 */
 231               	/* epilogue: noreturn */
 232               	/* epilogue end (size=0) */
 233               	/* function findGraph size 36 (36) */
 238               	.Lscope1:
 240               		.stabd	78,0,0
 243               	.global	findNeighbor
 245               	findNeighbor:
 246               		.stabd	46,0,0
 139:../../../src/net/isa/dlmo.c **** 
 140:../../../src/net/isa/dlmo.c **** DLMO_NEIGHBOR* findNeighbor(uint16_t neighborId){
 248               	.LM4:
 249               	.LFBB2:
 250               	/* prologue: frame size=0 */
 251               	/* prologue end (size=0) */
 252 0048 AC01      		movw r20,r24
 253 004a 20E0      		ldi r18,lo8(0)
 254 004c 30E0      		ldi r19,hi8(0)
 255               	.L11:
 256               	.LBB3:
 141:../../../src/net/isa/dlmo.c **** 	for(uint8_t i=0;i<DLMO_NEIGHBOR_MAX_COUNT;i++)
 142:../../../src/net/isa/dlmo.c **** 		{
 143:../../../src/net/isa/dlmo.c **** 			if(neighborId == dlmoNeighbor[i].index) return &dlmoNeighbor[i];
 258               	.LM5:
 259 004e F901      		movw r30,r18
 260 0050 B4E0      		ldi r27,4
 261 0052 EE0F      	1:	lsl r30
 262 0054 FF1F      		rol r31
 263 0056 BA95      		dec r27
 264 0058 01F4      		brne 1b
 265 005a E20F      		add r30,r18
 266 005c F31F      		adc r31,r19
 267 005e E050      		subi r30,lo8(-(dlmoNeighbor))
 268 0060 F040      		sbci r31,hi8(-(dlmoNeighbor))
 269 0062 8181      		ldd r24,Z+1
 270 0064 9281      		ldd r25,Z+2
 271 0066 4817      		cp r20,r24
 272 0068 5907      		cpc r21,r25
 273 006a 01F4      		brne .L12
 274 006c 81E1      		ldi r24,lo8(17)
 275 006e 289F      		mul r18,r24
 276 0070 C001      		movw r24,r0
 277 0072 1124      		clr r1
 278 0074 8050      		subi r24,lo8(-(dlmoNeighbor))
 279 0076 9040      		sbci r25,hi8(-(dlmoNeighbor))
 280 0078 0895      		ret
 281               	.L12:
 282 007a 2F5F      		subi r18,lo8(-(1))
 283 007c 3F4F      		sbci r19,hi8(-(1))
 285               	.LM6:
 286 007e 2031      		cpi r18,16
 287 0080 3105      		cpc r19,__zero_reg__
 288 0082 01F4      		brne .L11
 289 0084 80E0      		ldi r24,lo8(0)
 290 0086 90E0      		ldi r25,hi8(0)
 291               	.LBE3:
 144:../../../src/net/isa/dlmo.c **** 		}
 145:../../../src/net/isa/dlmo.c **** 	return NULL;
 146:../../../src/net/isa/dlmo.c **** }
 293               	.LM7:
 294 0088 0895      		ret
 295               	/* epilogue: frame size=0 */
 296               	/* epilogue: noreturn */
 297               	/* epilogue end (size=0) */
 298               	/* function findNeighbor size 33 (33) */
 303               	.Lscope2:
 305               		.stabd	78,0,0
 308               	.global	isTransmitLinkPresent
 310               	isTransmitLinkPresent:
 311               		.stabd	46,0,0
 147:../../../src/net/isa/dlmo.c **** 
 148:../../../src/net/isa/dlmo.c **** /*------------------------------------------------- addLink() -----
 149:../../../src/net/isa/dlmo.c ****          |  Function addLink()
 150:../../../src/net/isa/dlmo.c ****          |
 151:../../../src/net/isa/dlmo.c ****          |  Purpose:  Used to add/update a  link. If the link is already present, its contents will
 152:../../../src/net/isa/dlmo.c ****          |
 153:../../../src/net/isa/dlmo.c ****          |
 154:../../../src/net/isa/dlmo.c ****          |  Parameters:
 155:../../../src/net/isa/dlmo.c ****          |      (IN)uint8_t slotNumber - 	This is curretly stored as channelOffset and represents t
 156:../../../src/net/isa/dlmo.c ****          |		(IN)DLMO_NEIGHBOR* neighborIndex - Pointer to the neighbor that is stored in this link.
 157:../../../src/net/isa/dlmo.c ****          |								an ADV or RX link.
 158:../../../src/net/isa/dlmo.c ****          |		(IN)DLMO_GRAPH* graphPtr - 	Pointer to the graph that is stored in this link. This para
 159:../../../src/net/isa/dlmo.c **** 		 |								 RX link.
 160:../../../src/net/isa/dlmo.c **** 		 |		(IN)LinkType linkType - Represents the linkType
 161:../../../src/net/isa/dlmo.c **** 		 |								JOIN_RESP,
 162:../../../src/net/isa/dlmo.c **** 		 |								TX_NO_ADV,
 163:../../../src/net/isa/dlmo.c **** 		 |								TX_RX_NO_ADV,
 164:../../../src/net/isa/dlmo.c **** 		 |								TX_ADV,
 165:../../../src/net/isa/dlmo.c **** 		 |								ADV,
 166:../../../src/net/isa/dlmo.c **** 		 |								BURST_ADV,
 167:../../../src/net/isa/dlmo.c **** 		 |								BURST_ADV_SCAN,
 168:../../../src/net/isa/dlmo.c **** 		 |								SOLICITATION,
 169:../../../src/net/isa/dlmo.c **** 		 |								RX
 170:../../../src/net/isa/dlmo.c ****          |		(IN)GraphType graphType - Additional type of TX link. This represents whether the link 
 171:../../../src/net/isa/dlmo.c **** 		 |								 if the link is used only for a message that is destined for a GRAPH or if both GRAPH a
 172:../../../src/net/isa/dlmo.c **** 		 |								given preference
 173:../../../src/net/isa/dlmo.c ****          |  Returns:
 174:../../../src/net/isa/dlmo.c ****          |		ISA_SUCCESS
 175:../../../src/net/isa/dlmo.c **** 		 |		ISA_ERROR
 176:../../../src/net/isa/dlmo.c ****          *-------------------------------------------------------------------*/
 177:../../../src/net/isa/dlmo.c **** int8_t addLink(uint8_t slotNumber, uint16_t neighborId, uint16_t graphId , LinkType linkType, Graph
 178:../../../src/net/isa/dlmo.c **** {
 179:../../../src/net/isa/dlmo.c **** 	uint8_t index;
 180:../../../src/net/isa/dlmo.c **** 	int8_t freeIndex = -1;
 181:../../../src/net/isa/dlmo.c **** 	DLMO_NEIGHBOR* neighborPtr = NULL;	// neighbor pointer to store
 182:../../../src/net/isa/dlmo.c **** 	DLMO_GRAPH* graphPtr = NULL;			// graph pointer to store
 183:../../../src/net/isa/dlmo.c **** 
 184:../../../src/net/isa/dlmo.c **** 	if (slotNumber >=  ISA_MAX_SLOTS) {
 185:../../../src/net/isa/dlmo.c **** 			printf ("Slot number not in range\r\n");
 186:../../../src/net/isa/dlmo.c **** 			return;
 187:../../../src/net/isa/dlmo.c **** 		}
 188:../../../src/net/isa/dlmo.c **** 
 189:../../../src/net/isa/dlmo.c **** 	for (index = 0; index < DLMO_LINK_MAX_COUNT; index++)
 190:../../../src/net/isa/dlmo.c **** 		{
 191:../../../src/net/isa/dlmo.c **** 		if (freeIndex==-1 && dlmoLink[index].isPresent == false) freeIndex = index;
 192:../../../src/net/isa/dlmo.c **** 		if (dlmoLink[index].chOffset == slotNumber) {
 193:../../../src/net/isa/dlmo.c **** 			printf ("Slot %d already configured- updating\r\n",slotNumber);
 194:../../../src/net/isa/dlmo.c **** 			freeIndex = index;
 195:../../../src/net/isa/dlmo.c **** 			goto UPDATE_LINK;
 196:../../../src/net/isa/dlmo.c **** 		}
 197:../../../src/net/isa/dlmo.c **** 		}
 198:../../../src/net/isa/dlmo.c **** 
 199:../../../src/net/isa/dlmo.c **** 	if (freeIndex == -1)
 200:../../../src/net/isa/dlmo.c **** 		{
 201:../../../src/net/isa/dlmo.c **** 
 202:../../../src/net/isa/dlmo.c **** 			 setIsaError(LINK_CAPACITY_ERROR);
 203:../../../src/net/isa/dlmo.c **** 			 printIsaError();
 204:../../../src/net/isa/dlmo.c **** 			 return ISA_ERROR;
 205:../../../src/net/isa/dlmo.c **** 		}
 206:../../../src/net/isa/dlmo.c **** 
 207:../../../src/net/isa/dlmo.c **** 
 208:../../../src/net/isa/dlmo.c **** 	//we have found a free index
 209:../../../src/net/isa/dlmo.c **** 	UPDATE_LINK:
 210:../../../src/net/isa/dlmo.c **** 	if (linkType == TX_NO_ADV){
 211:../../../src/net/isa/dlmo.c **** 
 212:../../../src/net/isa/dlmo.c **** 	//find the neighbor pointer
 213:../../../src/net/isa/dlmo.c **** 	if (neighborId!=0)
 214:../../../src/net/isa/dlmo.c **** 		{
 215:../../../src/net/isa/dlmo.c **** 			neighborPtr = findNeighbor(neighborId);
 216:../../../src/net/isa/dlmo.c **** 		}
 217:../../../src/net/isa/dlmo.c **** 	//find the graph pointer
 218:../../../src/net/isa/dlmo.c **** 	if (graphId!=0)
 219:../../../src/net/isa/dlmo.c **** 	{
 220:../../../src/net/isa/dlmo.c **** 		graphPtr = findGraph(graphId);
 221:../../../src/net/isa/dlmo.c **** 	}
 222:../../../src/net/isa/dlmo.c **** 
 223:../../../src/net/isa/dlmo.c **** 	}
 224:../../../src/net/isa/dlmo.c **** 	printf("Added link at index %d\r\n",freeIndex);
 225:../../../src/net/isa/dlmo.c **** 	 dlmoLink[freeIndex].isPresent = true;
 226:../../../src/net/isa/dlmo.c **** 	 dlmoLink[freeIndex].neighbor = neighborPtr;
 227:../../../src/net/isa/dlmo.c **** 	 dlmoLink[freeIndex].graphPtr = graphPtr;
 228:../../../src/net/isa/dlmo.c **** 	 dlmoLink[freeIndex].linkType = linkType;
 229:../../../src/net/isa/dlmo.c **** 	 //reset the previous slot number before updating
 230:../../../src/net/isa/dlmo.c **** 	// isa_slot &= ~(((uint64_t) 1) << dlmoLink[freeIndex].chOffset);
 231:../../../src/net/isa/dlmo.c **** 	 dlmoLink[freeIndex].chOffset = slotNumber;
 232:../../../src/net/isa/dlmo.c **** 	 dlmoLink[freeIndex].graphPtr = graphPtr;
 233:../../../src/net/isa/dlmo.c **** 	 dlmoLink[freeIndex].typeInfo = ISASET(dlmoLink[index].typeInfo, SHIFTLEFT(graphType, GRAPH_TYPE_B
 234:../../../src/net/isa/dlmo.c **** 	 // channel offset implementation will change as the protocol develops
 235:../../../src/net/isa/dlmo.c **** 	 //record that the slot is in use- used to calculate next wakeup
 236:../../../src/net/isa/dlmo.c **** 	 if(slotNumber == 23) putchar('x');
 237:../../../src/net/isa/dlmo.c **** 	 	isa_slot |= ((uint64_t) 1) << slotNumber;
 238:../../../src/net/isa/dlmo.c **** 	return ISA_SUCCESS;
 239:../../../src/net/isa/dlmo.c **** }
 240:../../../src/net/isa/dlmo.c **** 
 241:../../../src/net/isa/dlmo.c **** 
 242:../../../src/net/isa/dlmo.c **** 
 243:../../../src/net/isa/dlmo.c **** 
 244:../../../src/net/isa/dlmo.c **** /*------------------------------------------------- findLink() -----
 245:../../../src/net/isa/dlmo.c ****          |  Function findLink()
 246:../../../src/net/isa/dlmo.c ****          |
 247:../../../src/net/isa/dlmo.c ****          |  Purpose:  This returns a pointer to a link that corresponds to the slot that is passes 
 248:../../../src/net/isa/dlmo.c ****          |			The functions runs through the dlmoLink[] array and compares the slot with the channel
 249:../../../src/net/isa/dlmo.c ****          |			for valid links.
 250:../../../src/net/isa/dlmo.c ****          |
 251:../../../src/net/isa/dlmo.c ****          |
 252:../../../src/net/isa/dlmo.c ****          |  Parameters:
 253:../../../src/net/isa/dlmo.c ****          |      (IN)uint8_t slot - Slot for which we want the link pointer
 254:../../../src/net/isa/dlmo.c ****          |
 255:../../../src/net/isa/dlmo.c ****          |  Returns:
 256:../../../src/net/isa/dlmo.c ****          |		DLMO_LINK * - Pointer to the link that corresponds to the slot passed as an argument.
 257:../../../src/net/isa/dlmo.c ****          *-------------------------------------------------------------------*/
 258:../../../src/net/isa/dlmo.c **** DLMO_LINK * findLink(uint8_t slot){
 259:../../../src/net/isa/dlmo.c **** 
 260:../../../src/net/isa/dlmo.c **** 	uint8_t index;
 261:../../../src/net/isa/dlmo.c **** 
 262:../../../src/net/isa/dlmo.c **** 	for (index = 0; index < DLMO_LINK_MAX_COUNT; index++)
 263:../../../src/net/isa/dlmo.c **** 			{
 264:../../../src/net/isa/dlmo.c **** 				if (dlmoLink[index].isPresent == true && dlmoLink[index].chOffset == slot ) {
 265:../../../src/net/isa/dlmo.c **** 					return &dlmoLink[index];
 266:../../../src/net/isa/dlmo.c **** 				}
 267:../../../src/net/isa/dlmo.c **** 			}
 268:../../../src/net/isa/dlmo.c **** 	printf ("This slot is not configured yet: %d\n\r" , slot);
 269:../../../src/net/isa/dlmo.c **** 	return NULL;
 270:../../../src/net/isa/dlmo.c **** }
 271:../../../src/net/isa/dlmo.c **** 
 272:../../../src/net/isa/dlmo.c **** /*------------------------------------------------- isTransmitLinkPresent() -----
 273:../../../src/net/isa/dlmo.c ****          |  Function isTransmitLinkPresent()
 274:../../../src/net/isa/dlmo.c ****          |
 275:../../../src/net/isa/dlmo.c ****          |  Purpose:  This function is called before we enqueue something in the queue in order to 
 276:../../../src/net/isa/dlmo.c ****          |			we have a link that can be used to send this message
 277:../../../src/net/isa/dlmo.c ****          |			We know we have a TX link if either -
 278:../../../src/net/isa/dlmo.c ****          | 			1) The graphType is NEIGHBOR or GRAPH_NEIGHBOR and the DEST_ID of the message is equa
 279:../../../src/net/isa/dlmo.c **** 		 | 			neighbor on the link or
 280:../../../src/net/isa/dlmo.c **** 		 | 			2) the graph_id of the message corresponds to the graphId of the link and the graphType(of 
 281:../../../src/net/isa/dlmo.c **** 		 | 			This function runs through all the links to find if either 1 or 2 is true
 282:../../../src/net/isa/dlmo.c ****          |
 283:../../../src/net/isa/dlmo.c ****          |
 284:../../../src/net/isa/dlmo.c ****          |  Parameters:
 285:../../../src/net/isa/dlmo.c ****          |      (IN)uint8_t *payload - Pointer to the message payload
 286:../../../src/net/isa/dlmo.c ****          |
 287:../../../src/net/isa/dlmo.c ****          |  Returns:
 288:../../../src/net/isa/dlmo.c ****          |		true
 289:../../../src/net/isa/dlmo.c ****          |		false
 290:../../../src/net/isa/dlmo.c ****          *-------------------------------------------------------------------*/
 291:../../../src/net/isa/dlmo.c **** 
 292:../../../src/net/isa/dlmo.c **** 
 293:../../../src/net/isa/dlmo.c **** bool isTransmitLinkPresent (uint8_t *payload){
 313               	.LM8:
 314               	.LFBB3:
 315               	/* prologue: frame size=0 */
 316 008a 0F93      		push r16
 317 008c 1F93      		push r17
 318 008e CF93      		push r28
 319 0090 DF93      		push r29
 320               	/* prologue end (size=4) */
 321 0092 EC01      		movw r28,r24
 294:../../../src/net/isa/dlmo.c **** 	uint8_t index;
 295:../../../src/net/isa/dlmo.c **** 	 uint8_t graphType;
 296:../../../src/net/isa/dlmo.c **** 		 //check the link type
 297:../../../src/net/isa/dlmo.c **** 
 298:../../../src/net/isa/dlmo.c **** 	 DLMO_DROUT * dRout = &payload[DROUT_INDEX];
 323               	.LM9:
 324 0094 8C01      		movw r16,r24
 325 0096 0C5F      		subi r16,lo8(-(4))
 326 0098 1F4F      		sbci r17,hi8(-(4))
 327 009a 60E0      		ldi r22,lo8(0)
 328 009c 70E0      		ldi r23,hi8(0)
 329               	.L20:
 299:../../../src/net/isa/dlmo.c **** 
 300:../../../src/net/isa/dlmo.c **** 	for (index = 0; index < DLMO_LINK_MAX_COUNT; index++)
 301:../../../src/net/isa/dlmo.c **** 	{
 302:../../../src/net/isa/dlmo.c **** 		//first find the graph type
 303:../../../src/net/isa/dlmo.c **** 		graphType = ISAMASK(dlmoLink[index].typeInfo,GRAPH_TYPE_MASK);
 331               	.LM10:
 332 009e CB01      		movw r24,r22
 333 00a0 880F      		lsl r24
 334 00a2 991F      		rol r25
 335 00a4 DC01      		movw r26,r24
 336 00a6 23E0      		ldi r18,3
 337 00a8 AA0F      	1:	lsl r26
 338 00aa BB1F      		rol r27
 339 00ac 2A95      		dec r18
 340 00ae 01F4      		brne 1b
 341 00b0 A80F      		add r26,r24
 342 00b2 B91F      		adc r27,r25
 343 00b4 A050      		subi r26,lo8(-(dlmoLink))
 344 00b6 B040      		sbci r27,hi8(-(dlmoLink))
 345 00b8 FD01      		movw r30,r26
 346 00ba 9781      		ldd r25,Z+7
 304:../../../src/net/isa/dlmo.c **** 		graphType = SHIFTRIGHT(graphType,GRAPH_TYPE_BIT);
 305:../../../src/net/isa/dlmo.c **** 
 306:../../../src/net/isa/dlmo.c **** 				if (dlmoLink[index].isPresent == true && dlmoLink[index].linkType == TX_NO_ADV ) {	//this is a 
 348               	.LM11:
 349 00bc 8C91      		ld r24,X
 350 00be 8823      		tst r24
 351 00c0 01F0      		breq .L21
 352 00c2 8481      		ldd r24,Z+4
 353 00c4 8130      		cpi r24,lo8(1)
 354 00c6 01F4      		brne .L21
 356               	.LM12:
 357 00c8 492F      		mov r20,r25
 358 00ca 4073      		andi r20,lo8(48)
 360               	.LM13:
 361 00cc 4295      		swap r20
 362 00ce 4F70      		andi r20,0x0f
 307:../../../src/net/isa/dlmo.c **** 					//the link neighbor is equal to payload destID  			and the  graph type is NEIGHBOR or GRAPH_NE
 308:../../../src/net/isa/dlmo.c **** 					if ((dlmoLink[index].neighbor->index == payload[DEST_INDEX] && (graphType == NEIGHBOR || graph
 364               	.LM14:
 365 00d0 2085      		ldd r18,Z+8
 366 00d2 3185      		ldd r19,Z+9
 367 00d4 8B81      		ldd r24,Y+3
 368 00d6 9927      		clr r25
 369 00d8 F901      		movw r30,r18
 370 00da 2181      		ldd r18,Z+1
 371 00dc 3281      		ldd r19,Z+2
 372 00de 2817      		cp r18,r24
 373 00e0 3907      		cpc r19,r25
 374 00e2 01F4      		brne .L24
 375 00e4 4423      		tst r20
 376 00e6 01F0      		breq .L26
 377 00e8 4230      		cpi r20,lo8(2)
 378 00ea 01F0      		breq .L26
 379               	.L24:
 380 00ec FD01      		movw r30,r26
 381 00ee 8285      		ldd r24,Z+10
 382 00f0 9385      		ldd r25,Z+11
 383 00f2 FC01      		movw r30,r24
 384 00f4 8081      		ld r24,Z
 385 00f6 9181      		ldd r25,Z+1
 386 00f8 892B      		or r24,r25
 387 00fa 01F0      		breq .L21
 388 00fc FD01      		movw r30,r26
 389 00fe A285      		ldd r26,Z+10
 390 0100 B385      		ldd r27,Z+11
 391 0102 F801      		movw r30,r16
 392 0104 8281      		ldd r24,Z+2
 393 0106 9927      		clr r25
 394 0108 2D91      		ld r18,X+
 395 010a 3C91      		ld r19,X
 396 010c 2817      		cp r18,r24
 397 010e 3907      		cpc r19,r25
 398 0110 01F4      		brne .L21
 399 0112 4150      		subi r20,lo8(-(-1))
 400 0114 4230      		cpi r20,lo8(2)
 401 0116 00F0      		brlo .L26
 402               	.L21:
 403 0118 6F5F      		subi r22,lo8(-(1))
 404 011a 7F4F      		sbci r23,hi8(-(1))
 406               	.LM15:
 407 011c 6431      		cpi r22,20
 408 011e 7105      		cpc r23,__zero_reg__
 409 0120 01F0      		breq .+2
 410 0122 00C0      		rjmp .L20
 411 0124 80E0      		ldi r24,lo8(0)
 412 0126 90E0      		ldi r25,hi8(0)
 413 0128 00C0      		rjmp .L31
 414               	.L26:
 415 012a 81E0      		ldi r24,lo8(1)
 416 012c 90E0      		ldi r25,hi8(1)
 417               	.L31:
 418               	/* epilogue: frame size=0 */
 419 012e DF91      		pop r29
 420 0130 CF91      		pop r28
 421 0132 1F91      		pop r17
 422 0134 0F91      		pop r16
 423 0136 0895      		ret
 424               	/* epilogue end (size=5) */
 425               	/* function isTransmitLinkPresent size 87 (78) */
 430               	.Lscope3:
 432               		.stabd	78,0,0
 435               	.global	isa_get_slots_until_next_wakeup
 437               	isa_get_slots_until_next_wakeup:
 438               		.stabd	46,0,0
 309:../../../src/net/isa/dlmo.c **** 					return true;
 310:../../../src/net/isa/dlmo.c **** 				}
 311:../../../src/net/isa/dlmo.c **** 			}
 312:../../../src/net/isa/dlmo.c **** 	return false;		//we do not have a link that is configured for this graphId
 313:../../../src/net/isa/dlmo.c **** }
 314:../../../src/net/isa/dlmo.c **** 
 315:../../../src/net/isa/dlmo.c **** 
 316:../../../src/net/isa/dlmo.c **** /*------------------------------------------------- addNeighbor() -----
 317:../../../src/net/isa/dlmo.c ****          |  Function addNeighbor()
 318:../../../src/net/isa/dlmo.c ****          |
 319:../../../src/net/isa/dlmo.c ****          |  Purpose:  Used to add/update a neighbor. If the neighbor is already present, its conten
 320:../../../src/net/isa/dlmo.c ****          |
 321:../../../src/net/isa/dlmo.c ****          |
 322:../../../src/net/isa/dlmo.c ****          |  Parameters:
 323:../../../src/net/isa/dlmo.c ****          |      (IN)uint16_t index - 		Neighbor ID to store/update
 324:../../../src/net/isa/dlmo.c ****          |		(IN)uint64_t EUI64 - 		Currently unused
 325:../../../src/net/isa/dlmo.c ****          |		(IN)uint8_t groupCode1 - 	Currently unused
 326:../../../src/net/isa/dlmo.c **** 		 |		(IN)uint8_t groupCode2 -	Currently unused
 327:../../../src/net/isa/dlmo.c **** 		 |      (IN)bool clockSource - 		TRUE  - if this neighbor is my clock source
 328:../../../src/net/isa/dlmo.c **** 		 | 									FALSE - if this neighbor is not my clock source
 329:../../../src/net/isa/dlmo.c **** 		 |		(IN)uint8_t  linkBacklogIndex - Currently unused
 330:../../../src/net/isa/dlmo.c **** 		 | 		(IN)uint8_t linkBacklogDur	  - Currently unused
 331:../../../src/net/isa/dlmo.c **** 		 |      (IN)uint8_t linkBacklogActivate - Currently unused
 332:../../../src/net/isa/dlmo.c **** 		 |
 333:../../../src/net/isa/dlmo.c ****          |
 334:../../../src/net/isa/dlmo.c ****          |  Returns:
 335:../../../src/net/isa/dlmo.c ****          |		DLMO_NEIGHBOR* - pointer to the neighbor added/updated
 336:../../../src/net/isa/dlmo.c ****          *-------------------------------------------------------------------*/
 337:../../../src/net/isa/dlmo.c **** DLMO_NEIGHBOR* addNeighbor(uint16_t index,uint64_t EUI64, uint8_t groupCode1, uint8_t groupCode2, b
 338:../../../src/net/isa/dlmo.c **** {
 339:../../../src/net/isa/dlmo.c **** 	uint8_t i,free_index=0;
 340:../../../src/net/isa/dlmo.c **** 	bool free_index_present = false;
 341:../../../src/net/isa/dlmo.c **** 	for(uint8_t i=0;i<DLMO_NEIGHBOR_MAX_COUNT;i++)
 342:../../../src/net/isa/dlmo.c **** 	{
 343:../../../src/net/isa/dlmo.c **** 		if(index == dlmoNeighbor[i].index && dlmoNeighbor[i].isPresent == true)
 344:../../../src/net/isa/dlmo.c **** 		{
 345:../../../src/net/isa/dlmo.c **** 			printf("Neighbor %d Exists in Table - updating\n\r",index);
 346:../../../src/net/isa/dlmo.c **** 			free_index = i;
 347:../../../src/net/isa/dlmo.c **** 			goto UPDATE_NEIGHBOR;
 348:../../../src/net/isa/dlmo.c **** 		}
 349:../../../src/net/isa/dlmo.c **** 		if(dlmoNeighbor[i].isPresent == false && free_index_present == false)
 350:../../../src/net/isa/dlmo.c **** 		{
 351:../../../src/net/isa/dlmo.c **** 					free_index_present = true;
 352:../../../src/net/isa/dlmo.c **** 					free_index = i;
 353:../../../src/net/isa/dlmo.c **** 		}
 354:../../../src/net/isa/dlmo.c **** 	}
 355:../../../src/net/isa/dlmo.c **** 	if(free_index_present == false)
 356:../../../src/net/isa/dlmo.c **** 	{
 357:../../../src/net/isa/dlmo.c **** 			setIsaError(NEIGHBOR_CAPACITY_ERROR);
 358:../../../src/net/isa/dlmo.c **** 			printIsaError();
 359:../../../src/net/isa/dlmo.c **** 			return NULL;
 360:../../../src/net/isa/dlmo.c **** 	}
 361:../../../src/net/isa/dlmo.c **** 	else
 362:../../../src/net/isa/dlmo.c **** 	{
 363:../../../src/net/isa/dlmo.c **** 		printf("Added Neighbor at Index %d\r\n",free_index);
 364:../../../src/net/isa/dlmo.c **** 		UPDATE_NEIGHBOR:
 365:../../../src/net/isa/dlmo.c **** 		dlmoNeighbor[free_index].index = index;
 366:../../../src/net/isa/dlmo.c **** 		dlmoNeighbor[free_index].isPresent = true;
 367:../../../src/net/isa/dlmo.c **** 		dlmoNeighbor[free_index].EUI64 = EUI64;
 368:../../../src/net/isa/dlmo.c **** 		dlmoNeighbor[free_index].groupCode1 = groupCode1;
 369:../../../src/net/isa/dlmo.c **** 		dlmoNeighbor[free_index].groupCode2 = groupCode2;
 370:../../../src/net/isa/dlmo.c **** 	    if(clockSource == true) dlmoNeighbor[free_index].typeInfo = ISASET(dlmoNeighbor[free_index].ty
 371:../../../src/net/isa/dlmo.c **** 		dlmoNeighbor[free_index].linkBacklogIndex = linkBacklogIndex;
 372:../../../src/net/isa/dlmo.c **** 		dlmoNeighbor[free_index].linkBacklogDur = linkBacklogDur;
 373:../../../src/net/isa/dlmo.c **** 		dlmoNeighbor[free_index].linkBacklogActivate = linkBacklogActivate;
 374:../../../src/net/isa/dlmo.c **** 		return &dlmoNeighbor[free_index];
 375:../../../src/net/isa/dlmo.c **** 	}
 376:../../../src/net/isa/dlmo.c **** }
 377:../../../src/net/isa/dlmo.c **** 
 378:../../../src/net/isa/dlmo.c **** /*------------------------------------------------- addGraph() -----
 379:../../../src/net/isa/dlmo.c ****          |  Function addGraph()
 380:../../../src/net/isa/dlmo.c ****          |
 381:../../../src/net/isa/dlmo.c ****          |  Purpose:  Used to add/update a graph . If the graph is already present, its contents wi
 382:../../../src/net/isa/dlmo.c ****          |
 383:../../../src/net/isa/dlmo.c ****          |
 384:../../../src/net/isa/dlmo.c ****          |  Parameters:
 385:../../../src/net/isa/dlmo.c ****          |      (IN)uint16_t graphId - 			Graph ID to store/update
 386:../../../src/net/isa/dlmo.c ****          |		(IN)uint8_t  neighborCount - 	Number of neighbors in the preference list
 387:../../../src/net/isa/dlmo.c ****          |		(IN)uint16_t n1 - 	Neighbor 1 (higher priority)
 388:../../../src/net/isa/dlmo.c **** 		 |		(IN)uint16_t n2 -	Neighbor 2
 389:../../../src/net/isa/dlmo.c **** 		 |      (IN)uint16_t n3 - 	Neighbor 3
 390:../../../src/net/isa/dlmo.c ****          |
 391:../../../src/net/isa/dlmo.c ****          |  Returns:
 392:../../../src/net/isa/dlmo.c ****          |		DLMO_GRAPH* - pointer to the graph added/updated
 393:../../../src/net/isa/dlmo.c ****          *-------------------------------------------------------------------*/
 394:../../../src/net/isa/dlmo.c **** 
 395:../../../src/net/isa/dlmo.c **** DLMO_GRAPH* addGraph(uint16_t graphId, uint8_t neighborCount, uint16_t n1, uint16_t n2, uint16_t n3
 396:../../../src/net/isa/dlmo.c **** 
 397:../../../src/net/isa/dlmo.c **** 	//printf("AddGraph Graph ID: %d\r\n",graphId);
 398:../../../src/net/isa/dlmo.c **** 
 399:../../../src/net/isa/dlmo.c **** 	uint8_t i,free_index=0;
 400:../../../src/net/isa/dlmo.c **** 	bool free_index_present = false;
 401:../../../src/net/isa/dlmo.c **** 	for(uint8_t i=0;i<DLMO_GRAPH_MAX_COUNT;i++)
 402:../../../src/net/isa/dlmo.c **** 	{
 403:../../../src/net/isa/dlmo.c **** 		if(graphId == dlmoGraph[i].index)
 404:../../../src/net/isa/dlmo.c **** 		{
 405:../../../src/net/isa/dlmo.c **** 			printf("Graph %d Exists in Table -updating\n\r",graphId);
 406:../../../src/net/isa/dlmo.c **** 			free_index = i;
 407:../../../src/net/isa/dlmo.c **** 			goto UPDATE_GRAPH;
 408:../../../src/net/isa/dlmo.c **** 		}
 409:../../../src/net/isa/dlmo.c **** 		if(dlmoGraph[i].index == 0 && free_index_present == false) 	//is not configured
 410:../../../src/net/isa/dlmo.c **** 		{
 411:../../../src/net/isa/dlmo.c **** 					free_index_present = true;
 412:../../../src/net/isa/dlmo.c **** 					free_index = i;
 413:../../../src/net/isa/dlmo.c **** 		}
 414:../../../src/net/isa/dlmo.c **** 	}
 415:../../../src/net/isa/dlmo.c **** 	if(free_index_present == false)
 416:../../../src/net/isa/dlmo.c **** 	{
 417:../../../src/net/isa/dlmo.c **** 			setIsaError(GRAPH_CAPACITY_ERROR);
 418:../../../src/net/isa/dlmo.c **** 			printIsaError();
 419:../../../src/net/isa/dlmo.c **** 			return NULL;
 420:../../../src/net/isa/dlmo.c **** 	}
 421:../../../src/net/isa/dlmo.c **** 	else
 422:../../../src/net/isa/dlmo.c **** 	{
 423:../../../src/net/isa/dlmo.c **** 		printf("Added graph at index %d\r\n",free_index);
 424:../../../src/net/isa/dlmo.c **** 		UPDATE_GRAPH:
 425:../../../src/net/isa/dlmo.c **** 		dlmoGraph[free_index].index = graphId;
 426:../../../src/net/isa/dlmo.c **** 		dlmoGraph[free_index].info = ISASET(SHIFTLEFT(neighborCount, NEIGHBOR_COUNT_LOWER_BIT), dlmoGraph
 427:../../../src/net/isa/dlmo.c **** 		dlmoGraph[free_index].neighbor[0] = n1;
 428:../../../src/net/isa/dlmo.c **** 		dlmoGraph[free_index].neighbor[1] = n2;
 429:../../../src/net/isa/dlmo.c **** 		dlmoGraph[free_index].neighbor[2] = n3;
 430:../../../src/net/isa/dlmo.c **** 		return &dlmoGraph[free_index];
 431:../../../src/net/isa/dlmo.c **** 	}
 432:../../../src/net/isa/dlmo.c **** 
 433:../../../src/net/isa/dlmo.c **** }
 434:../../../src/net/isa/dlmo.c **** 
 435:../../../src/net/isa/dlmo.c **** 
 436:../../../src/net/isa/dlmo.c **** /*
 437:../../../src/net/isa/dlmo.c **** void configureSlot(uint8_t slotNumber, uint16_t neighborId, LinkType linkType, bool clockSource, ui
 438:../../../src/net/isa/dlmo.c **** {
 439:../../../src/net/isa/dlmo.c **** 	DLMO_NEIGHBOR* neighborIndex;//store the neighbor index to pass to addLink()
 440:../../../src/net/isa/dlmo.c **** 	DLMO_GRAPH* graphPtr ;
 441:../../../src/net/isa/dlmo.c **** 	if (slotNumber >=  ISA_MAX_SLOTS) {
 442:../../../src/net/isa/dlmo.c **** 		printf ("Slot number not in range");
 443:../../../src/net/isa/dlmo.c **** 		return;
 444:../../../src/net/isa/dlmo.c **** 	}
 445:../../../src/net/isa/dlmo.c **** 	if (linkType == TX_NO_ADV){
 446:../../../src/net/isa/dlmo.c **** 	//Call the function to add a neighbor as long as neighboe ID is not zero
 447:../../../src/net/isa/dlmo.c **** 		if (neighborId!=0)
 448:../../../src/net/isa/dlmo.c **** 		{
 449:../../../src/net/isa/dlmo.c **** 			putchar('z');
 450:../../../src/net/isa/dlmo.c **** 			neighborIndex = addNeighbor(neighborId,0, 0, 0, clockSource,0,0, 0);
 451:../../../src/net/isa/dlmo.c **** 			if (neighborIndex == NULL)//
 452:../../../src/net/isa/dlmo.c **** 			{
 453:../../../src/net/isa/dlmo.c **** 				printIsaError();
 454:../../../src/net/isa/dlmo.c **** 				return;
 455:../../../src/net/isa/dlmo.c **** 			}
 456:../../../src/net/isa/dlmo.c **** 		}
 457:../../../src/net/isa/dlmo.c **** 		if (graphId !=0){
 458:../../../src/net/isa/dlmo.c **** 			putchar('y');
 459:../../../src/net/isa/dlmo.c **** 			graphPtr = addGraph(graphId, neighborCount, n1, n2, n3);
 460:../../../src/net/isa/dlmo.c **** 			if (graphPtr == NULL)//
 461:../../../src/net/isa/dlmo.c **** 						{
 462:../../../src/net/isa/dlmo.c **** 							printIsaError();
 463:../../../src/net/isa/dlmo.c **** 							return;
 464:../../../src/net/isa/dlmo.c **** 						}
 465:../../../src/net/isa/dlmo.c **** 
 466:../../../src/net/isa/dlmo.c **** 		}
 467:../../../src/net/isa/dlmo.c **** 	}
 468:../../../src/net/isa/dlmo.c **** 	if (addLink(slotNumber, neighborIndex,graphPtr, linkType, graphType) == -1)
 469:../../../src/net/isa/dlmo.c **** 	{
 470:../../../src/net/isa/dlmo.c **** 		printIsaError();
 471:../../../src/net/isa/dlmo.c **** 		return;
 472:../../../src/net/isa/dlmo.c **** 	}
 473:../../../src/net/isa/dlmo.c **** //record that the slot is in use- used to calculate next wakeup
 474:../../../src/net/isa/dlmo.c **** 	isa_slot |= ((uint64_t) 1) << slotNumber;
 475:../../../src/net/isa/dlmo.c **** 
 476:../../../src/net/isa/dlmo.c **** }
 477:../../../src/net/isa/dlmo.c **** 
 478:../../../src/net/isa/dlmo.c **** */
 479:../../../src/net/isa/dlmo.c **** 
 480:../../../src/net/isa/dlmo.c **** 
 481:../../../src/net/isa/dlmo.c **** /**
 482:../../../src/net/isa/dlmo.c ****  * isa_get_slots_until_next_wakeup()
 483:../../../src/net/isa/dlmo.c ****  *
 484:../../../src/net/isa/dlmo.c ****  * This function returns the absolute number of slots between the current_slot
 485:../../../src/net/isa/dlmo.c ****  * and the next RX/TX related wakeup.
 486:../../../src/net/isa/dlmo.c ****  *
 487:../../../src/net/isa/dlmo.c ****  * Argument: current_slot is the current slot
 488:../../../src/net/isa/dlmo.c ****  * Return: uint16_t number of slots until the next wakeup
 489:../../../src/net/isa/dlmo.c ****  */
 490:../../../src/net/isa/dlmo.c **** uint16_t isa_get_slots_until_next_wakeup (uint16_t current_global_slot)
 491:../../../src/net/isa/dlmo.c **** {
 440               	.LM16:
 441               	.LFBB4:
 442               	/* prologue: frame size=14 */
 443 0138 2F92      		push r2
 444 013a 3F92      		push r3
 445 013c 4F92      		push r4
 446 013e 5F92      		push r5
 447 0140 6F92      		push r6
 448 0142 7F92      		push r7
 449 0144 8F92      		push r8
 450 0146 9F92      		push r9
 451 0148 AF92      		push r10
 452 014a BF92      		push r11
 453 014c CF92      		push r12
 454 014e DF92      		push r13
 455 0150 EF92      		push r14
 456 0152 FF92      		push r15
 457 0154 0F93      		push r16
 458 0156 1F93      		push r17
 459 0158 CF93      		push r28
 460 015a DF93      		push r29
 461 015c CDB7      		in r28,__SP_L__
 462 015e DEB7      		in r29,__SP_H__
 463 0160 2E97      		sbiw r28,14
 464 0162 0FB6      		in __tmp_reg__,__SREG__
 465 0164 F894      		cli
 466 0166 DEBF      		out __SP_H__,r29
 467 0168 0FBE      		out __SREG__,__tmp_reg__
 468 016a CDBF      		out __SP_L__,r28
 469               	/* prologue end (size=26) */
 492:../../../src/net/isa/dlmo.c ****     uint16_t min_slot;
 493:../../../src/net/isa/dlmo.c ****     uint8_t test_slot;
 494:../../../src/net/isa/dlmo.c ****     uint8_t wrapped_slot;
 495:../../../src/net/isa/dlmo.c ****     uint8_t current_local_slot;
 496:../../../src/net/isa/dlmo.c ****     uint64_t testVariable = 0;
 497:../../../src/net/isa/dlmo.c **** 
 498:../../../src/net/isa/dlmo.c ****     current_local_slot = current_global_slot%ISA_SLOTS_PER_FRAME;
 471               	.LM17:
 472 016c 62E3      		ldi r22,lo8(50)
 473 016e 70E0      		ldi r23,hi8(50)
 474 0170 0E94 0000 		call __udivmodhi4
 475 0174 8983      		std Y+1,r24
 499:../../../src/net/isa/dlmo.c ****   //  printf("current local slot %d\r\n",current_local_slot);
 500:../../../src/net/isa/dlmo.c ****     testVariable |= ((uint64_t)1) << (current_local_slot+1);
 477               	.LM18:
 478 0176 282F      		mov r18,r24
 479 0178 3327      		clr r19
 480 017a 3C87      		std Y+12,r19
 481 017c 2B87      		std Y+11,r18
 482 017e 8901      		movw r16,r18
 483 0180 0F5F      		subi r16,lo8(-(1))
 484 0182 1F4F      		sbci r17,hi8(-(1))
 485 0184 21E0      		ldi r18,lo8(1)
 486 0186 30E0      		ldi r19,lo8(0)
 487 0188 40E0      		ldi r20,lo8(0)
 488 018a 50E0      		ldi r21,lo8(0)
 489 018c 60E0      		ldi r22,lo8(0)
 490 018e 70E0      		ldi r23,lo8(0)
 491 0190 80E0      		ldi r24,lo8(0)
 492 0192 90E0      		ldi r25,lo8(0)
 493 0194 0E94 0000 		call __ashldi3
 494 0198 222E      		mov r2,r18
 495 019a 332E      		mov r3,r19
 496 019c 442E      		mov r4,r20
 497 019e 552E      		mov r5,r21
 498 01a0 662E      		mov r6,r22
 499 01a2 772E      		mov r7,r23
 500 01a4 882E      		mov r8,r24
 501 01a6 992E      		mov r9,r25
 501:../../../src/net/isa/dlmo.c **** 
 502:../../../src/net/isa/dlmo.c ****     for (test_slot = current_local_slot+1; test_slot < ISA_SLOTS_PER_FRAME; test_slot++) {
 503               	.LM19:
 504 01a8 3981      		ldd r19,Y+1
 505 01aa 3F5F      		subi r19,lo8(-(1))
 506 01ac 3A83      		std Y+2,r19
 503:../../../src/net/isa/dlmo.c **** 
 504:../../../src/net/isa/dlmo.c ****             if(isa_slot & testVariable) { 	//slot is  scheduled
 508               	.LM20:
 509 01ae 8091 0000 		lds r24,isa_slot
 510 01b2 8B83      		std Y+3,r24
 511 01b4 9091 0000 		lds r25,isa_slot+1
 512 01b8 9C83      		std Y+4,r25
 513 01ba E091 0000 		lds r30,isa_slot+2
 514 01be ED83      		std Y+5,r30
 515 01c0 F091 0000 		lds r31,isa_slot+3
 516 01c4 FE83      		std Y+6,r31
 517 01c6 2091 0000 		lds r18,isa_slot+4
 518 01ca 2F83      		std Y+7,r18
 519 01cc 3091 0000 		lds r19,isa_slot+5
 520 01d0 3887      		std Y+8,r19
 521 01d2 8091 0000 		lds r24,isa_slot+6
 522 01d6 8987      		std Y+9,r24
 523 01d8 9091 0000 		lds r25,isa_slot+7
 524 01dc 9A87      		std Y+10,r25
 525 01de 00C0      		rjmp .L36
 526               	.L37:
 528               	.LM21:
 529 01e0 2B81      		ldd r18,Y+3
 530 01e2 2221      		and r18,r2
 531 01e4 3C81      		ldd r19,Y+4
 532 01e6 3321      		and r19,r3
 533 01e8 4D81      		ldd r20,Y+5
 534 01ea 4421      		and r20,r4
 535 01ec 5E81      		ldd r21,Y+6
 536 01ee 5521      		and r21,r5
 537 01f0 6F81      		ldd r22,Y+7
 538 01f2 6621      		and r22,r6
 539 01f4 7885      		ldd r23,Y+8
 540 01f6 7721      		and r23,r7
 541 01f8 8985      		ldd r24,Y+9
 542 01fa 8821      		and r24,r8
 543 01fc 9A85      		ldd r25,Y+10
 544 01fe 9921      		and r25,r9
 545 0200 E22F      		mov r30,r18
 546 0202 E32B      		or r30,r19
 547 0204 E42B      		or r30,r20
 548 0206 E52B      		or r30,r21
 549 0208 E62B      		or r30,r22
 550 020a E72B      		or r30,r23
 551 020c E82B      		or r30,r24
 552 020e E92B      		or r30,r25
 553 0210 01F0      		breq .L38
 505:../../../src/net/isa/dlmo.c ****             	min_slot = test_slot-current_local_slot;
 555               	.LM22:
 556 0212 EA81      		ldd r30,Y+2
 557 0214 8E2F      		mov r24,r30
 558 0216 9927      		clr r25
 559 0218 2B85      		ldd r18,Y+11
 560 021a 3C85      		ldd r19,Y+12
 561 021c 821B      		sub r24,r18
 562 021e 930B      		sbc r25,r19
 563 0220 00C0      		rjmp .L35
 564               	.L38:
 506:../../../src/net/isa/dlmo.c ****             	    	return min_slot;
 507:../../../src/net/isa/dlmo.c **** 
 508:../../../src/net/isa/dlmo.c ****             }
 509:../../../src/net/isa/dlmo.c ****                 testVariable = testVariable << 1;
 566               	.LM23:
 567 0222 01E0      		ldi r16,lo8(1)
 568 0224 222D      		mov r18,r2
 569 0226 332D      		mov r19,r3
 570 0228 442D      		mov r20,r4
 571 022a 552D      		mov r21,r5
 572 022c 662D      		mov r22,r6
 573 022e 772D      		mov r23,r7
 574 0230 882D      		mov r24,r8
 575 0232 992D      		mov r25,r9
 576 0234 0E94 0000 		call __ashldi3
 577 0238 222E      		mov r2,r18
 578 023a 332E      		mov r3,r19
 579 023c 442E      		mov r4,r20
 580 023e 552E      		mov r5,r21
 581 0240 662E      		mov r6,r22
 582 0242 772E      		mov r7,r23
 583 0244 882E      		mov r8,r24
 584 0246 992E      		mov r9,r25
 586               	.LM24:
 587 0248 3A81      		ldd r19,Y+2
 588 024a 3F5F      		subi r19,lo8(-(1))
 589 024c 3A83      		std Y+2,r19
 590               	.L36:
 591 024e 8A81      		ldd r24,Y+2
 592 0250 8233      		cpi r24,lo8(50)
 593 0252 00F0      		brlo .L37
 594 0254 2224      		clr r2
 595 0256 2394      		inc r2
 596 0258 3324      		clr r3
 597 025a 4424      		clr r4
 598 025c 5524      		clr r5
 599 025e 6624      		clr r6
 600 0260 7724      		clr r7
 601 0262 8824      		clr r8
 602 0264 9924      		clr r9
 603 0266 1E86      		std Y+14,__zero_reg__
 604 0268 1D86      		std Y+13,__zero_reg__
 605               	.L42:
 606 026a AD85      		ldd r26,Y+13
 510:../../../src/net/isa/dlmo.c **** 
 511:../../../src/net/isa/dlmo.c ****         }
 512:../../../src/net/isa/dlmo.c **** 
 513:../../../src/net/isa/dlmo.c ****     // scheduled slot wrapped back
 514:../../../src/net/isa/dlmo.c **** 
 515:../../../src/net/isa/dlmo.c ****     testVariable = 1;
 516:../../../src/net/isa/dlmo.c ****     for (test_slot = 0; test_slot<=current_local_slot;test_slot++){
 517:../../../src/net/isa/dlmo.c **** 	if(isa_slot & testVariable){ //slot is scheduled
 608               	.LM25:
 609 026c 2B81      		ldd r18,Y+3
 610 026e 2221      		and r18,r2
 611 0270 3C81      		ldd r19,Y+4
 612 0272 3321      		and r19,r3
 613 0274 4D81      		ldd r20,Y+5
 614 0276 4421      		and r20,r4
 615 0278 5E81      		ldd r21,Y+6
 616 027a 5521      		and r21,r5
 617 027c 6F81      		ldd r22,Y+7
 618 027e 6621      		and r22,r6
 619 0280 7885      		ldd r23,Y+8
 620 0282 7721      		and r23,r7
 621 0284 8985      		ldd r24,Y+9
 622 0286 8821      		and r24,r8
 623 0288 9A85      		ldd r25,Y+10
 624 028a 9921      		and r25,r9
 625 028c E22F      		mov r30,r18
 626 028e E32B      		or r30,r19
 627 0290 E42B      		or r30,r20
 628 0292 E52B      		or r30,r21
 629 0294 E62B      		or r30,r22
 630 0296 E72B      		or r30,r23
 631 0298 E82B      		or r30,r24
 632 029a E92B      		or r30,r25
 633 029c 01F0      		breq .L43
 518:../../../src/net/isa/dlmo.c **** 		min_slot = (ISA_SLOTS_PER_FRAME - current_local_slot + test_slot);
 635               	.LM26:
 636 029e 82E3      		ldi r24,lo8(50)
 637 02a0 90E0      		ldi r25,hi8(50)
 638 02a2 EB85      		ldd r30,Y+11
 639 02a4 FC85      		ldd r31,Y+12
 640 02a6 8E1B      		sub r24,r30
 641 02a8 9F0B      		sbc r25,r31
 642 02aa 8A0F      		add r24,r26
 643 02ac 911D      		adc r25,__zero_reg__
 644 02ae 00C0      		rjmp .L35
 645               	.L43:
 519:../../../src/net/isa/dlmo.c **** 			return min_slot;
 647               	.LM27:
 648 02b0 2D85      		ldd r18,Y+13
 649 02b2 3E85      		ldd r19,Y+14
 650 02b4 2F5F      		subi r18,lo8(-(1))
 651 02b6 3F4F      		sbci r19,hi8(-(1))
 652 02b8 3E87      		std Y+14,r19
 653 02ba 2D87      		std Y+13,r18
 655               	.LM28:
 656 02bc 3981      		ldd r19,Y+1
 657 02be 3217      		cp r19,r18
 658 02c0 00F0      		brlo .L45
 520:../../../src/net/isa/dlmo.c **** 
 521:../../../src/net/isa/dlmo.c **** 	}
 522:../../../src/net/isa/dlmo.c ****     testVariable = testVariable << 1;
 660               	.LM29:
 661 02c2 01E0      		ldi r16,lo8(1)
 662 02c4 222D      		mov r18,r2
 663 02c6 332D      		mov r19,r3
 664 02c8 442D      		mov r20,r4
 665 02ca 552D      		mov r21,r5
 666 02cc 662D      		mov r22,r6
 667 02ce 772D      		mov r23,r7
 668 02d0 882D      		mov r24,r8
 669 02d2 992D      		mov r25,r9
 670 02d4 0E94 0000 		call __ashldi3
 671 02d8 222E      		mov r2,r18
 672 02da 332E      		mov r3,r19
 673 02dc 442E      		mov r4,r20
 674 02de 552E      		mov r5,r21
 675 02e0 662E      		mov r6,r22
 676 02e2 772E      		mov r7,r23
 677 02e4 882E      		mov r8,r24
 678 02e6 992E      		mov r9,r25
 679 02e8 00C0      		rjmp .L42
 680               	.L45:
 681               	.L35:
 682               	/* epilogue: frame size=14 */
 683 02ea 2E96      		adiw r28,14
 684 02ec 0FB6      		in __tmp_reg__,__SREG__
 685 02ee F894      		cli
 686 02f0 DEBF      		out __SP_H__,r29
 687 02f2 0FBE      		out __SREG__,__tmp_reg__
 688 02f4 CDBF      		out __SP_L__,r28
 689 02f6 DF91      		pop r29
 690 02f8 CF91      		pop r28
 691 02fa 1F91      		pop r17
 692 02fc 0F91      		pop r16
 693 02fe FF90      		pop r15
 694 0300 EF90      		pop r14
 695 0302 DF90      		pop r13
 696 0304 CF90      		pop r12
 697 0306 BF90      		pop r11
 698 0308 AF90      		pop r10
 699 030a 9F90      		pop r9
 700 030c 8F90      		pop r8
 701 030e 7F90      		pop r7
 702 0310 6F90      		pop r6
 703 0312 5F90      		pop r5
 704 0314 4F90      		pop r4
 705 0316 3F90      		pop r3
 706 0318 2F90      		pop r2
 707 031a 0895      		ret
 708               	/* epilogue end (size=25) */
 709               	/* function isa_get_slots_until_next_wakeup size 244 (193) */
 717               	.Lscope4:
 719               		.stabd	78,0,0
 723               	.global	isLinkNeigborApplicable
 725               	isLinkNeigborApplicable:
 726               		.stabd	46,0,0
 523:../../../src/net/isa/dlmo.c **** 	    }
 524:../../../src/net/isa/dlmo.c **** }
 525:../../../src/net/isa/dlmo.c **** 
 526:../../../src/net/isa/dlmo.c **** 
 527:../../../src/net/isa/dlmo.c **** // *** Data link layer service access points ****
 528:../../../src/net/isa/dlmo.c **** /********dd_data_request : Service access point used to send data ******************
 529:../../../src/net/isa/dlmo.c ****  * SrcAddr (NL source address)
 530:../../../src/net/isa/dlmo.c ****  * DestAddr (NL destination address)
 531:../../../src/net/isa/dlmo.c ****  * Priority (priority of the payload)
 532:../../../src/net/isa/dlmo.c ****  * DE (discard eligible)
 533:../../../src/net/isa/dlmo.c ****  * ECN (explicit congestion notification)
 534:../../../src/net/isa/dlmo.c ****  * LH (last hop, NL)
 535:../../../src/net/isa/dlmo.c ****  * ContractID (ContractID of the payload)
 536:../../../src/net/isa/dlmo.c ****  * DSDULength (payload length)
 537:../../../src/net/isa/dlmo.c ****  * DSDU (number of octets as per DSDULength)
 538:../../../src/net/isa/dlmo.c ****  * DSDUHandle (uniquely identifies each invocation of this primitive)
 539:../../../src/net/isa/dlmo.c ****  *
 540:../../../src/net/isa/dlmo.c ****  */
 541:../../../src/net/isa/dlmo.c **** 
 542:../../../src/net/isa/dlmo.c **** 
 543:../../../src/net/isa/dlmo.c ****  int8_t dd_data_request(uint16_t srcAddr, uint16_t destAddr, uint8_t priority, bool discardEligible
 544:../../../src/net/isa/dlmo.c ****  {
 545:../../../src/net/isa/dlmo.c **** 	 //Future - Table lookup based on contract Id and dest address
 546:../../../src/net/isa/dlmo.c **** 	 //Current - contractId is considered as the graphID directly and dest is the destID
 547:../../../src/net/isa/dlmo.c **** 
 548:../../../src/net/isa/dlmo.c **** //Configure the headers within the payload (whichever applicable)
 549:../../../src/net/isa/dlmo.c **** 	 payload[DEST_INDEX] = destAddr;
 550:../../../src/net/isa/dlmo.c **** 	 //if (contractId!=0)
 551:../../../src/net/isa/dlmo.c **** 	 {
 552:../../../src/net/isa/dlmo.c **** 		 DLMO_DROUT * dRout;
 553:../../../src/net/isa/dlmo.c **** 		 dRout = &payload[DROUT_INDEX];
 554:../../../src/net/isa/dlmo.c **** 		 dRout->GraphId = contractId;
 555:../../../src/net/isa/dlmo.c **** 	 }
 556:../../../src/net/isa/dlmo.c **** return  enQueue (destAddr, priority, length, payload, slot_callback);
 557:../../../src/net/isa/dlmo.c **** 
 558:../../../src/net/isa/dlmo.c **** 
 559:../../../src/net/isa/dlmo.c **** }
 560:../../../src/net/isa/dlmo.c **** 
 561:../../../src/net/isa/dlmo.c **** //Wrapper for dd_data_request
 562:../../../src/net/isa/dlmo.c **** 
 563:../../../src/net/isa/dlmo.c ****  void sendPacket(uint16_t destAddr,uint8_t graphId, uint8_t length, uint8_t *payload, void (*slot_c
 564:../../../src/net/isa/dlmo.c ****  {
 565:../../../src/net/isa/dlmo.c **** 	 if (dd_data_request(0, destAddr, 0, 0, 0, 0, graphId,  length, payload,   slot_callback) == -1)
 566:../../../src/net/isa/dlmo.c **** 	 {
 567:../../../src/net/isa/dlmo.c **** 		 printIsaError();
 568:../../../src/net/isa/dlmo.c **** 	 }
 569:../../../src/net/isa/dlmo.c ****  }
 570:../../../src/net/isa/dlmo.c **** 
 571:../../../src/net/isa/dlmo.c ****  //*******************dd_data_indication: Service access point used to indicate received data******
 572:../../../src/net/isa/dlmo.c ****  void dd_data_indication(uint16_t srcAddr,uint16_t destAddr,uint8_t priority,bool discardEligibile,
 573:../../../src/net/isa/dlmo.c ****  {
 574:../../../src/net/isa/dlmo.c **** 
 575:../../../src/net/isa/dlmo.c **** 	// printf("packet is for me");
 576:../../../src/net/isa/dlmo.c **** 	  isa_rx_pkt_release();
 577:../../../src/net/isa/dlmo.c ****  }
 578:../../../src/net/isa/dlmo.c ****  /*
 579:../../../src/net/isa/dlmo.c ****   * Add to queue. Find a free place and insert with current time
 580:../../../src/net/isa/dlmo.c ****   */
 581:../../../src/net/isa/dlmo.c **** 
 582:../../../src/net/isa/dlmo.c ****  int8_t enQueue(uint16_t neighbor, uint8_t priority, uint8_t length, uint8_t *payload,  void (*slot
 583:../../../src/net/isa/dlmo.c ****  {
 584:../../../src/net/isa/dlmo.c **** 	 uint8_t i;
 585:../../../src/net/isa/dlmo.c **** 	/*
 586:../../../src/net/isa/dlmo.c **** 	 bool passedLowerPriority = false;
 587:../../../src/net/isa/dlmo.c **** 	 bool fixRequired = false;
 588:../../../src/net/isa/dlmo.c **** 	 bool insertionDone = false;
 589:../../../src/net/isa/dlmo.c **** 	 uint8_t lowerPriorityIndex;
 590:../../../src/net/isa/dlmo.c **** 	 uint8_t usedIndex;
 591:../../../src/net/isa/dlmo.c **** 	 ISA_QUEUE * temp;
 592:../../../src/net/isa/dlmo.c **** */
 593:../../../src/net/isa/dlmo.c **** 
 594:../../../src/net/isa/dlmo.c **** 	 	 if (isaTxQueueSize > TRANSMIT_QUEUE_MAX_SIZE){
 595:../../../src/net/isa/dlmo.c **** 	 		 setIsaError(TRANSMIT_QUEUE_CAPACITY_ERROR);
 596:../../../src/net/isa/dlmo.c **** 	 		 return ISA_ERROR;
 597:../../../src/net/isa/dlmo.c **** 	 	 }
 598:../../../src/net/isa/dlmo.c **** 
 599:../../../src/net/isa/dlmo.c **** 	 	 //check if length of payload is within bounds
 600:../../../src/net/isa/dlmo.c **** 	 	 if (length >= RF_MAX_PAYLOAD_SIZE) {
 601:../../../src/net/isa/dlmo.c **** 	 		 setIsaError(MAX_PAYLOAD_ERROR);
 602:../../../src/net/isa/dlmo.c **** 	 		 return ISA_ERROR;
 603:../../../src/net/isa/dlmo.c **** 	 	 }
 604:../../../src/net/isa/dlmo.c **** 
 605:../../../src/net/isa/dlmo.c **** 	 	 //if we are here, we should have place to add into the Queue
 606:../../../src/net/isa/dlmo.c **** 	 	 //find the first free index and insert
 607:../../../src/net/isa/dlmo.c **** 	 for (i = 0; i < TRANSMIT_QUEUE_MAX_SIZE; i++){
 608:../../../src/net/isa/dlmo.c **** 
 609:../../../src/net/isa/dlmo.c **** 		 if (isaQueue[i].usedSlot == false){
 610:../../../src/net/isa/dlmo.c **** 			 isaQueue[i].length = length;
 611:../../../src/net/isa/dlmo.c **** 			 isaQueue[i].priority = priority;
 612:../../../src/net/isa/dlmo.c **** 			 isaQueue[i].transmitPending = true;
 613:../../../src/net/isa/dlmo.c **** 			 isaQueue[i].usedSlot = true;
 614:../../../src/net/isa/dlmo.c **** 			 isaQueue[i].neighbor = neighbor;
 615:../../../src/net/isa/dlmo.c **** 			 isaQueue[i].slot_callback =  slot_callback;
 616:../../../src/net/isa/dlmo.c **** 			 isaQueue[i].numTries = 0;
 617:../../../src/net/isa/dlmo.c **** 			 memcpy(isaQueue[i].tx_buf, payload, length );//copy the payload
 618:../../../src/net/isa/dlmo.c **** 			 nrk_time_get(&isaQueue[i].time);	//copy the time when I was inserted into Queue
 619:../../../src/net/isa/dlmo.c **** 			 isaTxQueueSize++;
 620:../../../src/net/isa/dlmo.c **** 			 break;
 621:../../../src/net/isa/dlmo.c **** 		 }
 622:../../../src/net/isa/dlmo.c **** 
 623:../../../src/net/isa/dlmo.c **** 	 }
 624:../../../src/net/isa/dlmo.c **** 	 if ( i == TRANSMIT_QUEUE_MAX_SIZE){
 625:../../../src/net/isa/dlmo.c **** 		 printf(" Critical error 2\r\n");
 626:../../../src/net/isa/dlmo.c **** 		 return ISA_ERROR;
 627:../../../src/net/isa/dlmo.c **** 	 }
 628:../../../src/net/isa/dlmo.c **** 	 return ISA_SUCCESS;
 629:../../../src/net/isa/dlmo.c **** 
 630:../../../src/net/isa/dlmo.c **** 		 //this if evaluates the event in which I have not copied into a slot and find an entry of lower 
 631:../../../src/net/isa/dlmo.c **** /*
 632:../../../src/net/isa/dlmo.c **** 		 if (isaQueuePointer[i]->usedSlot == true && isaQueuePointer[i]->transmitPending = false  && inse
 633:../../../src/net/isa/dlmo.c **** 			 passedLowerPriority = true;
 634:../../../src/net/isa/dlmo.c **** 			 lowerPriorityIndex = i;
 635:../../../src/net/isa/dlmo.c **** 			 continue;
 636:../../../src/net/isa/dlmo.c **** 		 }
 637:../../../src/net/isa/dlmo.c **** 		 //if passedLowerPriority == true , then find a slot to insert and insert-> swap pointers for low
 638:../../../src/net/isa/dlmo.c **** 		 //fix for every index till free index
 639:../../../src/net/isa/dlmo.c **** 
 640:../../../src/net/isa/dlmo.c **** 		 if (insertionDone == false && isaQueuePointer[i]->usedSlot == false){
 641:../../../src/net/isa/dlmo.c **** 			 //find a free slot to insert
 642:../../../src/net/isa/dlmo.c **** 			 usedIndex = i;
 643:../../../src/net/isa/dlmo.c **** 			 isaQueuePointer[i]->length = length;
 644:../../../src/net/isa/dlmo.c **** 			 isaQueuePointer[i]->priority = priority;
 645:../../../src/net/isa/dlmo.c **** 			 isaQueuePointer[i]->transmitPending = true;
 646:../../../src/net/isa/dlmo.c **** 			 isaQueuePointer[i]->usedSlot = true;
 647:../../../src/net/isa/dlmo.c **** 			 isaQueuePointer[i]->neighbor = neighbor;
 648:../../../src/net/isa/dlmo.c **** 			 memcpy(isaQueuePointer[i]->tx_buf, payload, length );//copy the payload
 649:../../../src/net/isa/dlmo.c **** 			 isaTxQueueSize++;
 650:../../../src/net/isa/dlmo.c **** 			 insertionDone = true;
 651:../../../src/net/isa/dlmo.c **** 			 if (passedLowerPriority == true) break; //IF this is the case, I fix after this loop
 652:../../../src/net/isa/dlmo.c **** 			 continue;
 653:../../../src/net/isa/dlmo.c **** 		 }
 654:../../../src/net/isa/dlmo.c **** 
 655:../../../src/net/isa/dlmo.c **** 		 if (insertionDone == true && isaQueuePointer[i]->usedSlot == true  && isaQueuePointer[i]->transm
 656:../../../src/net/isa/dlmo.c **** 			 //we come here only if fix required
 657:../../../src/net/isa/dlmo.c **** 			 temp = isaQueuePointer[i];
 658:../../../src/net/isa/dlmo.c **** 			 isaQueuePointer[i] = isaQueuePointer[usedIndex];
 659:../../../src/net/isa/dlmo.c **** 			 isaQueuePointer[usedIndex] = temp;
 660:../../../src/net/isa/dlmo.c **** 			 usedIndex = i;
 661:../../../src/net/isa/dlmo.c **** 				 }
 662:../../../src/net/isa/dlmo.c **** 
 663:../../../src/net/isa/dlmo.c **** 
 664:../../../src/net/isa/dlmo.c **** 	 //we can return now if we did not come here through the condition where I inserted after a higher
 665:../../../src/net/isa/dlmo.c **** 	 if (passedLowerPriority == false) return 1;
 666:../../../src/net/isa/dlmo.c **** 	 //I am here if I inserted after lower priority. Now I need to take care of fixing that
 667:../../../src/net/isa/dlmo.c **** // I iterate from usedIndex to lowerPriority Index in the backward direction and fix
 668:../../../src/net/isa/dlmo.c **** 	 for (i = usedIndex -1 ; i >= lowerPriorityIndex ; i--)
 669:../../../src/net/isa/dlmo.c **** 		 if (isaQueuePointer[i]->usedSlot == true  && isaQueuePointer[i]->transmitPending = false && isaQ
 670:../../../src/net/isa/dlmo.c **** 			 temp = isaQueuePointer[i];
 671:../../../src/net/isa/dlmo.c **** 			 isaQueuePointer[i] = isaQueuePointer[usedIndex];
 672:../../../src/net/isa/dlmo.c **** 			 isaQueuePointer[usedIndex] = temp;
 673:../../../src/net/isa/dlmo.c **** 			 usedIndex = i;
 674:../../../src/net/isa/dlmo.c **** 		 }
 675:../../../src/net/isa/dlmo.c **** 	 return 1;
 676:../../../src/net/isa/dlmo.c ****  */
 677:../../../src/net/isa/dlmo.c ****  }
 678:../../../src/net/isa/dlmo.c **** 
 679:../../../src/net/isa/dlmo.c **** /*
 680:../../../src/net/isa/dlmo.c ****  * if numtries is 0 then we should have the preferred link, else take any of the other links if pos
 681:../../../src/net/isa/dlmo.c ****  */
 682:../../../src/net/isa/dlmo.c **** 
 683:../../../src/net/isa/dlmo.c ****  bool isLinkNeigborApplicable(ISA_QUEUE* isaQueue, DLMO_LINK * link)
 684:../../../src/net/isa/dlmo.c ****  {
 728               	.LM30:
 729               	.LFBB5:
 730               	/* prologue: frame size=0 */
 731 031c 0F93      		push r16
 732 031e 1F93      		push r17
 733 0320 CF93      		push r28
 734 0322 DF93      		push r29
 735               	/* prologue end (size=4) */
 685:../../../src/net/isa/dlmo.c **** 	 uint8_t i;
 686:../../../src/net/isa/dlmo.c **** 	 if (isaQueue->numTries == 0){
 737               	.LM31:
 738 0324 FC01      		movw r30,r24
 739 0326 EC57      		subi r30,lo8(-(132))
 740 0328 FF4F      		sbci r31,hi8(-(132))
 741 032a 8081      		ld r24,Z
 742 032c FB01      		movw r30,r22
 743 032e C285      		ldd r28,Z+10
 744 0330 D385      		ldd r29,Z+11
 745 0332 8823      		tst r24
 746 0334 01F0      		breq .L49
 687:../../../src/net/isa/dlmo.c **** 		 if( link->graphPtr->neighbor[0] == link->neighbor->index ) return true;
 688:../../../src/net/isa/dlmo.c **** 	 return false;
 689:../../../src/net/isa/dlmo.c **** 	 }
 690:../../../src/net/isa/dlmo.c **** 	 //for the number of neighbors configured as alternate routes in this graph
 691:../../../src/net/isa/dlmo.c **** 	 for (i = 0; i< SHIFTRIGHT(ISAMASK(link->graphPtr->info, NEIGHBOR_COUNT_MASK),NEIGHBOR_COUNT_LOWER
 748               	.LM32:
 749 0336 8A81      		ldd r24,Y+2
 750 0338 482F      		mov r20,r24
 751 033a 5527      		clr r21
 752 033c 4077      		andi r20,lo8(112)
 753 033e 5070      		andi r21,hi8(112)
 754 0340 F4E0      		ldi r31,4
 755 0342 5595      	1:	asr r21
 756 0344 4795      		ror r20
 757 0346 FA95      		dec r31
 758 0348 01F4      		brne 1b
 759 034a 00E0      		ldi r16,lo8(0)
 760 034c 10E0      		ldi r17,hi8(0)
 761 034e 00C0      		rjmp .L51
 762               	.L49:
 763 0350 40E0      		ldi r20,lo8(0)
 764 0352 50E0      		ldi r21,hi8(0)
 765 0354 FB01      		movw r30,r22
 766 0356 A085      		ldd r26,Z+8
 767 0358 B185      		ldd r27,Z+9
 768 035a 2C81      		ldd r18,Y+4
 769 035c 3D81      		ldd r19,Y+5
 770 035e FD01      		movw r30,r26
 771 0360 8181      		ldd r24,Z+1
 772 0362 9281      		ldd r25,Z+2
 773 0364 2817      		cp r18,r24
 774 0366 3907      		cpc r19,r25
 775 0368 01F4      		brne .L52
 776 036a 41E0      		ldi r20,lo8(1)
 777 036c 50E0      		ldi r21,hi8(1)
 778               	.L52:
 779 036e CA01      		movw r24,r20
 780 0370 00C0      		rjmp .L53
 781               	.L54:
 782 0372 0F5F      		subi r16,lo8(-(1))
 783 0374 1F4F      		sbci r17,hi8(-(1))
 692:../../../src/net/isa/dlmo.c **** 		 if (link->graphPtr->neighbor[i] == link->neighbor->index) return true;
 785               	.LM33:
 786 0376 AA0F      		lsl r26
 787 0378 BB1F      		rol r27
 788 037a AC0F      		add r26,r28
 789 037c BD1F      		adc r27,r29
 790 037e FB01      		movw r30,r22
 791 0380 8085      		ldd r24,Z+8
 792 0382 9185      		ldd r25,Z+9
 793 0384 FD01      		movw r30,r26
 794 0386 2481      		ldd r18,Z+4
 795 0388 3581      		ldd r19,Z+5
 796 038a FC01      		movw r30,r24
 797 038c 8181      		ldd r24,Z+1
 798 038e 9281      		ldd r25,Z+2
 799 0390 2817      		cp r18,r24
 800 0392 3907      		cpc r19,r25
 801 0394 01F4      		brne .L51
 802 0396 81E0      		ldi r24,lo8(1)
 803 0398 90E0      		ldi r25,hi8(1)
 804 039a 00C0      		rjmp .L53
 805               	.L51:
 807               	.LM34:
 808 039c A02F      		mov r26,r16
 809 039e BB27      		clr r27
 810 03a0 A417      		cp r26,r20
 811 03a2 B507      		cpc r27,r21
 812 03a4 04F0      		brlt .L54
 813 03a6 80E0      		ldi r24,lo8(0)
 814 03a8 90E0      		ldi r25,hi8(0)
 815               	.L53:
 816               	/* epilogue: frame size=0 */
 817 03aa DF91      		pop r29
 818 03ac CF91      		pop r28
 819 03ae 1F91      		pop r17
 820 03b0 0F91      		pop r16
 821 03b2 0895      		ret
 822               	/* epilogue end (size=5) */
 823               	/* function isLinkNeigborApplicable size 76 (67) */
 825               	.Lscope5:
 827               		.stabd	78,0,0
 830               	.global	getHighPriorityEntry
 832               	getHighPriorityEntry:
 833               		.stabd	46,0,0
 693:../../../src/net/isa/dlmo.c **** 	 }
 694:../../../src/net/isa/dlmo.c **** 	 return false;
 695:../../../src/net/isa/dlmo.c ****  }
 696:../../../src/net/isa/dlmo.c **** 
 697:../../../src/net/isa/dlmo.c ****  ISA_QUEUE * getHighPriorityEntry(DLMO_LINK * link){
 835               	.LM35:
 836               	.LFBB6:
 837               	/* prologue: frame size=7 */
 838 03b4 2F92      		push r2
 839 03b6 3F92      		push r3
 840 03b8 4F92      		push r4
 841 03ba 5F92      		push r5
 842 03bc 6F92      		push r6
 843 03be 7F92      		push r7
 844 03c0 8F92      		push r8
 845 03c2 9F92      		push r9
 846 03c4 AF92      		push r10
 847 03c6 BF92      		push r11
 848 03c8 CF92      		push r12
 849 03ca DF92      		push r13
 850 03cc EF92      		push r14
 851 03ce FF92      		push r15
 852 03d0 0F93      		push r16
 853 03d2 1F93      		push r17
 854 03d4 CF93      		push r28
 855 03d6 DF93      		push r29
 856 03d8 CDB7      		in r28,__SP_L__
 857 03da DEB7      		in r29,__SP_H__
 858 03dc 2797      		sbiw r28,7
 859 03de 0FB6      		in __tmp_reg__,__SREG__
 860 03e0 F894      		cli
 861 03e2 DEBF      		out __SP_H__,r29
 862 03e4 0FBE      		out __SREG__,__tmp_reg__
 863 03e6 CDBF      		out __SP_L__,r28
 864               	/* prologue end (size=26) */
 865 03e8 2C01      		movw r4,r24
 698:../../../src/net/isa/dlmo.c **** 
 699:../../../src/net/isa/dlmo.c **** 	 uint16_t neighbor;
 700:../../../src/net/isa/dlmo.c **** 	 nrk_time_t time;
 701:../../../src/net/isa/dlmo.c **** 	 uint8_t priority = 0;
 702:../../../src/net/isa/dlmo.c **** 	 ISA_QUEUE* tempIndex;
 703:../../../src/net/isa/dlmo.c **** 	 bool found = false;
 704:../../../src/net/isa/dlmo.c **** 	 uint8_t i;
 705:../../../src/net/isa/dlmo.c **** 	 uint8_t graphType;
 706:../../../src/net/isa/dlmo.c **** 	 //check the link type
 707:../../../src/net/isa/dlmo.c **** 
 708:../../../src/net/isa/dlmo.c **** 	 graphType = ISAMASK(link->typeInfo,GRAPH_TYPE_MASK);
 867               	.LM36:
 868 03ea FC01      		movw r30,r24
 869 03ec 7780      		ldd r7,Z+7
 870 03ee F0E3      		ldi r31,lo8(48)
 871 03f0 7F22      		and r7,r31
 709:../../../src/net/isa/dlmo.c **** 	 graphType = SHIFTRIGHT(graphType,GRAPH_TYPE_BIT);
 873               	.LM37:
 874 03f2 7694      		lsr r7
 875 03f4 7694      		lsr r7
 876 03f6 7694      		lsr r7
 877 03f8 7694      		lsr r7
 710:../../../src/net/isa/dlmo.c **** 
 711:../../../src/net/isa/dlmo.c **** 
 712:../../../src/net/isa/dlmo.c **** 
 713:../../../src/net/isa/dlmo.c **** if (graphType == 0){	//if the graph type is 0
 879               	.LM38:
 880 03fa 01F0      		breq .+2
 881 03fc 00C0      		rjmp .L61
 882               	.L62:
 714:../../../src/net/isa/dlmo.c **** 	DIRECT_NEIGHBOR:
 884               	.LM39:
 885 03fe 1D82      		std Y+5,__zero_reg__
 886               	.L63:
 715:../../../src/net/isa/dlmo.c **** 	if (link->neighbor == NULL || link->neighbor->isPresent == false) return NULL;
 888               	.LM40:
 889 0400 F201      		movw r30,r4
 890 0402 A085      		ldd r26,Z+8
 891 0404 B185      		ldd r27,Z+9
 892 0406 1097      		sbiw r26,0
 893 0408 01F4      		brne .+2
 894 040a 00C0      		rjmp .L64
 895 040c 8C91      		ld r24,X
 896 040e 8823      		tst r24
 897 0410 01F4      		brne .+2
 898 0412 00C0      		rjmp .L64
 716:../../../src/net/isa/dlmo.c **** 	neighbor = link->neighbor->index;
 900               	.LM41:
 901 0414 FD01      		movw r30,r26
 902 0416 C180      		ldd r12,Z+1
 903 0418 D280      		ldd r13,Z+2
 904 041a 40E0      		ldi r20,lo8(0)
 905 041c 20E0      		ldi r18,lo8(0)
 906 041e 30E0      		ldi r19,hi8(0)
 907 0420 60E0      		ldi r22,lo8(0)
 908 0422 70E0      		ldi r23,hi8(0)
 909               	.L67:
 717:../../../src/net/isa/dlmo.c **** 	for (i = 0; i < TRANSMIT_QUEUE_MAX_SIZE; i++){
 718:../../../src/net/isa/dlmo.c **** 		 if (isaQueue[i].usedSlot == true && isaQueue[i].transmitPending == true && isaQueue[i].neighbor 
 911               	.LM42:
 912 0424 85E8      		ldi r24,lo8(133)
 913 0426 90E0      		ldi r25,hi8(133)
 914 0428 289F      		mul r18,r24
 915 042a 3001      		movw r6,r0
 916 042c 299F      		mul r18,r25
 917 042e 700C      		add r7,r0
 918 0430 389F      		mul r19,r24
 919 0432 700C      		add r7,r0
 920 0434 1124      		clr r1
 921 0436 80E0      		ldi r24,lo8(isaQueue)
 922 0438 90E0      		ldi r25,hi8(isaQueue)
 923 043a 680E      		add r6,r24
 924 043c 791E      		adc r7,r25
 925 043e A6E7      		ldi r26,lo8(118)
 926 0440 B0E0      		ldi r27,hi8(118)
 927 0442 6A0E      		add r6,r26
 928 0444 7B1E      		adc r7,r27
 929 0446 F301      		movw r30,r6
 930 0448 8081      		ld r24,Z
 931 044a AAE8      		ldi r26,lo8(-118)
 932 044c BFEF      		ldi r27,hi8(-118)
 933 044e 6A0E      		add r6,r26
 934 0450 7B1E      		adc r7,r27
 935 0452 8823      		tst r24
 936 0454 01F4      		brne .+2
 937 0456 00C0      		rjmp .L68
 938 0458 E5E7      		ldi r30,lo8(117)
 939 045a F0E0      		ldi r31,hi8(117)
 940 045c 6E0E      		add r6,r30
 941 045e 7F1E      		adc r7,r31
 942 0460 D301      		movw r26,r6
 943 0462 8C91      		ld r24,X
 944 0464 EBE8      		ldi r30,lo8(-117)
 945 0466 FFEF      		ldi r31,hi8(-117)
 946 0468 6E0E      		add r6,r30
 947 046a 7F1E      		adc r7,r31
 948 046c 8823      		tst r24
 949 046e 01F4      		brne .+2
 950 0470 00C0      		rjmp .L68
 951 0472 8AE7      		ldi r24,lo8(122)
 952 0474 90E0      		ldi r25,hi8(122)
 953 0476 680E      		add r6,r24
 954 0478 791E      		adc r7,r25
 955 047a D301      		movw r26,r6
 956 047c 8D91      		ld r24,X+
 957 047e 9C91      		ld r25,X
 958 0480 E6E8      		ldi r30,lo8(-122)
 959 0482 FFEF      		ldi r31,hi8(-122)
 960 0484 6E0E      		add r6,r30
 961 0486 7F1E      		adc r7,r31
 962 0488 8C15      		cp r24,r12
 963 048a 9D05      		cpc r25,r13
 964 048c 01F0      		breq .+2
 965 048e 00C0      		rjmp .L68
 719:../../../src/net/isa/dlmo.c **** 			 if (found == false){
 967               	.LM43:
 968 0490 4423      		tst r20
 969 0492 01F4      		brne .L72
 720:../../../src/net/isa/dlmo.c **** 				 found = true;
 721:../../../src/net/isa/dlmo.c **** 				 priority = isaQueue[i].priority;
 971               	.LM44:
 972 0494 89E7      		ldi r24,lo8(121)
 973 0496 90E0      		ldi r25,hi8(121)
 974 0498 680E      		add r6,r24
 975 049a 791E      		adc r7,r25
 976 049c D301      		movw r26,r6
 977 049e BC91      		ld r27,X
 978 04a0 BD83      		std Y+5,r27
 979 04a2 FB01      		movw r30,r22
 980 04a4 E050      		subi r30,lo8(-(isaQueue))
 981 04a6 F040      		sbci r31,hi8(-(isaQueue))
 982 04a8 FC83      		std Y+4,r31
 983 04aa EB83      		std Y+3,r30
 722:../../../src/net/isa/dlmo.c **** 				 tempIndex = &isaQueue[i];
 723:../../../src/net/isa/dlmo.c **** 				 time.nano_secs = isaQueue[i].time.nano_secs;
 985               	.LM45:
 986 04ac 87E0      		ldi r24,lo8(7)
 987 04ae 90E0      		ldi r25,hi8(7)
 988 04b0 680E      		add r6,r24
 989 04b2 791E      		adc r7,r25
 990 04b4 D301      		movw r26,r6
 991 04b6 8D90      		ld r8,X+
 992 04b8 9D90      		ld r9,X+
 993 04ba AD90      		ld r10,X+
 994 04bc BC90      		ld r11,X
 724:../../../src/net/isa/dlmo.c **** 				 time.secs = isaQueue[i].time.secs;
 996               	.LM46:
 997 04be F301      		movw r30,r6
 998 04c0 1291      		ld r17,-Z
 999 04c2 0291      		ld r16,-Z
 1000 04c4 F290      		ld r15,-Z
 1001 04c6 E290      		ld r14,-Z
 1002 04c8 3F01      		movw r6,r30
 1003 04ca 84E8      		ldi r24,lo8(-124)
 1004 04cc 9FEF      		ldi r25,hi8(-124)
 1005 04ce 680E      		add r6,r24
 1006 04d0 791E      		adc r7,r25
 1007               	.L72:
 725:../../../src/net/isa/dlmo.c **** 			 }
 726:../../../src/net/isa/dlmo.c **** 			 //			if the priority is greater					or	(	priority is the same    		and ( seconds is less					or
 727:../../../src/net/isa/dlmo.c **** 		 if (found == true && ( priority < isaQueue[i].priority  || ( (priority == isaQueue[i].priority) 
 1009               	.LM47:
 1010 04d2 D301      		movw r26,r6
 1011 04d4 A758      		subi r26,lo8(-(121))
 1012 04d6 BF4F      		sbci r27,hi8(-(121))
 1013 04d8 8C91      		ld r24,X
 1014 04da 9D81      		ldd r25,Y+5
 1015 04dc 9817      		cp r25,r24
 1016 04de 00F0      		brlo .L74
 1017 04e0 8C91      		ld r24,X
 1018 04e2 9817      		cp r25,r24
 1019 04e4 01F0      		breq .+2
 1020 04e6 00C0      		rjmp .L76
 1021 04e8 A301      		movw r20,r6
 1022 04ea 4458      		subi r20,lo8(-(124))
 1023 04ec 5F4F      		sbci r21,hi8(-(124))
 1024 04ee FA01      		movw r30,r20
 1025 04f0 8081      		ld r24,Z
 1026 04f2 9181      		ldd r25,Z+1
 1027 04f4 A281      		ldd r26,Z+2
 1028 04f6 B381      		ldd r27,Z+3
 1029 04f8 8E15      		cp r24,r14
 1030 04fa 9F05      		cpc r25,r15
 1031 04fc A007      		cpc r26,r16
 1032 04fe B107      		cpc r27,r17
 1033 0500 00F0      		brlo .L74
 1034 0502 8081      		ld r24,Z
 1035 0504 9181      		ldd r25,Z+1
 1036 0506 A281      		ldd r26,Z+2
 1037 0508 B381      		ldd r27,Z+3
 1038 050a E816      		cp r14,r24
 1039 050c F906      		cpc r15,r25
 1040 050e 0A07      		cpc r16,r26
 1041 0510 1B07      		cpc r17,r27
 1042 0512 01F4      		brne .L76
 1043 0514 80E8      		ldi r24,lo8(128)
 1044 0516 90E0      		ldi r25,hi8(128)
 1045 0518 680E      		add r6,r24
 1046 051a 791E      		adc r7,r25
 1047 051c F301      		movw r30,r6
 1048 051e 8081      		ld r24,Z
 1049 0520 9181      		ldd r25,Z+1
 1050 0522 A281      		ldd r26,Z+2
 1051 0524 B381      		ldd r27,Z+3
 1052 0526 8815      		cp r24,r8
 1053 0528 9905      		cpc r25,r9
 1054 052a AA05      		cpc r26,r10
 1055 052c BB05      		cpc r27,r11
 1056 052e 00F4      		brsh .L76
 1057               	.L74:
 728:../../../src/net/isa/dlmo.c **** 			 priority = isaQueue[i].priority;
 1059               	.LM48:
 1060 0530 85E8      		ldi r24,lo8(133)
 1061 0532 90E0      		ldi r25,hi8(133)
 1062 0534 289F      		mul r18,r24
 1063 0536 D001      		movw r26,r0
 1064 0538 299F      		mul r18,r25
 1065 053a B00D      		add r27,r0
 1066 053c 389F      		mul r19,r24
 1067 053e B00D      		add r27,r0
 1068 0540 1124      		clr r1
 1069 0542 A050      		subi r26,lo8(-(isaQueue))
 1070 0544 B040      		sbci r27,hi8(-(isaQueue))
 1071 0546 A758      		subi r26,lo8(-(121))
 1072 0548 BF4F      		sbci r27,hi8(-(121))
 1073 054a FC91      		ld r31,X
 1074 054c FD83      		std Y+5,r31
 1075 054e CB01      		movw r24,r22
 1076 0550 8050      		subi r24,lo8(-(isaQueue))
 1077 0552 9040      		sbci r25,hi8(-(isaQueue))
 1078 0554 9C83      		std Y+4,r25
 1079 0556 8B83      		std Y+3,r24
 729:../../../src/net/isa/dlmo.c **** 			 tempIndex = &isaQueue[i];
 730:../../../src/net/isa/dlmo.c **** 			 time.nano_secs = isaQueue[i].time.nano_secs;
 1081               	.LM49:
 1082 0558 1796      		adiw r26,7
 1083 055a 8D90      		ld r8,X+
 1084 055c 9D90      		ld r9,X+
 1085 055e AD90      		ld r10,X+
 1086 0560 BC90      		ld r11,X
 1087 0562 1397      		sbiw r26,3
 731:../../../src/net/isa/dlmo.c **** 			 time.secs = isaQueue[i].time.secs;
 1089               	.LM50:
 1090 0564 FD01      		movw r30,r26
 1091 0566 1291      		ld r17,-Z
 1092 0568 0291      		ld r16,-Z
 1093 056a F290      		ld r15,-Z
 1094 056c E290      		ld r14,-Z
 1095               	.L76:
 1096 056e 41E0      		ldi r20,lo8(1)
 1097               	.L68:
 1098 0570 2F5F      		subi r18,lo8(-(1))
 1099 0572 3F4F      		sbci r19,hi8(-(1))
 1100 0574 6B57      		subi r22,lo8(-(133))
 1101 0576 7F4F      		sbci r23,hi8(-(133))
 1103               	.LM51:
 1104 0578 2431      		cpi r18,20
 1105 057a 3105      		cpc r19,__zero_reg__
 1106 057c 01F0      		breq .+2
 1107 057e 00C0      		rjmp .L67
 732:../../../src/net/isa/dlmo.c **** 		 }
 733:../../../src/net/isa/dlmo.c **** 	 }
 734:../../../src/net/isa/dlmo.c **** 
 735:../../../src/net/isa/dlmo.c ****  }
 736:../../../src/net/isa/dlmo.c **** 	 if (found == false) {
 1109               	.LM52:
 1110 0580 4423      		tst r20
 1111 0582 01F0      		breq .+2
 1112 0584 00C0      		rjmp .L81
 1113 0586 00C0      		rjmp .L64
 1114               	.L61:
 737:../../../src/net/isa/dlmo.c **** 		 return NULL;
 738:../../../src/net/isa/dlmo.c **** 	 }
 739:../../../src/net/isa/dlmo.c **** 	 return tempIndex;
 740:../../../src/net/isa/dlmo.c **** }
 741:../../../src/net/isa/dlmo.c **** else if (graphType == 1 || graphType == 2){		//this link is only for graph routing or this link pre
 1116               	.LM53:
 1117 0588 872D      		mov r24,r7
 1118 058a 8150      		subi r24,lo8(-(-1))
 1119 058c 8230      		cpi r24,lo8(2)
 1120 058e 00F0      		brlo .+2
 1121 0590 00C0      		rjmp .L82
 742:../../../src/net/isa/dlmo.c **** 	//get the graph from the link
 743:../../../src/net/isa/dlmo.c **** 	if (link->graphPtr == NULL || link->graphPtr->index == 0) {	//if the graph pointer is null and the
 1123               	.LM54:
 1124 0592 F201      		movw r30,r4
 1125 0594 A285      		ldd r26,Z+10
 1126 0596 B385      		ldd r27,Z+11
 1127 0598 1097      		sbiw r26,0
 1128 059a 01F0      		breq .L84
 1129 059c 8D91      		ld r24,X+
 1130 059e 9C91      		ld r25,X
 1131 05a0 892B      		or r24,r25
 1132 05a2 01F4      		brne .L86
 1133               	.L84:
 744:../../../src/net/isa/dlmo.c **** 	if (graphType==2)goto DIRECT_NEIGHBOR;
 1135               	.LM55:
 1136 05a4 F2E0      		ldi r31,lo8(2)
 1137 05a6 7F16      		cp r7,r31
 1138 05a8 01F0      		breq .+2
 1139 05aa 00C0      		rjmp .L64
 1140 05ac 00C0      		rjmp .L62
 1141               	.L86:
 1142 05ae 1D82      		std Y+5,__zero_reg__
 1143 05b0 6624      		clr r6
 1144 05b2 2224      		clr r2
 1145 05b4 3324      		clr r3
 1146 05b6 1A82      		std Y+2,__zero_reg__
 1147 05b8 1982      		std Y+1,__zero_reg__
 1148               	.L87:
 745:../../../src/net/isa/dlmo.c **** 	return NULL;
 746:../../../src/net/isa/dlmo.c **** }
 747:../../../src/net/isa/dlmo.c **** for (i = 0; i < TRANSMIT_QUEUE_MAX_SIZE; i++){
 748:../../../src/net/isa/dlmo.c **** 		 if (isaQueue[i].usedSlot == true && isaQueue[i].transmitPending == true ){
 1150               	.LM56:
 1151 05ba 85E8      		ldi r24,lo8(133)
 1152 05bc 90E0      		ldi r25,hi8(133)
 1153 05be 289E      		mul r2,r24
 1154 05c0 F001      		movw r30,r0
 1155 05c2 299E      		mul r2,r25
 1156 05c4 F00D      		add r31,r0
 1157 05c6 389E      		mul r3,r24
 1158 05c8 F00D      		add r31,r0
 1159 05ca 1124      		clr r1
 1160 05cc 9F01      		movw r18,r30
 1161 05ce 2050      		subi r18,lo8(-(isaQueue))
 1162 05d0 3040      		sbci r19,hi8(-(isaQueue))
 1163 05d2 2A58      		subi r18,lo8(-(118))
 1164 05d4 3F4F      		sbci r19,hi8(-(118))
 1165 05d6 D901      		movw r26,r18
 1166 05d8 8C91      		ld r24,X
 1167 05da A657      		subi r26,lo8(-(-118))
 1168 05dc B040      		sbci r27,hi8(-(-118))
 1169 05de BF83      		std Y+7,r27
 1170 05e0 AE83      		std Y+6,r26
 1171 05e2 8823      		tst r24
 1172 05e4 01F4      		brne .+2
 1173 05e6 00C0      		rjmp .L88
 1174 05e8 AB58      		subi r26,lo8(-(117))
 1175 05ea BF4F      		sbci r27,hi8(-(117))
 1176 05ec 8C91      		ld r24,X
 1177 05ee A557      		subi r26,lo8(-(-117))
 1178 05f0 B040      		sbci r27,hi8(-(-117))
 1179 05f2 BF83      		std Y+7,r27
 1180 05f4 AE83      		std Y+6,r26
 1181 05f6 8823      		tst r24
 1182 05f8 01F4      		brne .+2
 1183 05fa 00C0      		rjmp .L88
 1184               	.LBB4:
 749:../../../src/net/isa/dlmo.c **** 			 DLMO_DROUT * dRout = &isaQueue[i].tx_buf[DROUT_INDEX];
 1186               	.LM57:
 1187 05fc E050      		subi r30,lo8(-(isaQueue+5))
 1188 05fe F040      		sbci r31,hi8(-(isaQueue+5))
 750:../../../src/net/isa/dlmo.c **** 			 if (dRout->GraphId!=0 && dRout->GraphId == link->graphPtr->index)//If the GraphId matches  (gra
 1190               	.LM58:
 1191 0600 8281      		ldd r24,Z+2
 1192 0602 8823      		tst r24
 1193 0604 01F4      		brne .+2
 1194 0606 00C0      		rjmp .L88
 1195 0608 9927      		clr r25
 1196 060a F201      		movw r30,r4
 1197 060c A285      		ldd r26,Z+10
 1198 060e B385      		ldd r27,Z+11
 1199 0610 2D91      		ld r18,X+
 1200 0612 3C91      		ld r19,X
 1201 0614 8217      		cp r24,r18
 1202 0616 9307      		cpc r25,r19
 1203 0618 01F0      		breq .+2
 1204 061a 00C0      		rjmp .L88
 1206               	.LM59:
 1207 061c C980      		ldd r12,Y+1
 1208 061e DA80      		ldd r13,Y+2
 1209 0620 20E0      		ldi r18,lo8(isaQueue)
 1210 0622 30E0      		ldi r19,hi8(isaQueue)
 1211 0624 C20E      		add r12,r18
 1212 0626 D31E      		adc r13,r19
 751:../../../src/net/isa/dlmo.c **** 			 {//first time to be transmitted and top preference neighbor for is on this link or second time 
 752:../../../src/net/isa/dlmo.c **** 
 753:../../../src/net/isa/dlmo.c **** 				 if (isLinkNeigborApplicable(&isaQueue[i], link))
 1214               	.LM60:
 1215 0628 B201      		movw r22,r4
 1216 062a C601      		movw r24,r12
 1217 062c 0E94 0000 		call isLinkNeigborApplicable
 1218 0630 8823      		tst r24
 1219 0632 01F4      		brne .+2
 1220 0634 00C0      		rjmp .L88
 754:../../../src/net/isa/dlmo.c **** 				{
 755:../../../src/net/isa/dlmo.c **** 				 if (found == false){
 1222               	.LM61:
 1223 0636 6620      		tst r6
 1224 0638 01F4      		brne .L94
 756:../../../src/net/isa/dlmo.c **** 					 found = true;
 757:../../../src/net/isa/dlmo.c **** 					 priority = isaQueue[i].priority;
 1226               	.LM62:
 1227 063a 8E81      		ldd r24,Y+6
 1228 063c 9F81      		ldd r25,Y+7
 1229 063e 8758      		subi r24,lo8(-(121))
 1230 0640 9F4F      		sbci r25,hi8(-(121))
 1231 0642 9F83      		std Y+7,r25
 1232 0644 8E83      		std Y+6,r24
 1233 0646 DC01      		movw r26,r24
 1234 0648 BC91      		ld r27,X
 1235 064a BD83      		std Y+5,r27
 1236 064c DC82      		std Y+4,r13
 1237 064e CB82      		std Y+3,r12
 758:../../../src/net/isa/dlmo.c **** 					 tempIndex = &isaQueue[i];
 759:../../../src/net/isa/dlmo.c **** 					 time.nano_secs = isaQueue[i].time.nano_secs;
 1239               	.LM63:
 1240 0650 0796      		adiw r24,7
 1241 0652 FC01      		movw r30,r24
 1242 0654 8080      		ld r8,Z
 1243 0656 9180      		ldd r9,Z+1
 1244 0658 A280      		ldd r10,Z+2
 1245 065a B380      		ldd r11,Z+3
 760:../../../src/net/isa/dlmo.c **** 					 time.secs = isaQueue[i].time.secs;
 1247               	.LM64:
 1248 065c 1291      		ld r17,-Z
 1249 065e 0291      		ld r16,-Z
 1250 0660 F290      		ld r15,-Z
 1251 0662 E290      		ld r14,-Z
 1252 0664 EC57      		subi r30,lo8(-(-124))
 1253 0666 F040      		sbci r31,hi8(-(-124))
 1254 0668 FF83      		std Y+7,r31
 1255 066a EE83      		std Y+6,r30
 1256               	.L94:
 761:../../../src/net/isa/dlmo.c **** 				 }
 762:../../../src/net/isa/dlmo.c **** 			 //			if the priority is greater					or	(	priority is the same    		and ( seconds is less					or
 763:../../../src/net/isa/dlmo.c **** 		 if (found == true && ( priority < isaQueue[i].priority  || ( (priority == isaQueue[i].priority) 
 1258               	.LM65:
 1259 066c AE81      		ldd r26,Y+6
 1260 066e BF81      		ldd r27,Y+7
 1261 0670 A758      		subi r26,lo8(-(121))
 1262 0672 BF4F      		sbci r27,hi8(-(121))
 1263 0674 8C91      		ld r24,X
 1264 0676 FD81      		ldd r31,Y+5
 1265 0678 F817      		cp r31,r24
 1266 067a 00F0      		brlo .L96
 1267 067c 8C91      		ld r24,X
 1268 067e F817      		cp r31,r24
 1269 0680 01F0      		breq .+2
 1270 0682 00C0      		rjmp .L98
 1271 0684 EE81      		ldd r30,Y+6
 1272 0686 FF81      		ldd r31,Y+7
 1273 0688 E458      		subi r30,lo8(-(124))
 1274 068a FF4F      		sbci r31,hi8(-(124))
 1275 068c 8081      		ld r24,Z
 1276 068e 9181      		ldd r25,Z+1
 1277 0690 A281      		ldd r26,Z+2
 1278 0692 B381      		ldd r27,Z+3
 1279 0694 8E15      		cp r24,r14
 1280 0696 9F05      		cpc r25,r15
 1281 0698 A007      		cpc r26,r16
 1282 069a B107      		cpc r27,r17
 1283 069c 00F0      		brlo .L96
 1284 069e 8081      		ld r24,Z
 1285 06a0 9181      		ldd r25,Z+1
 1286 06a2 A281      		ldd r26,Z+2
 1287 06a4 B381      		ldd r27,Z+3
 1288 06a6 E816      		cp r14,r24
 1289 06a8 F906      		cpc r15,r25
 1290 06aa 0A07      		cpc r16,r26
 1291 06ac 1B07      		cpc r17,r27
 1292 06ae 01F4      		brne .L98
 1293 06b0 2E81      		ldd r18,Y+6
 1294 06b2 3F81      		ldd r19,Y+7
 1295 06b4 2058      		subi r18,lo8(-(128))
 1296 06b6 3F4F      		sbci r19,hi8(-(128))
 1297 06b8 F901      		movw r30,r18
 1298 06ba 8081      		ld r24,Z
 1299 06bc 9181      		ldd r25,Z+1
 1300 06be A281      		ldd r26,Z+2
 1301 06c0 B381      		ldd r27,Z+3
 1302 06c2 8815      		cp r24,r8
 1303 06c4 9905      		cpc r25,r9
 1304 06c6 AA05      		cpc r26,r10
 1305 06c8 BB05      		cpc r27,r11
 1306 06ca 00F4      		brsh .L98
 1307               	.L96:
 764:../../../src/net/isa/dlmo.c **** 			 priority = isaQueue[i].priority;
 1309               	.LM66:
 1310 06cc 85E8      		ldi r24,lo8(133)
 1311 06ce 90E0      		ldi r25,hi8(133)
 1312 06d0 289E      		mul r2,r24
 1313 06d2 D001      		movw r26,r0
 1314 06d4 299E      		mul r2,r25
 1315 06d6 B00D      		add r27,r0
 1316 06d8 389E      		mul r3,r24
 1317 06da B00D      		add r27,r0
 1318 06dc 1124      		clr r1
 1319 06de A050      		subi r26,lo8(-(isaQueue))
 1320 06e0 B040      		sbci r27,hi8(-(isaQueue))
 1321 06e2 A758      		subi r26,lo8(-(121))
 1322 06e4 BF4F      		sbci r27,hi8(-(121))
 1323 06e6 FC91      		ld r31,X
 1324 06e8 FD83      		std Y+5,r31
 1325 06ea 2981      		ldd r18,Y+1
 1326 06ec 3A81      		ldd r19,Y+2
 1327 06ee 2050      		subi r18,lo8(-(isaQueue))
 1328 06f0 3040      		sbci r19,hi8(-(isaQueue))
 1329 06f2 3C83      		std Y+4,r19
 1330 06f4 2B83      		std Y+3,r18
 765:../../../src/net/isa/dlmo.c **** 			 tempIndex = &isaQueue[i];
 766:../../../src/net/isa/dlmo.c **** 			 time.nano_secs = isaQueue[i].time.nano_secs;
 1332               	.LM67:
 1333 06f6 1796      		adiw r26,7
 1334 06f8 8D90      		ld r8,X+
 1335 06fa 9D90      		ld r9,X+
 1336 06fc AD90      		ld r10,X+
 1337 06fe BC90      		ld r11,X
 1338 0700 1397      		sbiw r26,3
 767:../../../src/net/isa/dlmo.c **** 			 time.secs = isaQueue[i].time.secs;
 1340               	.LM68:
 1341 0702 FD01      		movw r30,r26
 1342 0704 1291      		ld r17,-Z
 1343 0706 0291      		ld r16,-Z
 1344 0708 F290      		ld r15,-Z
 1345 070a E290      		ld r14,-Z
 1346               	.L98:
 1347 070c 6624      		clr r6
 1348 070e 6394      		inc r6
 1349               	.L88:
 1350 0710 0894      		sec
 1351 0712 211C      		adc r2,__zero_reg__
 1352 0714 311C      		adc r3,__zero_reg__
 1353 0716 8981      		ldd r24,Y+1
 1354 0718 9A81      		ldd r25,Y+2
 1355 071a 8B57      		subi r24,lo8(-(133))
 1356 071c 9F4F      		sbci r25,hi8(-(133))
 1357 071e 9A83      		std Y+2,r25
 1358 0720 8983      		std Y+1,r24
 1359               	.LBE4:
 1361               	.LM69:
 1362 0722 94E1      		ldi r25,lo8(20)
 1363 0724 2916      		cp r2,r25
 1364 0726 3104      		cpc r3,__zero_reg__
 1365 0728 01F0      		breq .+2
 1366 072a 00C0      		rjmp .L87
 768:../../../src/net/isa/dlmo.c **** 		 }
 769:../../../src/net/isa/dlmo.c **** 			 }
 770:../../../src/net/isa/dlmo.c **** 			 }
 771:../../../src/net/isa/dlmo.c **** 	 }
 772:../../../src/net/isa/dlmo.c **** 
 773:../../../src/net/isa/dlmo.c **** }
 774:../../../src/net/isa/dlmo.c **** 	 if (found == false) {//if no graph to use, then we can check for direct neighbor, if type is 2
 1368               	.LM70:
 1369 072c 6620      		tst r6
 1370 072e 01F4      		brne .L81
 775:../../../src/net/isa/dlmo.c **** 		 if (graphType == 2) goto DIRECT_NEIGHBOR;	//we did not find a graph , so now we check for direct
 1372               	.LM71:
 1373 0730 A2E0      		ldi r26,lo8(2)
 1374 0732 7A16      		cp r7,r26
 1375 0734 01F4      		brne .L64
 1376 0736 00C0      		rjmp .L63
 1377               	.L82:
 1378 0738 00C0      		rjmp .L60
 1379               	.L64:
 776:../../../src/net/isa/dlmo.c **** 		 return NULL;
 777:../../../src/net/isa/dlmo.c **** 	 }
 778:../../../src/net/isa/dlmo.c **** 	 return tempIndex;
 779:../../../src/net/isa/dlmo.c **** }
 780:../../../src/net/isa/dlmo.c ****  }
 1381               	.LM72:
 1382 073a 1C82      		std Y+4,__zero_reg__
 1383 073c 1B82      		std Y+3,__zero_reg__
 1384               	.L81:
 1385 073e 8B81      		ldd r24,Y+3
 1386 0740 9C81      		ldd r25,Y+4
 1387               	.L60:
 1388               	/* epilogue: frame size=7 */
 1389 0742 2796      		adiw r28,7
 1390 0744 0FB6      		in __tmp_reg__,__SREG__
 1391 0746 F894      		cli
 1392 0748 DEBF      		out __SP_H__,r29
 1393 074a 0FBE      		out __SREG__,__tmp_reg__
 1394 074c CDBF      		out __SP_L__,r28
 1395 074e DF91      		pop r29
 1396 0750 CF91      		pop r28
 1397 0752 1F91      		pop r17
 1398 0754 0F91      		pop r16
 1399 0756 FF90      		pop r15
 1400 0758 EF90      		pop r14
 1401 075a DF90      		pop r13
 1402 075c CF90      		pop r12
 1403 075e BF90      		pop r11
 1404 0760 AF90      		pop r10
 1405 0762 9F90      		pop r9
 1406 0764 8F90      		pop r8
 1407 0766 7F90      		pop r7
 1408 0768 6F90      		pop r6
 1409 076a 5F90      		pop r5
 1410 076c 4F90      		pop r4
 1411 076e 3F90      		pop r3
 1412 0770 2F90      		pop r2
 1413 0772 0895      		ret
 1414               	/* epilogue end (size=25) */
 1415               	/* function getHighPriorityEntry size 481 (430) */
 1423               	.Lscope6:
 1425               		.stabd	78,0,0
 1428               	.global	isaFreePacket
 1430               	isaFreePacket:
 1431               		.stabd	46,0,0
 781:../../../src/net/isa/dlmo.c **** 
 782:../../../src/net/isa/dlmo.c ****  //************************************************************************************************
 783:../../../src/net/isa/dlmo.c ****  void isaFreePacket(ISA_QUEUE *entry){
 1433               	.LM73:
 1434               	.LFBB7:
 1435               	/* prologue: frame size=0 */
 1436               	/* prologue end (size=0) */
 1437 0774 FC01      		movw r30,r24
 784:../../../src/net/isa/dlmo.c **** 	 //Write 0 into the queue payload
 785:../../../src/net/isa/dlmo.c **** 
 786:../../../src/net/isa/dlmo.c **** 	 entry->usedSlot = false;
 1439               	.LM74:
 1440 0776 EA58      		subi r30,lo8(-(118))
 1441 0778 FF4F      		sbci r31,hi8(-(118))
 1442 077a 1082      		st Z,__zero_reg__
 787:../../../src/net/isa/dlmo.c **** 	 entry->transmitPending = false;;
 1444               	.LM75:
 1445 077c 1292      		st -Z,__zero_reg__
 788:../../../src/net/isa/dlmo.c **** 	 entry->slot_callback = NULL;
 1447               	.LM76:
 1448 077e 3296      		adiw r30,2
 1449 0780 1182      		std Z+1,__zero_reg__
 1450 0782 1082      		st Z,__zero_reg__
 789:../../../src/net/isa/dlmo.c **** 	 isaTxQueueSize--;
 1452               	.LM77:
 1453 0784 8091 0000 		lds r24,isaTxQueueSize
 1454 0788 8150      		subi r24,lo8(-(-1))
 1455 078a 8093 0000 		sts isaTxQueueSize,r24
 1456               	/* epilogue: frame size=0 */
 1457 078e 0895      		ret
 1458               	/* epilogue end (size=1) */
 1459               	/* function isaFreePacket size 14 (13) */
 1461               	.Lscope7:
 1463               		.stabd	78,0,0
 1465               	.global	clearCandidateTable
 1467               	clearCandidateTable:
 1468               		.stabd	46,0,0
 790:../../../src/net/isa/dlmo.c ****  }
 791:../../../src/net/isa/dlmo.c **** //****************** Functions for dlmo.Candidate******************************
 792:../../../src/net/isa/dlmo.c **** 
 793:../../../src/net/isa/dlmo.c **** 
 794:../../../src/net/isa/dlmo.c ****  /*
 795:../../../src/net/isa/dlmo.c ****   * The protocol states that the system manager may ask the device to clear its
 796:../../../src/net/isa/dlmo.c ****   * entire candidate table. Individual candidates are never removed
 797:../../../src/net/isa/dlmo.c ****   */
 798:../../../src/net/isa/dlmo.c **** 
 799:../../../src/net/isa/dlmo.c ****  void clearCandidateTable(){
 1470               	.LM78:
 1471               	.LFBB8:
 1472               	/* prologue: frame size=0 */
 1473               	/* prologue end (size=0) */
 800:../../../src/net/isa/dlmo.c ****  uint8_t i;
 801:../../../src/net/isa/dlmo.c ****  dlmoCandidate.n=0;
 1475               	.LM79:
 1476 0790 1092 0000 		sts dlmoCandidate,__zero_reg__
 1477 0794 80E0      		ldi r24,lo8(0)
 1478 0796 90E0      		ldi r25,hi8(0)
 1479               	.L112:
 802:../../../src/net/isa/dlmo.c ****  for (i=0; i< DLMO_CANDIDATE_MAX_SIZE ; i++){
 803:../../../src/net/isa/dlmo.c **** 	 dlmoCandidate.candidate[i].neighbor = 0;  //setting to zero indicates that no neighbor is present
 1481               	.LM80:
 1482 0798 FC01      		movw r30,r24
 1483 079a EE0F      		lsl r30
 1484 079c FF1F      		rol r31
 1485 079e EE0F      		lsl r30
 1486 07a0 FF1F      		rol r31
 1487 07a2 E050      		subi r30,lo8(-(dlmoCandidate))
 1488 07a4 F040      		sbci r31,hi8(-(dlmoCandidate))
 1489 07a6 1282      		std Z+2,__zero_reg__
 1490 07a8 1182      		std Z+1,__zero_reg__
 1491 07aa 0196      		adiw r24,1
 1493               	.LM81:
 1494 07ac 8431      		cpi r24,20
 1495 07ae 9105      		cpc r25,__zero_reg__
 1496 07b0 01F4      		brne .L112
 1497               	/* epilogue: frame size=0 */
 1498 07b2 0895      		ret
 1499               	/* epilogue end (size=1) */
 1500               	/* function clearCandidateTable size 18 (17) */
 1502               	.Lscope8:
 1504               		.stabd	78,0,0
 1506               	.global	flushCandidateEntries
 1508               	flushCandidateEntries:
 1509               		.stabd	46,0,0
 804:../../../src/net/isa/dlmo.c **** }
 805:../../../src/net/isa/dlmo.c ****  }
 806:../../../src/net/isa/dlmo.c **** 
 807:../../../src/net/isa/dlmo.c ****  /*
 808:../../../src/net/isa/dlmo.c ****   * This function adds a neighbor in the candidate table
 809:../../../src/net/isa/dlmo.c ****   */
 810:../../../src/net/isa/dlmo.c **** 
 811:../../../src/net/isa/dlmo.c ****  int8_t addCandidate(uint16_t candidate){
 812:../../../src/net/isa/dlmo.c **** 	 uint8_t i;
 813:../../../src/net/isa/dlmo.c **** 	 for (i=0; i<dlmoCandidate.n; i++){
 814:../../../src/net/isa/dlmo.c **** 		 if (dlmoCandidate.candidate[i].neighbor == candidate){
 815:../../../src/net/isa/dlmo.c **** 			// printf ("Neighbor: %d already present", candidate);
 816:../../../src/net/isa/dlmo.c **** 			 return ISA_SUCCESS;
 817:../../../src/net/isa/dlmo.c **** 		 }
 818:../../../src/net/isa/dlmo.c **** 	 }
 819:../../../src/net/isa/dlmo.c **** 
 820:../../../src/net/isa/dlmo.c **** 	 if (dlmoCandidate.n >= DLMO_CANDIDATE_MAX_SIZE) {
 821:../../../src/net/isa/dlmo.c **** 		 setIsaError(CANDIDATE_CAPACITY_ERROR);
 822:../../../src/net/isa/dlmo.c **** 		 return ISA_ERROR ;//we have reached max size
 823:../../../src/net/isa/dlmo.c **** 	 }
 824:../../../src/net/isa/dlmo.c **** 
 825:../../../src/net/isa/dlmo.c **** dlmoCandidate.candidate[dlmoCandidate.n].neighbor = candidate;
 826:../../../src/net/isa/dlmo.c **** dlmoCandidate.n++;
 827:../../../src/net/isa/dlmo.c **** printf ("Added %d to Candidate table at %d\r\n", candidate,dlmoCandidate.n-1 );
 828:../../../src/net/isa/dlmo.c **** return ISA_SUCCESS;
 829:../../../src/net/isa/dlmo.c ****  }
 830:../../../src/net/isa/dlmo.c **** 
 831:../../../src/net/isa/dlmo.c **** 
 832:../../../src/net/isa/dlmo.c ****  bool isDiscoveryAlertDue(){
 833:../../../src/net/isa/dlmo.c **** 	 nrk_time_t currentTime;
 834:../../../src/net/isa/dlmo.c **** 	 nrk_time_get(&currentTime);
 835:../../../src/net/isa/dlmo.c **** 	 if (currentTime.secs - lastSentTime.secs > 60) return true;
 836:../../../src/net/isa/dlmo.c **** 	 else return false;
 837:../../../src/net/isa/dlmo.c ****  }
 838:../../../src/net/isa/dlmo.c **** 
 839:../../../src/net/isa/dlmo.c ****  void updateLastSentTime(){
 840:../../../src/net/isa/dlmo.c **** 	 nrk_time_get(&lastSentTime);
 841:../../../src/net/isa/dlmo.c ****  }
 842:../../../src/net/isa/dlmo.c **** 
 843:../../../src/net/isa/dlmo.c **** int8_t sendAdv (){
 844:../../../src/net/isa/dlmo.c **** 	uint8_t length;
 845:../../../src/net/isa/dlmo.c **** 	//		n +  n * number of neighbors
 846:../../../src/net/isa/dlmo.c **** 	length = 1 + dlmoCandidate.n * sizeof(CANDIDATE);
 847:../../../src/net/isa/dlmo.c **** 	MESSAGE *message;
 848:../../../src/net/isa/dlmo.c **** 	message = &nbr_buf[PKT_DATA_START];
 849:../../../src/net/isa/dlmo.c **** 	message->type = NEIGHBOR_TABLE_REPORT;
 850:../../../src/net/isa/dlmo.c **** 	memcpy(&message->data, &dlmoCandidate, length);
 851:../../../src/net/isa/dlmo.c **** 
 852:../../../src/net/isa/dlmo.c **** 	nbr_buf[DEST_INDEX] = isa_clk_src_id;
 853:../../../src/net/isa/dlmo.c **** 	nbr_buf[SRC_INDEX] = dmo.dlAddress;
 854:../../../src/net/isa/dlmo.c **** 			//length of dlmo.candidate + PKT_DATA_START + message-> type (1)
 855:../../../src/net/isa/dlmo.c **** 	length = length + PKT_DATA_START + 1;
 856:../../../src/net/isa/dlmo.c **** 	return enQueue(isa_clk_src_id, 0, length, nbr_buf, NULL);
 857:../../../src/net/isa/dlmo.c **** 
 858:../../../src/net/isa/dlmo.c **** }
 859:../../../src/net/isa/dlmo.c **** 
 860:../../../src/net/isa/dlmo.c **** 
 861:../../../src/net/isa/dlmo.c **** 
 862:../../../src/net/isa/dlmo.c **** /*
 863:../../../src/net/isa/dlmo.c ****  * This function is called to flush candidate table
 864:../../../src/net/isa/dlmo.c ****  */
 865:../../../src/net/isa/dlmo.c **** 
 866:../../../src/net/isa/dlmo.c **** void flushCandidateEntries()
 867:../../../src/net/isa/dlmo.c **** {
 1511               	.LM82:
 1512               	.LFBB9:
 1513               	/* prologue: frame size=0 */
 1514 07b4 CF93      		push r28
 1515 07b6 DF93      		push r29
 1516               	/* prologue end (size=2) */
 1517 07b8 20E0      		ldi r18,lo8(0)
 1518 07ba 30E0      		ldi r19,hi8(0)
 1519 07bc 00C0      		rjmp .L118
 1520               	.L119:
 1521               	.LBB5:
 868:../../../src/net/isa/dlmo.c **** 
 869:../../../src/net/isa/dlmo.c **** 	for (uint8_t i = 0;  i <  dlmoCandidate.n ; i++ ){
 870:../../../src/net/isa/dlmo.c **** 		dlmoCandidate.candidate[i].neighbor = 0;
 1523               	.LM83:
 1524 07be FF27      		clr r31
 1525 07c0 EE0F      		lsl r30
 1526 07c2 FF1F      		rol r31
 1527 07c4 EE0F      		lsl r30
 1528 07c6 FF1F      		rol r31
 1529 07c8 DF01      		movw r26,r30
 1530 07ca A050      		subi r26,lo8(-(dlmoCandidate))
 1531 07cc B040      		sbci r27,hi8(-(dlmoCandidate))
 1532 07ce ED01      		movw r28,r26
 1533 07d0 1A82      		std Y+2,__zero_reg__
 1534 07d2 1982      		std Y+1,__zero_reg__
 871:../../../src/net/isa/dlmo.c **** 		dlmoCandidate.candidate[i].rsqi = 0;
 1536               	.LM84:
 1537 07d4 E050      		subi r30,lo8(-(dlmoCandidate+4))
 1538 07d6 F040      		sbci r31,hi8(-(dlmoCandidate+4))
 1539 07d8 1082      		st Z,__zero_reg__
 872:../../../src/net/isa/dlmo.c **** 		dlmoCandidate.candidate[i].rssi = 0;
 1541               	.LM85:
 1542 07da 1B82      		std Y+3,__zero_reg__
 1543               	.L118:
 1544 07dc E22F      		mov r30,r18
 1546               	.LM86:
 1547 07de 8091 0000 		lds r24,dlmoCandidate
 1548 07e2 2F5F      		subi r18,lo8(-(1))
 1549 07e4 3F4F      		sbci r19,hi8(-(1))
 1550 07e6 E817      		cp r30,r24
 1551 07e8 00F0      		brlo .L119
 1552               	.LBE5:
 873:../../../src/net/isa/dlmo.c **** 
 874:../../../src/net/isa/dlmo.c **** 	}
 875:../../../src/net/isa/dlmo.c **** 	dlmoCandidate.n=0;
 1554               	.LM87:
 1555 07ea 1092 0000 		sts dlmoCandidate,__zero_reg__
 1556               	/* epilogue: frame size=0 */
 1557 07ee DF91      		pop r29
 1558 07f0 CF91      		pop r28
 1559 07f2 0895      		ret
 1560               	/* epilogue end (size=3) */
 1561               	/* function flushCandidateEntries size 32 (27) */
 1566               	.Lscope9:
 1568               		.stabd	78,0,0
 1570               	.global	updateLastSentTime
 1572               	updateLastSentTime:
 1573               		.stabd	46,0,0
 1575               	.LM88:
 1576               	.LFBB10:
 1577               	/* prologue: frame size=0 */
 1578               	/* prologue end (size=0) */
 1580               	.LM89:
 1581 07f4 80E0      		ldi r24,lo8(lastSentTime)
 1582 07f6 90E0      		ldi r25,hi8(lastSentTime)
 1583 07f8 0E94 0000 		call nrk_time_get
 1584               	/* epilogue: frame size=0 */
 1585 07fc 0895      		ret
 1586               	/* epilogue end (size=1) */
 1587               	/* function updateLastSentTime size 5 (4) */
 1589               	.Lscope10:
 1591               		.stabd	78,0,0
 1593               	.global	isDiscoveryAlertDue
 1595               	isDiscoveryAlertDue:
 1596               		.stabd	46,0,0
 1598               	.LM90:
 1599               	.LFBB11:
 1600               	/* prologue: frame size=8 */
 1601 07fe CF93      		push r28
 1602 0800 DF93      		push r29
 1603 0802 CDB7      		in r28,__SP_L__
 1604 0804 DEB7      		in r29,__SP_H__
 1605 0806 2897      		sbiw r28,8
 1606 0808 0FB6      		in __tmp_reg__,__SREG__
 1607 080a F894      		cli
 1608 080c DEBF      		out __SP_H__,r29
 1609 080e 0FBE      		out __SREG__,__tmp_reg__
 1610 0810 CDBF      		out __SP_L__,r28
 1611               	/* prologue end (size=10) */
 1613               	.LM91:
 1614 0812 CE01      		movw r24,r28
 1615 0814 0196      		adiw r24,1
 1616 0816 0E94 0000 		call nrk_time_get
 1617 081a 60E0      		ldi r22,lo8(0)
 1618 081c 70E0      		ldi r23,hi8(0)
 1619 081e 8981      		ldd r24,Y+1
 1620 0820 9A81      		ldd r25,Y+2
 1621 0822 AB81      		ldd r26,Y+3
 1622 0824 BC81      		ldd r27,Y+4
 1623 0826 2091 0000 		lds r18,lastSentTime
 1624 082a 3091 0000 		lds r19,(lastSentTime)+1
 1625 082e 4091 0000 		lds r20,(lastSentTime)+2
 1626 0832 5091 0000 		lds r21,(lastSentTime)+3
 1627 0836 821B      		sub r24,r18
 1628 0838 930B      		sbc r25,r19
 1629 083a A40B      		sbc r26,r20
 1630 083c B50B      		sbc r27,r21
 1631 083e CD97      		sbiw r24,61
 1632 0840 A105      		cpc r26,__zero_reg__
 1633 0842 B105      		cpc r27,__zero_reg__
 1634 0844 00F0      		brlo .L125
 1636               	.LM92:
 1637 0846 61E0      		ldi r22,lo8(1)
 1638 0848 70E0      		ldi r23,hi8(1)
 1639               	.L125:
 1641               	.LM93:
 1642 084a CB01      		movw r24,r22
 1643               	/* epilogue: frame size=8 */
 1644 084c 2896      		adiw r28,8
 1645 084e 0FB6      		in __tmp_reg__,__SREG__
 1646 0850 F894      		cli
 1647 0852 DEBF      		out __SP_H__,r29
 1648 0854 0FBE      		out __SREG__,__tmp_reg__
 1649 0856 CDBF      		out __SP_L__,r28
 1650 0858 DF91      		pop r29
 1651 085a CF91      		pop r28
 1652 085c 0895      		ret
 1653               	/* epilogue end (size=9) */
 1654               	/* function isDiscoveryAlertDue size 49 (30) */
 1659               	.Lscope11:
 1661               		.stabd	78,0,0
 1663               	.global	dlmoInit
 1665               	dlmoInit:
 1666               		.stabd	46,0,0
 1668               	.LM94:
 1669               	.LFBB12:
 1670               	/* prologue: frame size=0 */
 1671               	/* prologue end (size=0) */
 1672 085e 20E0      		ldi r18,lo8(0)
 1673 0860 30E0      		ldi r19,hi8(0)
 1674               	.L128:
 1676               	.LM95:
 1677 0862 F901      		movw r30,r18
 1678 0864 EE0F      		lsl r30
 1679 0866 FF1F      		rol r31
 1680 0868 CF01      		movw r24,r30
 1681 086a 43E0      		ldi r20,3
 1682 086c 880F      	1:	lsl r24
 1683 086e 991F      		rol r25
 1684 0870 4A95      		dec r20
 1685 0872 01F4      		brne 1b
 1686 0874 E80F      		add r30,r24
 1687 0876 F91F      		adc r31,r25
 1688 0878 E050      		subi r30,lo8(-(dlmoLink))
 1689 087a F040      		sbci r31,hi8(-(dlmoLink))
 1690 087c 1082      		st Z,__zero_reg__
 1691 087e 2F5F      		subi r18,lo8(-(1))
 1692 0880 3F4F      		sbci r19,hi8(-(1))
 1694               	.LM96:
 1695 0882 2431      		cpi r18,20
 1696 0884 3105      		cpc r19,__zero_reg__
 1697 0886 01F4      		brne .L128
 1698 0888 80E0      		ldi r24,lo8(0)
 1699 088a 90E0      		ldi r25,hi8(0)
 1700               	.L130:
 1702               	.LM97:
 1703 088c FC01      		movw r30,r24
 1704 088e 24E0      		ldi r18,4
 1705 0890 EE0F      	1:	lsl r30
 1706 0892 FF1F      		rol r31
 1707 0894 2A95      		dec r18
 1708 0896 01F4      		brne 1b
 1709 0898 E80F      		add r30,r24
 1710 089a F91F      		adc r31,r25
 1711 089c E050      		subi r30,lo8(-(dlmoNeighbor))
 1712 089e F040      		sbci r31,hi8(-(dlmoNeighbor))
 1713 08a0 1082      		st Z,__zero_reg__
 1714 08a2 0196      		adiw r24,1
 1716               	.LM98:
 1717 08a4 8031      		cpi r24,16
 1718 08a6 9105      		cpc r25,__zero_reg__
 1719 08a8 01F4      		brne .L130
 1721               	.LM99:
 1722 08aa 1092 0000 		sts isaTxQueueSize,__zero_reg__
 1724               	.LM100:
 1725 08ae 1092 0000 		sts discoveryAlert,__zero_reg__
 1727               	.LM101:
 1728 08b2 8CE3      		ldi r24,lo8(60)
 1729 08b4 90E0      		ldi r25,hi8(60)
 1730 08b6 9093 0000 		sts (discoveryAlert+2)+1,r25
 1731 08ba 8093 0000 		sts discoveryAlert+2,r24
 1733               	.LM102:
 1734 08be 80E0      		ldi r24,lo8(lastSentTime)
 1735 08c0 90E0      		ldi r25,hi8(lastSentTime)
 1736 08c2 0E94 0000 		call nrk_time_get
 1737               	/* epilogue: frame size=0 */
 1738 08c6 0895      		ret
 1739               	/* epilogue end (size=1) */
 1740               	/* function dlmoInit size 53 (52) */
 1742               	.Lscope12:
 1744               		.stabd	78,0,0
 1745               		.data
 1746               	.LC0:
 1747 0000 4164 6465 		.string	"Added %d to Candidate table at %d\r\n"
 1747      6420 2564 
 1747      2074 6F20 
 1747      4361 6E64 
 1747      6964 6174 
 1748               		.text
 1751               	.global	addCandidate
 1753               	addCandidate:
 1754               		.stabd	46,0,0
 1756               	.LM103:
 1757               	.LFBB13:
 1758               	/* prologue: frame size=0 */
 1759               	/* prologue end (size=0) */
 1760 08c8 AC01      		movw r20,r24
 1761 08ca 20E0      		ldi r18,lo8(0)
 1762 08cc 30E0      		ldi r19,hi8(0)
 1763 08ce 00C0      		rjmp .L138
 1764               	.L139:
 1766               	.LM104:
 1767 08d0 FF27      		clr r31
 1768 08d2 EE0F      		lsl r30
 1769 08d4 FF1F      		rol r31
 1770 08d6 EE0F      		lsl r30
 1771 08d8 FF1F      		rol r31
 1772 08da E050      		subi r30,lo8(-(dlmoCandidate))
 1773 08dc F040      		sbci r31,hi8(-(dlmoCandidate))
 1774 08de 8181      		ldd r24,Z+1
 1775 08e0 9281      		ldd r25,Z+2
 1776 08e2 2F5F      		subi r18,lo8(-(1))
 1777 08e4 3F4F      		sbci r19,hi8(-(1))
 1778 08e6 8417      		cp r24,r20
 1779 08e8 9507      		cpc r25,r21
 1780 08ea 01F4      		brne .L138
 1781 08ec 81E0      		ldi r24,lo8(1)
 1782 08ee 90E0      		ldi r25,hi8(1)
 1783 08f0 0895      		ret
 1784               	.L138:
 1785 08f2 E22F      		mov r30,r18
 1787               	.LM105:
 1788 08f4 8091 0000 		lds r24,dlmoCandidate
 1789 08f8 2817      		cp r18,r24
 1790 08fa 00F0      		brlo .L139
 1792               	.LM106:
 1793 08fc 8091 0000 		lds r24,dlmoCandidate
 1794 0900 8431      		cpi r24,lo8(20)
 1795 0902 00F0      		brlo .L143
 1797               	.LM107:
 1798 0904 85E0      		ldi r24,lo8(5)
 1799 0906 0E94 0000 		call setIsaError
 1800 090a 8FEF      		ldi r24,lo8(-1)
 1801 090c 9FEF      		ldi r25,hi8(-1)
 1802 090e 0895      		ret
 1803               	.L143:
 1805               	.LM108:
 1806 0910 E091 0000 		lds r30,dlmoCandidate
 1807 0914 FF27      		clr r31
 1808 0916 EE0F      		lsl r30
 1809 0918 FF1F      		rol r31
 1810 091a EE0F      		lsl r30
 1811 091c FF1F      		rol r31
 1812 091e E050      		subi r30,lo8(-(dlmoCandidate))
 1813 0920 F040      		sbci r31,hi8(-(dlmoCandidate))
 1814 0922 5283      		std Z+2,r21
 1815 0924 4183      		std Z+1,r20
 1817               	.LM109:
 1818 0926 8091 0000 		lds r24,dlmoCandidate
 1819 092a 8F5F      		subi r24,lo8(-(1))
 1820 092c 8093 0000 		sts dlmoCandidate,r24
 1822               	.LM110:
 1823 0930 8091 0000 		lds r24,dlmoCandidate
 1824 0934 9927      		clr r25
 1825 0936 0197      		sbiw r24,1
 1826 0938 9F93      		push r25
 1827 093a 8F93      		push r24
 1828 093c 5F93      		push r21
 1829 093e 4F93      		push r20
 1830 0940 80E0      		ldi r24,lo8(.LC0)
 1831 0942 90E0      		ldi r25,hi8(.LC0)
 1832 0944 9F93      		push r25
 1833 0946 8F93      		push r24
 1834 0948 0E94 0000 		call printf
 1835 094c 81E0      		ldi r24,lo8(1)
 1836 094e 90E0      		ldi r25,hi8(1)
 1837 0950 2DB7      		in r18,__SP_L__
 1838 0952 3EB7      		in r19,__SP_H__
 1839 0954 2A5F      		subi r18,lo8(-(6))
 1840 0956 3F4F      		sbci r19,hi8(-(6))
 1841 0958 0FB6      		in __tmp_reg__,__SREG__
 1842 095a F894      		cli
 1843 095c 3EBF      		out __SP_H__,r19
 1844 095e 0FBE      		out __SREG__,__tmp_reg__
 1845 0960 2DBF      		out __SP_L__,r18
 1847               	.LM111:
 1848 0962 0895      		ret
 1849               	/* epilogue: frame size=0 */
 1850               	/* epilogue: noreturn */
 1851               	/* epilogue end (size=0) */
 1852               	/* function addCandidate size 78 (78) */
 1857               	.Lscope13:
 1859               		.stabd	78,0,0
 1860               		.data
 1861               	.LC1:
 1862 0024 5468 6973 		.string	"This slot is not configured yet: %d\n\r"
 1862      2073 6C6F 
 1862      7420 6973 
 1862      206E 6F74 
 1862      2063 6F6E 
 1863               		.text
 1866               	.global	findLink
 1868               	findLink:
 1869               		.stabd	46,0,0
 1871               	.LM112:
 1872               	.LFBB14:
 1873               	/* prologue: frame size=0 */
 1874               	/* prologue end (size=0) */
 1875 0964 482F      		mov r20,r24
 1876 0966 20E0      		ldi r18,lo8(0)
 1877 0968 30E0      		ldi r19,hi8(0)
 1878               	.L149:
 1880               	.LM113:
 1881 096a C901      		movw r24,r18
 1882 096c 880F      		lsl r24
 1883 096e 991F      		rol r25
 1884 0970 FC01      		movw r30,r24
 1885 0972 A3E0      		ldi r26,3
 1886 0974 EE0F      	1:	lsl r30
 1887 0976 FF1F      		rol r31
 1888 0978 AA95      		dec r26
 1889 097a 01F4      		brne 1b
 1890 097c E80F      		add r30,r24
 1891 097e F91F      		adc r31,r25
 1892 0980 E050      		subi r30,lo8(-(dlmoLink))
 1893 0982 F040      		sbci r31,hi8(-(dlmoLink))
 1894 0984 8081      		ld r24,Z
 1895 0986 8823      		tst r24
 1896 0988 01F0      		breq .L150
 1897 098a 8089      		ldd r24,Z+16
 1898 098c 8417      		cp r24,r20
 1899 098e 01F4      		brne .L150
 1901               	.LM114:
 1902 0990 82E1      		ldi r24,lo8(18)
 1903 0992 289F      		mul r18,r24
 1904 0994 C001      		movw r24,r0
 1905 0996 1124      		clr r1
 1906 0998 8050      		subi r24,lo8(-(dlmoLink))
 1907 099a 9040      		sbci r25,hi8(-(dlmoLink))
 1908 099c 0895      		ret
 1909               	.L150:
 1910 099e 2F5F      		subi r18,lo8(-(1))
 1911 09a0 3F4F      		sbci r19,hi8(-(1))
 1913               	.LM115:
 1914 09a2 2431      		cpi r18,20
 1915 09a4 3105      		cpc r19,__zero_reg__
 1916 09a6 01F4      		brne .L149
 1918               	.LM116:
 1919 09a8 842F      		mov r24,r20
 1920 09aa 9927      		clr r25
 1921 09ac 9F93      		push r25
 1922 09ae 8F93      		push r24
 1923 09b0 80E0      		ldi r24,lo8(.LC1)
 1924 09b2 90E0      		ldi r25,hi8(.LC1)
 1925 09b4 9F93      		push r25
 1926 09b6 8F93      		push r24
 1927 09b8 0E94 0000 		call printf
 1928 09bc 80E0      		ldi r24,lo8(0)
 1929 09be 90E0      		ldi r25,hi8(0)
 1930 09c0 0F90      		pop __tmp_reg__
 1931 09c2 0F90      		pop __tmp_reg__
 1932 09c4 0F90      		pop __tmp_reg__
 1933 09c6 0F90      		pop __tmp_reg__
 1935               	.LM117:
 1936 09c8 0895      		ret
 1937               	/* epilogue: frame size=0 */
 1938               	/* epilogue: noreturn */
 1939               	/* epilogue end (size=0) */
 1940               	/* function findLink size 51 (51) */
 1945               	.Lscope14:
 1947               		.stabd	78,0,0
 1948               		.data
 1949               	.LC2:
 1950 004a 2043 7269 		.string	" Critical error 2\r"
 1950      7469 6361 
 1950      6C20 6572 
 1950      726F 7220 
 1950      320D 00
 1951               		.text
 1958               	.global	enQueue
 1960               	enQueue:
 1961               		.stabd	46,0,0
 1963               	.LM118:
 1964               	.LFBB15:
 1965               	/* prologue: frame size=0 */
 1966 09ca CF92      		push r12
 1967 09cc DF92      		push r13
 1968 09ce EF92      		push r14
 1969 09d0 FF92      		push r15
 1970 09d2 0F93      		push r16
 1971 09d4 1F93      		push r17
 1972 09d6 CF93      		push r28
 1973 09d8 DF93      		push r29
 1974               	/* prologue end (size=8) */
 1975 09da 7C01      		movw r14,r24
 1976 09dc 562F      		mov r21,r22
 1977 09de B901      		movw r22,r18
 1979               	.LM119:
 1980 09e0 8091 0000 		lds r24,isaTxQueueSize
 1981 09e4 8531      		cpi r24,lo8(21)
 1982 09e6 00F0      		brlo .L159
 1984               	.LM120:
 1985 09e8 83E0      		ldi r24,lo8(3)
 1986 09ea 00C0      		rjmp .L176
 1987               	.L159:
 1989               	.LM121:
 1990 09ec 4437      		cpi r20,lo8(116)
 1991 09ee 00F0      		brlo .L162
 1993               	.LM122:
 1994 09f0 84E0      		ldi r24,lo8(4)
 1995               	.L176:
 1996 09f2 0E94 0000 		call setIsaError
 1997 09f6 00C0      		rjmp .L174
 1998               	.L162:
 2000               	.LM123:
 2001 09f8 A0E0      		ldi r26,lo8(0)
 2002 09fa B0E0      		ldi r27,hi8(0)
 2003               	.L164:
 2005               	.LM124:
 2006 09fc 85E8      		ldi r24,lo8(133)
 2007 09fe 90E0      		ldi r25,hi8(133)
 2008 0a00 A89F      		mul r26,r24
 2009 0a02 6001      		movw r12,r0
 2010 0a04 A99F      		mul r26,r25
 2011 0a06 D00C      		add r13,r0
 2012 0a08 B89F      		mul r27,r24
 2013 0a0a D00C      		add r13,r0
 2014 0a0c 1124      		clr r1
 2015 0a0e F601      		movw r30,r12
 2016 0a10 E050      		subi r30,lo8(-(isaQueue))
 2017 0a12 F040      		sbci r31,hi8(-(isaQueue))
 2018 0a14 9F01      		movw r18,r30
 2019 0a16 2A58      		subi r18,lo8(-(118))
 2020 0a18 3F4F      		sbci r19,hi8(-(118))
 2021 0a1a E901      		movw r28,r18
 2022 0a1c 8881      		ld r24,Y
 2023 0a1e 8823      		tst r24
 2024 0a20 01F4      		brne .L165
 2026               	.LM125:
 2027 0a22 4083      		st Z,r20
 2029               	.LM126:
 2030 0a24 E758      		subi r30,lo8(-(121))
 2031 0a26 FF4F      		sbci r31,hi8(-(121))
 2032 0a28 5083      		st Z,r21
 2034               	.LM127:
 2035 0a2a 3497      		sbiw r30,4
 2036 0a2c 81E0      		ldi r24,lo8(1)
 2037 0a2e 8083      		st Z,r24
 2039               	.LM128:
 2040 0a30 8883      		st Y,r24
 2042               	.LM129:
 2043 0a32 3596      		adiw r30,5
 2044 0a34 F182      		std Z+1,r15
 2045 0a36 E082      		st Z,r14
 2047               	.LM130:
 2048 0a38 3397      		sbiw r30,3
 2049 0a3a 1183      		std Z+1,r17
 2050 0a3c 0083      		st Z,r16
 2052               	.LM131:
 2053 0a3e 3D96      		adiw r30,13
 2054 0a40 1082      		st Z,__zero_reg__
 2056               	.LM132:
 2057 0a42 5527      		clr r21
 2058 0a44 C601      		movw r24,r12
 2059 0a46 8050      		subi r24,lo8(-(isaQueue+1))
 2060 0a48 9040      		sbci r25,hi8(-(isaQueue+1))
 2061 0a4a 0E94 0000 		call memcpy
 2063               	.LM133:
 2064 0a4e C601      		movw r24,r12
 2065 0a50 8050      		subi r24,lo8(-(isaQueue+124))
 2066 0a52 9040      		sbci r25,hi8(-(isaQueue+124))
 2067 0a54 0E94 0000 		call nrk_time_get
 2069               	.LM134:
 2070 0a58 8091 0000 		lds r24,isaTxQueueSize
 2071 0a5c 8F5F      		subi r24,lo8(-(1))
 2072 0a5e 8093 0000 		sts isaTxQueueSize,r24
 2073 0a62 00C0      		rjmp .L175
 2074               	.L165:
 2076               	.LM135:
 2077 0a64 8A2F      		mov r24,r26
 2078 0a66 8F5F      		subi r24,lo8(-(1))
 2079 0a68 1196      		adiw r26,1
 2081               	.LM136:
 2082 0a6a A431      		cpi r26,20
 2083 0a6c B105      		cpc r27,__zero_reg__
 2084 0a6e 01F4      		brne .L164
 2086               	.LM137:
 2087 0a70 8431      		cpi r24,lo8(20)
 2088 0a72 01F0      		breq .L169
 2089               	.L175:
 2090 0a74 81E0      		ldi r24,lo8(1)
 2091 0a76 90E0      		ldi r25,hi8(1)
 2092 0a78 00C0      		rjmp .L161
 2093               	.L169:
 2095               	.LM138:
 2096 0a7a 80E0      		ldi r24,lo8(.LC2)
 2097 0a7c 90E0      		ldi r25,hi8(.LC2)
 2098 0a7e 0E94 0000 		call puts
 2099               	.L174:
 2100 0a82 8FEF      		ldi r24,lo8(-1)
 2101 0a84 9FEF      		ldi r25,hi8(-1)
 2102               	.L161:
 2103               	/* epilogue: frame size=0 */
 2104 0a86 DF91      		pop r29
 2105 0a88 CF91      		pop r28
 2106 0a8a 1F91      		pop r17
 2107 0a8c 0F91      		pop r16
 2108 0a8e FF90      		pop r15
 2109 0a90 EF90      		pop r14
 2110 0a92 DF90      		pop r13
 2111 0a94 CF90      		pop r12
 2112 0a96 0895      		ret
 2113               	/* epilogue end (size=9) */
 2114               	/* function enQueue size 103 (86) */
 2119               	.Lscope15:
 2121               		.stabd	78,0,0
 2123               	.global	sendAdv
 2125               	sendAdv:
 2126               		.stabd	46,0,0
 2128               	.LM139:
 2129               	.LFBB16:
 2130               	/* prologue: frame size=0 */
 2131 0a98 EF92      		push r14
 2132 0a9a FF92      		push r15
 2133 0a9c 0F93      		push r16
 2134 0a9e 1F93      		push r17
 2135               	/* prologue end (size=4) */
 2137               	.LM140:
 2138 0aa0 4091 0000 		lds r20,dlmoCandidate
 2139 0aa4 042F      		mov r16,r20
 2140 0aa6 1127      		clr r17
 2141 0aa8 000F      		lsl r16
 2142 0aaa 111F      		rol r17
 2143 0aac 000F      		lsl r16
 2144 0aae 111F      		rol r17
 2145 0ab0 402F      		mov r20,r16
 2146 0ab2 4F5F      		subi r20,lo8(-(1))
 2148               	.LM141:
 2149 0ab4 10E0      		ldi r17,lo8(nbr_buf+7)
 2150 0ab6 E12E      		mov r14,r17
 2151 0ab8 10E0      		ldi r17,hi8(nbr_buf+7)
 2152 0aba F12E      		mov r15,r17
 2154               	.LM142:
 2155 0abc 1092 0000 		sts nbr_buf+7,__zero_reg__
 2157               	.LM143:
 2158 0ac0 5527      		clr r21
 2159 0ac2 60E0      		ldi r22,lo8(dlmoCandidate)
 2160 0ac4 70E0      		ldi r23,hi8(dlmoCandidate)
 2161 0ac6 C701      		movw r24,r14
 2162 0ac8 0196      		adiw r24,1
 2163 0aca 0E94 0000 		call memcpy
 2165               	.LM144:
 2166 0ace 8091 0000 		lds r24,isa_clk_src_id
 2167 0ad2 8093 0000 		sts nbr_buf+3,r24
 2169               	.LM145:
 2170 0ad6 9091 0000 		lds r25,dmo
 2171 0ada 9093 0000 		sts nbr_buf+2,r25
 2173               	.LM146:
 2174 0ade 402F      		mov r20,r16
 2175 0ae0 475F      		subi r20,lo8(-(9))
 2177               	.LM147:
 2178 0ae2 29EF      		ldi r18,lo8(-7)
 2179 0ae4 3FEF      		ldi r19,hi8(-7)
 2180 0ae6 E20E      		add r14,r18
 2181 0ae8 F31E      		adc r15,r19
 2182 0aea 00E0      		ldi r16,lo8(0)
 2183 0aec 10E0      		ldi r17,hi8(0)
 2184 0aee 9701      		movw r18,r14
 2185 0af0 60E0      		ldi r22,lo8(0)
 2186 0af2 9927      		clr r25
 2187 0af4 0E94 0000 		call enQueue
 2189               	.LM148:
 2190 0af8 9927      		clr r25
 2191 0afa 87FD      		sbrc r24,7
 2192 0afc 9095      		com r25
 2193               	/* epilogue: frame size=0 */
 2194 0afe 1F91      		pop r17
 2195 0b00 0F91      		pop r16
 2196 0b02 FF90      		pop r15
 2197 0b04 EF90      		pop r14
 2198 0b06 0895      		ret
 2199               	/* epilogue end (size=5) */
 2200               	/* function sendAdv size 56 (47) */
 2206               	.Lscope16:
 2208               		.stabd	78,0,0
 2220               	.global	dd_data_request
 2222               	dd_data_request:
 2223               		.stabd	46,0,0
 2225               	.LM149:
 2226               	.LFBB17:
 2227               	/* prologue: frame size=0 */
 2228 0b08 8F92      		push r8
 2229 0b0a 9F92      		push r9
 2230 0b0c AF92      		push r10
 2231 0b0e CF92      		push r12
 2232 0b10 0F93      		push r16
 2233 0b12 1F93      		push r17
 2234 0b14 CF93      		push r28
 2235 0b16 DF93      		push r29
 2236 0b18 CDB7      		in r28,__SP_L__
 2237 0b1a DEB7      		in r29,__SP_H__
 2238               	/* prologue end (size=10) */
 2239 0b1c CB01      		movw r24,r22
 2240 0b1e 642F      		mov r22,r20
 2241 0b20 4A2D      		mov r20,r10
 2242 0b22 F401      		movw r30,r8
 2244               	.LM150:
 2245 0b24 8383      		std Z+3,r24
 2246               	.LBB6:
 2248               	.LM151:
 2249 0b26 C682      		std Z+6,r12
 2250               	.LBE6:
 2252               	.LM152:
 2253 0b28 0B85      		ldd r16,Y+11
 2254 0b2a 1C85      		ldd r17,Y+12
 2255 0b2c 9401      		movw r18,r8
 2256 0b2e 0E94 0000 		call enQueue
 2258               	.LM153:
 2259 0b32 9927      		clr r25
 2260 0b34 87FD      		sbrc r24,7
 2261 0b36 9095      		com r25
 2262               	/* epilogue: frame size=0 */
 2263 0b38 DF91      		pop r29
 2264 0b3a CF91      		pop r28
 2265 0b3c 1F91      		pop r17
 2266 0b3e 0F91      		pop r16
 2267 0b40 CF90      		pop r12
 2268 0b42 AF90      		pop r10
 2269 0b44 9F90      		pop r9
 2270 0b46 8F90      		pop r8
 2271 0b48 0895      		ret
 2272               	/* epilogue end (size=9) */
 2273               	/* function dd_data_request size 33 (14) */
 2275               	.Lscope17:
 2277               		.stabd	78,0,0
 2286               	.global	dd_data_indication
 2288               	dd_data_indication:
 2289               		.stabd	46,0,0
 2291               	.LM154:
 2292               	.LFBB18:
 2293               	/* prologue: frame size=0 */
 2294               	/* prologue end (size=0) */
 2296               	.LM155:
 2297 0b4a 0E94 0000 		call isa_rx_pkt_release
 2298               	/* epilogue: frame size=0 */
 2299 0b4e 0895      		ret
 2300               	/* epilogue end (size=1) */
 2301               	/* function dd_data_indication size 3 (2) */
 2303               	.Lscope18:
 2305               		.stabd	78,0,0
 2312               	.global	sendPacket
 2314               	sendPacket:
 2315               		.stabd	46,0,0
 2317               	.LM156:
 2318               	.LFBB19:
 2319               	/* prologue: frame size=0 */
 2320 0b50 8F92      		push r8
 2321 0b52 9F92      		push r9
 2322 0b54 AF92      		push r10
 2323 0b56 CF92      		push r12
 2324 0b58 EF92      		push r14
 2325 0b5a 0F93      		push r16
 2326 0b5c 1F93      		push r17
 2327               	/* prologue end (size=7) */
 2329               	.LM157:
 2330 0b5e 1F93      		push r17
 2331 0b60 0F93      		push r16
 2332 0b62 4901      		movw r8,r18
 2333 0b64 A42E      		mov r10,r20
 2334 0b66 C62E      		mov r12,r22
 2335 0b68 EE24      		clr r14
 2336 0b6a 00E0      		ldi r16,lo8(0)
 2337 0b6c 20E0      		ldi r18,lo8(0)
 2338 0b6e 40E0      		ldi r20,lo8(0)
 2339 0b70 BC01      		movw r22,r24
 2340 0b72 80E0      		ldi r24,lo8(0)
 2341 0b74 90E0      		ldi r25,hi8(0)
 2342 0b76 0E94 0000 		call dd_data_request
 2343 0b7a 0F90      		pop __tmp_reg__
 2344 0b7c 0F90      		pop __tmp_reg__
 2345 0b7e 8F3F      		cpi r24,lo8(-1)
 2346 0b80 01F4      		brne .L187
 2348               	.LM158:
 2349 0b82 0E94 0000 		call printIsaError
 2350               	.L187:
 2351               	/* epilogue: frame size=0 */
 2352 0b86 1F91      		pop r17
 2353 0b88 0F91      		pop r16
 2354 0b8a EF90      		pop r14
 2355 0b8c CF90      		pop r12
 2356 0b8e AF90      		pop r10
 2357 0b90 9F90      		pop r9
 2358 0b92 8F90      		pop r8
 2359 0b94 0895      		ret
 2360               	/* epilogue end (size=8) */
 2361               	/* function sendPacket size 35 (20) */
 2363               	.Lscope19:
 2365               		.stabd	78,0,0
 2366               		.data
 2367               	.LC3:
 2368 005d 4772 6170 		.string	"Graph %d Exists in Table -updating\n\r"
 2368      6820 2564 
 2368      2045 7869 
 2368      7374 7320 
 2368      696E 2054 
 2369               	.LC4:
 2370 0082 4164 6465 		.string	"Added graph at index %d\r\n"
 2370      6420 6772 
 2370      6170 6820 
 2370      6174 2069 
 2370      6E64 6578 
 2371               		.text
 2378               	.global	addGraph
 2380               	addGraph:
 2381               		.stabd	46,0,0
 2383               	.LM159:
 2384               	.LFBB20:
 2385               	/* prologue: frame size=0 */
 2386 0b96 6F92      		push r6
 2387 0b98 7F92      		push r7
 2388 0b9a 8F92      		push r8
 2389 0b9c 9F92      		push r9
 2390 0b9e AF92      		push r10
 2391 0ba0 BF92      		push r11
 2392 0ba2 DF92      		push r13
 2393 0ba4 EF92      		push r14
 2394 0ba6 FF92      		push r15
 2395 0ba8 0F93      		push r16
 2396 0baa 1F93      		push r17
 2397 0bac CF93      		push r28
 2398 0bae DF93      		push r29
 2399               	/* prologue end (size=13) */
 2400 0bb0 7C01      		movw r14,r24
 2401 0bb2 D62E      		mov r13,r22
 2402 0bb4 5A01      		movw r10,r20
 2403 0bb6 4901      		movw r8,r18
 2404 0bb8 3801      		movw r6,r16
 2405 0bba 10E0      		ldi r17,lo8(0)
 2406 0bbc 20E0      		ldi r18,lo8(0)
 2407 0bbe C0E0      		ldi r28,lo8(0)
 2408 0bc0 D0E0      		ldi r29,hi8(0)
 2409               	.L189:
 2410               	.LBB7:
 2412               	.LM160:
 2413 0bc2 FE01      		movw r30,r28
 2414 0bc4 EE0F      		lsl r30
 2415 0bc6 FF1F      		rol r31
 2416 0bc8 CE01      		movw r24,r28
 2417 0bca 43E0      		ldi r20,3
 2418 0bcc 880F      	1:	lsl r24
 2419 0bce 991F      		rol r25
 2420 0bd0 4A95      		dec r20
 2421 0bd2 01F4      		brne 1b
 2422 0bd4 E80F      		add r30,r24
 2423 0bd6 F91F      		adc r31,r25
 2424 0bd8 E050      		subi r30,lo8(-(dlmoGraph))
 2425 0bda F040      		sbci r31,hi8(-(dlmoGraph))
 2426 0bdc 8081      		ld r24,Z
 2427 0bde 9181      		ldd r25,Z+1
 2428 0be0 E816      		cp r14,r24
 2429 0be2 F906      		cpc r15,r25
 2430 0be4 01F4      		brne .L190
 2432               	.LM161:
 2433 0be6 FF92      		push r15
 2434 0be8 EF92      		push r14
 2435 0bea 80E0      		ldi r24,lo8(.LC3)
 2436 0bec 90E0      		ldi r25,hi8(.LC3)
 2437 0bee 9F93      		push r25
 2438 0bf0 8F93      		push r24
 2439 0bf2 0E94 0000 		call printf
 2440 0bf6 1C2F      		mov r17,r28
 2441 0bf8 00C0      		rjmp .L203
 2442               	.L190:
 2444               	.LM162:
 2445 0bfa 8081      		ld r24,Z
 2446 0bfc 9181      		ldd r25,Z+1
 2447 0bfe 892B      		or r24,r25
 2448 0c00 01F4      		brne .L193
 2449 0c02 2223      		tst r18
 2450 0c04 01F4      		brne .L193
 2451 0c06 1C2F      		mov r17,r28
 2452 0c08 21E0      		ldi r18,lo8(1)
 2453               	.L193:
 2454 0c0a 2196      		adiw r28,1
 2456               	.LM163:
 2457 0c0c CA30      		cpi r28,10
 2458 0c0e D105      		cpc r29,__zero_reg__
 2459 0c10 01F4      		brne .L189
 2460               	.LBE7:
 2462               	.LM164:
 2463 0c12 2223      		tst r18
 2464 0c14 01F4      		brne .L197
 2466               	.LM165:
 2467 0c16 86E0      		ldi r24,lo8(6)
 2468 0c18 0E94 0000 		call setIsaError
 2470               	.LM166:
 2471 0c1c 0E94 0000 		call printIsaError
 2472 0c20 80E0      		ldi r24,lo8(0)
 2473 0c22 90E0      		ldi r25,hi8(0)
 2474 0c24 00C0      		rjmp .L199
 2475               	.L197:
 2477               	.LM167:
 2478 0c26 812F      		mov r24,r17
 2479 0c28 9927      		clr r25
 2480 0c2a 9F93      		push r25
 2481 0c2c 8F93      		push r24
 2482 0c2e 80E0      		ldi r24,lo8(.LC4)
 2483 0c30 90E0      		ldi r25,hi8(.LC4)
 2484 0c32 9F93      		push r25
 2485 0c34 8F93      		push r24
 2486 0c36 0E94 0000 		call printf
 2487               	.L203:
 2488 0c3a 0F90      		pop __tmp_reg__
 2489 0c3c 0F90      		pop __tmp_reg__
 2490 0c3e 0F90      		pop __tmp_reg__
 2491 0c40 0F90      		pop __tmp_reg__
 2492               	.L192:
 2494               	.LM168:
 2495 0c42 E12F      		mov r30,r17
 2496 0c44 FF27      		clr r31
 2497 0c46 CF01      		movw r24,r30
 2498 0c48 33E0      		ldi r19,3
 2499 0c4a 880F      	1:	lsl r24
 2500 0c4c 991F      		rol r25
 2501 0c4e 3A95      		dec r19
 2502 0c50 01F4      		brne 1b
 2503 0c52 EE0F      		lsl r30
 2504 0c54 FF1F      		rol r31
 2505 0c56 E80F      		add r30,r24
 2506 0c58 F91F      		adc r31,r25
 2507 0c5a E050      		subi r30,lo8(-(dlmoGraph))
 2508 0c5c F040      		sbci r31,hi8(-(dlmoGraph))
 2509 0c5e F182      		std Z+1,r15
 2510 0c60 E082      		st Z,r14
 2512               	.LM169:
 2513 0c62 8281      		ldd r24,Z+2
 2514 0c64 DD0C      		lsl r13
 2515 0c66 DD0C      		lsl r13
 2516 0c68 DD0C      		lsl r13
 2517 0c6a DD0C      		lsl r13
 2518 0c6c 8D29      		or r24,r13
 2519 0c6e 8283      		std Z+2,r24
 2521               	.LM170:
 2522 0c70 B582      		std Z+5,r11
 2523 0c72 A482      		std Z+4,r10
 2525               	.LM171:
 2526 0c74 9782      		std Z+7,r9
 2527 0c76 8682      		std Z+6,r8
 2529               	.LM172:
 2530 0c78 7186      		std Z+9,r7
 2531 0c7a 6086      		std Z+8,r6
 2533               	.LM173:
 2534 0c7c 8AE0      		ldi r24,lo8(10)
 2535 0c7e 189F      		mul r17,r24
 2536 0c80 C001      		movw r24,r0
 2537 0c82 1124      		clr r1
 2538 0c84 8050      		subi r24,lo8(-(dlmoGraph))
 2539 0c86 9040      		sbci r25,hi8(-(dlmoGraph))
 2540               	.L199:
 2541               	/* epilogue: frame size=0 */
 2542 0c88 DF91      		pop r29
 2543 0c8a CF91      		pop r28
 2544 0c8c 1F91      		pop r17
 2545 0c8e 0F91      		pop r16
 2546 0c90 FF90      		pop r15
 2547 0c92 EF90      		pop r14
 2548 0c94 DF90      		pop r13
 2549 0c96 BF90      		pop r11
 2550 0c98 AF90      		pop r10
 2551 0c9a 9F90      		pop r9
 2552 0c9c 8F90      		pop r8
 2553 0c9e 7F90      		pop r7
 2554 0ca0 6F90      		pop r6
 2555 0ca2 0895      		ret
 2556               	/* epilogue end (size=14) */
 2557               	/* function addGraph size 135 (108) */
 2563               	.Lscope20:
 2565               		.stabd	78,0,0
 2566               		.data
 2567               	.LC5:
 2568 009c 4E65 6967 		.string	"Neighbor %d Exists in Table - updating\n\r"
 2568      6862 6F72 
 2568      2025 6420 
 2568      4578 6973 
 2568      7473 2069 
 2569               	.LC6:
 2570 00c5 4164 6465 		.string	"Added Neighbor at Index %d\r\n"
 2570      6420 4E65 
 2570      6967 6862 
 2570      6F72 2061 
 2570      7420 496E 
 2571               		.text
 2581               	.global	addNeighbor
 2583               	addNeighbor:
 2584               		.stabd	46,0,0
 2586               	.LM174:
 2587               	.LFBB21:
 2588               	/* prologue: frame size=8 */
 2589 0ca4 6F92      		push r6
 2590 0ca6 7F92      		push r7
 2591 0ca8 8F92      		push r8
 2592 0caa AF92      		push r10
 2593 0cac CF92      		push r12
 2594 0cae EF92      		push r14
 2595 0cb0 FF92      		push r15
 2596 0cb2 0F93      		push r16
 2597 0cb4 1F93      		push r17
 2598 0cb6 CF93      		push r28
 2599 0cb8 DF93      		push r29
 2600 0cba CDB7      		in r28,__SP_L__
 2601 0cbc DEB7      		in r29,__SP_H__
 2602 0cbe 2897      		sbiw r28,8
 2603 0cc0 0FB6      		in __tmp_reg__,__SREG__
 2604 0cc2 F894      		cli
 2605 0cc4 DEBF      		out __SP_H__,r29
 2606 0cc6 0FBE      		out __SREG__,__tmp_reg__
 2607 0cc8 CDBF      		out __SP_L__,r28
 2608               	/* prologue end (size=19) */
 2609 0cca 3C01      		movw r6,r24
 2610 0ccc 0983      		std Y+1,r16
 2611 0cce 1A83      		std Y+2,r17
 2612 0cd0 2B83      		std Y+3,r18
 2613 0cd2 3C83      		std Y+4,r19
 2614 0cd4 4D83      		std Y+5,r20
 2615 0cd6 5E83      		std Y+6,r21
 2616 0cd8 6F83      		std Y+7,r22
 2617 0cda 7887      		std Y+8,r23
 2618 0cdc FF24      		clr r15
 2619 0cde 20E0      		ldi r18,lo8(0)
 2620 0ce0 00E0      		ldi r16,lo8(0)
 2621 0ce2 10E0      		ldi r17,hi8(0)
 2622               	.L205:
 2624               	.LM175:
 2625 0ce4 302F      		mov r19,r16
 2626               	.LBB8:
 2628               	.LM176:
 2629 0ce6 F801      		movw r30,r16
 2630 0ce8 A4E0      		ldi r26,4
 2631 0cea EE0F      	1:	lsl r30
 2632 0cec FF1F      		rol r31
 2633 0cee AA95      		dec r26
 2634 0cf0 01F4      		brne 1b
 2635 0cf2 E00F      		add r30,r16
 2636 0cf4 F11F      		adc r31,r17
 2637 0cf6 E050      		subi r30,lo8(-(dlmoNeighbor))
 2638 0cf8 F040      		sbci r31,hi8(-(dlmoNeighbor))
 2639 0cfa 8181      		ldd r24,Z+1
 2640 0cfc 9281      		ldd r25,Z+2
 2641 0cfe 6816      		cp r6,r24
 2642 0d00 7906      		cpc r7,r25
 2643 0d02 01F4      		brne .L206
 2644 0d04 8081      		ld r24,Z
 2645 0d06 8823      		tst r24
 2646 0d08 01F0      		breq .L206
 2648               	.LM177:
 2649 0d0a 7F92      		push r7
 2650 0d0c 6F92      		push r6
 2651 0d0e 80E0      		ldi r24,lo8(.LC5)
 2652 0d10 90E0      		ldi r25,hi8(.LC5)
 2653 0d12 9F93      		push r25
 2654 0d14 8F93      		push r24
 2655 0d16 0E94 0000 		call printf
 2656 0d1a F02E      		mov r15,r16
 2657 0d1c 00C0      		rjmp .L222
 2658               	.L206:
 2660               	.LM178:
 2661 0d1e F801      		movw r30,r16
 2662 0d20 74E0      		ldi r23,4
 2663 0d22 EE0F      	1:	lsl r30
 2664 0d24 FF1F      		rol r31
 2665 0d26 7A95      		dec r23
 2666 0d28 01F4      		brne 1b
 2667 0d2a E00F      		add r30,r16
 2668 0d2c F11F      		adc r31,r17
 2669 0d2e E050      		subi r30,lo8(-(dlmoNeighbor))
 2670 0d30 F040      		sbci r31,hi8(-(dlmoNeighbor))
 2671 0d32 8081      		ld r24,Z
 2672 0d34 8823      		tst r24
 2673 0d36 01F4      		brne .L210
 2674 0d38 2223      		tst r18
 2675 0d3a 01F4      		brne .L210
 2676 0d3c F32E      		mov r15,r19
 2677 0d3e 21E0      		ldi r18,lo8(1)
 2678               	.L210:
 2679 0d40 0F5F      		subi r16,lo8(-(1))
 2680 0d42 1F4F      		sbci r17,hi8(-(1))
 2682               	.LM179:
 2683 0d44 0031      		cpi r16,16
 2684 0d46 1105      		cpc r17,__zero_reg__
 2685 0d48 01F4      		brne .L205
 2686               	.LBE8:
 2688               	.LM180:
 2689 0d4a 2223      		tst r18
 2690 0d4c 01F4      		brne .L214
 2692               	.LM181:
 2693 0d4e 82E0      		ldi r24,lo8(2)
 2694 0d50 0E94 0000 		call setIsaError
 2696               	.LM182:
 2697 0d54 0E94 0000 		call printIsaError
 2698 0d58 80E0      		ldi r24,lo8(0)
 2699 0d5a 90E0      		ldi r25,hi8(0)
 2700 0d5c 00C0      		rjmp .L216
 2701               	.L214:
 2703               	.LM183:
 2704 0d5e 8F2D      		mov r24,r15
 2705 0d60 9927      		clr r25
 2706 0d62 9F93      		push r25
 2707 0d64 8F93      		push r24
 2708 0d66 80E0      		ldi r24,lo8(.LC6)
 2709 0d68 90E0      		ldi r25,hi8(.LC6)
 2710 0d6a 9F93      		push r25
 2711 0d6c 8F93      		push r24
 2712 0d6e 0E94 0000 		call printf
 2713               	.L222:
 2714 0d72 0F90      		pop __tmp_reg__
 2715 0d74 0F90      		pop __tmp_reg__
 2716 0d76 0F90      		pop __tmp_reg__
 2717 0d78 0F90      		pop __tmp_reg__
 2718               	.L209:
 2720               	.LM184:
 2721 0d7a 8F2D      		mov r24,r15
 2722 0d7c 9927      		clr r25
 2723 0d7e DC01      		movw r26,r24
 2724 0d80 64E0      		ldi r22,4
 2725 0d82 AA0F      	1:	lsl r26
 2726 0d84 BB1F      		rol r27
 2727 0d86 6A95      		dec r22
 2728 0d88 01F4      		brne 1b
 2729 0d8a A80F      		add r26,r24
 2730 0d8c B91F      		adc r27,r25
 2731 0d8e A050      		subi r26,lo8(-(dlmoNeighbor))
 2732 0d90 B040      		sbci r27,hi8(-(dlmoNeighbor))
 2733 0d92 FD01      		movw r30,r26
 2734 0d94 7282      		std Z+2,r7
 2735 0d96 6182      		std Z+1,r6
 2737               	.LM185:
 2738 0d98 81E0      		ldi r24,lo8(1)
 2739 0d9a 8C93      		st X,r24
 2741               	.LM186:
 2742 0d9c 9D01      		movw r18,r26
 2743 0d9e 2D5F      		subi r18,lo8(-(3))
 2744 0da0 3F4F      		sbci r19,hi8(-(3))
 2745 0da2 8981      		ldd r24,Y+1
 2746 0da4 8383      		std Z+3,r24
 2747 0da6 8A81      		ldd r24,Y+2
 2748 0da8 F901      		movw r30,r18
 2749 0daa 8183      		std Z+1,r24
 2750 0dac 8B81      		ldd r24,Y+3
 2751 0dae 8283      		std Z+2,r24
 2752 0db0 8C81      		ldd r24,Y+4
 2753 0db2 8383      		std Z+3,r24
 2754 0db4 8D81      		ldd r24,Y+5
 2755 0db6 8483      		std Z+4,r24
 2756 0db8 8E81      		ldd r24,Y+6
 2757 0dba 8583      		std Z+5,r24
 2758 0dbc 8F81      		ldd r24,Y+7
 2759 0dbe 8683      		std Z+6,r24
 2760 0dc0 8885      		ldd r24,Y+8
 2761 0dc2 8783      		std Z+7,r24
 2763               	.LM187:
 2764 0dc4 FD01      		movw r30,r26
 2765 0dc6 E386      		std Z+11,r14
 2767               	.LM188:
 2768 0dc8 C486      		std Z+12,r12
 2770               	.LM189:
 2771 0dca AA20      		tst r10
 2772 0dcc 01F0      		breq .L217
 2773 0dce 8585      		ldd r24,Z+13
 2774 0dd0 8068      		ori r24,lo8(-128)
 2775 0dd2 8587      		std Z+13,r24
 2776               	.L217:
 2778               	.LM190:
 2779 0dd4 FD01      		movw r30,r26
 2780 0dd6 8686      		std Z+14,r8
 2782               	.LM191:
 2783 0dd8 8E89      		ldd r24,Y+22
 2784 0dda 8787      		std Z+15,r24
 2786               	.LM192:
 2787 0ddc 8F89      		ldd r24,Y+23
 2788 0dde 808B      		std Z+16,r24
 2790               	.LM193:
 2791 0de0 81E1      		ldi r24,lo8(17)
 2792 0de2 F89E      		mul r15,r24
 2793 0de4 C001      		movw r24,r0
 2794 0de6 1124      		clr r1
 2795 0de8 8050      		subi r24,lo8(-(dlmoNeighbor))
 2796 0dea 9040      		sbci r25,hi8(-(dlmoNeighbor))
 2797               	.L216:
 2798               	/* epilogue: frame size=8 */
 2799 0dec 2896      		adiw r28,8
 2800 0dee 0FB6      		in __tmp_reg__,__SREG__
 2801 0df0 F894      		cli
 2802 0df2 DEBF      		out __SP_H__,r29
 2803 0df4 0FBE      		out __SREG__,__tmp_reg__
 2804 0df6 CDBF      		out __SP_L__,r28
 2805 0df8 DF91      		pop r29
 2806 0dfa CF91      		pop r28
 2807 0dfc 1F91      		pop r17
 2808 0dfe 0F91      		pop r16
 2809 0e00 FF90      		pop r15
 2810 0e02 EF90      		pop r14
 2811 0e04 CF90      		pop r12
 2812 0e06 AF90      		pop r10
 2813 0e08 8F90      		pop r8
 2814 0e0a 7F90      		pop r7
 2815 0e0c 6F90      		pop r6
 2816 0e0e 0895      		ret
 2817               	/* epilogue end (size=18) */
 2818               	/* function addNeighbor size 182 (145) */
 2829               	.Lscope21:
 2831               		.stabd	78,0,0
 2832               		.data
 2833               	.LC7:
 2834 00e2 536C 6F74 		.string	"Slot number not in range\r"
 2834      206E 756D 
 2834      6265 7220 
 2834      6E6F 7420 
 2834      696E 2072 
 2835               	.LC8:
 2836 00fc 536C 6F74 		.string	"Slot %d already configured- updating\r\n"
 2836      2025 6420 
 2836      616C 7265 
 2836      6164 7920 
 2836      636F 6E66 
 2837               	.LC9:
 2838 0123 4164 6465 		.string	"Added link at index %d\r\n"
 2838      6420 6C69 
 2838      6E6B 2061 
 2838      7420 696E 
 2838      6465 7820 
 2839               		.text
 2846               	.global	addLink
 2848               	addLink:
 2849               		.stabd	46,0,0
 2851               	.LM194:
 2852               	.LFBB22:
 2853               	/* prologue: frame size=0 */
 2854 0e10 6F92      		push r6
 2855 0e12 7F92      		push r7
 2856 0e14 8F92      		push r8
 2857 0e16 9F92      		push r9
 2858 0e18 AF92      		push r10
 2859 0e1a BF92      		push r11
 2860 0e1c CF92      		push r12
 2861 0e1e DF92      		push r13
 2862 0e20 EF92      		push r14
 2863 0e22 FF92      		push r15
 2864 0e24 0F93      		push r16
 2865 0e26 1F93      		push r17
 2866 0e28 CF93      		push r28
 2867 0e2a DF93      		push r29
 2868               	/* prologue end (size=14) */
 2869 0e2c A82E      		mov r10,r24
 2870 0e2e EB01      		movw r28,r22
 2871 0e30 7A01      		movw r14,r20
 2872 0e32 D22E      		mov r13,r18
 2873 0e34 602E      		mov r6,r16
 2875               	.LM195:
 2876 0e36 8EE3      		ldi r24,lo8(62)
 2877 0e38 8A15      		cp r24,r10
 2878 0e3a 00F4      		brsh .L224
 2880               	.LM196:
 2881 0e3c 80E0      		ldi r24,lo8(.LC7)
 2882 0e3e 90E0      		ldi r25,hi8(.LC7)
 2883 0e40 0E94 0000 		call puts
 2884 0e44 00C0      		rjmp .L223
 2885               	.L224:
 2886 0e46 0FEF      		ldi r16,lo8(-1)
 2887 0e48 20E0      		ldi r18,lo8(0)
 2888 0e4a 30E0      		ldi r19,hi8(0)
 2889               	.L226:
 2890 0e4c 722E      		mov r7,r18
 2892               	.LM197:
 2893 0e4e 0F3F      		cpi r16,lo8(-1)
 2894 0e50 01F4      		brne .L227
 2895 0e52 F901      		movw r30,r18
 2896 0e54 EE0F      		lsl r30
 2897 0e56 FF1F      		rol r31
 2898 0e58 CF01      		movw r24,r30
 2899 0e5a 63E0      		ldi r22,3
 2900 0e5c 880F      	1:	lsl r24
 2901 0e5e 991F      		rol r25
 2902 0e60 6A95      		dec r22
 2903 0e62 01F4      		brne 1b
 2904 0e64 E80F      		add r30,r24
 2905 0e66 F91F      		adc r31,r25
 2906 0e68 E050      		subi r30,lo8(-(dlmoLink))
 2907 0e6a F040      		sbci r31,hi8(-(dlmoLink))
 2908 0e6c 8081      		ld r24,Z
 2909 0e6e 8823      		tst r24
 2910 0e70 01F4      		brne .L227
 2911 0e72 022F      		mov r16,r18
 2912               	.L227:
 2914               	.LM198:
 2915 0e74 F901      		movw r30,r18
 2916 0e76 EE0F      		lsl r30
 2917 0e78 FF1F      		rol r31
 2918 0e7a CF01      		movw r24,r30
 2919 0e7c 43E0      		ldi r20,3
 2920 0e7e 880F      	1:	lsl r24
 2921 0e80 991F      		rol r25
 2922 0e82 4A95      		dec r20
 2923 0e84 01F4      		brne 1b
 2924 0e86 E80F      		add r30,r24
 2925 0e88 F91F      		adc r31,r25
 2926 0e8a E050      		subi r30,lo8(-(dlmoLink))
 2927 0e8c F040      		sbci r31,hi8(-(dlmoLink))
 2928 0e8e 8089      		ldd r24,Z+16
 2929 0e90 8A15      		cp r24,r10
 2930 0e92 01F4      		brne .L230
 2932               	.LM199:
 2933 0e94 8A2D      		mov r24,r10
 2934 0e96 9927      		clr r25
 2935 0e98 9F93      		push r25
 2936 0e9a 8F93      		push r24
 2937 0e9c 80E0      		ldi r24,lo8(.LC8)
 2938 0e9e 90E0      		ldi r25,hi8(.LC8)
 2939 0ea0 9F93      		push r25
 2940 0ea2 8F93      		push r24
 2941 0ea4 0E94 0000 		call printf
 2943               	.LM200:
 2944 0ea8 072D      		mov r16,r7
 2946               	.LM201:
 2947 0eaa 0F90      		pop __tmp_reg__
 2948 0eac 0F90      		pop __tmp_reg__
 2949 0eae 0F90      		pop __tmp_reg__
 2950 0eb0 0F90      		pop __tmp_reg__
 2951 0eb2 00C0      		rjmp .L232
 2952               	.L230:
 2953 0eb4 7394      		inc r7
 2954 0eb6 2F5F      		subi r18,lo8(-(1))
 2955 0eb8 3F4F      		sbci r19,hi8(-(1))
 2957               	.LM202:
 2958 0eba 2431      		cpi r18,20
 2959 0ebc 3105      		cpc r19,__zero_reg__
 2960 0ebe 01F4      		brne .L226
 2962               	.LM203:
 2963 0ec0 0F3F      		cpi r16,lo8(-1)
 2964 0ec2 01F4      		brne .L232
 2966               	.LM204:
 2967 0ec4 81E0      		ldi r24,lo8(1)
 2968 0ec6 0E94 0000 		call setIsaError
 2970               	.LM205:
 2971 0eca 0E94 0000 		call printIsaError
 2972 0ece 8FEF      		ldi r24,lo8(-1)
 2973 0ed0 9FEF      		ldi r25,hi8(-1)
 2974 0ed2 00C0      		rjmp .L223
 2975               	.L232:
 2977               	.LM206:
 2978 0ed4 E1E0      		ldi r30,lo8(1)
 2979 0ed6 DE16      		cp r13,r30
 2980 0ed8 01F0      		breq .L236
 2981 0eda 8824      		clr r8
 2982 0edc 9924      		clr r9
 2983 0ede 00C0      		rjmp .L249
 2984               	.L236:
 2986               	.LM207:
 2987 0ee0 2097      		sbiw r28,0
 2988 0ee2 01F4      		brne .L239
 2989 0ee4 8824      		clr r8
 2990 0ee6 9924      		clr r9
 2991 0ee8 00C0      		rjmp .L241
 2992               	.L239:
 2994               	.LM208:
 2995 0eea CE01      		movw r24,r28
 2996 0eec 0E94 0000 		call findNeighbor
 2997 0ef0 4C01      		movw r8,r24
 2998               	.L241:
 3000               	.LM209:
 3001 0ef2 E114      		cp r14,__zero_reg__
 3002 0ef4 F104      		cpc r15,__zero_reg__
 3003 0ef6 01F4      		brne .L242
 3004               	.L249:
 3005 0ef8 C0E0      		ldi r28,lo8(0)
 3006 0efa D0E0      		ldi r29,hi8(0)
 3007 0efc 00C0      		rjmp .L238
 3008               	.L242:
 3010               	.LM210:
 3011 0efe C701      		movw r24,r14
 3012 0f00 0E94 0000 		call findGraph
 3013 0f04 EC01      		movw r28,r24
 3014               	.L238:
 3016               	.LM211:
 3017 0f06 1127      		clr r17
 3018 0f08 07FD      		sbrc r16,7
 3019 0f0a 1095      		com r17
 3020 0f0c 1F93      		push r17
 3021 0f0e 0F93      		push r16
 3022 0f10 80E0      		ldi r24,lo8(.LC9)
 3023 0f12 90E0      		ldi r25,hi8(.LC9)
 3024 0f14 9F93      		push r25
 3025 0f16 8F93      		push r24
 3026 0f18 0E94 0000 		call printf
 3028               	.LM212:
 3029 0f1c 000F      		lsl r16
 3030 0f1e 111F      		rol r17
 3031 0f20 D801      		movw r26,r16
 3032 0f22 83E0      		ldi r24,3
 3033 0f24 AA0F      	1:	lsl r26
 3034 0f26 BB1F      		rol r27
 3035 0f28 8A95      		dec r24
 3036 0f2a 01F4      		brne 1b
 3037 0f2c A00F      		add r26,r16
 3038 0f2e B11F      		adc r27,r17
 3039 0f30 A050      		subi r26,lo8(-(dlmoLink))
 3040 0f32 B040      		sbci r27,hi8(-(dlmoLink))
 3041 0f34 81E0      		ldi r24,lo8(1)
 3042 0f36 8C93      		st X,r24
 3044               	.LM213:
 3045 0f38 FD01      		movw r30,r26
 3046 0f3a 9186      		std Z+9,r9
 3047 0f3c 8086      		std Z+8,r8
 3049               	.LM214:
 3050 0f3e D387      		std Z+11,r29
 3051 0f40 C287      		std Z+10,r28
 3053               	.LM215:
 3054 0f42 D482      		std Z+4,r13
 3056               	.LM216:
 3057 0f44 A08A      		std Z+16,r10
 3059               	.LM217:
 3060 0f46 D387      		std Z+11,r29
 3061 0f48 C287      		std Z+10,r28
 3063               	.LM218:
 3064 0f4a E72D      		mov r30,r7
 3065 0f4c FF27      		clr r31
 3066 0f4e EE0F      		lsl r30
 3067 0f50 FF1F      		rol r31
 3068 0f52 CF01      		movw r24,r30
 3069 0f54 13E0      		ldi r17,3
 3070 0f56 880F      	1:	lsl r24
 3071 0f58 991F      		rol r25
 3072 0f5a 1A95      		dec r17
 3073 0f5c 01F4      		brne 1b
 3074 0f5e E80F      		add r30,r24
 3075 0f60 F91F      		adc r31,r25
 3076 0f62 E050      		subi r30,lo8(-(dlmoLink))
 3077 0f64 F040      		sbci r31,hi8(-(dlmoLink))
 3078 0f66 8781      		ldd r24,Z+7
 3079 0f68 660C      		lsl r6
 3080 0f6a 660C      		lsl r6
 3081 0f6c 660C      		lsl r6
 3082 0f6e 660C      		lsl r6
 3083 0f70 8629      		or r24,r6
 3084 0f72 FD01      		movw r30,r26
 3085 0f74 8783      		std Z+7,r24
 3087               	.LM219:
 3088 0f76 0F90      		pop __tmp_reg__
 3089 0f78 0F90      		pop __tmp_reg__
 3090 0f7a 0F90      		pop __tmp_reg__
 3091 0f7c 0F90      		pop __tmp_reg__
 3092 0f7e F7E1      		ldi r31,lo8(23)
 3093 0f80 AF16      		cp r10,r31
 3094 0f82 01F4      		brne .L244
 3095 0f84 6091 0000 		lds r22,__iob+2
 3096 0f88 7091 0000 		lds r23,(__iob+2)+1
 3097 0f8c 88E7      		ldi r24,lo8(120)
 3098 0f8e 90E0      		ldi r25,hi8(120)
 3099 0f90 0E94 0000 		call fputc
 3100               	.L244:
 3102               	.LM220:
 3103 0f94 0A2D      		mov r16,r10
 3104 0f96 1127      		clr r17
 3105 0f98 21E0      		ldi r18,lo8(1)
 3106 0f9a 30E0      		ldi r19,lo8(0)
 3107 0f9c 40E0      		ldi r20,lo8(0)
 3108 0f9e 50E0      		ldi r21,lo8(0)
 3109 0fa0 60E0      		ldi r22,lo8(0)
 3110 0fa2 70E0      		ldi r23,lo8(0)
 3111 0fa4 80E0      		ldi r24,lo8(0)
 3112 0fa6 90E0      		ldi r25,lo8(0)
 3113 0fa8 0E94 0000 		call __ashldi3
 3114 0fac A22E      		mov r10,r18
 3115 0fae B32E      		mov r11,r19
 3116 0fb0 C42E      		mov r12,r20
 3117 0fb2 D52E      		mov r13,r21
 3118 0fb4 E62E      		mov r14,r22
 3119 0fb6 F72E      		mov r15,r23
 3120 0fb8 082F      		mov r16,r24
 3121 0fba 192F      		mov r17,r25
 3122 0fbc E091 0000 		lds r30,isa_slot
 3123 0fc0 F091 0000 		lds r31,isa_slot+1
 3124 0fc4 A091 0000 		lds r26,isa_slot+2
 3125 0fc8 B091 0000 		lds r27,isa_slot+3
 3126 0fcc 9090 0000 		lds r9,isa_slot+4
 3127 0fd0 8090 0000 		lds r8,isa_slot+5
 3128 0fd4 7090 0000 		lds r7,isa_slot+6
 3129 0fd8 6090 0000 		lds r6,isa_slot+7
 3130 0fdc 2E2F      		mov r18,r30
 3131 0fde 2A29      		or r18,r10
 3132 0fe0 3F2F      		mov r19,r31
 3133 0fe2 3B29      		or r19,r11
 3134 0fe4 4A2F      		mov r20,r26
 3135 0fe6 4C29      		or r20,r12
 3136 0fe8 5B2F      		mov r21,r27
 3137 0fea 5D29      		or r21,r13
 3138 0fec 692D      		mov r22,r9
 3139 0fee 6E29      		or r22,r14
 3140 0ff0 782D      		mov r23,r8
 3141 0ff2 7F29      		or r23,r15
 3142 0ff4 872D      		mov r24,r7
 3143 0ff6 802B      		or r24,r16
 3144 0ff8 962D      		mov r25,r6
 3145 0ffa 912B      		or r25,r17
 3146 0ffc 2093 0000 		sts isa_slot,r18
 3147 1000 3093 0000 		sts isa_slot+1,r19
 3148 1004 4093 0000 		sts isa_slot+2,r20
 3149 1008 5093 0000 		sts isa_slot+3,r21
 3150 100c 6093 0000 		sts isa_slot+4,r22
 3151 1010 7093 0000 		sts isa_slot+5,r23
 3152 1014 8093 0000 		sts isa_slot+6,r24
 3153 1018 9093 0000 		sts isa_slot+7,r25
 3154 101c 81E0      		ldi r24,lo8(1)
 3155 101e 90E0      		ldi r25,hi8(1)
 3156               	.L223:
 3157               	/* epilogue: frame size=0 */
 3158 1020 DF91      		pop r29
 3159 1022 CF91      		pop r28
 3160 1024 1F91      		pop r17
 3161 1026 0F91      		pop r16
 3162 1028 FF90      		pop r15
 3163 102a EF90      		pop r14
 3164 102c DF90      		pop r13
 3165 102e CF90      		pop r12
 3166 1030 BF90      		pop r11
 3167 1032 AF90      		pop r10
 3168 1034 9F90      		pop r9
 3169 1036 8F90      		pop r8
 3170 1038 7F90      		pop r7
 3171 103a 6F90      		pop r6
 3172 103c 0895      		ret
 3173               	/* epilogue end (size=15) */
 3174               	/* function addLink size 279 (250) */
 3182               	.Lscope22:
 3184               		.stabd	78,0,0
 3185               		.comm _nrk_signal_list,4,1
 3186               		.comm nrk_idle_task_stk,128,1
 3187               		.comm nrk_kernel_stk_ptr,2,1
 3188               		.comm _nrk_prev_timer_val,1,1
 3189               		.comm _nrk_time_trigger,1,1
 3190               		.comm app_timer0_callback,2,1
 3191               		.comm app_timer0_prescale,1,1
 3192               		.comm error_task,1,1
 3193               		.comm error_num,1,1
 3194               		.comm dlmoLink,360,1
 3195               		.comm dlmoNeighbor,272,1
 3196               		.comm dlmoGraph,100,1
 3197               		.comm isaQueue,2660,1
 3198               		.comm dlmoCandidate,81,1
 3199               		.comm isa_sched,50,1
 3200               		.comm isa_tdma_rx_mask,8,1
 3201               		.comm isa_tdma_tx_mask,8,1
 3202               		.comm isa_slot,8,1
 3203               		.comm isaTxQueueSize,1,1
 3204               		.comm dmo,2,1
 3205               		.comm discoveryAlert,4,1
 3206               		.comm lastSentTime,8,1
 3207               		.comm nbr_buf,116,1
 3232               	.Letext0:
 3233               	/* File "../../../src/net/isa/dlmo.c": code 2083 = 0x0823 (1781), prologues 147, epilogues 155 */
DEFINED SYMBOLS
                            *ABS*:00000000 dlmo.c
     /tmp/ccvaizIO.s:2      *ABS*:0000003f __SREG__
     /tmp/ccvaizIO.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccvaizIO.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccvaizIO.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccvaizIO.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccvaizIO.s:177    .text:00000000 findGraph
                            *COM*:00000064 dlmoGraph
     /tmp/ccvaizIO.s:245    .text:00000048 findNeighbor
                            *COM*:00000110 dlmoNeighbor
     /tmp/ccvaizIO.s:310    .text:0000008a isTransmitLinkPresent
                            *COM*:00000168 dlmoLink
     /tmp/ccvaizIO.s:437    .text:00000138 isa_get_slots_until_next_wakeup
                            *COM*:00000008 isa_slot
     /tmp/ccvaizIO.s:725    .text:0000031c isLinkNeigborApplicable
     /tmp/ccvaizIO.s:832    .text:000003b4 getHighPriorityEntry
                            *COM*:00000a64 isaQueue
     /tmp/ccvaizIO.s:1430   .text:00000774 isaFreePacket
                            *COM*:00000001 isaTxQueueSize
     /tmp/ccvaizIO.s:1467   .text:00000790 clearCandidateTable
                            *COM*:00000051 dlmoCandidate
     /tmp/ccvaizIO.s:1508   .text:000007b4 flushCandidateEntries
     /tmp/ccvaizIO.s:1572   .text:000007f4 updateLastSentTime
                            *COM*:00000008 lastSentTime
     /tmp/ccvaizIO.s:1595   .text:000007fe isDiscoveryAlertDue
     /tmp/ccvaizIO.s:1665   .text:0000085e dlmoInit
                            *COM*:00000004 discoveryAlert
     /tmp/ccvaizIO.s:1753   .text:000008c8 addCandidate
     /tmp/ccvaizIO.s:1868   .text:00000964 findLink
     /tmp/ccvaizIO.s:1960   .text:000009ca enQueue
     /tmp/ccvaizIO.s:2125   .text:00000a98 sendAdv
                            *COM*:00000074 nbr_buf
                            *COM*:00000002 dmo
     /tmp/ccvaizIO.s:2222   .text:00000b08 dd_data_request
     /tmp/ccvaizIO.s:2288   .text:00000b4a dd_data_indication
     /tmp/ccvaizIO.s:2314   .text:00000b50 sendPacket
     /tmp/ccvaizIO.s:2380   .text:00000b96 addGraph
     /tmp/ccvaizIO.s:2583   .text:00000ca4 addNeighbor
     /tmp/ccvaizIO.s:2848   .text:00000e10 addLink
                            *COM*:00000004 _nrk_signal_list
                            *COM*:00000080 nrk_idle_task_stk
                            *COM*:00000002 nrk_kernel_stk_ptr
                            *COM*:00000001 _nrk_prev_timer_val
                            *COM*:00000001 _nrk_time_trigger
                            *COM*:00000002 app_timer0_callback
                            *COM*:00000001 app_timer0_prescale
                            *COM*:00000001 error_task
                            *COM*:00000001 error_num
                            *COM*:00000032 isa_sched
                            *COM*:00000008 isa_tdma_rx_mask
                            *COM*:00000008 isa_tdma_tx_mask

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
__udivmodhi4
__ashldi3
nrk_time_get
setIsaError
printf
memcpy
puts
isa_clk_src_id
isa_rx_pkt_release
printIsaError
__iob
fputc
