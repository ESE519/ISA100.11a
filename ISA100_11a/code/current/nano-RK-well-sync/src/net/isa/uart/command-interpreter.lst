   1               		.file	"command-interpreter.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.global __do_copy_data
   8               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
 155               	.global	printEnable
 157               	printEnable:
 158               		.stabd	46,0,0
   1:../../../src/net/isa/uart/command-interpreter.c **** /**
   2:../../../src/net/isa/uart/command-interpreter.c ****  * File: command-interpreter.c
   3:../../../src/net/isa/uart/command-interpreter.c ****  * Description: processes commands incoming over the serial port.
   4:../../../src/net/isa/uart/command-interpreter.c ****  *
   5:../../../src/net/isa/uart/command-interpreter.c ****  * Culprit(s): Richard Kelsey, Matteo Paris
   6:../../../src/net/isa/uart/command-interpreter.c ****  *
   7:../../../src/net/isa/uart/command-interpreter.c ****  * Copyright 2008 by Ember Corporation.  All rights reserved.               *80*
   8:../../../src/net/isa/uart/command-interpreter.c ****  */
   9:../../../src/net/isa/uart/command-interpreter.c **** 
  10:../../../src/net/isa/uart/command-interpreter.c **** 
  11:../../../src/net/isa/uart/command-interpreter.c **** // #include "serial.h"
  12:../../../src/net/isa/uart/command-interpreter.c **** #include <include.h>
  13:../../../src/net/isa/uart/command-interpreter.c **** #include <ulib.h>
  14:../../../src/net/isa/uart/command-interpreter.c **** #include <stdio.h>
  15:../../../src/net/isa/uart/command-interpreter.c **** #include <command-interpreter.h>
  16:../../../src/net/isa/uart/command-interpreter.c **** #include <error-def.h>
  17:../../../src/net/isa/uart/command-interpreter.c **** #include <dlmo.h>
  18:../../../src/net/isa/uart/command-interpreter.c **** #include <dmo.h>
  19:../../../src/net/isa/uart/command-interpreter.c **** #include <isa_messagetypes.h>
  20:../../../src/net/isa/uart/command-interpreter.c **** 
  21:../../../src/net/isa/uart/command-interpreter.c **** //---------------------------------------------------------------------------
  22:../../../src/net/isa/uart/command-interpreter.c **** //Extern variables
  23:../../../src/net/isa/uart/command-interpreter.c **** 
  24:../../../src/net/isa/uart/command-interpreter.c **** extern uint8_t tx_buf[RF_MAX_PAYLOAD_SIZE];
  25:../../../src/net/isa/uart/command-interpreter.c **** extern  DMO dmo;
  26:../../../src/net/isa/uart/command-interpreter.c **** extern DLMO_NEIGHBOR dlmoNeighbor[DLMO_NEIGHBOR_MAX_COUNT];
  27:../../../src/net/isa/uart/command-interpreter.c **** extern DLMO_GRAPH dlmoGraph[DLMO_GRAPH_MAX_COUNT];
  28:../../../src/net/isa/uart/command-interpreter.c **** extern DLMO_LINK dlmoLink[DLMO_LINK_MAX_COUNT];
  29:../../../src/net/isa/uart/command-interpreter.c **** extern uint16_t adjacencyMatrix[DLMO_NEIGHBOR_MAX_COUNT];
  30:../../../src/net/isa/uart/command-interpreter.c **** //-----------------------------------------------------------------------------
  31:../../../src/net/isa/uart/command-interpreter.c **** 
  32:../../../src/net/isa/uart/command-interpreter.c **** //------------------------------------------------------------------------------
  33:../../../src/net/isa/uart/command-interpreter.c **** // Forward declarations.
  34:../../../src/net/isa/uart/command-interpreter.c **** static void callCommandAction(void);
  35:../../../src/net/isa/uart/command-interpreter.c **** static uint32_t stringToUnsignedInt(uint8_t argNum, bool swallowLeadingSign);
  36:../../../src/net/isa/uart/command-interpreter.c **** static uint8_t charDowncase(uint8_t c);
  37:../../../src/net/isa/uart/command-interpreter.c **** static uint16_t cnt1 = 0;
  38:../../../src/net/isa/uart/command-interpreter.c **** static bool isPrintEnabled = true;
  39:../../../src/net/isa/uart/command-interpreter.c **** //------------------------------------------------------------------------------
  40:../../../src/net/isa/uart/command-interpreter.c **** // Command parsing state
  41:../../../src/net/isa/uart/command-interpreter.c **** 
  42:../../../src/net/isa/uart/command-interpreter.c **** typedef struct {
  43:../../../src/net/isa/uart/command-interpreter.c **** 
  44:../../../src/net/isa/uart/command-interpreter.c ****   // Finite-state machine's current state.
  45:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t state;
  46:../../../src/net/isa/uart/command-interpreter.c **** 
  47:../../../src/net/isa/uart/command-interpreter.c ****   // The command line is stored in this buffer.
  48:../../../src/net/isa/uart/command-interpreter.c ****   // Spaces and trailing '"' and '}' characters are removed,
  49:../../../src/net/isa/uart/command-interpreter.c ****   // and hex strings are converted to bytes.
  50:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t buffer[EMBER_COMMAND_BUFFER_LENGTH];
  51:../../../src/net/isa/uart/command-interpreter.c **** 
  52:../../../src/net/isa/uart/command-interpreter.c ****   // Indices of the tokens (command(s) and arguments) in the above buffer.
  53:../../../src/net/isa/uart/command-interpreter.c ****   // The (+ 1) lets us store the ending index.
  54:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t tokenIndices[MAX_TOKEN_COUNT + 1];
  55:../../../src/net/isa/uart/command-interpreter.c **** 
  56:../../../src/net/isa/uart/command-interpreter.c ****   // The number of tokens read in, including the command(s).
  57:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t tokenCount;
  58:../../../src/net/isa/uart/command-interpreter.c **** 
  59:../../../src/net/isa/uart/command-interpreter.c ****   // Used while reading in the command line.
  60:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t index;
  61:../../../src/net/isa/uart/command-interpreter.c **** 
  62:../../../src/net/isa/uart/command-interpreter.c ****   // First error found in this command.
  63:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t error;
  64:../../../src/net/isa/uart/command-interpreter.c **** 
  65:../../../src/net/isa/uart/command-interpreter.c ****   // Storage for reading in a hex string. A value of 0xFF means unused.
  66:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t hexHighNibble;
  67:../../../src/net/isa/uart/command-interpreter.c **** 
  68:../../../src/net/isa/uart/command-interpreter.c ****   // The token number of the first true argument after possible nested commands.
  69:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t argOffset;
  70:../../../src/net/isa/uart/command-interpreter.c **** 
  71:../../../src/net/isa/uart/command-interpreter.c **** } EmberCommandState;
  72:../../../src/net/isa/uart/command-interpreter.c **** 
  73:../../../src/net/isa/uart/command-interpreter.c **** static EmberCommandState commandState;
  74:../../../src/net/isa/uart/command-interpreter.c **** 
  75:../../../src/net/isa/uart/command-interpreter.c **** // Remember the previous character seen by emberProcessCommandString() to ignore
  76:../../../src/net/isa/uart/command-interpreter.c **** // an LF following a CR.
  77:../../../src/net/isa/uart/command-interpreter.c **** static uint8_t previousCharacter = 0;
  78:../../../src/net/isa/uart/command-interpreter.c **** 
  79:../../../src/net/isa/uart/command-interpreter.c **** EmberCommandEntry *emberCurrentCommand;
  80:../../../src/net/isa/uart/command-interpreter.c **** 
  81:../../../src/net/isa/uart/command-interpreter.c **** enum {
  82:../../../src/net/isa/uart/command-interpreter.c ****   CMD_AWAITING_ARGUMENT,
  83:../../../src/net/isa/uart/command-interpreter.c ****   CMD_READING_ARGUMENT,
  84:../../../src/net/isa/uart/command-interpreter.c ****   CMD_READING_STRING,                  // have read opening " but not closing "
  85:../../../src/net/isa/uart/command-interpreter.c ****   CMD_READING_HEX_STRING,              // have read opening { but not closing }
  86:../../../src/net/isa/uart/command-interpreter.c ****   CMD_READING_TO_EOL                   // clean up after error
  87:../../../src/net/isa/uart/command-interpreter.c **** };
  88:../../../src/net/isa/uart/command-interpreter.c **** 
  89:../../../src/net/isa/uart/command-interpreter.c **** // This byte is used to toggle certain internal features on or off.
  90:../../../src/net/isa/uart/command-interpreter.c **** // By default all are off.
  91:../../../src/net/isa/uart/command-interpreter.c **** uint8_t emberCommandInterpreter2Configuration = 0x00;
  92:../../../src/net/isa/uart/command-interpreter.c **** 
  93:../../../src/net/isa/uart/command-interpreter.c **** 
  94:../../../src/net/isa/uart/command-interpreter.c **** void printTempCommand(void){
  95:../../../src/net/isa/uart/command-interpreter.c **** 	uint8_t arg1;
  96:../../../src/net/isa/uart/command-interpreter.c **** 	uint8_t arg2;
  97:../../../src/net/isa/uart/command-interpreter.c **** 	arg1 = emberUnsignedCommandArgument(0);
  98:../../../src/net/isa/uart/command-interpreter.c **** 	arg2 = emberUnsignedCommandArgument(1);
  99:../../../src/net/isa/uart/command-interpreter.c **** 	if (isPrintEnabled){
 100:../../../src/net/isa/uart/command-interpreter.c **** 
 101:../../../src/net/isa/uart/command-interpreter.c **** 		printf ("Came to temp command\r\n");
 102:../../../src/net/isa/uart/command-interpreter.c **** 		printf ("Arg1:%d  Arg2:%d\n\r", arg1, arg2);
 103:../../../src/net/isa/uart/command-interpreter.c **** 	}
 104:../../../src/net/isa/uart/command-interpreter.c **** 
 105:../../../src/net/isa/uart/command-interpreter.c **** }
 106:../../../src/net/isa/uart/command-interpreter.c **** 
 107:../../../src/net/isa/uart/command-interpreter.c **** void sendDummyPacket(void){
 108:../../../src/net/isa/uart/command-interpreter.c **** 
 109:../../../src/net/isa/uart/command-interpreter.c **** 	MESSAGE *message;
 110:../../../src/net/isa/uart/command-interpreter.c **** 	uint8_t length;
 111:../../../src/net/isa/uart/command-interpreter.c **** 		message = &tx_buf[PKT_DATA_START];
 112:../../../src/net/isa/uart/command-interpreter.c **** 		message->type = DUMMY_PAYLOAD;
 113:../../../src/net/isa/uart/command-interpreter.c **** 		sprintf( &message->data,"node %d,%c",1,cnt1++);
 114:../../../src/net/isa/uart/command-interpreter.c **** 	  	length=strlen(&tx_buf[PKT_DATA_START])+PKT_DATA_START+2; //1 for \0 + 1 for message->type
 115:../../../src/net/isa/uart/command-interpreter.c **** 	  	sendPacket(emberUnsignedCommandArgument(0),emberUnsignedCommandArgument(1), length, tx_buf, NUL
 116:../../../src/net/isa/uart/command-interpreter.c **** }
 117:../../../src/net/isa/uart/command-interpreter.c **** 
 118:../../../src/net/isa/uart/command-interpreter.c **** 
 119:../../../src/net/isa/uart/command-interpreter.c **** // uint16_t dest, uint8_t graphId ,uint16_t index
 120:../../../src/net/isa/uart/command-interpreter.c **** void sendConfigNeighbor(void){
 121:../../../src/net/isa/uart/command-interpreter.c **** 
 122:../../../src/net/isa/uart/command-interpreter.c **** 
 123:../../../src/net/isa/uart/command-interpreter.c **** 	uint16_t destId = emberUnsignedCommandArgument(0);
 124:../../../src/net/isa/uart/command-interpreter.c **** 	if (destId == dmo.dlAddress) {
 125:../../../src/net/isa/uart/command-interpreter.c **** 		  addNeighbor(emberUnsignedCommandArgument(2),0,0,0,false,0,0,0);		//Add a neighbor for myself an
 126:../../../src/net/isa/uart/command-interpreter.c **** 		return;
 127:../../../src/net/isa/uart/command-interpreter.c **** 	}
 128:../../../src/net/isa/uart/command-interpreter.c **** 	MESSAGE *message;
 129:../../../src/net/isa/uart/command-interpreter.c **** 	uint8_t length;
 130:../../../src/net/isa/uart/command-interpreter.c **** 	message = &tx_buf[PKT_DATA_START];
 131:../../../src/net/isa/uart/command-interpreter.c **** 	message->type = ADD_NEIGHBOR;
 132:../../../src/net/isa/uart/command-interpreter.c **** 	CONFIG_NEIGHBOR* configNeighbor = &message->data;
 133:../../../src/net/isa/uart/command-interpreter.c **** 	configNeighbor->neighborId = emberUnsignedCommandArgument(2);;
 134:../../../src/net/isa/uart/command-interpreter.c **** 	length=PKT_DATA_START+ sizeof(MESSAGE) + sizeof(CONFIG_NEIGHBOR) -1; // -1 because CONFIG_NEIGHBOR
 135:../../../src/net/isa/uart/command-interpreter.c **** 	sendPacket(destId,emberUnsignedCommandArgument(1), length, tx_buf, NULL);
 136:../../../src/net/isa/uart/command-interpreter.c **** 
 137:../../../src/net/isa/uart/command-interpreter.c **** }
 138:../../../src/net/isa/uart/command-interpreter.c **** 
 139:../../../src/net/isa/uart/command-interpreter.c **** 
 140:../../../src/net/isa/uart/command-interpreter.c **** void flushCandidateTable(void){
 141:../../../src/net/isa/uart/command-interpreter.c **** 
 142:../../../src/net/isa/uart/command-interpreter.c **** 	uint16_t destId = emberUnsignedCommandArgument(0);
 143:../../../src/net/isa/uart/command-interpreter.c **** 	if (destId == dmo.dlAddress) {
 144:../../../src/net/isa/uart/command-interpreter.c **** 		flushCandidateEntries;			//Flush my own table and return if this is my address
 145:../../../src/net/isa/uart/command-interpreter.c **** 		return;
 146:../../../src/net/isa/uart/command-interpreter.c **** 	}
 147:../../../src/net/isa/uart/command-interpreter.c **** 	MESSAGE *message;
 148:../../../src/net/isa/uart/command-interpreter.c **** 	uint8_t length;
 149:../../../src/net/isa/uart/command-interpreter.c **** 	message = &tx_buf[PKT_DATA_START];
 150:../../../src/net/isa/uart/command-interpreter.c **** 	message->type = FLUSH_CANDIDATE_TABLE;
 151:../../../src/net/isa/uart/command-interpreter.c **** 	//CONFIG_NEIGHBOR* configNeighbor = &message->data;
 152:../../../src/net/isa/uart/command-interpreter.c **** 	//configNeighbor->neighborId = emberUnsignedCommandArgument(2);;
 153:../../../src/net/isa/uart/command-interpreter.c **** 	length=PKT_DATA_START+ sizeof(MESSAGE) ;
 154:../../../src/net/isa/uart/command-interpreter.c **** 	sendPacket(destId,emberUnsignedCommandArgument(1), length, tx_buf, NULL);
 155:../../../src/net/isa/uart/command-interpreter.c **** 
 156:../../../src/net/isa/uart/command-interpreter.c **** }
 157:../../../src/net/isa/uart/command-interpreter.c **** 
 158:../../../src/net/isa/uart/command-interpreter.c **** //uint16_t dest, uint8_t graphId, uint8_t graphId, uint8_t neighborCount, uint16_t neigh1, uint16_t
 159:../../../src/net/isa/uart/command-interpreter.c **** void sendConfigGraph(void){
 160:../../../src/net/isa/uart/command-interpreter.c **** 
 161:../../../src/net/isa/uart/command-interpreter.c **** 	uint16_t destId = emberUnsignedCommandArgument(0);
 162:../../../src/net/isa/uart/command-interpreter.c **** 		if (destId == dmo.dlAddress) {
 163:../../../src/net/isa/uart/command-interpreter.c **** 			addGraph(emberUnsignedCommandArgument(2),emberUnsignedCommandArgument(3),emberUnsignedCommandArg
 164:../../../src/net/isa/uart/command-interpreter.c **** 			return;
 165:../../../src/net/isa/uart/command-interpreter.c **** 		}
 166:../../../src/net/isa/uart/command-interpreter.c **** 	MESSAGE *message;
 167:../../../src/net/isa/uart/command-interpreter.c **** 	uint8_t length;
 168:../../../src/net/isa/uart/command-interpreter.c **** 	message = &tx_buf[PKT_DATA_START];
 169:../../../src/net/isa/uart/command-interpreter.c **** 	message->type = ADD_GRAPH;
 170:../../../src/net/isa/uart/command-interpreter.c **** 	CONFIG_GRAPH* configGraph = &message->data;
 171:../../../src/net/isa/uart/command-interpreter.c **** 	configGraph->graphId =  emberUnsignedCommandArgument(2);
 172:../../../src/net/isa/uart/command-interpreter.c **** 	configGraph->neighborCount = emberUnsignedCommandArgument(3);
 173:../../../src/net/isa/uart/command-interpreter.c **** 	configGraph->neigh1 = emberUnsignedCommandArgument(4);
 174:../../../src/net/isa/uart/command-interpreter.c **** 	configGraph->neigh2 = emberUnsignedCommandArgument(5);
 175:../../../src/net/isa/uart/command-interpreter.c **** 	configGraph->neigh3 = emberUnsignedCommandArgument(6);
 176:../../../src/net/isa/uart/command-interpreter.c **** 	length=PKT_DATA_START+ sizeof(MESSAGE) + sizeof(CONFIG_GRAPH) -1; // -1 because CONFIG_GRAPH is ca
 177:../../../src/net/isa/uart/command-interpreter.c **** 	sendPacket(emberUnsignedCommandArgument(0),emberUnsignedCommandArgument(1), length, tx_buf, NULL);
 178:../../../src/net/isa/uart/command-interpreter.c **** }
 179:../../../src/net/isa/uart/command-interpreter.c **** void sendConfigLink(void){
 180:../../../src/net/isa/uart/command-interpreter.c **** 
 181:../../../src/net/isa/uart/command-interpreter.c **** 	uint16_t destId = emberUnsignedCommandArgument(0);
 182:../../../src/net/isa/uart/command-interpreter.c **** 			if (destId == dmo.dlAddress) {
 183:../../../src/net/isa/uart/command-interpreter.c **** 				addLink(emberUnsignedCommandArgument(2),emberUnsignedCommandArgument(3),emberUnsignedCommandArg
 184:../../../src/net/isa/uart/command-interpreter.c **** 				return;
 185:../../../src/net/isa/uart/command-interpreter.c **** 			}
 186:../../../src/net/isa/uart/command-interpreter.c **** 	MESSAGE *message;
 187:../../../src/net/isa/uart/command-interpreter.c **** 	uint8_t length;
 188:../../../src/net/isa/uart/command-interpreter.c **** 	message = &tx_buf[PKT_DATA_START];
 189:../../../src/net/isa/uart/command-interpreter.c **** 	message->type = ADD_LINK;
 190:../../../src/net/isa/uart/command-interpreter.c **** 	CONFIG_LINK* configLink = &message->data;
 191:../../../src/net/isa/uart/command-interpreter.c **** 	configLink->slotNumber =  emberUnsignedCommandArgument(2);
 192:../../../src/net/isa/uart/command-interpreter.c **** 	configLink->neighborId = emberUnsignedCommandArgument(3);
 193:../../../src/net/isa/uart/command-interpreter.c **** 	configLink->graphId = emberUnsignedCommandArgument(4);
 194:../../../src/net/isa/uart/command-interpreter.c **** 	configLink->linkType = emberUnsignedCommandArgument(5);
 195:../../../src/net/isa/uart/command-interpreter.c **** 	configLink->graphType = emberUnsignedCommandArgument(6);
 196:../../../src/net/isa/uart/command-interpreter.c **** 	length=PKT_DATA_START+ sizeof(MESSAGE) + sizeof(CONFIG_LINK) -1; // -1 because CONFIG_LINK is cast
 197:../../../src/net/isa/uart/command-interpreter.c **** 	sendPacket(emberUnsignedCommandArgument(0),emberUnsignedCommandArgument(1), length, tx_buf, NULL);
 198:../../../src/net/isa/uart/command-interpreter.c **** 
 199:../../../src/net/isa/uart/command-interpreter.c **** }
 200:../../../src/net/isa/uart/command-interpreter.c **** 
 201:../../../src/net/isa/uart/command-interpreter.c **** void printSendCommandArguments(void){
 202:../../../src/net/isa/uart/command-interpreter.c **** 
 203:../../../src/net/isa/uart/command-interpreter.c **** 	if (isPrintEnabled){
 204:../../../src/net/isa/uart/command-interpreter.c **** 	printf ("\n\n\n\tneighbor -->| message_destId | message_graphId | neighborId \n\r");
 205:../../../src/net/isa/uart/command-interpreter.c **** 	printf ("\tgraph\t -->| message_destId | message_graphId | graphID |");
 206:../../../src/net/isa/uart/command-interpreter.c **** 	printf ("neighCount | n1 | n2 | n3\n\r");
 207:../../../src/net/isa/uart/command-interpreter.c **** 	printf ("\tlink\t -->| message_destId | message_graphId | slotNo");
 208:../../../src/net/isa/uart/command-interpreter.c **** 	printf ("neighbor | graphId | linkType | graphType\n\n\n");
 209:../../../src/net/isa/uart/command-interpreter.c **** 	}
 210:../../../src/net/isa/uart/command-interpreter.c **** }
 211:../../../src/net/isa/uart/command-interpreter.c **** 
 212:../../../src/net/isa/uart/command-interpreter.c **** void printEnable(void){
 160               	.LM0:
 161               	.LFBB1:
 162               	/* prologue: function */
 163               	/* frame size = 0 */
 213:../../../src/net/isa/uart/command-interpreter.c **** 
 214:../../../src/net/isa/uart/command-interpreter.c **** 	isPrintEnabled = true;
 165               	.LM1:
 166 0000 81E0      		ldi r24,lo8(1)
 167 0002 8093 0000 		sts isPrintEnabled,r24
 168               	/* epilogue start */
 215:../../../src/net/isa/uart/command-interpreter.c **** }
 170               	.LM2:
 171 0006 0895      		ret
 173               	.Lscope1:
 175               		.stabd	78,0,0
 177               	.global	printDisable
 179               	printDisable:
 180               		.stabd	46,0,0
 216:../../../src/net/isa/uart/command-interpreter.c **** 
 217:../../../src/net/isa/uart/command-interpreter.c **** void printDisable(void){
 182               	.LM3:
 183               	.LFBB2:
 184               	/* prologue: function */
 185               	/* frame size = 0 */
 218:../../../src/net/isa/uart/command-interpreter.c **** 	isPrintEnabled = false;
 187               	.LM4:
 188 0008 1092 0000 		sts isPrintEnabled,__zero_reg__
 189               	/* epilogue start */
 219:../../../src/net/isa/uart/command-interpreter.c **** }
 191               	.LM5:
 192 000c 0895      		ret
 194               	.Lscope2:
 196               		.stabd	78,0,0
 198               	.global	emberCommandReaderInit
 200               	emberCommandReaderInit:
 201               		.stabd	46,0,0
 220:../../../src/net/isa/uart/command-interpreter.c **** 
 221:../../../src/net/isa/uart/command-interpreter.c **** 
 222:../../../src/net/isa/uart/command-interpreter.c **** void printNeighbor(void){
 223:../../../src/net/isa/uart/command-interpreter.c **** 
 224:../../../src/net/isa/uart/command-interpreter.c **** 	if (isPrintEnabled){
 225:../../../src/net/isa/uart/command-interpreter.c **** 		printf ("\tNeighborId\tClock Source\r\n");
 226:../../../src/net/isa/uart/command-interpreter.c **** 		for(int i=0;i<DLMO_NEIGHBOR_MAX_COUNT;i++){
 227:../../../src/net/isa/uart/command-interpreter.c **** 			if (dlmoNeighbor[i].isPresent){
 228:../../../src/net/isa/uart/command-interpreter.c **** 				printf("\t%d\t\t\t%d\r\n",dlmoNeighbor[i].index, (ISAMASK(dlmoNeighbor[i].typeInfo, CLOCK_PREFE
 229:../../../src/net/isa/uart/command-interpreter.c **** 			}
 230:../../../src/net/isa/uart/command-interpreter.c **** 
 231:../../../src/net/isa/uart/command-interpreter.c **** 		}
 232:../../../src/net/isa/uart/command-interpreter.c **** 	}
 233:../../../src/net/isa/uart/command-interpreter.c **** 
 234:../../../src/net/isa/uart/command-interpreter.c **** }
 235:../../../src/net/isa/uart/command-interpreter.c **** 
 236:../../../src/net/isa/uart/command-interpreter.c **** void printGraph(void){
 237:../../../src/net/isa/uart/command-interpreter.c **** 
 238:../../../src/net/isa/uart/command-interpreter.c **** 	if (isPrintEnabled){
 239:../../../src/net/isa/uart/command-interpreter.c **** 			printf ("\tGraphID\t\tNo. of neighbors\tn1\tn2\tn3\r\n");
 240:../../../src/net/isa/uart/command-interpreter.c **** 
 241:../../../src/net/isa/uart/command-interpreter.c **** 				for(int i=0;i<DLMO_GRAPH_MAX_COUNT;i++)
 242:../../../src/net/isa/uart/command-interpreter.c **** 					{
 243:../../../src/net/isa/uart/command-interpreter.c **** 						if(dlmoGraph[i].index){
 244:../../../src/net/isa/uart/command-interpreter.c **** 							printf("\t%d\t\t\t%d\t\t%d\t%d\t%d\r\n",dlmoGraph[i].index, SHIFTRIGHT(ISAMASK(dlmoGraph[i].
 245:../../../src/net/isa/uart/command-interpreter.c **** 						}
 246:../../../src/net/isa/uart/command-interpreter.c **** 			}
 247:../../../src/net/isa/uart/command-interpreter.c **** 		}
 248:../../../src/net/isa/uart/command-interpreter.c **** 
 249:../../../src/net/isa/uart/command-interpreter.c **** }
 250:../../../src/net/isa/uart/command-interpreter.c **** 
 251:../../../src/net/isa/uart/command-interpreter.c **** void printLink(void){
 252:../../../src/net/isa/uart/command-interpreter.c **** 
 253:../../../src/net/isa/uart/command-interpreter.c **** 	if (isPrintEnabled){
 254:../../../src/net/isa/uart/command-interpreter.c **** 			printf ("\tLinkID\tSlot Number\tNeighID\tGraphID\t    LinkType\tGraphType\r\n");
 255:../../../src/net/isa/uart/command-interpreter.c **** 		for (uint8_t i = 0; i < DLMO_LINK_MAX_COUNT; i++)
 256:../../../src/net/isa/uart/command-interpreter.c **** 			{
 257:../../../src/net/isa/uart/command-interpreter.c **** 				if (dlmoLink[i].isPresent) {
 258:../../../src/net/isa/uart/command-interpreter.c **** 
 259:../../../src/net/isa/uart/command-interpreter.c **** 					printf("\t%d\t%d\t\t%d\t%d\t    %d\t\t%d\r\n",i,dlmoLink[i].chOffset,dlmoLink[i].neighbor->ind
 260:../../../src/net/isa/uart/command-interpreter.c **** 				}
 261:../../../src/net/isa/uart/command-interpreter.c **** 			}
 262:../../../src/net/isa/uart/command-interpreter.c **** 	}
 263:../../../src/net/isa/uart/command-interpreter.c **** 
 264:../../../src/net/isa/uart/command-interpreter.c **** }
 265:../../../src/net/isa/uart/command-interpreter.c **** 
 266:../../../src/net/isa/uart/command-interpreter.c **** 
 267:../../../src/net/isa/uart/command-interpreter.c **** void printMatrix(void){
 268:../../../src/net/isa/uart/command-interpreter.c **** 
 269:../../../src/net/isa/uart/command-interpreter.c **** 
 270:../../../src/net/isa/uart/command-interpreter.c **** 		for (uint8_t i = 0; i < DLMO_NEIGHBOR_MAX_COUNT; i++)
 271:../../../src/net/isa/uart/command-interpreter.c **** 			{
 272:../../../src/net/isa/uart/command-interpreter.c **** 					printf("%d ",adjacencyMatrix[i]);
 273:../../../src/net/isa/uart/command-interpreter.c **** 				}
 274:../../../src/net/isa/uart/command-interpreter.c **** 		putchar('\r');
 275:../../../src/net/isa/uart/command-interpreter.c **** 		putchar('\n');
 276:../../../src/net/isa/uart/command-interpreter.c **** 
 277:../../../src/net/isa/uart/command-interpreter.c **** 	}
 278:../../../src/net/isa/uart/command-interpreter.c **** 
 279:../../../src/net/isa/uart/command-interpreter.c **** 
 280:../../../src/net/isa/uart/command-interpreter.c **** 
 281:../../../src/net/isa/uart/command-interpreter.c **** void setEcho(void){
 282:../../../src/net/isa/uart/command-interpreter.c **** 	if (emberUnsignedCommandArgument(0) == 0)  emberCommandInterpreterEchoOff();
 283:../../../src/net/isa/uart/command-interpreter.c **** 	else emberCommandInterpreterEchoOn();
 284:../../../src/net/isa/uart/command-interpreter.c **** 
 285:../../../src/net/isa/uart/command-interpreter.c **** }
 286:../../../src/net/isa/uart/command-interpreter.c **** EmberCommandEntry printCommands[] = {
 287:../../../src/net/isa/uart/command-interpreter.c **** 		  {"temp", printTempCommand, "uu"},
 288:../../../src/net/isa/uart/command-interpreter.c **** 		  {"command", emberPrintCommandTable, ""},
 289:../../../src/net/isa/uart/command-interpreter.c **** 		//  {"sendcommands", printSendCommandArguments, ""},
 290:../../../src/net/isa/uart/command-interpreter.c **** 		  {"enable", printEnable, ""},
 291:../../../src/net/isa/uart/command-interpreter.c **** 		  {"disable", printDisable, ""},
 292:../../../src/net/isa/uart/command-interpreter.c **** 		  {"Link", printLink, ""},
 293:../../../src/net/isa/uart/command-interpreter.c **** 		  {"Neighbor", printNeighbor, ""},
 294:../../../src/net/isa/uart/command-interpreter.c **** 		  {"Graph", printGraph, ""},
 295:../../../src/net/isa/uart/command-interpreter.c **** 		  {"Matrix", printMatrix, ""},
 296:../../../src/net/isa/uart/command-interpreter.c **** 		  { NULL }
 297:../../../src/net/isa/uart/command-interpreter.c **** 		};
 298:../../../src/net/isa/uart/command-interpreter.c **** 
 299:../../../src/net/isa/uart/command-interpreter.c **** EmberCommandEntry sendCommands[] = {
 300:../../../src/net/isa/uart/command-interpreter.c **** 		  {"dummyPacket", sendDummyPacket, "vu", "Destination ID| Graph ID "}, 				//uint16_t dest, uint8
 301:../../../src/net/isa/uart/command-interpreter.c **** //dest, graphId, slotNumber, neighborId, linkType,clockSource,graphId,neighborCount,n1,n2,n3,graphT
 302:../../../src/net/isa/uart/command-interpreter.c **** 		  {"Neighbor", sendConfigNeighbor, "vuv", "Destination ID| Graph ID| Neighbor to add"},			// uint
 303:../../../src/net/isa/uart/command-interpreter.c **** 		  {"Graph", sendConfigGraph, "vuuuvvv", "Destination ID| Graph ID| Graph to add| neighCount| n1| 
 304:../../../src/net/isa/uart/command-interpreter.c **** 		  {"Link", sendConfigLink, "vuuvuuu", "Destination ID| Graph ID| Slot| neigh| graph| linkType| Gr
 305:../../../src/net/isa/uart/command-interpreter.c **** 		  {"flushCandidate", flushCandidateTable, "vu", "Sends a command to flush candidate table"},
 306:../../../src/net/isa/uart/command-interpreter.c **** 		  { NULL }
 307:../../../src/net/isa/uart/command-interpreter.c **** 		};
 308:../../../src/net/isa/uart/command-interpreter.c **** 
 309:../../../src/net/isa/uart/command-interpreter.c **** EmberCommandEntry emberCommandTable[] = {
 310:../../../src/net/isa/uart/command-interpreter.c **** 
 311:../../../src/net/isa/uart/command-interpreter.c **** 	    {"print",            NULL,                             (PGM_P)printCommands},
 312:../../../src/net/isa/uart/command-interpreter.c **** 	    {"send",            NULL,                             (PGM_P)sendCommands, "List of commands t
 313:../../../src/net/isa/uart/command-interpreter.c **** 	    {"echo",            setEcho,                             "u"},
 314:../../../src/net/isa/uart/command-interpreter.c ****   {NULL,               NULL,                             NULL}, // terminator
 315:../../../src/net/isa/uart/command-interpreter.c **** };
 316:../../../src/net/isa/uart/command-interpreter.c **** 
 317:../../../src/net/isa/uart/command-interpreter.c **** /**
 318:../../../src/net/isa/uart/command-interpreter.c ****  * @addtogroup cli
 319:../../../src/net/isa/uart/command-interpreter.c ****  * @{
 320:../../../src/net/isa/uart/command-interpreter.c ****  */
 321:../../../src/net/isa/uart/command-interpreter.c **** /**
 322:../../../src/net/isa/uart/command-interpreter.c ****  * @brief
 323:../../../src/net/isa/uart/command-interpreter.c ****  *        <b>debugprint status</b>
 324:../../../src/net/isa/uart/command-interpreter.c ****  *        - <i>Displays the current status of debug printing on the
 325:../../../src/net/isa/uart/command-interpreter.c ****  *          application.</i>
 326:../../../src/net/isa/uart/command-interpreter.c ****  *
 327:../../../src/net/isa/uart/command-interpreter.c ****  *        <b>debugprint all_on</b>
 328:../../../src/net/isa/uart/command-interpreter.c ****  *        - <i>Turns on all debug printing
 329:../../../src/net/isa/uart/command-interpreter.c ****  *        for printing options which are compiled into the application.</i>
 330:../../../src/net/isa/uart/command-interpreter.c ****  *
 331:../../../src/net/isa/uart/command-interpreter.c ****  *        <b>debugprint all_off</b>
 332:../../../src/net/isa/uart/command-interpreter.c ****  *        - <i>Turns off all debug printing for printing options which are compiled
 333:../../../src/net/isa/uart/command-interpreter.c ****  *        into the application.</i>
 334:../../../src/net/isa/uart/command-interpreter.c ****  *
 335:../../../src/net/isa/uart/command-interpreter.c ****  *        <b>debugprint on &lt;area&gt;</b>
 336:../../../src/net/isa/uart/command-interpreter.c ****  *        - <i>Turns on debug printing for a specific area
 337:../../../src/net/isa/uart/command-interpreter.c ****  *           - area - two byte value indicating the area to turn on</i>
 338:../../../src/net/isa/uart/command-interpreter.c ****  *
 339:../../../src/net/isa/uart/command-interpreter.c ****  *        <b>debugprint off &lt;area&gt;</b>
 340:../../../src/net/isa/uart/command-interpreter.c ****  *        - <i>Turns off debug printing for a specific area
 341:../../../src/net/isa/uart/command-interpreter.c ****  *           - area - two byte value indicating the area to turn off</i>
 342:../../../src/net/isa/uart/command-interpreter.c ****  */
 343:../../../src/net/isa/uart/command-interpreter.c **** 
 344:../../../src/net/isa/uart/command-interpreter.c **** 
 345:../../../src/net/isa/uart/command-interpreter.c **** 
 346:../../../src/net/isa/uart/command-interpreter.c **** 
 347:../../../src/net/isa/uart/command-interpreter.c **** 
 348:../../../src/net/isa/uart/command-interpreter.c **** 
 349:../../../src/net/isa/uart/command-interpreter.c **** //----------------------------------------------------------------
 350:../../../src/net/isa/uart/command-interpreter.c **** // Initialize the state machine.
 351:../../../src/net/isa/uart/command-interpreter.c **** 
 352:../../../src/net/isa/uart/command-interpreter.c **** void emberCommandReaderInit(void)
 353:../../../src/net/isa/uart/command-interpreter.c **** {
 203               	.LM6:
 204               	.LFBB3:
 205               	/* prologue: function */
 206               	/* frame size = 0 */
 354:../../../src/net/isa/uart/command-interpreter.c ****   commandState.state = CMD_AWAITING_ARGUMENT;
 208               	.LM7:
 209 000e 1092 0000 		sts commandState,__zero_reg__
 355:../../../src/net/isa/uart/command-interpreter.c ****   commandState.index = 0;
 211               	.LM8:
 212 0012 1092 0000 		sts commandState+46,__zero_reg__
 356:../../../src/net/isa/uart/command-interpreter.c ****   commandState.tokenIndices[0] = 0;
 214               	.LM9:
 215 0016 1092 0000 		sts commandState+33,__zero_reg__
 357:../../../src/net/isa/uart/command-interpreter.c ****   commandState.tokenCount = 0;
 217               	.LM10:
 218 001a 1092 0000 		sts commandState+45,__zero_reg__
 358:../../../src/net/isa/uart/command-interpreter.c ****   commandState.error = EMBER_CMD_SUCCESS;
 220               	.LM11:
 221 001e 1092 0000 		sts commandState+47,__zero_reg__
 359:../../../src/net/isa/uart/command-interpreter.c ****   commandState.hexHighNibble = 0xFF;
 223               	.LM12:
 224 0022 8FEF      		ldi r24,lo8(-1)
 225 0024 8093 0000 		sts commandState+48,r24
 360:../../../src/net/isa/uart/command-interpreter.c ****   commandState.argOffset = 0;
 227               	.LM13:
 228 0028 1092 0000 		sts commandState+49,__zero_reg__
 361:../../../src/net/isa/uart/command-interpreter.c ****   emberCurrentCommand = NULL;
 230               	.LM14:
 231 002c 1092 0000 		sts (emberCurrentCommand)+1,__zero_reg__
 232 0030 1092 0000 		sts emberCurrentCommand,__zero_reg__
 233               	/* epilogue start */
 362:../../../src/net/isa/uart/command-interpreter.c **** }
 235               	.LM15:
 236 0034 0895      		ret
 238               	.Lscope3:
 240               		.stabd	78,0,0
 242               	.global	emberCommandArgumentCount
 244               	emberCommandArgumentCount:
 245               		.stabd	46,0,0
 363:../../../src/net/isa/uart/command-interpreter.c **** 
 364:../../../src/net/isa/uart/command-interpreter.c **** // Returns a value > 15 if ch is not a hex digit.
 365:../../../src/net/isa/uart/command-interpreter.c **** static uint8_t hexToInt(uint8_t ch)
 366:../../../src/net/isa/uart/command-interpreter.c **** {
 367:../../../src/net/isa/uart/command-interpreter.c ****   return ch - (ch >= 'a' ? 'a' - 10
 368:../../../src/net/isa/uart/command-interpreter.c ****                : (ch >= 'A' ? 'A' - 10
 369:../../../src/net/isa/uart/command-interpreter.c ****                   : (ch <= '9' ? '0'
 370:../../../src/net/isa/uart/command-interpreter.c ****                      : 0)));
 371:../../../src/net/isa/uart/command-interpreter.c **** }
 372:../../../src/net/isa/uart/command-interpreter.c **** 
 373:../../../src/net/isa/uart/command-interpreter.c **** static uint8_t tokenLength(uint8_t num)
 374:../../../src/net/isa/uart/command-interpreter.c **** {
 375:../../../src/net/isa/uart/command-interpreter.c ****   return (commandState.tokenIndices[num + 1]
 376:../../../src/net/isa/uart/command-interpreter.c ****           - commandState.tokenIndices[num]);
 377:../../../src/net/isa/uart/command-interpreter.c **** }
 378:../../../src/net/isa/uart/command-interpreter.c **** 
 379:../../../src/net/isa/uart/command-interpreter.c **** static uint8_t *tokenPointer(int8_t tokenNum)
 380:../../../src/net/isa/uart/command-interpreter.c **** {
 381:../../../src/net/isa/uart/command-interpreter.c ****   return commandState.buffer + commandState.tokenIndices[tokenNum];
 382:../../../src/net/isa/uart/command-interpreter.c **** }
 383:../../../src/net/isa/uart/command-interpreter.c **** 
 384:../../../src/net/isa/uart/command-interpreter.c **** EmberStatus emberSerialReadByte(uint8_t *dataByte)
 385:../../../src/net/isa/uart/command-interpreter.c **** {
 386:../../../src/net/isa/uart/command-interpreter.c ****   int8_t ch=-1;
 387:../../../src/net/isa/uart/command-interpreter.c **** 	if (nrk_uart_data_ready(NRK_DEFAULT_UART)!=0)
 388:../../../src/net/isa/uart/command-interpreter.c ****   ch = getchar();
 389:../../../src/net/isa/uart/command-interpreter.c **** 
 390:../../../src/net/isa/uart/command-interpreter.c ****   if(ch<0) {
 391:../../../src/net/isa/uart/command-interpreter.c ****     return EMBER_SERIAL_RX_EMPTY;
 392:../../../src/net/isa/uart/command-interpreter.c ****   }
 393:../../../src/net/isa/uart/command-interpreter.c ****   *dataByte = (uint8_t)ch;
 394:../../../src/net/isa/uart/command-interpreter.c ****   return EMBER_SUCCESS;
 395:../../../src/net/isa/uart/command-interpreter.c **** }
 396:../../../src/net/isa/uart/command-interpreter.c **** 
 397:../../../src/net/isa/uart/command-interpreter.c **** //----------------------------------------------------------------
 398:../../../src/net/isa/uart/command-interpreter.c **** // This is a state machine for parsing commands.  If 'input' is NULL
 399:../../../src/net/isa/uart/command-interpreter.c **** // 'sizeOrPort' is treated as a port and characters are read from there.
 400:../../../src/net/isa/uart/command-interpreter.c **** //
 401:../../../src/net/isa/uart/command-interpreter.c **** // Goto's are used where one parse state naturally falls into another,
 402:../../../src/net/isa/uart/command-interpreter.c **** // and to save flash.
 403:../../../src/net/isa/uart/command-interpreter.c **** 
 404:../../../src/net/isa/uart/command-interpreter.c **** bool emberProcessCommandString(uint8_t *input, uint8_t sizeOrPort)
 405:../../../src/net/isa/uart/command-interpreter.c **** {
 406:../../../src/net/isa/uart/command-interpreter.c ****   bool isEol = FALSE;
 407:../../../src/net/isa/uart/command-interpreter.c ****   bool isSpace, isQuote;
 408:../../../src/net/isa/uart/command-interpreter.c **** 
 409:../../../src/net/isa/uart/command-interpreter.c ****   while (TRUE) {
 410:../../../src/net/isa/uart/command-interpreter.c ****     uint8_t next;
 411:../../../src/net/isa/uart/command-interpreter.c **** 
 412:../../../src/net/isa/uart/command-interpreter.c ****     if (input == NULL) {
 413:../../../src/net/isa/uart/command-interpreter.c ****       switch (emberSerialReadByte(&next)) {
 414:../../../src/net/isa/uart/command-interpreter.c ****       case EMBER_SUCCESS:
 415:../../../src/net/isa/uart/command-interpreter.c ****         break;
 416:../../../src/net/isa/uart/command-interpreter.c ****       case EMBER_SERIAL_RX_EMPTY:
 417:../../../src/net/isa/uart/command-interpreter.c ****         return isEol;
 418:../../../src/net/isa/uart/command-interpreter.c ****       default:
 419:../../../src/net/isa/uart/command-interpreter.c ****         commandState.error = EMBER_CMD_ERR_PORT_PROBLEM;
 420:../../../src/net/isa/uart/command-interpreter.c ****         goto READING_TO_EOL;
 421:../../../src/net/isa/uart/command-interpreter.c ****       }
 422:../../../src/net/isa/uart/command-interpreter.c ****     } else if (sizeOrPort == 0) {
 423:../../../src/net/isa/uart/command-interpreter.c ****       return isEol;
 424:../../../src/net/isa/uart/command-interpreter.c ****     } else {
 425:../../../src/net/isa/uart/command-interpreter.c ****       next = *input;
 426:../../../src/net/isa/uart/command-interpreter.c ****       input += 1;
 427:../../../src/net/isa/uart/command-interpreter.c ****       sizeOrPort -= 1;
 428:../../../src/net/isa/uart/command-interpreter.c ****     }
 429:../../../src/net/isa/uart/command-interpreter.c **** 
 430:../../../src/net/isa/uart/command-interpreter.c ****     //   fprintf(stderr, "[processing '%c' (%s)]\n", next, stateNames[commandState.state]);
 431:../../../src/net/isa/uart/command-interpreter.c **** 
 432:../../../src/net/isa/uart/command-interpreter.c ****     if (previousCharacter == '\r' && next == '\n') {
 433:../../../src/net/isa/uart/command-interpreter.c ****       previousCharacter = next;
 434:../../../src/net/isa/uart/command-interpreter.c ****       continue;
 435:../../../src/net/isa/uart/command-interpreter.c ****     }
 436:../../../src/net/isa/uart/command-interpreter.c ****     previousCharacter = next;
 437:../../../src/net/isa/uart/command-interpreter.c ****     isEol = ((next == '\r') || (next == '\n'));
 438:../../../src/net/isa/uart/command-interpreter.c ****     isSpace = (next == ' ');
 439:../../../src/net/isa/uart/command-interpreter.c ****     isQuote = (next == '"');
 440:../../../src/net/isa/uart/command-interpreter.c **** 
 441:../../../src/net/isa/uart/command-interpreter.c **** 
 442:../../../src/net/isa/uart/command-interpreter.c ****     switch (commandState.state) {
 443:../../../src/net/isa/uart/command-interpreter.c **** 
 444:../../../src/net/isa/uart/command-interpreter.c ****     case CMD_AWAITING_ARGUMENT:
 445:../../../src/net/isa/uart/command-interpreter.c ****       if (isEol) {
 446:../../../src/net/isa/uart/command-interpreter.c ****         callCommandAction();
 447:../../../src/net/isa/uart/command-interpreter.c ****       } else if (! isSpace) {
 448:../../../src/net/isa/uart/command-interpreter.c ****         if (isQuote) {
 449:../../../src/net/isa/uart/command-interpreter.c ****           commandState.state = CMD_READING_STRING;
 450:../../../src/net/isa/uart/command-interpreter.c ****         } else if (next == '{') {
 451:../../../src/net/isa/uart/command-interpreter.c ****           commandState.state = CMD_READING_HEX_STRING;
 452:../../../src/net/isa/uart/command-interpreter.c ****         } else {
 453:../../../src/net/isa/uart/command-interpreter.c ****           commandState.state = CMD_READING_ARGUMENT;
 454:../../../src/net/isa/uart/command-interpreter.c ****         }
 455:../../../src/net/isa/uart/command-interpreter.c ****         goto WRITE_TO_BUFFER;
 456:../../../src/net/isa/uart/command-interpreter.c ****       }
 457:../../../src/net/isa/uart/command-interpreter.c ****       break;
 458:../../../src/net/isa/uart/command-interpreter.c **** 
 459:../../../src/net/isa/uart/command-interpreter.c ****     case CMD_READING_ARGUMENT:
 460:../../../src/net/isa/uart/command-interpreter.c ****       if (isEol || isSpace) {
 461:../../../src/net/isa/uart/command-interpreter.c ****         goto END_ARGUMENT;
 462:../../../src/net/isa/uart/command-interpreter.c ****       } else {
 463:../../../src/net/isa/uart/command-interpreter.c ****         goto WRITE_TO_BUFFER;
 464:../../../src/net/isa/uart/command-interpreter.c ****       }
 465:../../../src/net/isa/uart/command-interpreter.c **** 
 466:../../../src/net/isa/uart/command-interpreter.c ****     case CMD_READING_STRING:
 467:../../../src/net/isa/uart/command-interpreter.c ****       if (isQuote) {
 468:../../../src/net/isa/uart/command-interpreter.c ****         goto END_ARGUMENT;
 469:../../../src/net/isa/uart/command-interpreter.c ****       } else if (isEol) {
 470:../../../src/net/isa/uart/command-interpreter.c ****         commandState.error = EMBER_CMD_ERR_ARGUMENT_SYNTAX_ERROR;
 471:../../../src/net/isa/uart/command-interpreter.c ****         goto READING_TO_EOL;
 472:../../../src/net/isa/uart/command-interpreter.c ****       } else {
 473:../../../src/net/isa/uart/command-interpreter.c ****         goto WRITE_TO_BUFFER;
 474:../../../src/net/isa/uart/command-interpreter.c ****       }
 475:../../../src/net/isa/uart/command-interpreter.c **** 
 476:../../../src/net/isa/uart/command-interpreter.c ****     case CMD_READING_HEX_STRING: {
 477:../../../src/net/isa/uart/command-interpreter.c ****       bool waitingForLowNibble = (commandState.hexHighNibble != 0xFF);
 478:../../../src/net/isa/uart/command-interpreter.c ****       if (next == '}') {
 479:../../../src/net/isa/uart/command-interpreter.c ****         if (waitingForLowNibble) {
 480:../../../src/net/isa/uart/command-interpreter.c ****           commandState.error = EMBER_CMD_ERR_ARGUMENT_SYNTAX_ERROR;
 481:../../../src/net/isa/uart/command-interpreter.c ****           goto READING_TO_EOL;
 482:../../../src/net/isa/uart/command-interpreter.c ****         }
 483:../../../src/net/isa/uart/command-interpreter.c ****         goto END_ARGUMENT;
 484:../../../src/net/isa/uart/command-interpreter.c ****       } else {
 485:../../../src/net/isa/uart/command-interpreter.c ****         uint8_t value = hexToInt(next);
 486:../../../src/net/isa/uart/command-interpreter.c ****         if (value < 16) {
 487:../../../src/net/isa/uart/command-interpreter.c ****           if (waitingForLowNibble) {
 488:../../../src/net/isa/uart/command-interpreter.c ****             next = (commandState.hexHighNibble << 4) + value;
 489:../../../src/net/isa/uart/command-interpreter.c ****             commandState.hexHighNibble = 0xFF;
 490:../../../src/net/isa/uart/command-interpreter.c ****             goto WRITE_TO_BUFFER;
 491:../../../src/net/isa/uart/command-interpreter.c ****           } else {
 492:../../../src/net/isa/uart/command-interpreter.c ****             commandState.hexHighNibble = value;
 493:../../../src/net/isa/uart/command-interpreter.c ****           }
 494:../../../src/net/isa/uart/command-interpreter.c ****         } else if (! isSpace) {
 495:../../../src/net/isa/uart/command-interpreter.c ****           commandState.error = EMBER_CMD_ERR_ARGUMENT_SYNTAX_ERROR;
 496:../../../src/net/isa/uart/command-interpreter.c ****           goto READING_TO_EOL;
 497:../../../src/net/isa/uart/command-interpreter.c ****         }
 498:../../../src/net/isa/uart/command-interpreter.c ****       }
 499:../../../src/net/isa/uart/command-interpreter.c ****       break;
 500:../../../src/net/isa/uart/command-interpreter.c ****     }
 501:../../../src/net/isa/uart/command-interpreter.c **** 
 502:../../../src/net/isa/uart/command-interpreter.c ****     READING_TO_EOL:
 503:../../../src/net/isa/uart/command-interpreter.c ****       commandState.state = CMD_READING_TO_EOL;
 504:../../../src/net/isa/uart/command-interpreter.c **** 
 505:../../../src/net/isa/uart/command-interpreter.c ****     case CMD_READING_TO_EOL:
 506:../../../src/net/isa/uart/command-interpreter.c ****       if (isEol) {
 507:../../../src/net/isa/uart/command-interpreter.c ****         if (commandState.error != EMBER_CMD_SUCCESS) {
 508:../../../src/net/isa/uart/command-interpreter.c ****           emberCommandErrorHandler(commandState.error);
 509:../../../src/net/isa/uart/command-interpreter.c ****         }
 510:../../../src/net/isa/uart/command-interpreter.c ****         emberCommandReaderInit();
 511:../../../src/net/isa/uart/command-interpreter.c ****       }
 512:../../../src/net/isa/uart/command-interpreter.c ****       break;
 513:../../../src/net/isa/uart/command-interpreter.c **** 
 514:../../../src/net/isa/uart/command-interpreter.c ****     END_ARGUMENT:
 515:../../../src/net/isa/uart/command-interpreter.c ****       if (commandState.tokenCount == MAX_TOKEN_COUNT) {
 516:../../../src/net/isa/uart/command-interpreter.c ****         commandState.error = EMBER_CMD_ERR_WRONG_NUMBER_OF_ARGUMENTS;
 517:../../../src/net/isa/uart/command-interpreter.c ****         goto READING_TO_EOL;
 518:../../../src/net/isa/uart/command-interpreter.c ****       }
 519:../../../src/net/isa/uart/command-interpreter.c ****       commandState.tokenCount += 1;
 520:../../../src/net/isa/uart/command-interpreter.c ****       commandState.tokenIndices[commandState.tokenCount] = commandState.index;
 521:../../../src/net/isa/uart/command-interpreter.c ****       commandState.state = CMD_AWAITING_ARGUMENT;
 522:../../../src/net/isa/uart/command-interpreter.c ****       if (isEol) {
 523:../../../src/net/isa/uart/command-interpreter.c ****         callCommandAction();
 524:../../../src/net/isa/uart/command-interpreter.c ****       }
 525:../../../src/net/isa/uart/command-interpreter.c ****       break;
 526:../../../src/net/isa/uart/command-interpreter.c **** 
 527:../../../src/net/isa/uart/command-interpreter.c ****     WRITE_TO_BUFFER:
 528:../../../src/net/isa/uart/command-interpreter.c ****       if (commandState.index == EMBER_COMMAND_BUFFER_LENGTH) {
 529:../../../src/net/isa/uart/command-interpreter.c ****         commandState.error = EMBER_CMD_ERR_STRING_TOO_LONG;
 530:../../../src/net/isa/uart/command-interpreter.c ****         goto READING_TO_EOL;
 531:../../../src/net/isa/uart/command-interpreter.c ****       }
 532:../../../src/net/isa/uart/command-interpreter.c ****       if (commandState.state == CMD_READING_ARGUMENT) {
 533:../../../src/net/isa/uart/command-interpreter.c ****         next = charDowncase(next);
 534:../../../src/net/isa/uart/command-interpreter.c ****       }
 535:../../../src/net/isa/uart/command-interpreter.c ****       commandState.buffer[commandState.index] = next;
 536:../../../src/net/isa/uart/command-interpreter.c ****       commandState.index += 1;
 537:../../../src/net/isa/uart/command-interpreter.c ****       break;
 538:../../../src/net/isa/uart/command-interpreter.c **** 
 539:../../../src/net/isa/uart/command-interpreter.c ****     default: {
 540:../../../src/net/isa/uart/command-interpreter.c ****     }
 541:../../../src/net/isa/uart/command-interpreter.c ****     } //close switch.
 542:../../../src/net/isa/uart/command-interpreter.c ****   }
 543:../../../src/net/isa/uart/command-interpreter.c **** }
 544:../../../src/net/isa/uart/command-interpreter.c **** 
 545:../../../src/net/isa/uart/command-interpreter.c **** //----------------------------------------------------------------
 546:../../../src/net/isa/uart/command-interpreter.c **** // Command lookup and processing
 547:../../../src/net/isa/uart/command-interpreter.c **** 
 548:../../../src/net/isa/uart/command-interpreter.c **** // Returs true if entry is a nested command, and in this case
 549:../../../src/net/isa/uart/command-interpreter.c **** // it populates the nestedCommand pointer.
 550:../../../src/net/isa/uart/command-interpreter.c **** // Otherwise it returns false, and does nothing with nestedCommand
 551:../../../src/net/isa/uart/command-interpreter.c **** //
 552:../../../src/net/isa/uart/command-interpreter.c **** // Nested commands are implemented by setting the action
 553:../../../src/net/isa/uart/command-interpreter.c **** // field to NULL, and the argumentTypes field is a pointer
 554:../../../src/net/isa/uart/command-interpreter.c **** // to a nested EmberCommandEntry array. The older mechanism is
 555:../../../src/net/isa/uart/command-interpreter.c **** // to set argumentTypes to "n" and then the action field
 556:../../../src/net/isa/uart/command-interpreter.c **** // contains the EmberCommandEntry, but that approach has a problem
 557:../../../src/net/isa/uart/command-interpreter.c **** // on AVR128, therefore it is technically deprecated. If you have
 558:../../../src/net/isa/uart/command-interpreter.c **** // a choice, put NULL for action and a table under argumentTypes.
 559:../../../src/net/isa/uart/command-interpreter.c **** static bool getNestedCommand(EmberCommandEntry *entry,
 560:../../../src/net/isa/uart/command-interpreter.c ****                                 EmberCommandEntry **nestedCommand) {
 561:../../../src/net/isa/uart/command-interpreter.c ****   if ( entry -> action == NULL ) {
 562:../../../src/net/isa/uart/command-interpreter.c ****     *nestedCommand = (EmberCommandEntry*)entry->argumentTypes;
 563:../../../src/net/isa/uart/command-interpreter.c ****     return TRUE;
 564:../../../src/net/isa/uart/command-interpreter.c ****   } else if ( entry -> argumentTypes[0] == 'n' ) {
 565:../../../src/net/isa/uart/command-interpreter.c ****     *nestedCommand = (EmberCommandEntry*)(void*)entry->action;
 566:../../../src/net/isa/uart/command-interpreter.c ****     return TRUE;
 567:../../../src/net/isa/uart/command-interpreter.c ****   } else {
 568:../../../src/net/isa/uart/command-interpreter.c ****     return FALSE;
 569:../../../src/net/isa/uart/command-interpreter.c ****   }
 570:../../../src/net/isa/uart/command-interpreter.c **** }
 571:../../../src/net/isa/uart/command-interpreter.c **** 
 572:../../../src/net/isa/uart/command-interpreter.c **** static uint8_t charDowncase(uint8_t c)
 573:../../../src/net/isa/uart/command-interpreter.c **** {
 574:../../../src/net/isa/uart/command-interpreter.c ****   if ('A' <= c && c <= 'Z')
 575:../../../src/net/isa/uart/command-interpreter.c ****     return c + 'a' - 'A';
 576:../../../src/net/isa/uart/command-interpreter.c ****   else
 577:../../../src/net/isa/uart/command-interpreter.c ****     return c;
 578:../../../src/net/isa/uart/command-interpreter.c **** }
 579:../../../src/net/isa/uart/command-interpreter.c **** 
 580:../../../src/net/isa/uart/command-interpreter.c **** static uint8_t firstByteOfArg(uint8_t argNum)
 581:../../../src/net/isa/uart/command-interpreter.c **** {
 582:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t tokenNum = argNum + commandState.argOffset;
 583:../../../src/net/isa/uart/command-interpreter.c ****   return commandState.buffer[commandState.tokenIndices[tokenNum]];
 584:../../../src/net/isa/uart/command-interpreter.c **** }
 585:../../../src/net/isa/uart/command-interpreter.c **** 
 586:../../../src/net/isa/uart/command-interpreter.c **** // To support existing lazy-typer functionality in the app framework,
 587:../../../src/net/isa/uart/command-interpreter.c **** // we allow the user to shorten the entered command so long as the
 588:../../../src/net/isa/uart/command-interpreter.c **** // substring matches no more than one command in the table.
 589:../../../src/net/isa/uart/command-interpreter.c **** //
 590:../../../src/net/isa/uart/command-interpreter.c **** // To allow CONST savings by storing abbreviated command names, we also
 591:../../../src/net/isa/uart/command-interpreter.c **** // allow matching if the input command is longer than the stored command.
 592:../../../src/net/isa/uart/command-interpreter.c **** // To reduce complexity, we do not handle multiple inexact matches.
 593:../../../src/net/isa/uart/command-interpreter.c **** // For example, if there are commands 'A' and 'AB', and the user enters
 594:../../../src/net/isa/uart/command-interpreter.c **** // 'ABC', nothing will match.
 595:../../../src/net/isa/uart/command-interpreter.c **** 
 596:../../../src/net/isa/uart/command-interpreter.c **** static EmberCommandEntry *commandLookup(EmberCommandEntry *commandFinger,
 597:../../../src/net/isa/uart/command-interpreter.c ****                                         uint8_t tokenNum)
 598:../../../src/net/isa/uart/command-interpreter.c **** {
 599:../../../src/net/isa/uart/command-interpreter.c ****   EmberCommandEntry *inexactMatch = NULL;
 600:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t *inputCommand = tokenPointer(tokenNum);
 601:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t inputLength = tokenLength(tokenNum);
 602:../../../src/net/isa/uart/command-interpreter.c ****   bool multipleMatches = FALSE;
 603:../../../src/net/isa/uart/command-interpreter.c **** 
 604:../../../src/net/isa/uart/command-interpreter.c ****   for (; commandFinger->name != NULL; commandFinger++) {
 605:../../../src/net/isa/uart/command-interpreter.c ****     PGM_P entryFinger = commandFinger->name;
 606:../../../src/net/isa/uart/command-interpreter.c ****     uint8_t *inputFinger = inputCommand;
 607:../../../src/net/isa/uart/command-interpreter.c ****     for (;; entryFinger++, inputFinger++) {
 608:../../../src/net/isa/uart/command-interpreter.c ****       bool endInput = (inputFinger - inputCommand == inputLength);
 609:../../../src/net/isa/uart/command-interpreter.c ****       bool endEntry = (*entryFinger == 0);
 610:../../../src/net/isa/uart/command-interpreter.c ****       if (endInput && endEntry) {
 611:../../../src/net/isa/uart/command-interpreter.c ****         return commandFinger;  // Exact match.
 612:../../../src/net/isa/uart/command-interpreter.c ****       } else if (endInput || endEntry) {
 613:../../../src/net/isa/uart/command-interpreter.c ****         if (inexactMatch != NULL) {
 614:../../../src/net/isa/uart/command-interpreter.c ****           multipleMatches = TRUE;  // Multiple matches.
 615:../../../src/net/isa/uart/command-interpreter.c ****           break;
 616:../../../src/net/isa/uart/command-interpreter.c ****         } else {
 617:../../../src/net/isa/uart/command-interpreter.c ****           inexactMatch = commandFinger;
 618:../../../src/net/isa/uart/command-interpreter.c ****           break;
 619:../../../src/net/isa/uart/command-interpreter.c ****         }
 620:../../../src/net/isa/uart/command-interpreter.c ****       } else if (charDowncase(*inputFinger) != charDowncase(*entryFinger)) {
 621:../../../src/net/isa/uart/command-interpreter.c ****         break;
 622:../../../src/net/isa/uart/command-interpreter.c ****       }
 623:../../../src/net/isa/uart/command-interpreter.c ****     }
 624:../../../src/net/isa/uart/command-interpreter.c ****   }
 625:../../../src/net/isa/uart/command-interpreter.c ****   return (multipleMatches || false ? NULL : inexactMatch);
 626:../../../src/net/isa/uart/command-interpreter.c **** }
 627:../../../src/net/isa/uart/command-interpreter.c **** 
 628:../../../src/net/isa/uart/command-interpreter.c **** EmberStatus emberSerialWriteData(uint8_t *data, uint8_t length)
 629:../../../src/net/isa/uart/command-interpreter.c **** {
 630:../../../src/net/isa/uart/command-interpreter.c **** 
 631:../../../src/net/isa/uart/command-interpreter.c **** 	while(length--) {
 632:../../../src/net/isa/uart/command-interpreter.c ****     putchar(*data);
 633:../../../src/net/isa/uart/command-interpreter.c ****     data++;
 634:../../../src/net/isa/uart/command-interpreter.c ****   }
 635:../../../src/net/isa/uart/command-interpreter.c **** 
 636:../../../src/net/isa/uart/command-interpreter.c ****   return EMBER_SUCCESS;
 637:../../../src/net/isa/uart/command-interpreter.c **** }
 638:../../../src/net/isa/uart/command-interpreter.c **** 
 639:../../../src/net/isa/uart/command-interpreter.c **** static void echoPrint(void)
 640:../../../src/net/isa/uart/command-interpreter.c **** {
 641:../../../src/net/isa/uart/command-interpreter.c **** 
 642:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t tokenNum = 0;
 643:../../../src/net/isa/uart/command-interpreter.c ****   for ( ; tokenNum < commandState.tokenCount; tokenNum++ ) {
 644:../../../src/net/isa/uart/command-interpreter.c ****     uint8_t *ptr = tokenPointer(tokenNum);
 645:../../../src/net/isa/uart/command-interpreter.c ****     uint8_t len = tokenLength(tokenNum);
 646:../../../src/net/isa/uart/command-interpreter.c ****     emberSerialWriteData(ptr, len);
 647:../../../src/net/isa/uart/command-interpreter.c ****     printf(" ");
 648:../../../src/net/isa/uart/command-interpreter.c ****   }
 649:../../../src/net/isa/uart/command-interpreter.c ****   printf("\r\n");
 650:../../../src/net/isa/uart/command-interpreter.c **** }
 651:../../../src/net/isa/uart/command-interpreter.c **** 
 652:../../../src/net/isa/uart/command-interpreter.c **** static void callCommandAction(void)
 653:../../../src/net/isa/uart/command-interpreter.c **** {
 654:../../../src/net/isa/uart/command-interpreter.c ****   EmberCommandEntry *commandFinger = emberCommandTable;
 655:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t tokenNum = 0;
 656:../../../src/net/isa/uart/command-interpreter.c ****   // We need a separate argTypeNum index because of the '*' arg type.
 657:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t argTypeNum, argNum;
 658:../../../src/net/isa/uart/command-interpreter.c **** 
 659:../../../src/net/isa/uart/command-interpreter.c ****   if (commandState.tokenCount == 0) {
 660:../../../src/net/isa/uart/command-interpreter.c ****     goto kickout2;
 661:../../../src/net/isa/uart/command-interpreter.c ****   }
 662:../../../src/net/isa/uart/command-interpreter.c **** 
 663:../../../src/net/isa/uart/command-interpreter.c ****   // If we have echo, we echo here.
 664:../../../src/net/isa/uart/command-interpreter.c ****   if ( emberCommandInterpreterIsEchoOn() ) {
 665:../../../src/net/isa/uart/command-interpreter.c **** 	  if (isPrintEnabled){
 666:../../../src/net/isa/uart/command-interpreter.c **** 	  echoPrint();
 667:../../../src/net/isa/uart/command-interpreter.c **** 	  }
 668:../../../src/net/isa/uart/command-interpreter.c ****   }
 669:../../../src/net/isa/uart/command-interpreter.c **** 
 670:../../../src/net/isa/uart/command-interpreter.c ****   // Lookup the command.
 671:../../../src/net/isa/uart/command-interpreter.c ****   while (TRUE) {
 672:../../../src/net/isa/uart/command-interpreter.c ****     commandFinger = commandLookup(commandFinger, tokenNum);
 673:../../../src/net/isa/uart/command-interpreter.c ****     if (commandFinger == NULL) {
 674:../../../src/net/isa/uart/command-interpreter.c ****       commandState.error = EMBER_CMD_ERR_NO_SUCH_COMMAND;
 675:../../../src/net/isa/uart/command-interpreter.c ****       goto kickout;
 676:../../../src/net/isa/uart/command-interpreter.c ****     } else {
 677:../../../src/net/isa/uart/command-interpreter.c ****       emberCurrentCommand = commandFinger;
 678:../../../src/net/isa/uart/command-interpreter.c ****       tokenNum += 1;
 679:../../../src/net/isa/uart/command-interpreter.c ****       commandState.argOffset += 1;
 680:../../../src/net/isa/uart/command-interpreter.c **** 
 681:../../../src/net/isa/uart/command-interpreter.c ****       if ( getNestedCommand(commandFinger, &commandFinger) ) {
 682:../../../src/net/isa/uart/command-interpreter.c ****         if (tokenNum >= commandState.tokenCount) {
 683:../../../src/net/isa/uart/command-interpreter.c ****           commandState.error = EMBER_CMD_ERR_WRONG_NUMBER_OF_ARGUMENTS;
 684:../../../src/net/isa/uart/command-interpreter.c ****           goto kickout;
 685:../../../src/net/isa/uart/command-interpreter.c ****         }
 686:../../../src/net/isa/uart/command-interpreter.c ****       } else {
 687:../../../src/net/isa/uart/command-interpreter.c ****         break;
 688:../../../src/net/isa/uart/command-interpreter.c ****       }
 689:../../../src/net/isa/uart/command-interpreter.c ****     }
 690:../../../src/net/isa/uart/command-interpreter.c ****   }
 691:../../../src/net/isa/uart/command-interpreter.c **** 
 692:../../../src/net/isa/uart/command-interpreter.c ****   // If you put '?' as the first character
 693:../../../src/net/isa/uart/command-interpreter.c ****   // of the argument format string, then you effectivelly
 694:../../../src/net/isa/uart/command-interpreter.c ****   // prevent the argument validation, and the command gets executed.
 695:../../../src/net/isa/uart/command-interpreter.c ****   // At that point it is down to the command to deal with whatever
 696:../../../src/net/isa/uart/command-interpreter.c ****   // arguments it got.
 697:../../../src/net/isa/uart/command-interpreter.c ****   if ( commandFinger->argumentTypes[0] == '?' )
 698:../../../src/net/isa/uart/command-interpreter.c ****     goto kickout;
 699:../../../src/net/isa/uart/command-interpreter.c **** 
 700:../../../src/net/isa/uart/command-interpreter.c ****   // Validate the arguments.
 701:../../../src/net/isa/uart/command-interpreter.c ****   for(argTypeNum = 0, argNum = 0;
 702:../../../src/net/isa/uart/command-interpreter.c ****       tokenNum < commandState.tokenCount;
 703:../../../src/net/isa/uart/command-interpreter.c ****       tokenNum++, argNum++) {
 704:../../../src/net/isa/uart/command-interpreter.c ****     uint8_t type = commandFinger->argumentTypes[argTypeNum];
 705:../../../src/net/isa/uart/command-interpreter.c ****     uint8_t firstChar = firstByteOfArg(argNum);
 706:../../../src/net/isa/uart/command-interpreter.c ****     switch(type) {
 707:../../../src/net/isa/uart/command-interpreter.c **** 
 708:../../../src/net/isa/uart/command-interpreter.c ****     // Integers
 709:../../../src/net/isa/uart/command-interpreter.c ****     case 'u':
 710:../../../src/net/isa/uart/command-interpreter.c ****     case 'v':
 711:../../../src/net/isa/uart/command-interpreter.c ****     case 'w':
 712:../../../src/net/isa/uart/command-interpreter.c ****     case 's': {
 713:../../../src/net/isa/uart/command-interpreter.c ****       uint32_t limit = (type == 'u' ? 0xFF
 714:../../../src/net/isa/uart/command-interpreter.c ****                       : (type == 'v' ? 0xFFFF
 715:../../../src/net/isa/uart/command-interpreter.c ****                          : (type =='s' ? 0x7F : 0xFFFFFFFFUL)));
 716:../../../src/net/isa/uart/command-interpreter.c ****       if (stringToUnsignedInt(argNum, true) > limit) {
 717:../../../src/net/isa/uart/command-interpreter.c ****         commandState.error = EMBER_CMD_ERR_ARGUMENT_OUT_OF_RANGE;
 718:../../../src/net/isa/uart/command-interpreter.c ****       }
 719:../../../src/net/isa/uart/command-interpreter.c ****       break;
 720:../../../src/net/isa/uart/command-interpreter.c ****     }
 721:../../../src/net/isa/uart/command-interpreter.c **** 
 722:../../../src/net/isa/uart/command-interpreter.c ****     // String
 723:../../../src/net/isa/uart/command-interpreter.c ****     case 'b':
 724:../../../src/net/isa/uart/command-interpreter.c ****       if (firstChar != '"' && firstChar != '{') {
 725:../../../src/net/isa/uart/command-interpreter.c ****         commandState.error = EMBER_CMD_ERR_ARGUMENT_SYNTAX_ERROR;
 726:../../../src/net/isa/uart/command-interpreter.c ****       }
 727:../../../src/net/isa/uart/command-interpreter.c ****       break;
 728:../../../src/net/isa/uart/command-interpreter.c **** 
 729:../../../src/net/isa/uart/command-interpreter.c ****     case 0:
 730:../../../src/net/isa/uart/command-interpreter.c ****       commandState.error = EMBER_CMD_ERR_WRONG_NUMBER_OF_ARGUMENTS;
 731:../../../src/net/isa/uart/command-interpreter.c ****       break;
 732:../../../src/net/isa/uart/command-interpreter.c **** 
 733:../../../src/net/isa/uart/command-interpreter.c ****     default:
 734:../../../src/net/isa/uart/command-interpreter.c ****       commandState.error = EMBER_CMD_ERR_INVALID_ARGUMENT_TYPE;
 735:../../../src/net/isa/uart/command-interpreter.c ****       break;
 736:../../../src/net/isa/uart/command-interpreter.c ****     }
 737:../../../src/net/isa/uart/command-interpreter.c **** 
 738:../../../src/net/isa/uart/command-interpreter.c ****     if (commandFinger->argumentTypes[argTypeNum + 1] != '*') {
 739:../../../src/net/isa/uart/command-interpreter.c ****       argTypeNum += 1;
 740:../../../src/net/isa/uart/command-interpreter.c ****     }
 741:../../../src/net/isa/uart/command-interpreter.c **** 
 742:../../../src/net/isa/uart/command-interpreter.c ****     if (commandState.error != EMBER_CMD_SUCCESS) {
 743:../../../src/net/isa/uart/command-interpreter.c ****       goto kickout;
 744:../../../src/net/isa/uart/command-interpreter.c ****     }
 745:../../../src/net/isa/uart/command-interpreter.c ****   }
 746:../../../src/net/isa/uart/command-interpreter.c **** 
 747:../../../src/net/isa/uart/command-interpreter.c ****   if (! (commandFinger->argumentTypes[argTypeNum] == 0
 748:../../../src/net/isa/uart/command-interpreter.c ****          || commandFinger->argumentTypes[argTypeNum + 1] == '*')) {
 749:../../../src/net/isa/uart/command-interpreter.c ****     commandState.error = EMBER_CMD_ERR_WRONG_NUMBER_OF_ARGUMENTS;
 750:../../../src/net/isa/uart/command-interpreter.c ****   }
 751:../../../src/net/isa/uart/command-interpreter.c **** 
 752:../../../src/net/isa/uart/command-interpreter.c ****  kickout:
 753:../../../src/net/isa/uart/command-interpreter.c **** 
 754:../../../src/net/isa/uart/command-interpreter.c ****   if (commandState.error == EMBER_CMD_SUCCESS) {
 755:../../../src/net/isa/uart/command-interpreter.c ****     (commandFinger->action)();
 756:../../../src/net/isa/uart/command-interpreter.c ****   } else {
 757:../../../src/net/isa/uart/command-interpreter.c **** 	  if (isPrintEnabled){
 758:../../../src/net/isa/uart/command-interpreter.c ****     emberCommandErrorHandler(commandState.error);
 759:../../../src/net/isa/uart/command-interpreter.c **** 	  }
 760:../../../src/net/isa/uart/command-interpreter.c **** 	  }
 761:../../../src/net/isa/uart/command-interpreter.c **** 
 762:../../../src/net/isa/uart/command-interpreter.c ****  kickout2:
 763:../../../src/net/isa/uart/command-interpreter.c **** 
 764:../../../src/net/isa/uart/command-interpreter.c ****   emberCommandReaderInit();
 765:../../../src/net/isa/uart/command-interpreter.c **** }
 766:../../../src/net/isa/uart/command-interpreter.c **** 
 767:../../../src/net/isa/uart/command-interpreter.c **** 
 768:../../../src/net/isa/uart/command-interpreter.c **** //----------------------------------------------------------------
 769:../../../src/net/isa/uart/command-interpreter.c **** // Retrieving arguments
 770:../../../src/net/isa/uart/command-interpreter.c **** 
 771:../../../src/net/isa/uart/command-interpreter.c **** uint8_t emberCommandArgumentCount(void)
 772:../../../src/net/isa/uart/command-interpreter.c **** {
 247               	.LM16:
 248               	.LFBB4:
 249               	/* prologue: function */
 250               	/* frame size = 0 */
 252               	.LM17:
 253 0036 8091 0000 		lds r24,commandState+45
 254 003a 9091 0000 		lds r25,commandState+49
 773:../../../src/net/isa/uart/command-interpreter.c ****   return (commandState.tokenCount - commandState.argOffset);
 774:../../../src/net/isa/uart/command-interpreter.c **** }
 256               	.LM18:
 257 003e 891B      		sub r24,r25
 258               	/* epilogue start */
 259 0040 0895      		ret
 261               	.Lscope4:
 263               		.stabd	78,0,0
 268               	stringToUnsignedInt:
 269               		.stabd	46,0,0
 775:../../../src/net/isa/uart/command-interpreter.c **** 
 776:../../../src/net/isa/uart/command-interpreter.c **** static uint32_t stringToUnsignedInt(uint8_t argNum, bool swallowLeadingSign)
 777:../../../src/net/isa/uart/command-interpreter.c **** {
 271               	.LM19:
 272               	.LFBB5:
 273 0042 DF92      		push r13
 274 0044 EF92      		push r14
 275 0046 FF92      		push r15
 276 0048 0F93      		push r16
 277 004a 1F93      		push r17
 278 004c CF93      		push r28
 279 004e DF93      		push r29
 280               	/* prologue: function */
 281               	/* frame size = 0 */
 282 0050 E62E      		mov r14,r22
 778:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t tokenNum = argNum + commandState.argOffset;
 779:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t *string = commandState.buffer + commandState.tokenIndices[tokenNum];
 284               	.LM20:
 285 0052 9091 0000 		lds r25,commandState+49
 286 0056 980F      		add r25,r24
 287 0058 E92F      		mov r30,r25
 288 005a F0E0      		ldi r31,lo8(0)
 289 005c E050      		subi r30,lo8(-(commandState))
 290 005e F040      		sbci r31,hi8(-(commandState))
 291 0060 81A1      		ldd r24,Z+33
 292               	.LBB68:
 293               	.LBB69:
 375:../../../src/net/isa/uart/command-interpreter.c ****   return (commandState.tokenIndices[num + 1]
 295               	.LM21:
 296 0062 F2A0      		ldd r15,Z+34
 297 0064 F81A      		sub r15,r24
 298 0066 C82F      		mov r28,r24
 299 0068 D0E0      		ldi r29,lo8(0)
 300 006a C050      		subi r28,lo8(-(commandState+1))
 301 006c D040      		sbci r29,hi8(-(commandState+1))
 302 006e 10E0      		ldi r17,lo8(0)
 303 0070 0AE0      		ldi r16,lo8(10)
 304 0072 20E0      		ldi r18,lo8(0)
 305 0074 30E0      		ldi r19,hi8(0)
 306 0076 40E0      		ldi r20,hlo8(0)
 307 0078 50E0      		ldi r21,hhi8(0)
 308               	.LBE69:
 309               	.LBE68:
 780:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t length = tokenLength(tokenNum);
 781:../../../src/net/isa/uart/command-interpreter.c ****   uint32_t result = 0;
 782:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t base = 10;
 783:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t i;
 784:../../../src/net/isa/uart/command-interpreter.c ****   for (i = 0; i < length; i++) {
 311               	.LM22:
 312 007a 00C0      		rjmp .L10
 313               	.L22:
 314               	.LBB70:
 785:../../../src/net/isa/uart/command-interpreter.c ****     uint8_t next = string[i];
 316               	.LM23:
 317 007c 8881      		ld r24,Y
 786:../../../src/net/isa/uart/command-interpreter.c ****     if (swallowLeadingSign && i == 0 && next == '-') {
 319               	.LM24:
 320 007e EE20      		tst r14
 321 0080 01F0      		breq .L11
 322 0082 1123      		tst r17
 323 0084 01F4      		brne .L11
 324 0086 8D32      		cpi r24,lo8(45)
 325 0088 01F0      		breq .L12
 326               	.L11:
 787:../../../src/net/isa/uart/command-interpreter.c ****       // do nothing
 788:../../../src/net/isa/uart/command-interpreter.c ****     } else if ((next == 'x' || next == 'X')
 328               	.LM25:
 329 008a 8837      		cpi r24,lo8(120)
 330 008c 01F0      		breq .L13
 331 008e 8835      		cpi r24,lo8(88)
 332 0090 01F4      		brne .L14
 333               	.L13:
 334 0092 2115      		cp r18,__zero_reg__
 335 0094 3105      		cpc r19,__zero_reg__
 336 0096 4105      		cpc r20,__zero_reg__
 337 0098 5105      		cpc r21,__zero_reg__
 338 009a 01F4      		brne .L14
 339 009c 912F      		mov r25,r17
 340 009e 9150      		subi r25,lo8(-(-1))
 341 00a0 9230      		cpi r25,lo8(2)
 342 00a2 00F0      		brlo .L15
 343               	.L14:
 344               	.LBB71:
 345               	.LBB72:
 346               	.LBB73:
 367:../../../src/net/isa/uart/command-interpreter.c ****   return ch - (ch >= 'a' ? 'a' - 10
 348               	.LM26:
 349 00a4 8136      		cpi r24,lo8(97)
 350 00a6 00F0      		brlo .L16
 351 00a8 97E5      		ldi r25,lo8(87)
 352 00aa 00C0      		rjmp .L17
 353               	.L16:
 354 00ac 8134      		cpi r24,lo8(65)
 355 00ae 00F0      		brlo .L18
 356 00b0 97E3      		ldi r25,lo8(55)
 357 00b2 00C0      		rjmp .L17
 358               	.L18:
 359 00b4 8A33      		cpi r24,lo8(58)
 360 00b6 00F0      		brlo .L19
 361 00b8 90E0      		ldi r25,lo8(0)
 362 00ba 00C0      		rjmp .L17
 363               	.L19:
 364 00bc 90E3      		ldi r25,lo8(48)
 365               	.L17:
 366 00be D82E      		mov r13,r24
 367 00c0 D91A      		sub r13,r25
 368               	.LBE73:
 369               	.LBE72:
 789:../../../src/net/isa/uart/command-interpreter.c ****                && result == 0
 790:../../../src/net/isa/uart/command-interpreter.c ****                && (i == 1 || i == 2)) {
 791:../../../src/net/isa/uart/command-interpreter.c ****       base = 16;
 792:../../../src/net/isa/uart/command-interpreter.c ****     } else {
 793:../../../src/net/isa/uart/command-interpreter.c ****       uint8_t value = hexToInt(next);
 794:../../../src/net/isa/uart/command-interpreter.c ****       if (value < base) {
 371               	.LM27:
 372 00c2 D016      		cp r13,r16
 373 00c4 00F4      		brsh .L20
 795:../../../src/net/isa/uart/command-interpreter.c ****         result = result * base + value;
 375               	.LM28:
 376 00c6 602F      		mov r22,r16
 377 00c8 70E0      		ldi r23,lo8(0)
 378 00ca 80E0      		ldi r24,lo8(0)
 379 00cc 90E0      		ldi r25,hi8(0)
 380 00ce 0E94 0000 		call __mulsi3
 381 00d2 9B01      		movw r18,r22
 382 00d4 AC01      		movw r20,r24
 383 00d6 2D0D      		add r18,r13
 384 00d8 311D      		adc r19,__zero_reg__
 385 00da 411D      		adc r20,__zero_reg__
 386 00dc 511D      		adc r21,__zero_reg__
 387 00de 00C0      		rjmp .L12
 388               	.L20:
 796:../../../src/net/isa/uart/command-interpreter.c ****       } else {
 797:../../../src/net/isa/uart/command-interpreter.c ****         commandState.error = EMBER_CMD_ERR_ARGUMENT_SYNTAX_ERROR;
 390               	.LM29:
 391 00e0 85E0      		ldi r24,lo8(5)
 392 00e2 8093 0000 		sts commandState+47,r24
 393 00e6 20E0      		ldi r18,lo8(0)
 394 00e8 30E0      		ldi r19,hi8(0)
 395 00ea 40E0      		ldi r20,hlo8(0)
 396 00ec 50E0      		ldi r21,hhi8(0)
 798:../../../src/net/isa/uart/command-interpreter.c ****         return 0;
 398               	.LM30:
 399 00ee 00C0      		rjmp .L21
 400               	.L15:
 401 00f0 00E1      		ldi r16,lo8(16)
 402               	.L12:
 403               	.LBE71:
 404               	.LBE70:
 784:../../../src/net/isa/uart/command-interpreter.c ****   for (i = 0; i < length; i++) {
 406               	.LM31:
 407 00f2 1F5F      		subi r17,lo8(-(1))
 408 00f4 2196      		adiw r28,1
 409               	.L10:
 410 00f6 1F15      		cp r17,r15
 411 00f8 00F0      		brlo .L22
 412               	.L21:
 799:../../../src/net/isa/uart/command-interpreter.c ****       }
 800:../../../src/net/isa/uart/command-interpreter.c ****     }
 801:../../../src/net/isa/uart/command-interpreter.c ****   }
 802:../../../src/net/isa/uart/command-interpreter.c ****   return result;
 803:../../../src/net/isa/uart/command-interpreter.c **** }
 414               	.LM32:
 415 00fa B901      		movw r22,r18
 416 00fc CA01      		movw r24,r20
 417               	/* epilogue start */
 418 00fe DF91      		pop r29
 419 0100 CF91      		pop r28
 420 0102 1F91      		pop r17
 421 0104 0F91      		pop r16
 422 0106 FF90      		pop r15
 423 0108 EF90      		pop r14
 424 010a DF90      		pop r13
 425 010c 0895      		ret
 439               	.Lscope5:
 441               		.stabd	78,0,0
 444               	.global	emberUnsignedCommandArgument
 446               	emberUnsignedCommandArgument:
 447               		.stabd	46,0,0
 804:../../../src/net/isa/uart/command-interpreter.c **** 
 805:../../../src/net/isa/uart/command-interpreter.c **** uint32_t emberUnsignedCommandArgument(uint8_t argNum)
 806:../../../src/net/isa/uart/command-interpreter.c **** {
 449               	.LM33:
 450               	.LFBB6:
 451               	/* prologue: function */
 452               	/* frame size = 0 */
 807:../../../src/net/isa/uart/command-interpreter.c ****   return stringToUnsignedInt(argNum, false);
 454               	.LM34:
 455 010e 60E0      		ldi r22,lo8(0)
 456 0110 0E94 0000 		call stringToUnsignedInt
 457               	/* epilogue start */
 808:../../../src/net/isa/uart/command-interpreter.c **** }
 459               	.LM35:
 460 0114 0895      		ret
 462               	.Lscope6:
 464               		.stabd	78,0,0
 466               	.global	setEcho
 468               	setEcho:
 469               		.stabd	46,0,0
 281:../../../src/net/isa/uart/command-interpreter.c **** void setEcho(void){
 471               	.LM36:
 472               	.LFBB7:
 473               	/* prologue: function */
 474               	/* frame size = 0 */
 282:../../../src/net/isa/uart/command-interpreter.c **** 	if (emberUnsignedCommandArgument(0) == 0)  emberCommandInterpreterEchoOff();
 476               	.LM37:
 477 0116 80E0      		ldi r24,lo8(0)
 478 0118 0E94 0000 		call emberUnsignedCommandArgument
 479 011c 9B01      		movw r18,r22
 480 011e AC01      		movw r20,r24
 481 0120 8091 0000 		lds r24,emberCommandInterpreter2Configuration
 482 0124 2115      		cp r18,__zero_reg__
 483 0126 3105      		cpc r19,__zero_reg__
 484 0128 4105      		cpc r20,__zero_reg__
 485 012a 5105      		cpc r21,__zero_reg__
 486 012c 01F4      		brne .L28
 487 012e 8E7F      		andi r24,lo8(-2)
 488 0130 00C0      		rjmp .L31
 489               	.L28:
 283:../../../src/net/isa/uart/command-interpreter.c **** 	else emberCommandInterpreterEchoOn();
 491               	.LM38:
 492 0132 8160      		ori r24,lo8(1)
 493               	.L31:
 494 0134 8093 0000 		sts emberCommandInterpreter2Configuration,r24
 495 0138 0895      		ret
 497               	.Lscope7:
 499               		.stabd	78,0,0
 502               	.global	emberSignedCommandArgument
 504               	emberSignedCommandArgument:
 505               		.stabd	46,0,0
 809:../../../src/net/isa/uart/command-interpreter.c **** 
 810:../../../src/net/isa/uart/command-interpreter.c **** int16_t emberSignedCommandArgument(uint8_t argNum)
 811:../../../src/net/isa/uart/command-interpreter.c **** {
 507               	.LM39:
 508               	.LFBB8:
 509 013a 1F93      		push r17
 510               	/* prologue: function */
 511               	/* frame size = 0 */
 812:../../../src/net/isa/uart/command-interpreter.c ****   bool negative = (firstByteOfArg(argNum) == '-');
 513               	.LM40:
 514 013c 10E0      		ldi r17,lo8(0)
 515 013e E091 0000 		lds r30,commandState+49
 516 0142 E80F      		add r30,r24
 517 0144 F0E0      		ldi r31,lo8(0)
 518 0146 E050      		subi r30,lo8(-(commandState))
 519 0148 F040      		sbci r31,hi8(-(commandState))
 520 014a E1A1      		ldd r30,Z+33
 521 014c F0E0      		ldi r31,lo8(0)
 522 014e E050      		subi r30,lo8(-(commandState))
 523 0150 F040      		sbci r31,hi8(-(commandState))
 524 0152 9181      		ldd r25,Z+1
 525 0154 9D32      		cpi r25,lo8(45)
 526 0156 01F4      		brne .L33
 527 0158 11E0      		ldi r17,lo8(1)
 528               	.L33:
 813:../../../src/net/isa/uart/command-interpreter.c ****   int16_t result = (int16_t) stringToUnsignedInt(argNum, negative);
 530               	.LM41:
 531 015a 612F      		mov r22,r17
 532 015c 0E94 0000 		call stringToUnsignedInt
 814:../../../src/net/isa/uart/command-interpreter.c ****   return (negative ? -result : result);
 534               	.LM42:
 535 0160 1123      		tst r17
 536 0162 01F0      		breq .L34
 537 0164 7095      		com r23
 538 0166 6195      		neg r22
 539 0168 7F4F      		sbci r23,lo8(-1)
 540               	.L34:
 815:../../../src/net/isa/uart/command-interpreter.c **** }
 542               	.LM43:
 543 016a CB01      		movw r24,r22
 544               	/* epilogue start */
 545 016c 1F91      		pop r17
 546 016e 0895      		ret
 552               	.Lscope8:
 554               		.stabd	78,0,0
 558               	.global	emberStringCommandArgument
 560               	emberStringCommandArgument:
 561               		.stabd	46,0,0
 816:../../../src/net/isa/uart/command-interpreter.c **** 
 817:../../../src/net/isa/uart/command-interpreter.c **** uint8_t *emberStringCommandArgument(int8_t argNum, uint8_t *length)
 818:../../../src/net/isa/uart/command-interpreter.c **** {
 563               	.LM44:
 564               	.LFBB9:
 565               	/* prologue: function */
 566               	/* frame size = 0 */
 819:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t tokenNum = argNum + commandState.argOffset;
 568               	.LM45:
 569 0170 2091 0000 		lds r18,commandState+49
 570 0174 280F      		add r18,r24
 820:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t leadingQuote = (argNum < 0 ? 0 : 1);
 572               	.LM46:
 573 0176 8095      		com r24
 574 0178 881F      		rol r24
 575 017a 8827      		clr r24
 576 017c 881F      		rol r24
 821:../../../src/net/isa/uart/command-interpreter.c ****   if (length != NULL) {
 578               	.LM47:
 579 017e 6115      		cp r22,__zero_reg__
 580 0180 7105      		cpc r23,__zero_reg__
 581 0182 01F0      		breq .L38
 582               	.LBB74:
 583               	.LBB75:
 375:../../../src/net/isa/uart/command-interpreter.c ****   return (commandState.tokenIndices[num + 1]
 585               	.LM48:
 586 0184 E22F      		mov r30,r18
 587 0186 F0E0      		ldi r31,lo8(0)
 588               	.LBE75:
 589               	.LBE74:
 822:../../../src/net/isa/uart/command-interpreter.c ****     *length = tokenLength(tokenNum) - leadingQuote;
 591               	.LM49:
 592 0188 E050      		subi r30,lo8(-(commandState))
 593 018a F040      		sbci r31,hi8(-(commandState))
 594 018c 92A1      		ldd r25,Z+34
 595 018e 31A1      		ldd r19,Z+33
 596 0190 931B      		sub r25,r19
 597 0192 981B      		sub r25,r24
 598 0194 FB01      		movw r30,r22
 599 0196 9083      		st Z,r25
 600               	.L38:
 601 0198 E22F      		mov r30,r18
 602 019a FF27      		clr r31
 603 019c E7FD      		sbrc r30,7
 604 019e F095      		com r31
 605 01a0 E050      		subi r30,lo8(-(commandState))
 606 01a2 F040      		sbci r31,hi8(-(commandState))
 607 01a4 21A1      		ldd r18,Z+33
 608 01a6 30E0      		ldi r19,lo8(0)
 609 01a8 2050      		subi r18,lo8(-(commandState+1))
 610 01aa 3040      		sbci r19,hi8(-(commandState+1))
 611 01ac 280F      		add r18,r24
 612 01ae 311D      		adc r19,__zero_reg__
 823:../../../src/net/isa/uart/command-interpreter.c ****   }
 824:../../../src/net/isa/uart/command-interpreter.c ****   return tokenPointer(tokenNum) + leadingQuote;
 825:../../../src/net/isa/uart/command-interpreter.c **** }
 614               	.LM50:
 615 01b0 C901      		movw r24,r18
 616               	/* epilogue start */
 617 01b2 0895      		ret
 623               	.Lscope9:
 625               		.stabd	78,0,0
 626               		.data
 627               	.LC0:
 628 0000 2573 00   		.string	"%s"
 629               	.LC1:
 630 0003 203C 7569 		.string	" <uint8_t>"
 630      6E74 385F 
 630      743E 00
 631               	.LC2:
 632 000e 203C 7569 		.string	" <uint16_t>"
 632      6E74 3136 
 632      5F74 3E00 
 633               	.LC3:
 634 001a 203C 7569 		.string	" <uint32_t>"
 634      6E74 3332 
 634      5F74 3E00 
 635               	.LC4:
 636 0026 203C 696E 		.string	" <int8_t>"
 636      7438 5F74 
 636      3E00 
 637               	.LC5:
 638 0030 203C 7374 		.string	" <string>"
 638      7269 6E67 
 638      3E00 
 639               	.LC6:
 640 003a 202E 2E2E 		.string	" ..."
 640      00
 641               	.LC7:
 642 003f 203F 00   		.string	" ?"
 643               	.LC8:
 644 0042 202A 00   		.string	" *"
 645               	.LC9:
 646 0045 202D 2025 		.string	" - %s"
 646      7300 
 647               	.LC10:
 648 004b 0D00      		.string	"\r"
 649               		.text
 653               	printCommandUsage:
 654               		.stabd	46,0,0
 826:../../../src/net/isa/uart/command-interpreter.c **** 
 827:../../../src/net/isa/uart/command-interpreter.c **** uint8_t emberCopyStringArgument(int8_t argNum,
 828:../../../src/net/isa/uart/command-interpreter.c ****                               uint8_t *destination,
 829:../../../src/net/isa/uart/command-interpreter.c ****                               uint8_t maxLength,
 830:../../../src/net/isa/uart/command-interpreter.c ****                               bool leftPad)
 831:../../../src/net/isa/uart/command-interpreter.c **** {
 832:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t padLength;
 833:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t argLength;
 834:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t *contents = emberStringCommandArgument(argNum, &argLength);
 835:../../../src/net/isa/uart/command-interpreter.c ****   if (argLength > maxLength) {
 836:../../../src/net/isa/uart/command-interpreter.c ****     argLength = maxLength;
 837:../../../src/net/isa/uart/command-interpreter.c ****   }
 838:../../../src/net/isa/uart/command-interpreter.c ****   padLength = leftPad ? maxLength - argLength : 0;
 839:../../../src/net/isa/uart/command-interpreter.c ****   memset(destination, 0, padLength);
 840:../../../src/net/isa/uart/command-interpreter.c ****   memcpy(destination + padLength, contents, argLength);
 841:../../../src/net/isa/uart/command-interpreter.c ****   return argLength;
 842:../../../src/net/isa/uart/command-interpreter.c **** }
 843:../../../src/net/isa/uart/command-interpreter.c **** 
 844:../../../src/net/isa/uart/command-interpreter.c **** PGM_P emberCommandErrorNames[] =
 845:../../../src/net/isa/uart/command-interpreter.c ****   {
 846:../../../src/net/isa/uart/command-interpreter.c ****     "",
 847:../../../src/net/isa/uart/command-interpreter.c ****     "Serial port error",
 848:../../../src/net/isa/uart/command-interpreter.c ****     "No such command",
 849:../../../src/net/isa/uart/command-interpreter.c ****     "Wrong number of args",
 850:../../../src/net/isa/uart/command-interpreter.c ****     "Arg out of range",
 851:../../../src/net/isa/uart/command-interpreter.c ****     "Arg syntax error",
 852:../../../src/net/isa/uart/command-interpreter.c ****     "Too long",
 853:../../../src/net/isa/uart/command-interpreter.c ****     "Bad arg type"
 854:../../../src/net/isa/uart/command-interpreter.c ****   };
 855:../../../src/net/isa/uart/command-interpreter.c **** 
 856:../../../src/net/isa/uart/command-interpreter.c **** 
 857:../../../src/net/isa/uart/command-interpreter.c **** static void printCommandUsage(EmberCommandEntry *entry)
 858:../../../src/net/isa/uart/command-interpreter.c **** {
 656               	.LM51:
 657               	.LFBB10:
 658 01b4 0F93      		push r16
 659 01b6 1F93      		push r17
 660 01b8 CF93      		push r28
 661 01ba DF93      		push r29
 662               	/* prologue: function */
 663               	/* frame size = 0 */
 664 01bc EC01      		movw r28,r24
 859:../../../src/net/isa/uart/command-interpreter.c ****   PGM_P arg = entry->argumentTypes;
 666               	.LM52:
 667 01be 0C81      		ldd r16,Y+4
 668 01c0 1D81      		ldd r17,Y+5
 860:../../../src/net/isa/uart/command-interpreter.c ****   printf("%s", entry->name);
 670               	.LM53:
 671 01c2 00D0      		rcall .
 672 01c4 00D0      		rcall .
 673 01c6 80E0      		ldi r24,lo8(.LC0)
 674 01c8 90E0      		ldi r25,hi8(.LC0)
 675 01ca EDB7      		in r30,__SP_L__
 676 01cc FEB7      		in r31,__SP_H__
 677 01ce 9283      		std Z+2,r25
 678 01d0 8183      		std Z+1,r24
 679 01d2 8881      		ld r24,Y
 680 01d4 9981      		ldd r25,Y+1
 681 01d6 9483      		std Z+4,r25
 682 01d8 8383      		std Z+3,r24
 683 01da 0E94 0000 		call printf
 861:../../../src/net/isa/uart/command-interpreter.c **** 
 862:../../../src/net/isa/uart/command-interpreter.c ****   if ( entry -> action == NULL ); //printf("...");
 685               	.LM54:
 686 01de 0F90      		pop __tmp_reg__
 687 01e0 0F90      		pop __tmp_reg__
 688 01e2 0F90      		pop __tmp_reg__
 689 01e4 0F90      		pop __tmp_reg__
 690 01e6 8A81      		ldd r24,Y+2
 691 01e8 9B81      		ldd r25,Y+3
 692 01ea 0097      		sbiw r24,0
 693 01ec 01F4      		brne .L55
 694 01ee 00C0      		rjmp .L41
 695               	.L52:
 696               	.LBB76:
 863:../../../src/net/isa/uart/command-interpreter.c ****   else
 864:../../../src/net/isa/uart/command-interpreter.c ****     while (*arg) {
 865:../../../src/net/isa/uart/command-interpreter.c ****       uint8_t c = *arg;
 866:../../../src/net/isa/uart/command-interpreter.c **** 
 867:../../../src/net/isa/uart/command-interpreter.c ****       printf(c == 'u' ? " <uint8_t>"
 698               	.LM55:
 699 01f0 8537      		cpi r24,lo8(117)
 700 01f2 01F4      		brne .L43
 701 01f4 80E0      		ldi r24,lo8(.LC1)
 702 01f6 90E0      		ldi r25,hi8(.LC1)
 703 01f8 00C0      		rjmp .L44
 704               	.L43:
 705 01fa 8637      		cpi r24,lo8(118)
 706 01fc 01F4      		brne .L45
 707 01fe 80E0      		ldi r24,lo8(.LC2)
 708 0200 90E0      		ldi r25,hi8(.LC2)
 709 0202 00C0      		rjmp .L44
 710               	.L45:
 711 0204 8737      		cpi r24,lo8(119)
 712 0206 01F4      		brne .L46
 713 0208 80E0      		ldi r24,lo8(.LC3)
 714 020a 90E0      		ldi r25,hi8(.LC3)
 715 020c 00C0      		rjmp .L44
 716               	.L46:
 717 020e 8337      		cpi r24,lo8(115)
 718 0210 01F4      		brne .L47
 719 0212 80E0      		ldi r24,lo8(.LC4)
 720 0214 90E0      		ldi r25,hi8(.LC4)
 721 0216 00C0      		rjmp .L44
 722               	.L47:
 723 0218 8236      		cpi r24,lo8(98)
 724 021a 01F4      		brne .L48
 725 021c 80E0      		ldi r24,lo8(.LC5)
 726 021e 90E0      		ldi r25,hi8(.LC5)
 727 0220 00C0      		rjmp .L44
 728               	.L48:
 729 0222 8E36      		cpi r24,lo8(110)
 730 0224 01F4      		brne .L49
 731 0226 80E0      		ldi r24,lo8(.LC6)
 732 0228 90E0      		ldi r25,hi8(.LC6)
 733 022a 00C0      		rjmp .L44
 734               	.L49:
 735 022c 8A32      		cpi r24,lo8(42)
 736 022e 01F0      		breq .L50
 737 0230 80E0      		ldi r24,lo8(.LC7)
 738 0232 90E0      		ldi r25,hi8(.LC7)
 739 0234 00C0      		rjmp .L44
 740               	.L50:
 741 0236 80E0      		ldi r24,lo8(.LC8)
 742 0238 90E0      		ldi r25,hi8(.LC8)
 743               	.L44:
 744 023a 00D0      		rcall .
 745 023c EDB7      		in r30,__SP_L__
 746 023e FEB7      		in r31,__SP_H__
 747 0240 9283      		std Z+2,r25
 748 0242 8183      		std Z+1,r24
 749 0244 0E94 0000 		call printf
 868:../../../src/net/isa/uart/command-interpreter.c ****                          : c == 'v' ? " <uint16_t>"
 869:../../../src/net/isa/uart/command-interpreter.c ****                          : c == 'w' ? " <uint32_t>"
 870:../../../src/net/isa/uart/command-interpreter.c ****                          : c == 's' ? " <int8_t>"
 871:../../../src/net/isa/uart/command-interpreter.c ****                          : c == 'b' ? " <string>"
 872:../../../src/net/isa/uart/command-interpreter.c ****                          : c == 'n' ? " ..."
 873:../../../src/net/isa/uart/command-interpreter.c ****                          : c == '*' ? " *"
 874:../../../src/net/isa/uart/command-interpreter.c ****                          : " ?");
 875:../../../src/net/isa/uart/command-interpreter.c **** 
 876:../../../src/net/isa/uart/command-interpreter.c **** 
 877:../../../src/net/isa/uart/command-interpreter.c ****       arg += 1;
 751               	.LM56:
 752 0248 0F5F      		subi r16,lo8(-(1))
 753 024a 1F4F      		sbci r17,hi8(-(1))
 754 024c 0F90      		pop __tmp_reg__
 755 024e 0F90      		pop __tmp_reg__
 756               	.L55:
 757               	.LBE76:
 864:../../../src/net/isa/uart/command-interpreter.c ****     while (*arg) {
 759               	.LM57:
 760 0250 F801      		movw r30,r16
 761 0252 8081      		ld r24,Z
 762 0254 8823      		tst r24
 763 0256 01F4      		brne .L52
 764               	.L41:
 878:../../../src/net/isa/uart/command-interpreter.c ****     }
 879:../../../src/net/isa/uart/command-interpreter.c **** 
 880:../../../src/net/isa/uart/command-interpreter.c ****   if(entry->description) {
 766               	.LM58:
 767 0258 8E81      		ldd r24,Y+6
 768 025a 9F81      		ldd r25,Y+7
 769 025c 0097      		sbiw r24,0
 770 025e 01F0      		breq .L53
 881:../../../src/net/isa/uart/command-interpreter.c ****     printf(" - %s", entry->description);
 772               	.LM59:
 773 0260 00D0      		rcall .
 774 0262 00D0      		rcall .
 775 0264 20E0      		ldi r18,lo8(.LC9)
 776 0266 30E0      		ldi r19,hi8(.LC9)
 777 0268 EDB7      		in r30,__SP_L__
 778 026a FEB7      		in r31,__SP_H__
 779 026c 3283      		std Z+2,r19
 780 026e 2183      		std Z+1,r18
 781 0270 9483      		std Z+4,r25
 782 0272 8383      		std Z+3,r24
 783 0274 0E94 0000 		call printf
 784 0278 0F90      		pop __tmp_reg__
 785 027a 0F90      		pop __tmp_reg__
 786 027c 0F90      		pop __tmp_reg__
 787 027e 0F90      		pop __tmp_reg__
 788               	.L53:
 882:../../../src/net/isa/uart/command-interpreter.c ****   }
 883:../../../src/net/isa/uart/command-interpreter.c **** 
 884:../../../src/net/isa/uart/command-interpreter.c ****   printf( "\r\n");
 790               	.LM60:
 791 0280 80E0      		ldi r24,lo8(.LC10)
 792 0282 90E0      		ldi r25,hi8(.LC10)
 793 0284 0E94 0000 		call puts
 794               	/* epilogue start */
 885:../../../src/net/isa/uart/command-interpreter.c ****  // emberSerialWaitSend(APP_SERIAL);
 886:../../../src/net/isa/uart/command-interpreter.c **** }
 796               	.LM61:
 797 0288 DF91      		pop r29
 798 028a CF91      		pop r28
 799 028c 1F91      		pop r17
 800 028e 0F91      		pop r16
 801 0290 0895      		ret
 806               	.Lscope10:
 808               		.stabd	78,0,0
 809               		.data
 810               	.LC11:
 811 004d 2020 00   		.string	"  "
 812               		.text
 815               	.global	emberPrintCommandUsage
 817               	emberPrintCommandUsage:
 818               		.stabd	46,0,0
 887:../../../src/net/isa/uart/command-interpreter.c **** 
 888:../../../src/net/isa/uart/command-interpreter.c **** void emberPrintCommandUsage(EmberCommandEntry *entry)
 889:../../../src/net/isa/uart/command-interpreter.c **** {
 820               	.LM62:
 821               	.LFBB11:
 822 0292 0F93      		push r16
 823 0294 1F93      		push r17
 824 0296 CF93      		push r28
 825 0298 DF93      		push r29
 826               	/* prologue: function */
 827               	/* frame size = 0 */
 828 029a EC01      		movw r28,r24
 890:../../../src/net/isa/uart/command-interpreter.c ****   EmberCommandEntry *commandFinger;
 891:../../../src/net/isa/uart/command-interpreter.c ****   printCommandUsage(entry);
 830               	.LM63:
 831 029c 0E94 0000 		call printCommandUsage
 832               	.LBB77:
 833               	.LBB78:
 561:../../../src/net/isa/uart/command-interpreter.c ****   if ( entry -> action == NULL ) {
 835               	.LM64:
 836 02a0 8A81      		ldd r24,Y+2
 837 02a2 9B81      		ldd r25,Y+3
 838 02a4 0C80      		ldd __tmp_reg__,Y+4
 839 02a6 DD81      		ldd r29,Y+5
 840 02a8 C02D      		mov r28,__tmp_reg__
 841 02aa 0097      		sbiw r24,0
 842 02ac 01F0      		breq .L58
 564:../../../src/net/isa/uart/command-interpreter.c ****   } else if ( entry -> argumentTypes[0] == 'n' ) {
 844               	.LM65:
 845 02ae 2881      		ld r18,Y
 846 02b0 2E36      		cpi r18,lo8(110)
 847 02b2 01F4      		brne .L61
 565:../../../src/net/isa/uart/command-interpreter.c ****     *nestedCommand = (EmberCommandEntry*)(void*)entry->action;
 849               	.LM66:
 850 02b4 EC01      		movw r28,r24
 851 02b6 00C0      		rjmp .L58
 852               	.L60:
 853               	.LBE78:
 854               	.LBE77:
 892:../../../src/net/isa/uart/command-interpreter.c **** 
 893:../../../src/net/isa/uart/command-interpreter.c ****   if ( getNestedCommand(entry, &commandFinger) ) {
 894:../../../src/net/isa/uart/command-interpreter.c ****     for (; commandFinger->name != NULL; commandFinger++) {
 895:../../../src/net/isa/uart/command-interpreter.c ****       printf("  ");
 856               	.LM67:
 857 02b8 00D0      		rcall .
 858 02ba EDB7      		in r30,__SP_L__
 859 02bc FEB7      		in r31,__SP_H__
 860 02be 1283      		std Z+2,r17
 861 02c0 0183      		std Z+1,r16
 862 02c2 0E94 0000 		call printf
 896:../../../src/net/isa/uart/command-interpreter.c ****       printCommandUsage(commandFinger);
 864               	.LM68:
 865 02c6 0F90      		pop __tmp_reg__
 866 02c8 0F90      		pop __tmp_reg__
 867 02ca CE01      		movw r24,r28
 868 02cc 0E94 0000 		call printCommandUsage
 894:../../../src/net/isa/uart/command-interpreter.c ****     for (; commandFinger->name != NULL; commandFinger++) {
 870               	.LM69:
 871 02d0 2896      		adiw r28,8
 872 02d2 00C0      		rjmp .L62
 873               	.L58:
 895:../../../src/net/isa/uart/command-interpreter.c ****       printf("  ");
 875               	.LM70:
 876 02d4 00E0      		ldi r16,lo8(.LC11)
 877 02d6 10E0      		ldi r17,hi8(.LC11)
 878               	.L62:
 894:../../../src/net/isa/uart/command-interpreter.c ****     for (; commandFinger->name != NULL; commandFinger++) {
 880               	.LM71:
 881 02d8 8881      		ld r24,Y
 882 02da 9981      		ldd r25,Y+1
 883 02dc 0097      		sbiw r24,0
 884 02de 01F4      		brne .L60
 885               	.L61:
 886               	/* epilogue start */
 897:../../../src/net/isa/uart/command-interpreter.c ****     }
 898:../../../src/net/isa/uart/command-interpreter.c ****   }
 899:../../../src/net/isa/uart/command-interpreter.c **** }
 888               	.LM72:
 889 02e0 DF91      		pop r29
 890 02e2 CF91      		pop r28
 891 02e4 1F91      		pop r17
 892 02e6 0F91      		pop r16
 893 02e8 0895      		ret
 898               	.Lscope11:
 900               		.stabd	78,0,0
 901               		.data
 902               	.LC12:
 903 0050 5573 6167 		.string	"Usage:\r\n<int>: 123 or 0x1ABC\r\n<string>: \"foo\" or {0A 1B 2C}\r\n\r"
 903      653A 0D0A 
 903      3C69 6E74 
 903      3E3A 2031 
 903      3233 206F 
 904               		.text
 906               	.global	emberPrintCommandUsageNotes
 908               	emberPrintCommandUsageNotes:
 909               		.stabd	46,0,0
 900:../../../src/net/isa/uart/command-interpreter.c **** 
 901:../../../src/net/isa/uart/command-interpreter.c **** void emberPrintCommandUsageNotes(void)
 902:../../../src/net/isa/uart/command-interpreter.c **** {
 911               	.LM73:
 912               	.LFBB12:
 913               	/* prologue: function */
 914               	/* frame size = 0 */
 903:../../../src/net/isa/uart/command-interpreter.c **** 
 904:../../../src/net/isa/uart/command-interpreter.c **** 	printf( "Usage:\r\n"
 916               	.LM74:
 917 02ea 80E0      		ldi r24,lo8(.LC12)
 918 02ec 90E0      		ldi r25,hi8(.LC12)
 919 02ee 0E94 0000 		call puts
 920               	/* epilogue start */
 905:../../../src/net/isa/uart/command-interpreter.c ****                     "<int>: 123 or 0x1ABC\r\n"
 906:../../../src/net/isa/uart/command-interpreter.c ****                     "<string>: \"foo\" or {0A 1B 2C}\r\n\r\n");
 907:../../../src/net/isa/uart/command-interpreter.c **** 
 908:../../../src/net/isa/uart/command-interpreter.c **** }
 922               	.LM75:
 923 02f2 0895      		ret
 925               	.Lscope12:
 927               		.stabd	78,0,0
 929               	.global	emberPrintCommandTable
 931               	emberPrintCommandTable:
 932               		.stabd	46,0,0
 909:../../../src/net/isa/uart/command-interpreter.c **** 
 910:../../../src/net/isa/uart/command-interpreter.c **** void emberPrintCommandTable(void)
 911:../../../src/net/isa/uart/command-interpreter.c **** {
 934               	.LM76:
 935               	.LFBB13:
 936 02f4 CF93      		push r28
 937 02f6 DF93      		push r29
 938               	/* prologue: function */
 939               	/* frame size = 0 */
 912:../../../src/net/isa/uart/command-interpreter.c ****   EmberCommandEntry *commandFinger = emberCommandTable;
 913:../../../src/net/isa/uart/command-interpreter.c **** 
 914:../../../src/net/isa/uart/command-interpreter.c ****   emberPrintCommandUsageNotes();
 941               	.LM77:
 942 02f8 0E94 0000 		call emberPrintCommandUsageNotes
 943 02fc C0E0      		ldi r28,lo8(emberCommandTable)
 944 02fe D0E0      		ldi r29,hi8(emberCommandTable)
 915:../../../src/net/isa/uart/command-interpreter.c ****   for (; commandFinger->name != NULL; commandFinger++) {
 946               	.LM78:
 947 0300 00C0      		rjmp .L66
 948               	.L67:
 916:../../../src/net/isa/uart/command-interpreter.c ****     printCommandUsage(commandFinger);
 950               	.LM79:
 951 0302 CE01      		movw r24,r28
 952 0304 0E94 0000 		call printCommandUsage
 915:../../../src/net/isa/uart/command-interpreter.c ****   for (; commandFinger->name != NULL; commandFinger++) {
 954               	.LM80:
 955 0308 2896      		adiw r28,8
 956               	.L66:
 957 030a 8881      		ld r24,Y
 958 030c 9981      		ldd r25,Y+1
 959 030e 0097      		sbiw r24,0
 960 0310 01F4      		brne .L67
 961               	/* epilogue start */
 917:../../../src/net/isa/uart/command-interpreter.c ****   }
 918:../../../src/net/isa/uart/command-interpreter.c **** }
 963               	.LM81:
 964 0312 DF91      		pop r29
 965 0314 CF91      		pop r28
 966 0316 0895      		ret
 971               	.Lscope13:
 973               		.stabd	78,0,0
 974               		.data
 975               	.LC13:
 976 008f 2573 0D0A 		.string	"%s\r\n"
 976      00
 977               		.text
 980               	.global	emberCommandErrorHandler
 982               	emberCommandErrorHandler:
 983               		.stabd	46,0,0
 919:../../../src/net/isa/uart/command-interpreter.c **** 
 920:../../../src/net/isa/uart/command-interpreter.c **** void emberCommandErrorHandler(EmberCommandStatus status)
 921:../../../src/net/isa/uart/command-interpreter.c **** {
 985               	.LM82:
 986               	.LFBB14:
 987 0318 CF92      		push r12
 988 031a DF92      		push r13
 989 031c EF92      		push r14
 990 031e FF92      		push r15
 991 0320 0F93      		push r16
 992 0322 1F93      		push r17
 993 0324 CF93      		push r28
 994 0326 DF93      		push r29
 995               	/* prologue: function */
 996               	/* frame size = 0 */
 922:../../../src/net/isa/uart/command-interpreter.c ****   printf("%s\r\n", emberCommandErrorNames[status]);
 998               	.LM83:
 999 0328 00D0      		rcall .
 1000 032a 00D0      		rcall .
 1001 032c 20E0      		ldi r18,lo8(.LC13)
 1002 032e 30E0      		ldi r19,hi8(.LC13)
 1003 0330 EDB7      		in r30,__SP_L__
 1004 0332 FEB7      		in r31,__SP_H__
 1005 0334 3283      		std Z+2,r19
 1006 0336 2183      		std Z+1,r18
 1007 0338 E82F      		mov r30,r24
 1008 033a F0E0      		ldi r31,lo8(0)
 1009 033c EE0F      		lsl r30
 1010 033e FF1F      		rol r31
 1011 0340 E050      		subi r30,lo8(-(emberCommandErrorNames))
 1012 0342 F040      		sbci r31,hi8(-(emberCommandErrorNames))
 1013 0344 8081      		ld r24,Z
 1014 0346 9181      		ldd r25,Z+1
 1015 0348 EDB7      		in r30,__SP_L__
 1016 034a FEB7      		in r31,__SP_H__
 1017 034c 9483      		std Z+4,r25
 1018 034e 8383      		std Z+3,r24
 1019 0350 0E94 0000 		call printf
 923:../../../src/net/isa/uart/command-interpreter.c **** 
 924:../../../src/net/isa/uart/command-interpreter.c ****   if (emberCurrentCommand == NULL) {
 1021               	.LM84:
 1022 0354 0F90      		pop __tmp_reg__
 1023 0356 0F90      		pop __tmp_reg__
 1024 0358 0F90      		pop __tmp_reg__
 1025 035a 0F90      		pop __tmp_reg__
 1026 035c 8091 0000 		lds r24,emberCurrentCommand
 1027 0360 9091 0000 		lds r25,(emberCurrentCommand)+1
 1028 0364 0097      		sbiw r24,0
 1029 0366 01F4      		brne .L70
 925:../../../src/net/isa/uart/command-interpreter.c **** 		if (isPrintEnabled){
 1031               	.LM85:
 1032 0368 8091 0000 		lds r24,isPrintEnabled
 1033 036c 8823      		tst r24
 1034 036e 01F4      		brne .+2
 1035 0370 00C0      		rjmp .L76
 926:../../../src/net/isa/uart/command-interpreter.c **** 	  emberPrintCommandTable();
 1037               	.LM86:
 1038 0372 0E94 0000 		call emberPrintCommandTable
 1039 0376 00C0      		rjmp .L76
 1040               	.L70:
 1041               	.LBB79:
 927:../../../src/net/isa/uart/command-interpreter.c **** 		}
 928:../../../src/net/isa/uart/command-interpreter.c ****   } else {
 929:../../../src/net/isa/uart/command-interpreter.c ****     uint8_t *finger;
 930:../../../src/net/isa/uart/command-interpreter.c ****     uint8_t tokenNum, i;
 931:../../../src/net/isa/uart/command-interpreter.c ****     emberPrintCommandUsageNotes();
 1043               	.LM87:
 1044 0378 0E94 0000 		call emberPrintCommandUsageNotes
 1045 037c 10E0      		ldi r17,lo8(0)
 932:../../../src/net/isa/uart/command-interpreter.c ****     // Reconstruct any parent commands from the buffer.
 933:../../../src/net/isa/uart/command-interpreter.c ****     for (tokenNum = 0; tokenNum < commandState.argOffset - 1; tokenNum++) {
 1047               	.LM88:
 1048 037e 00C0      		rjmp .L72
 1049               	.L75:
 1050               	.LBB80:
 1051               	.LBB81:
 381:../../../src/net/isa/uart/command-interpreter.c ****   return commandState.buffer + commandState.tokenIndices[tokenNum];
 1053               	.LM89:
 1054 0380 E12F      		mov r30,r17
 1055 0382 FF27      		clr r31
 1056 0384 E7FD      		sbrc r30,7
 1057 0386 F095      		com r31
 1058 0388 E050      		subi r30,lo8(-(commandState))
 1059 038a F040      		sbci r31,hi8(-(commandState))
 1060 038c 81A1      		ldd r24,Z+33
 1061 038e C82F      		mov r28,r24
 1062 0390 D0E0      		ldi r29,lo8(0)
 1063 0392 C050      		subi r28,lo8(-(commandState+1))
 1064 0394 D040      		sbci r29,hi8(-(commandState+1))
 1065 0396 00E0      		ldi r16,lo8(0)
 1066               	.LBE81:
 1067               	.LBE80:
 375:../../../src/net/isa/uart/command-interpreter.c ****   return (commandState.tokenIndices[num + 1]
 1069               	.LM90:
 1070 0398 2050      		subi r18,lo8(-(commandState))
 1071 039a 3040      		sbci r19,hi8(-(commandState))
 1072 039c 92E2      		ldi r25,lo8(34)
 1073 039e C92E      		mov r12,r25
 1074 03a0 D12C      		mov r13,__zero_reg__
 1075 03a2 C20E      		add r12,r18
 1076 03a4 D31E      		adc r13,r19
 376:../../../src/net/isa/uart/command-interpreter.c ****           - commandState.tokenIndices[num]);
 1078               	.LM91:
 1079 03a6 81E2      		ldi r24,lo8(33)
 1080 03a8 E82E      		mov r14,r24
 1081 03aa F12C      		mov r15,__zero_reg__
 1082 03ac E20E      		add r14,r18
 1083 03ae F31E      		adc r15,r19
 934:../../../src/net/isa/uart/command-interpreter.c ****       finger = tokenPointer(tokenNum);
 935:../../../src/net/isa/uart/command-interpreter.c ****       for (i = 0; i < tokenLength(tokenNum); i++) {
 1085               	.LM92:
 1086 03b0 00C0      		rjmp .L73
 1087               	.L74:
 936:../../../src/net/isa/uart/command-interpreter.c ****         printf( "%c", finger[i]);
 1089               	.LM93:
 1090 03b2 FE01      		movw r30,r28
 1091 03b4 E00F      		add r30,r16
 1092 03b6 F11D      		adc r31,__zero_reg__
 1093 03b8 8081      		ld r24,Z
 1094 03ba 90E0      		ldi r25,lo8(0)
 1095 03bc 0E94 0000 		call putchar
 935:../../../src/net/isa/uart/command-interpreter.c ****       for (i = 0; i < tokenLength(tokenNum); i++) {
 1097               	.LM94:
 1098 03c0 0F5F      		subi r16,lo8(-(1))
 1099               	.L73:
 376:../../../src/net/isa/uart/command-interpreter.c ****           - commandState.tokenIndices[num]);
 1101               	.LM95:
 1102 03c2 F601      		movw r30,r12
 1103 03c4 8081      		ld r24,Z
 1104 03c6 F701      		movw r30,r14
 1105 03c8 9081      		ld r25,Z
 1106 03ca 891B      		sub r24,r25
 1107 03cc 0817      		cp r16,r24
 1108 03ce 00F0      		brlo .L74
 937:../../../src/net/isa/uart/command-interpreter.c ****       }
 938:../../../src/net/isa/uart/command-interpreter.c ****       printf(" ");
 1110               	.LM96:
 1111 03d0 80E2      		ldi r24,lo8(32)
 1112 03d2 90E0      		ldi r25,hi8(32)
 1113 03d4 0E94 0000 		call putchar
 933:../../../src/net/isa/uart/command-interpreter.c ****     for (tokenNum = 0; tokenNum < commandState.argOffset - 1; tokenNum++) {
 1115               	.LM97:
 1116 03d8 1F5F      		subi r17,lo8(-(1))
 1117               	.L72:
 1118 03da 212F      		mov r18,r17
 1119 03dc 30E0      		ldi r19,lo8(0)
 1120 03de 8091 0000 		lds r24,commandState+49
 1121 03e2 90E0      		ldi r25,lo8(0)
 1122 03e4 0197      		sbiw r24,1
 1123 03e6 2817      		cp r18,r24
 1124 03e8 3907      		cpc r19,r25
 1125 03ea 04F0      		brlt .L75
 939:../../../src/net/isa/uart/command-interpreter.c ****     }
 940:../../../src/net/isa/uart/command-interpreter.c ****     if (isPrintEnabled){
 1127               	.LM98:
 1128 03ec 8091 0000 		lds r24,isPrintEnabled
 1129 03f0 8823      		tst r24
 1130 03f2 01F0      		breq .L76
 941:../../../src/net/isa/uart/command-interpreter.c ****     emberPrintCommandUsage(emberCurrentCommand);
 1132               	.LM99:
 1133 03f4 8091 0000 		lds r24,emberCurrentCommand
 1134 03f8 9091 0000 		lds r25,(emberCurrentCommand)+1
 1135 03fc 0E94 0000 		call emberPrintCommandUsage
 1136               	.L76:
 1137               	/* epilogue start */
 1138               	.LBE79:
 942:../../../src/net/isa/uart/command-interpreter.c ****     }
 943:../../../src/net/isa/uart/command-interpreter.c ****   }
 944:../../../src/net/isa/uart/command-interpreter.c **** }
 1140               	.LM100:
 1141 0400 DF91      		pop r29
 1142 0402 CF91      		pop r28
 1143 0404 1F91      		pop r17
 1144 0406 0F91      		pop r16
 1145 0408 FF90      		pop r15
 1146 040a EF90      		pop r14
 1147 040c DF90      		pop r13
 1148 040e CF90      		pop r12
 1149 0410 0895      		ret
 1156               	.Lscope14:
 1158               		.stabd	78,0,0
 1159               		.data
 1160               	.LC14:
 1161 0094 094C 696E 		.string	"\tLinkID\tSlot Number\tNeighID\tGraphID\t    LinkType\tGraphType\r"
 1161      6B49 4409 
 1161      536C 6F74 
 1161      204E 756D 
 1161      6265 7209 
 1162               	.LC15:
 1163 00d0 0925 6409 		.string	"\t%d\t%d\t\t%d\t%d\t    %d\t\t%d\r\n"
 1163      2564 0909 
 1163      2564 0925 
 1163      6409 2020 
 1163      2020 2564 
 1164               		.text
 1166               	.global	printLink
 1168               	printLink:
 1169               		.stabd	46,0,0
 251:../../../src/net/isa/uart/command-interpreter.c **** void printLink(void){
 1171               	.LM101:
 1172               	.LFBB15:
 1173 0412 EF92      		push r14
 1174 0414 FF92      		push r15
 1175 0416 0F93      		push r16
 1176 0418 1F93      		push r17
 1177 041a CF93      		push r28
 1178 041c DF93      		push r29
 1179               	/* prologue: function */
 1180               	/* frame size = 0 */
 253:../../../src/net/isa/uart/command-interpreter.c **** 	if (isPrintEnabled){
 1182               	.LM102:
 1183 041e 8091 0000 		lds r24,isPrintEnabled
 1184 0422 8823      		tst r24
 1185 0424 01F4      		brne .+2
 1186 0426 00C0      		rjmp .L81
 254:../../../src/net/isa/uart/command-interpreter.c **** 			printf ("\tLinkID\tSlot Number\tNeighID\tGraphID\t    LinkType\tGraphType\r\n");
 1188               	.LM103:
 1189 0428 80E0      		ldi r24,lo8(.LC14)
 1190 042a 90E0      		ldi r25,hi8(.LC14)
 1191 042c 0E94 0000 		call puts
 1192 0430 C0E0      		ldi r28,lo8(dlmoLink)
 1193 0432 D0E0      		ldi r29,hi8(dlmoLink)
 1194 0434 00E0      		ldi r16,lo8(0)
 1195 0436 10E0      		ldi r17,hi8(0)
 1196               	.LBB82:
 259:../../../src/net/isa/uart/command-interpreter.c **** 					printf("\t%d\t%d\t\t%d\t%d\t    %d\t\t%d\r\n",i,dlmoLink[i].chOffset,dlmoLink[i].neighbor->ind
 1198               	.LM104:
 1199 0438 40E0      		ldi r20,lo8(.LC15)
 1200 043a E42E      		mov r14,r20
 1201 043c 40E0      		ldi r20,hi8(.LC15)
 1202 043e F42E      		mov r15,r20
 1203               	.L80:
 257:../../../src/net/isa/uart/command-interpreter.c **** 				if (dlmoLink[i].isPresent) {
 1205               	.LM105:
 1206 0440 8881      		ld r24,Y
 1207 0442 8823      		tst r24
 1208 0444 01F0      		breq .L79
 259:../../../src/net/isa/uart/command-interpreter.c **** 					printf("\t%d\t%d\t\t%d\t%d\t    %d\t\t%d\r\n",i,dlmoLink[i].chOffset,dlmoLink[i].neighbor->ind
 1210               	.LM106:
 1211 0446 8DB7      		in r24,__SP_L__
 1212 0448 9EB7      		in r25,__SP_H__
 1213 044a 0E97      		sbiw r24,14
 1214 044c 0FB6      		in __tmp_reg__,__SREG__
 1215 044e F894      		cli
 1216 0450 9EBF      		out __SP_H__,r25
 1217 0452 0FBE      		out __SREG__,__tmp_reg__
 1218 0454 8DBF      		out __SP_L__,r24
 1219 0456 EDB7      		in r30,__SP_L__
 1220 0458 FEB7      		in r31,__SP_H__
 1221 045a 3196      		adiw r30,1
 1222 045c ADB7      		in r26,__SP_L__
 1223 045e BEB7      		in r27,__SP_H__
 1224 0460 1296      		adiw r26,1+1
 1225 0462 FC92      		st X,r15
 1226 0464 EE92      		st -X,r14
 1227 0466 1197      		sbiw r26,1
 1228 0468 0283      		std Z+2,r16
 1229 046a 1383      		std Z+3,r17
 1230 046c 8889      		ldd r24,Y+16
 1231 046e 8483      		std Z+4,r24
 1232 0470 1582      		std Z+5,__zero_reg__
 1233 0472 A885      		ldd r26,Y+8
 1234 0474 B985      		ldd r27,Y+9
 1235 0476 1196      		adiw r26,1
 1236 0478 8D91      		ld r24,X+
 1237 047a 9C91      		ld r25,X
 1238 047c 1297      		sbiw r26,1+1
 1239 047e 9783      		std Z+7,r25
 1240 0480 8683      		std Z+6,r24
 1241 0482 AA85      		ldd r26,Y+10
 1242 0484 BB85      		ldd r27,Y+11
 1243 0486 8D91      		ld r24,X+
 1244 0488 9C91      		ld r25,X
 1245 048a 9187      		std Z+9,r25
 1246 048c 8087      		std Z+8,r24
 1247 048e 8C81      		ldd r24,Y+4
 1248 0490 8287      		std Z+10,r24
 1249 0492 1386      		std Z+11,__zero_reg__
 1250 0494 8F81      		ldd r24,Y+7
 1251 0496 90E0      		ldi r25,lo8(0)
 1252 0498 8073      		andi r24,lo8(48)
 1253 049a 9070      		andi r25,hi8(48)
 1254 049c 34E0      		ldi r19,4
 1255 049e 9595      	1:	asr r25
 1256 04a0 8795      		ror r24
 1257 04a2 3A95      		dec r19
 1258 04a4 01F4      		brne 1b
 1259 04a6 9587      		std Z+13,r25
 1260 04a8 8487      		std Z+12,r24
 1261 04aa 0E94 0000 		call printf
 1262 04ae 8DB7      		in r24,__SP_L__
 1263 04b0 9EB7      		in r25,__SP_H__
 1264 04b2 0E96      		adiw r24,14
 1265 04b4 0FB6      		in __tmp_reg__,__SREG__
 1266 04b6 F894      		cli
 1267 04b8 9EBF      		out __SP_H__,r25
 1268 04ba 0FBE      		out __SREG__,__tmp_reg__
 1269 04bc 8DBF      		out __SP_L__,r24
 1270               	.L79:
 1271 04be 0F5F      		subi r16,lo8(-(1))
 1272 04c0 1F4F      		sbci r17,hi8(-(1))
 1273 04c2 6296      		adiw r28,18
 255:../../../src/net/isa/uart/command-interpreter.c **** 		for (uint8_t i = 0; i < DLMO_LINK_MAX_COUNT; i++)
 1275               	.LM107:
 1276 04c4 0431      		cpi r16,20
 1277 04c6 1105      		cpc r17,__zero_reg__
 1278 04c8 01F0      		breq .+2
 1279 04ca 00C0      		rjmp .L80
 1280               	.L81:
 1281               	/* epilogue start */
 1282               	.LBE82:
 264:../../../src/net/isa/uart/command-interpreter.c **** }
 1284               	.LM108:
 1285 04cc DF91      		pop r29
 1286 04ce CF91      		pop r28
 1287 04d0 1F91      		pop r17
 1288 04d2 0F91      		pop r16
 1289 04d4 FF90      		pop r15
 1290 04d6 EF90      		pop r14
 1291 04d8 0895      		ret
 1293               	.Lscope15:
 1295               		.stabd	78,0,0
 1296               		.data
 1297               	.LC16:
 1298 00eb 0947 7261 		.string	"\tGraphID\t\tNo. of neighbors\tn1\tn2\tn3\r"
 1298      7068 4944 
 1298      0909 4E6F 
 1298      2E20 6F66 
 1298      206E 6569 
 1299               	.LC17:
 1300 0110 0925 6409 		.string	"\t%d\t\t\t%d\t\t%d\t%d\t%d\r\n"
 1300      0909 2564 
 1300      0909 2564 
 1300      0925 6409 
 1300      2564 0D0A 
 1301               		.text
 1303               	.global	printGraph
 1305               	printGraph:
 1306               		.stabd	46,0,0
 236:../../../src/net/isa/uart/command-interpreter.c **** void printGraph(void){
 1308               	.LM109:
 1309               	.LFBB16:
 1310 04da 0F93      		push r16
 1311 04dc 1F93      		push r17
 1312 04de CF93      		push r28
 1313 04e0 DF93      		push r29
 1314               	/* prologue: function */
 1315               	/* frame size = 0 */
 238:../../../src/net/isa/uart/command-interpreter.c **** 	if (isPrintEnabled){
 1317               	.LM110:
 1318 04e2 8091 0000 		lds r24,isPrintEnabled
 1319 04e6 8823      		tst r24
 1320 04e8 01F4      		brne .+2
 1321 04ea 00C0      		rjmp .L87
 239:../../../src/net/isa/uart/command-interpreter.c **** 			printf ("\tGraphID\t\tNo. of neighbors\tn1\tn2\tn3\r\n");
 1323               	.LM111:
 1324 04ec 80E0      		ldi r24,lo8(.LC16)
 1325 04ee 90E0      		ldi r25,hi8(.LC16)
 1326 04f0 0E94 0000 		call puts
 1327 04f4 C0E0      		ldi r28,lo8(dlmoGraph)
 1328 04f6 D0E0      		ldi r29,hi8(dlmoGraph)
 1329               	.LBB83:
 244:../../../src/net/isa/uart/command-interpreter.c **** 							printf("\t%d\t\t\t%d\t\t%d\t%d\t%d\r\n",dlmoGraph[i].index, SHIFTRIGHT(ISAMASK(dlmoGraph[i].
 1331               	.LM112:
 1332 04f8 00E0      		ldi r16,lo8(.LC17)
 1333 04fa 10E0      		ldi r17,hi8(.LC17)
 1334               	.L86:
 243:../../../src/net/isa/uart/command-interpreter.c **** 						if(dlmoGraph[i].index){
 1336               	.LM113:
 1337 04fc 8881      		ld r24,Y
 1338 04fe 9981      		ldd r25,Y+1
 1339 0500 0097      		sbiw r24,0
 1340 0502 01F0      		breq .L85
 244:../../../src/net/isa/uart/command-interpreter.c **** 							printf("\t%d\t\t\t%d\t\t%d\t%d\t%d\r\n",dlmoGraph[i].index, SHIFTRIGHT(ISAMASK(dlmoGraph[i].
 1342               	.LM114:
 1343 0504 2DB7      		in r18,__SP_L__
 1344 0506 3EB7      		in r19,__SP_H__
 1345 0508 2C50      		subi r18,lo8(-(-12))
 1346 050a 3040      		sbci r19,hi8(-(-12))
 1347 050c 0FB6      		in __tmp_reg__,__SREG__
 1348 050e F894      		cli
 1349 0510 3EBF      		out __SP_H__,r19
 1350 0512 0FBE      		out __SREG__,__tmp_reg__
 1351 0514 2DBF      		out __SP_L__,r18
 1352 0516 EDB7      		in r30,__SP_L__
 1353 0518 FEB7      		in r31,__SP_H__
 1354 051a 3196      		adiw r30,1
 1355 051c ADB7      		in r26,__SP_L__
 1356 051e BEB7      		in r27,__SP_H__
 1357 0520 1296      		adiw r26,1+1
 1358 0522 1C93      		st X,r17
 1359 0524 0E93      		st -X,r16
 1360 0526 1197      		sbiw r26,1
 1361 0528 9383      		std Z+3,r25
 1362 052a 8283      		std Z+2,r24
 1363 052c 8A81      		ldd r24,Y+2
 1364 052e 90E0      		ldi r25,lo8(0)
 1365 0530 8077      		andi r24,lo8(112)
 1366 0532 9070      		andi r25,hi8(112)
 1367 0534 54E0      		ldi r21,4
 1368 0536 9595      	1:	asr r25
 1369 0538 8795      		ror r24
 1370 053a 5A95      		dec r21
 1371 053c 01F4      		brne 1b
 1372 053e 9583      		std Z+5,r25
 1373 0540 8483      		std Z+4,r24
 1374 0542 8C81      		ldd r24,Y+4
 1375 0544 9D81      		ldd r25,Y+5
 1376 0546 9783      		std Z+7,r25
 1377 0548 8683      		std Z+6,r24
 1378 054a 8E81      		ldd r24,Y+6
 1379 054c 9F81      		ldd r25,Y+7
 1380 054e 9187      		std Z+9,r25
 1381 0550 8087      		std Z+8,r24
 1382 0552 8885      		ldd r24,Y+8
 1383 0554 9985      		ldd r25,Y+9
 1384 0556 9387      		std Z+11,r25
 1385 0558 8287      		std Z+10,r24
 1386 055a 0E94 0000 		call printf
 1387 055e 2DB7      		in r18,__SP_L__
 1388 0560 3EB7      		in r19,__SP_H__
 1389 0562 245F      		subi r18,lo8(-(12))
 1390 0564 3F4F      		sbci r19,hi8(-(12))
 1391 0566 0FB6      		in __tmp_reg__,__SREG__
 1392 0568 F894      		cli
 1393 056a 3EBF      		out __SP_H__,r19
 1394 056c 0FBE      		out __SREG__,__tmp_reg__
 1395 056e 2DBF      		out __SP_L__,r18
 1396               	.L85:
 1397 0570 2A96      		adiw r28,10
 241:../../../src/net/isa/uart/command-interpreter.c **** 				for(int i=0;i<DLMO_GRAPH_MAX_COUNT;i++)
 1399               	.LM115:
 1400 0572 30E0      		ldi r19,hi8(dlmoGraph+100)
 1401 0574 C030      		cpi r28,lo8(dlmoGraph+100)
 1402 0576 D307      		cpc r29,r19
 1403 0578 01F4      		brne .L86
 1404               	.L87:
 1405               	/* epilogue start */
 1406               	.LBE83:
 249:../../../src/net/isa/uart/command-interpreter.c **** }
 1408               	.LM116:
 1409 057a DF91      		pop r29
 1410 057c CF91      		pop r28
 1411 057e 1F91      		pop r17
 1412 0580 0F91      		pop r16
 1413 0582 0895      		ret
 1415               	.Lscope16:
 1417               		.stabd	78,0,0
 1418               		.data
 1419               	.LC18:
 1420 0125 094E 6569 		.string	"\tNeighborId\tClock Source\r"
 1420      6768 626F 
 1420      7249 6409 
 1420      436C 6F63 
 1420      6B20 536F 
 1421               	.LC19:
 1422 013f 0925 6409 		.string	"\t%d\t\t\t%d\r\n"
 1422      0909 2564 
 1422      0D0A 00
 1423               		.text
 1425               	.global	printNeighbor
 1427               	printNeighbor:
 1428               		.stabd	46,0,0
 222:../../../src/net/isa/uart/command-interpreter.c **** void printNeighbor(void){
 1430               	.LM117:
 1431               	.LFBB17:
 1432 0584 0F93      		push r16
 1433 0586 1F93      		push r17
 1434 0588 CF93      		push r28
 1435 058a DF93      		push r29
 1436               	/* prologue: function */
 1437               	/* frame size = 0 */
 224:../../../src/net/isa/uart/command-interpreter.c **** 	if (isPrintEnabled){
 1439               	.LM118:
 1440 058c 8091 0000 		lds r24,isPrintEnabled
 1441 0590 8823      		tst r24
 1442 0592 01F0      		breq .L94
 225:../../../src/net/isa/uart/command-interpreter.c **** 		printf ("\tNeighborId\tClock Source\r\n");
 1444               	.LM119:
 1445 0594 80E0      		ldi r24,lo8(.LC18)
 1446 0596 90E0      		ldi r25,hi8(.LC18)
 1447 0598 0E94 0000 		call puts
 1448 059c C0E0      		ldi r28,lo8(dlmoNeighbor)
 1449 059e D0E0      		ldi r29,hi8(dlmoNeighbor)
 1450               	.LBB84:
 228:../../../src/net/isa/uart/command-interpreter.c **** 				printf("\t%d\t\t\t%d\r\n",dlmoNeighbor[i].index, (ISAMASK(dlmoNeighbor[i].typeInfo, CLOCK_PREFE
 1452               	.LM120:
 1453 05a0 00E0      		ldi r16,lo8(.LC19)
 1454 05a2 10E0      		ldi r17,hi8(.LC19)
 1455               	.L93:
 227:../../../src/net/isa/uart/command-interpreter.c **** 			if (dlmoNeighbor[i].isPresent){
 1457               	.LM121:
 1458 05a4 8881      		ld r24,Y
 1459 05a6 8823      		tst r24
 1460 05a8 01F0      		breq .L91
 228:../../../src/net/isa/uart/command-interpreter.c **** 				printf("\t%d\t\t\t%d\r\n",dlmoNeighbor[i].index, (ISAMASK(dlmoNeighbor[i].typeInfo, CLOCK_PREFE
 1462               	.LM122:
 1463 05aa 00D0      		rcall .
 1464 05ac 00D0      		rcall .
 1465 05ae 00D0      		rcall .
 1466 05b0 EDB7      		in r30,__SP_L__
 1467 05b2 FEB7      		in r31,__SP_H__
 1468 05b4 3196      		adiw r30,1
 1469 05b6 ADB7      		in r26,__SP_L__
 1470 05b8 BEB7      		in r27,__SP_H__
 1471 05ba 1296      		adiw r26,1+1
 1472 05bc 1C93      		st X,r17
 1473 05be 0E93      		st -X,r16
 1474 05c0 1197      		sbiw r26,1
 1475 05c2 8981      		ldd r24,Y+1
 1476 05c4 9A81      		ldd r25,Y+2
 1477 05c6 9383      		std Z+3,r25
 1478 05c8 8283      		std Z+2,r24
 1479 05ca 80E0      		ldi r24,lo8(0)
 1480 05cc 90E0      		ldi r25,hi8(0)
 1481 05ce 2D85      		ldd r18,Y+13
 1482 05d0 27FF      		sbrs r18,7
 1483 05d2 00C0      		rjmp .L92
 1484 05d4 81E0      		ldi r24,lo8(1)
 1485 05d6 90E0      		ldi r25,hi8(1)
 1486               	.L92:
 1487 05d8 9583      		std Z+5,r25
 1488 05da 8483      		std Z+4,r24
 1489 05dc 0E94 0000 		call printf
 1490 05e0 8DB7      		in r24,__SP_L__
 1491 05e2 9EB7      		in r25,__SP_H__
 1492 05e4 0696      		adiw r24,6
 1493 05e6 0FB6      		in __tmp_reg__,__SREG__
 1494 05e8 F894      		cli
 1495 05ea 9EBF      		out __SP_H__,r25
 1496 05ec 0FBE      		out __SREG__,__tmp_reg__
 1497 05ee 8DBF      		out __SP_L__,r24
 1498               	.L91:
 1499 05f0 6196      		adiw r28,17
 226:../../../src/net/isa/uart/command-interpreter.c **** 		for(int i=0;i<DLMO_NEIGHBOR_MAX_COUNT;i++){
 1501               	.LM123:
 1502 05f2 90E0      		ldi r25,hi8(dlmoNeighbor+272)
 1503 05f4 C030      		cpi r28,lo8(dlmoNeighbor+272)
 1504 05f6 D907      		cpc r29,r25
 1505 05f8 01F4      		brne .L93
 1506               	.L94:
 1507               	/* epilogue start */
 1508               	.LBE84:
 234:../../../src/net/isa/uart/command-interpreter.c **** }
 1510               	.LM124:
 1511 05fa DF91      		pop r29
 1512 05fc CF91      		pop r28
 1513 05fe 1F91      		pop r17
 1514 0600 0F91      		pop r16
 1515 0602 0895      		ret
 1517               	.Lscope17:
 1519               		.stabd	78,0,0
 1520               		.data
 1521               	.LC20:
 1522 014a 0A0A      		.ascii	"\n\n"
 1523 014c 0A09 6E65 		.string	"\n\tneighbor -->| message_destId | message_graphId | neighborId \n\r"
 1523      6967 6862 
 1523      6F72 202D 
 1523      2D3E 7C20 
 1523      6D65 7373 
 1524               	.LC21:
 1525 018d 0967 7261 		.string	"\tgraph\t -->| message_destId | message_graphId | graphID |"
 1525      7068 0920 
 1525      2D2D 3E7C 
 1525      206D 6573 
 1525      7361 6765 
 1526               	.LC22:
 1527 01c7 6E65 6967 		.string	"neighCount | n1 | n2 | n3\n\r"
 1527      6843 6F75 
 1527      6E74 207C 
 1527      206E 3120 
 1527      7C20 6E32 
 1528               	.LC23:
 1529 01e3 096C 696E 		.string	"\tlink\t -->| message_destId | message_graphId | slotNo"
 1529      6B09 202D 
 1529      2D3E 7C20 
 1529      6D65 7373 
 1529      6167 655F 
 1530               	.LC24:
 1531 0219 6E65 6967 		.string	"neighbor | graphId | linkType | graphType\n\n"
 1531      6862 6F72 
 1531      207C 2067 
 1531      7261 7068 
 1531      4964 207C 
 1532               		.text
 1534               	.global	printSendCommandArguments
 1536               	printSendCommandArguments:
 1537               		.stabd	46,0,0
 201:../../../src/net/isa/uart/command-interpreter.c **** void printSendCommandArguments(void){
 1539               	.LM125:
 1540               	.LFBB18:
 1541               	/* prologue: function */
 1542               	/* frame size = 0 */
 203:../../../src/net/isa/uart/command-interpreter.c **** 	if (isPrintEnabled){
 1544               	.LM126:
 1545 0604 8091 0000 		lds r24,isPrintEnabled
 1546 0608 8823      		tst r24
 1547 060a 01F0      		breq .L98
 204:../../../src/net/isa/uart/command-interpreter.c **** 	printf ("\n\n\n\tneighbor -->| message_destId | message_graphId | neighborId \n\r");
 1549               	.LM127:
 1550 060c 00D0      		rcall .
 1551 060e 80E0      		ldi r24,lo8(.LC20)
 1552 0610 90E0      		ldi r25,hi8(.LC20)
 1553 0612 EDB7      		in r30,__SP_L__
 1554 0614 FEB7      		in r31,__SP_H__
 1555 0616 9283      		std Z+2,r25
 1556 0618 8183      		std Z+1,r24
 1557 061a 0E94 0000 		call printf
 205:../../../src/net/isa/uart/command-interpreter.c **** 	printf ("\tgraph\t -->| message_destId | message_graphId | graphID |");
 1559               	.LM128:
 1560 061e 80E0      		ldi r24,lo8(.LC21)
 1561 0620 90E0      		ldi r25,hi8(.LC21)
 1562 0622 EDB7      		in r30,__SP_L__
 1563 0624 FEB7      		in r31,__SP_H__
 1564 0626 9283      		std Z+2,r25
 1565 0628 8183      		std Z+1,r24
 1566 062a 0E94 0000 		call printf
 206:../../../src/net/isa/uart/command-interpreter.c **** 	printf ("neighCount | n1 | n2 | n3\n\r");
 1568               	.LM129:
 1569 062e 80E0      		ldi r24,lo8(.LC22)
 1570 0630 90E0      		ldi r25,hi8(.LC22)
 1571 0632 EDB7      		in r30,__SP_L__
 1572 0634 FEB7      		in r31,__SP_H__
 1573 0636 9283      		std Z+2,r25
 1574 0638 8183      		std Z+1,r24
 1575 063a 0E94 0000 		call printf
 207:../../../src/net/isa/uart/command-interpreter.c **** 	printf ("\tlink\t -->| message_destId | message_graphId | slotNo");
 1577               	.LM130:
 1578 063e 80E0      		ldi r24,lo8(.LC23)
 1579 0640 90E0      		ldi r25,hi8(.LC23)
 1580 0642 EDB7      		in r30,__SP_L__
 1581 0644 FEB7      		in r31,__SP_H__
 1582 0646 9283      		std Z+2,r25
 1583 0648 8183      		std Z+1,r24
 1584 064a 0E94 0000 		call printf
 208:../../../src/net/isa/uart/command-interpreter.c **** 	printf ("neighbor | graphId | linkType | graphType\n\n\n");
 1586               	.LM131:
 1587 064e 0F90      		pop __tmp_reg__
 1588 0650 0F90      		pop __tmp_reg__
 1589 0652 80E0      		ldi r24,lo8(.LC24)
 1590 0654 90E0      		ldi r25,hi8(.LC24)
 1591 0656 0E94 0000 		call puts
 1592               	.L98:
 1593 065a 0895      		ret
 1595               	.Lscope18:
 1597               		.stabd	78,0,0
 1598               		.data
 1599               	.LC25:
 1600 0245 4361 6D65 		.string	"Came to temp command\r"
 1600      2074 6F20 
 1600      7465 6D70 
 1600      2063 6F6D 
 1600      6D61 6E64 
 1601               	.LC26:
 1602 025b 4172 6731 		.string	"Arg1:%d  Arg2:%d\n\r"
 1602      3A25 6420 
 1602      2041 7267 
 1602      323A 2564 
 1602      0A0D 00
 1603               		.text
 1605               	.global	printTempCommand
 1607               	printTempCommand:
 1608               		.stabd	46,0,0
  94:../../../src/net/isa/uart/command-interpreter.c **** void printTempCommand(void){
 1610               	.LM132:
 1611               	.LFBB19:
 1612 065c 1F93      		push r17
 1613 065e DF93      		push r29
 1614 0660 CF93      		push r28
 1615 0662 0F92      		push __tmp_reg__
 1616 0664 CDB7      		in r28,__SP_L__
 1617 0666 DEB7      		in r29,__SP_H__
 1618               	/* prologue: function */
 1619               	/* frame size = 1 */
  97:../../../src/net/isa/uart/command-interpreter.c **** 	arg1 = emberUnsignedCommandArgument(0);
 1621               	.LM133:
 1622 0668 80E0      		ldi r24,lo8(0)
 1623 066a 0E94 0000 		call emberUnsignedCommandArgument
 1624 066e 162F      		mov r17,r22
  98:../../../src/net/isa/uart/command-interpreter.c **** 	arg2 = emberUnsignedCommandArgument(1);
 1626               	.LM134:
 1627 0670 81E0      		ldi r24,lo8(1)
 1628 0672 0E94 0000 		call emberUnsignedCommandArgument
  99:../../../src/net/isa/uart/command-interpreter.c **** 	if (isPrintEnabled){
 1630               	.LM135:
 1631 0676 8091 0000 		lds r24,isPrintEnabled
 1632 067a 8823      		tst r24
 1633 067c 01F0      		breq .L101
 101:../../../src/net/isa/uart/command-interpreter.c **** 		printf ("Came to temp command\r\n");
 1635               	.LM136:
 1636 067e 80E0      		ldi r24,lo8(.LC25)
 1637 0680 90E0      		ldi r25,hi8(.LC25)
 1638 0682 6983      		std Y+1,r22
 1639 0684 0E94 0000 		call puts
 102:../../../src/net/isa/uart/command-interpreter.c **** 		printf ("Arg1:%d  Arg2:%d\n\r", arg1, arg2);
 1641               	.LM137:
 1642 0688 00D0      		rcall .
 1643 068a 00D0      		rcall .
 1644 068c 00D0      		rcall .
 1645 068e EDB7      		in r30,__SP_L__
 1646 0690 FEB7      		in r31,__SP_H__
 1647 0692 3196      		adiw r30,1
 1648 0694 80E0      		ldi r24,lo8(.LC26)
 1649 0696 90E0      		ldi r25,hi8(.LC26)
 1650 0698 ADB7      		in r26,__SP_L__
 1651 069a BEB7      		in r27,__SP_H__
 1652 069c 1296      		adiw r26,1+1
 1653 069e 9C93      		st X,r25
 1654 06a0 8E93      		st -X,r24
 1655 06a2 1197      		sbiw r26,1
 1656 06a4 1283      		std Z+2,r17
 1657 06a6 1382      		std Z+3,__zero_reg__
 1658 06a8 6981      		ldd r22,Y+1
 1659 06aa 6483      		std Z+4,r22
 1660 06ac 1582      		std Z+5,__zero_reg__
 1661 06ae 0E94 0000 		call printf
 1662 06b2 EDB7      		in r30,__SP_L__
 1663 06b4 FEB7      		in r31,__SP_H__
 1664 06b6 3696      		adiw r30,6
 1665 06b8 0FB6      		in __tmp_reg__,__SREG__
 1666 06ba F894      		cli
 1667 06bc FEBF      		out __SP_H__,r31
 1668 06be 0FBE      		out __SREG__,__tmp_reg__
 1669 06c0 EDBF      		out __SP_L__,r30
 1670               	.L101:
 1671               	/* epilogue start */
 105:../../../src/net/isa/uart/command-interpreter.c **** }
 1673               	.LM138:
 1674 06c2 0F90      		pop __tmp_reg__
 1675 06c4 CF91      		pop r28
 1676 06c6 DF91      		pop r29
 1677 06c8 1F91      		pop r17
 1678 06ca 0895      		ret
 1680               	.Lscope19:
 1682               		.stabd	78,0,0
 1688               	.global	emberCopyStringArgument
 1690               	emberCopyStringArgument:
 1691               		.stabd	46,0,0
 831:../../../src/net/isa/uart/command-interpreter.c **** {
 1693               	.LM139:
 1694               	.LFBB20:
 1695 06cc CF92      		push r12
 1696 06ce DF92      		push r13
 1697 06d0 EF92      		push r14
 1698 06d2 FF92      		push r15
 1699 06d4 0F93      		push r16
 1700 06d6 1F93      		push r17
 1701 06d8 DF93      		push r29
 1702 06da CF93      		push r28
 1703 06dc 00D0      		rcall .
 1704 06de CDB7      		in r28,__SP_L__
 1705 06e0 DEB7      		in r29,__SP_H__
 1706               	/* prologue: function */
 1707               	/* frame size = 2 */
 1708 06e2 8B01      		movw r16,r22
 1709 06e4 E42E      		mov r14,r20
 834:../../../src/net/isa/uart/command-interpreter.c ****   uint8_t *contents = emberStringCommandArgument(argNum, &argLength);
 1711               	.LM140:
 1712 06e6 BE01      		movw r22,r28
 1713 06e8 6F5F      		subi r22,lo8(-(1))
 1714 06ea 7F4F      		sbci r23,hi8(-(1))
 1715 06ec 2A83      		std Y+2,r18
 1716 06ee 0E94 0000 		call emberStringCommandArgument
 1717 06f2 6C01      		movw r12,r24
 835:../../../src/net/isa/uart/command-interpreter.c ****   if (argLength > maxLength) {
 1719               	.LM141:
 1720 06f4 8981      		ldd r24,Y+1
 1721 06f6 2A81      		ldd r18,Y+2
 1722 06f8 E816      		cp r14,r24
 1723 06fa 00F4      		brsh .L103
 836:../../../src/net/isa/uart/command-interpreter.c ****     argLength = maxLength;
 1725               	.LM142:
 1726 06fc E982      		std Y+1,r14
 1727               	.L103:
 838:../../../src/net/isa/uart/command-interpreter.c ****   padLength = leftPad ? maxLength - argLength : 0;
 1729               	.LM143:
 1730 06fe 2223      		tst r18
 1731 0700 01F4      		brne .L104
 1732 0702 EE24      		clr r14
 1733 0704 00C0      		rjmp .L105
 1734               	.L104:
 1735 0706 8981      		ldd r24,Y+1
 1736 0708 E81A      		sub r14,r24
 1737               	.L105:
 839:../../../src/net/isa/uart/command-interpreter.c ****   memset(destination, 0, padLength);
 1739               	.LM144:
 1740 070a FF24      		clr r15
 1741 070c C801      		movw r24,r16
 1742 070e 60E0      		ldi r22,lo8(0)
 1743 0710 70E0      		ldi r23,hi8(0)
 1744 0712 4E2D      		mov r20,r14
 1745 0714 50E0      		ldi r21,lo8(0)
 1746 0716 0E94 0000 		call memset
 840:../../../src/net/isa/uart/command-interpreter.c ****   memcpy(destination + padLength, contents, argLength);
 1748               	.LM145:
 1749 071a 0E0D      		add r16,r14
 1750 071c 1F1D      		adc r17,r15
 1751 071e 4981      		ldd r20,Y+1
 1752 0720 C801      		movw r24,r16
 1753 0722 B601      		movw r22,r12
 1754 0724 50E0      		ldi r21,lo8(0)
 1755 0726 0E94 0000 		call memcpy
 842:../../../src/net/isa/uart/command-interpreter.c **** }
 1757               	.LM146:
 1758 072a 8981      		ldd r24,Y+1
 1759               	/* epilogue start */
 1760 072c 0F90      		pop __tmp_reg__
 1761 072e 0F90      		pop __tmp_reg__
 1762 0730 CF91      		pop r28
 1763 0732 DF91      		pop r29
 1764 0734 1F91      		pop r17
 1765 0736 0F91      		pop r16
 1766 0738 FF90      		pop r15
 1767 073a EF90      		pop r14
 1768 073c DF90      		pop r13
 1769 073e CF90      		pop r12
 1770 0740 0895      		ret
 1776               	.Lscope20:
 1778               		.stabd	78,0,0
 1782               	.global	emberSerialWriteData
 1784               	emberSerialWriteData:
 1785               		.stabd	46,0,0
 629:../../../src/net/isa/uart/command-interpreter.c **** {
 1787               	.LM147:
 1788               	.LFBB21:
 1789 0742 1F93      		push r17
 1790 0744 CF93      		push r28
 1791 0746 DF93      		push r29
 1792               	/* prologue: function */
 1793               	/* frame size = 0 */
 1794 0748 EC01      		movw r28,r24
 1795 074a 162F      		mov r17,r22
 631:../../../src/net/isa/uart/command-interpreter.c **** 	while(length--) {
 1797               	.LM148:
 1798 074c 00C0      		rjmp .L109
 1799               	.L110:
 632:../../../src/net/isa/uart/command-interpreter.c ****     putchar(*data);
 1801               	.LM149:
 1802 074e 6091 0000 		lds r22,__iob+2
 1803 0752 7091 0000 		lds r23,(__iob+2)+1
 1804 0756 8991      		ld r24,Y+
 1805 0758 90E0      		ldi r25,lo8(0)
 1806 075a 0E94 0000 		call fputc
 633:../../../src/net/isa/uart/command-interpreter.c ****     data++;
 1808               	.LM150:
 1809 075e 1150      		subi r17,lo8(-(-1))
 1810               	.L109:
 631:../../../src/net/isa/uart/command-interpreter.c **** 	while(length--) {
 1812               	.LM151:
 1813 0760 1123      		tst r17
 1814 0762 01F4      		brne .L110
 637:../../../src/net/isa/uart/command-interpreter.c **** }
 1816               	.LM152:
 1817 0764 80E0      		ldi r24,lo8(0)
 1818               	/* epilogue start */
 1819 0766 DF91      		pop r29
 1820 0768 CF91      		pop r28
 1821 076a 1F91      		pop r17
 1822 076c 0895      		ret
 1824               	.Lscope21:
 1826               		.stabd	78,0,0
 1829               	callCommandAction:
 1830               		.stabd	46,0,0
 653:../../../src/net/isa/uart/command-interpreter.c **** {
 1832               	.LM153:
 1833               	.LFBB22:
 1834 076e 5F92      		push r5
 1835 0770 6F92      		push r6
 1836 0772 7F92      		push r7
 1837 0774 8F92      		push r8
 1838 0776 9F92      		push r9
 1839 0778 AF92      		push r10
 1840 077a BF92      		push r11
 1841 077c CF92      		push r12
 1842 077e DF92      		push r13
 1843 0780 EF92      		push r14
 1844 0782 FF92      		push r15
 1845 0784 0F93      		push r16
 1846 0786 1F93      		push r17
 1847 0788 CF93      		push r28
 1848 078a DF93      		push r29
 1849               	/* prologue: function */
 1850               	/* frame size = 0 */
 659:../../../src/net/isa/uart/command-interpreter.c ****   if (commandState.tokenCount == 0) {
 1852               	.LM154:
 1853 078c 8091 0000 		lds r24,commandState+45
 1854 0790 8823      		tst r24
 1855 0792 01F4      		brne .+2
 1856 0794 00C0      		rjmp .L113
 664:../../../src/net/isa/uart/command-interpreter.c ****   if ( emberCommandInterpreterIsEchoOn() ) {
 1858               	.LM155:
 1859 0796 8091 0000 		lds r24,emberCommandInterpreter2Configuration
 1860 079a 80FF      		sbrs r24,0
 1861 079c 00C0      		rjmp .L114
 665:../../../src/net/isa/uart/command-interpreter.c **** 	  if (isPrintEnabled){
 1863               	.LM156:
 1864 079e 8091 0000 		lds r24,isPrintEnabled
 1865 07a2 8823      		tst r24
 1866 07a4 01F0      		breq .L114
 1867 07a6 10E0      		ldi r17,lo8(0)
 1868 07a8 00C0      		rjmp .L115
 1869               	.L116:
 1870               	.LBB85:
 1871               	.LBB86:
 1872               	.LBB87:
 1873               	.LBB88:
 1874               	.LBB89:
 375:../../../src/net/isa/uart/command-interpreter.c ****   return (commandState.tokenIndices[num + 1]
 1876               	.LM157:
 1877 07aa E12F      		mov r30,r17
 1878 07ac F0E0      		ldi r31,lo8(0)
 1879               	.LBE89:
 1880               	.LBE88:
 646:../../../src/net/isa/uart/command-interpreter.c ****     emberSerialWriteData(ptr, len);
 1882               	.LM158:
 1883 07ae A12F      		mov r26,r17
 1884 07b0 BB27      		clr r27
 1885 07b2 A7FD      		sbrc r26,7
 1886 07b4 B095      		com r27
 1887 07b6 A050      		subi r26,lo8(-(commandState))
 1888 07b8 B040      		sbci r27,hi8(-(commandState))
 1889 07ba 9196      		adiw r26,33
 1890 07bc 8C91      		ld r24,X
 1891 07be 90E0      		ldi r25,lo8(0)
 1892 07c0 E050      		subi r30,lo8(-(commandState))
 1893 07c2 F040      		sbci r31,hi8(-(commandState))
 1894 07c4 62A1      		ldd r22,Z+34
 1895 07c6 21A1      		ldd r18,Z+33
 1896 07c8 621B      		sub r22,r18
 1897 07ca 8050      		subi r24,lo8(-(commandState+1))
 1898 07cc 9040      		sbci r25,hi8(-(commandState+1))
 1899 07ce 0E94 0000 		call emberSerialWriteData
 647:../../../src/net/isa/uart/command-interpreter.c ****     printf(" ");
 1901               	.LM159:
 1902 07d2 80E2      		ldi r24,lo8(32)
 1903 07d4 90E0      		ldi r25,hi8(32)
 1904 07d6 0E94 0000 		call putchar
 1905               	.LBE87:
 643:../../../src/net/isa/uart/command-interpreter.c ****   for ( ; tokenNum < commandState.tokenCount; tokenNum++ ) {
 1907               	.LM160:
 1908 07da 1F5F      		subi r17,lo8(-(1))
 1909               	.L115:
 1910 07dc 8091 0000 		lds r24,commandState+45
 1911 07e0 1817      		cp r17,r24
 1912 07e2 00F0      		brlo .L116
 649:../../../src/net/isa/uart/command-interpreter.c ****   printf("\r\n");
 1914               	.LM161:
 1915 07e4 80E0      		ldi r24,lo8(.LC10)
 1916 07e6 90E0      		ldi r25,hi8(.LC10)
 1917 07e8 0E94 0000 		call puts
 1918               	.L114:
 1919               	.LBE86:
 1920               	.LBE85:
 682:../../../src/net/isa/uart/command-interpreter.c ****         if (tokenNum >= commandState.tokenCount) {
 1922               	.LM162:
 1923 07ec C090 0000 		lds r12,commandState+45
 1924 07f0 F0E0      		ldi r31,lo8(commandState+33)
 1925 07f2 6F2E      		mov r6,r31
 1926 07f4 F0E0      		ldi r31,hi8(commandState+33)
 1927 07f6 7F2E      		mov r7,r31
 1928 07f8 C0E0      		ldi r28,lo8(emberCommandTable)
 1929 07fa D0E0      		ldi r29,hi8(emberCommandTable)
 1930 07fc 10E0      		ldi r17,lo8(0)
 1931               	.L135:
 1932               	.LBB90:
 1933               	.LBB91:
 1934               	.LBB92:
 1935               	.LBB93:
 381:../../../src/net/isa/uart/command-interpreter.c ****   return commandState.buffer + commandState.tokenIndices[tokenNum];
 1937               	.LM163:
 1938 07fe F301      		movw r30,r6
 1939 0800 9081      		ld r25,Z
 1940 0802 692F      		mov r22,r25
 1941 0804 70E0      		ldi r23,lo8(0)
 1942 0806 6050      		subi r22,lo8(-(commandState+1))
 1943 0808 7040      		sbci r23,hi8(-(commandState+1))
 1944               	.LBE93:
 1945               	.LBE92:
 1946               	.LBB94:
 1947               	.LBB95:
 375:../../../src/net/isa/uart/command-interpreter.c ****   return (commandState.tokenIndices[num + 1]
 1949               	.LM164:
 1950 080a 8181      		ldd r24,Z+1
 1951 080c 891B      		sub r24,r25
 1952 080e 00E0      		ldi r16,lo8(0)
 1953 0810 40E0      		ldi r20,lo8(0)
 1954 0812 50E0      		ldi r21,hi8(0)
 1955               	.LBE95:
 1956               	.LBE94:
 1957               	.LBB97:
 1958               	.LBB98:
 610:../../../src/net/isa/uart/command-interpreter.c ****       if (endInput && endEntry) {
 1960               	.LM165:
 1961 0814 A82E      		mov r10,r24
 1962 0816 BB24      		clr r11
 1963 0818 00C0      		rjmp .L117
 1964               	.L128:
 1965               	.LBE98:
 1966               	.LBE97:
 1967               	.LBB104:
 1968               	.LBB96:
 375:../../../src/net/isa/uart/command-interpreter.c ****   return (commandState.tokenIndices[num + 1]
 1970               	.LM166:
 1971 081a 20E0      		ldi r18,lo8(0)
 1972 081c 30E0      		ldi r19,hi8(0)
 1973               	.L127:
 1974               	.LBE96:
 1975               	.LBE104:
 1976               	.LBB105:
 1977               	.LBB103:
 609:../../../src/net/isa/uart/command-interpreter.c ****       bool endEntry = (*entryFinger == 0);
 1979               	.LM167:
 1980 081e 8C91      		ld r24,X
 1981 0820 90E0      		ldi r25,lo8(0)
 1982 0822 8823      		tst r24
 1983 0824 01F4      		brne .L118
 1984 0826 91E0      		ldi r25,lo8(1)
 1985               	.L118:
 610:../../../src/net/isa/uart/command-interpreter.c ****       if (endInput && endEntry) {
 1987               	.LM168:
 1988 0828 2A15      		cp r18,r10
 1989 082a 3B05      		cpc r19,r11
 1990 082c 01F4      		brne .L119
 1991 082e 9923      		tst r25
 1992 0830 01F0      		breq .L121
 1993 0832 00C0      		rjmp .L120
 1994               	.L119:
 612:../../../src/net/isa/uart/command-interpreter.c ****       } else if (endInput || endEntry) {
 1996               	.LM169:
 1997 0834 9923      		tst r25
 1998 0836 01F0      		breq .L122
 1999               	.L121:
 613:../../../src/net/isa/uart/command-interpreter.c ****         if (inexactMatch != NULL) {
 2001               	.LM170:
 2002 0838 4115      		cp r20,__zero_reg__
 2003 083a 5105      		cpc r21,__zero_reg__
 2004 083c 01F4      		brne .L123
 2005 083e AE01      		movw r20,r28
 2006 0840 00C0      		rjmp .L124
 2007               	.L122:
 620:../../../src/net/isa/uart/command-interpreter.c ****       } else if (charDowncase(*inputFinger) != charDowncase(*entryFinger)) {
 2009               	.LM171:
 2010 0842 4B01      		movw r8,r22
 2011 0844 820E      		add r8,r18
 2012 0846 931E      		adc r9,r19
 2013 0848 F401      		movw r30,r8
 2014 084a 9081      		ld r25,Z
 2015               	.LBB99:
 2016               	.LBB100:
 574:../../../src/net/isa/uart/command-interpreter.c ****   if ('A' <= c && c <= 'Z')
 2018               	.LM172:
 2019 084c EFEB      		ldi r30,lo8(-65)
 2020 084e 8E2E      		mov r8,r30
 2021 0850 890E      		add r8,r25
 2022 0852 F9E1      		ldi r31,lo8(25)
 2023 0854 F815      		cp r31,r8
 2024 0856 00F0      		brlo .L125
 575:../../../src/net/isa/uart/command-interpreter.c ****     return c + 'a' - 'A';
 2026               	.LM173:
 2027 0858 905E      		subi r25,lo8(-(32))
 2028               	.L125:
 2029               	.LBE100:
 2030               	.LBE99:
 2031               	.LBB101:
 2032               	.LBB102:
 574:../../../src/net/isa/uart/command-interpreter.c ****   if ('A' <= c && c <= 'Z')
 2034               	.LM174:
 2035 085a FFEB      		ldi r31,lo8(-65)
 2036 085c 8F2E      		mov r8,r31
 2037 085e 880E      		add r8,r24
 2038 0860 E9E1      		ldi r30,lo8(25)
 2039 0862 EE2E      		mov r14,r30
 2040 0864 E814      		cp r14,r8
 2041 0866 00F0      		brlo .L126
 575:../../../src/net/isa/uart/command-interpreter.c ****     return c + 'a' - 'A';
 2043               	.LM175:
 2044 0868 805E      		subi r24,lo8(-(32))
 2045               	.L126:
 2046 086a 2F5F      		subi r18,lo8(-(1))
 2047 086c 3F4F      		sbci r19,hi8(-(1))
 2048               	.LBE102:
 2049               	.LBE101:
 620:../../../src/net/isa/uart/command-interpreter.c ****       } else if (charDowncase(*inputFinger) != charDowncase(*entryFinger)) {
 2051               	.LM176:
 2052 086e 9817      		cp r25,r24
 2053 0870 01F4      		brne .L124
 2054               	.LBE103:
 607:../../../src/net/isa/uart/command-interpreter.c ****     for (;; entryFinger++, inputFinger++) {
 2056               	.LM177:
 2057 0872 1196      		adiw r26,1
 2058 0874 00C0      		rjmp .L127
 2059               	.L123:
 2060 0876 01E0      		ldi r16,lo8(1)
 2061               	.L124:
 2062               	.LBE105:
 604:../../../src/net/isa/uart/command-interpreter.c ****   for (; commandFinger->name != NULL; commandFinger++) {
 2064               	.LM178:
 2065 0878 2896      		adiw r28,8
 2066               	.L117:
 2067 087a A881      		ld r26,Y
 2068 087c B981      		ldd r27,Y+1
 2069 087e 1097      		sbiw r26,0
 2070 0880 01F4      		brne .L128
 625:../../../src/net/isa/uart/command-interpreter.c ****   return (multipleMatches || false ? NULL : inexactMatch);
 2072               	.LM179:
 2073 0882 0023      		tst r16
 2074 0884 01F4      		brne .L129
 2075 0886 EA01      		movw r28,r20
 2076               	.L120:
 2077               	.LBE91:
 2078               	.LBE90:
 673:../../../src/net/isa/uart/command-interpreter.c ****     if (commandFinger == NULL) {
 2080               	.LM180:
 2081 0888 2097      		sbiw r28,0
 2082 088a 01F4      		brne .L130
 2083               	.L129:
 674:../../../src/net/isa/uart/command-interpreter.c ****       commandState.error = EMBER_CMD_ERR_NO_SUCH_COMMAND;
 2085               	.LM181:
 2086 088c 82E0      		ldi r24,lo8(2)
 2087 088e 8093 0000 		sts commandState+47,r24
 2088 0892 C0E0      		ldi r28,lo8(0)
 2089 0894 D0E0      		ldi r29,hi8(0)
 675:../../../src/net/isa/uart/command-interpreter.c ****       goto kickout;
 2091               	.LM182:
 2092 0896 00C0      		rjmp .L131
 2093               	.L130:
 677:../../../src/net/isa/uart/command-interpreter.c ****       emberCurrentCommand = commandFinger;
 2095               	.LM183:
 2096 0898 D093 0000 		sts (emberCurrentCommand)+1,r29
 2097 089c C093 0000 		sts emberCurrentCommand,r28
 678:../../../src/net/isa/uart/command-interpreter.c ****       tokenNum += 1;
 2099               	.LM184:
 2100 08a0 1F5F      		subi r17,lo8(-(1))
 679:../../../src/net/isa/uart/command-interpreter.c ****       commandState.argOffset += 1;
 2102               	.LM185:
 2103 08a2 8091 0000 		lds r24,commandState+49
 2104 08a6 8F5F      		subi r24,lo8(-(1))
 2105 08a8 8093 0000 		sts commandState+49,r24
 2106               	.LBB106:
 2107               	.LBB107:
 561:../../../src/net/isa/uart/command-interpreter.c ****   if ( entry -> action == NULL ) {
 2109               	.LM186:
 2110 08ac 2A81      		ldd r18,Y+2
 2111 08ae 3B81      		ldd r19,Y+3
 2112 08b0 2115      		cp r18,__zero_reg__
 2113 08b2 3105      		cpc r19,__zero_reg__
 2114 08b4 01F4      		brne .L132
 562:../../../src/net/isa/uart/command-interpreter.c ****     *nestedCommand = (EmberCommandEntry*)entry->argumentTypes;
 2116               	.LM187:
 2117 08b6 9C81      		ldd r25,Y+4
 2118 08b8 8D81      		ldd r24,Y+5
 2119 08ba 292F      		mov r18,r25
 2120 08bc E901      		movw r28,r18
 2121 08be 7E01      		movw r14,r28
 2122 08c0 F82E      		mov r15,r24
 2123 08c2 E701      		movw r28,r14
 2124 08c4 00C0      		rjmp .L133
 2125               	.L132:
 564:../../../src/net/isa/uart/command-interpreter.c ****   } else if ( entry -> argumentTypes[0] == 'n' ) {
 2127               	.LM188:
 2128 08c6 AC81      		ldd r26,Y+4
 2129 08c8 BD81      		ldd r27,Y+5
 2130 08ca 8C91      		ld r24,X
 2131 08cc 8E36      		cpi r24,lo8(110)
 2132 08ce 01F0      		breq .+2
 2133 08d0 00C0      		rjmp .L134
 565:../../../src/net/isa/uart/command-interpreter.c ****     *nestedCommand = (EmberCommandEntry*)(void*)entry->action;
 2135               	.LM189:
 2136 08d2 E901      		movw r28,r18
 2137               	.L133:
 2138 08d4 0894      		sec
 2139 08d6 611C      		adc r6,__zero_reg__
 2140 08d8 711C      		adc r7,__zero_reg__
 2141               	.LBE107:
 2142               	.LBE106:
 682:../../../src/net/isa/uart/command-interpreter.c ****         if (tokenNum >= commandState.tokenCount) {
 2144               	.LM190:
 2145 08da 1C15      		cp r17,r12
 2146 08dc 00F4      		brsh .+2
 2147 08de 00C0      		rjmp .L135
 683:../../../src/net/isa/uart/command-interpreter.c ****           commandState.error = EMBER_CMD_ERR_WRONG_NUMBER_OF_ARGUMENTS;
 2149               	.LM191:
 2150 08e0 83E0      		ldi r24,lo8(3)
 2151 08e2 8093 0000 		sts commandState+47,r24
 684:../../../src/net/isa/uart/command-interpreter.c ****           goto kickout;
 2153               	.LM192:
 2154 08e6 00C0      		rjmp .L131
 2155               	.L147:
 2156               	.LBB108:
 704:../../../src/net/isa/uart/command-interpreter.c ****     uint8_t type = commandFinger->argumentTypes[argTypeNum];
 2158               	.LM193:
 2159 08e8 E80D      		add r30,r8
 2160 08ea F91D      		adc r31,r9
 2161 08ec 8081      		ld r24,Z
 2162               	.LBB110:
 2163               	.LBB111:
 583:../../../src/net/isa/uart/command-interpreter.c ****   return commandState.buffer[commandState.tokenIndices[tokenNum]];
 2165               	.LM194:
 2166 08ee E091 0000 		lds r30,commandState+49
 2167 08f2 E00F      		add r30,r16
 2168 08f4 F0E0      		ldi r31,lo8(0)
 2169 08f6 E050      		subi r30,lo8(-(commandState))
 2170 08f8 F040      		sbci r31,hi8(-(commandState))
 2171 08fa E1A1      		ldd r30,Z+33
 2172 08fc F0E0      		ldi r31,lo8(0)
 2173 08fe E050      		subi r30,lo8(-(commandState))
 2174 0900 F040      		sbci r31,hi8(-(commandState))
 2175 0902 9181      		ldd r25,Z+1
 2176               	.LBE111:
 2177               	.LBE110:
 706:../../../src/net/isa/uart/command-interpreter.c ****     switch(type) {
 2179               	.LM195:
 2180 0904 8337      		cpi r24,lo8(115)
 2181 0906 01F0      		breq .L139
 2182 0908 8437      		cpi r24,lo8(116)
 2183 090a 00F4      		brsh .L140
 2184 090c 8823      		tst r24
 2185 090e 01F0      		breq .L137
 2186 0910 8236      		cpi r24,lo8(98)
 2187 0912 01F4      		brne .L136
 2188 0914 00C0      		rjmp .L153
 2189               	.L140:
 2190 0916 982F      		mov r25,r24
 2191 0918 9557      		subi r25,lo8(-(-117))
 2192 091a 9330      		cpi r25,lo8(3)
 2193 091c 00F4      		brsh .L136
 2194               	.L139:
 2195               	.LBB109:
 713:../../../src/net/isa/uart/command-interpreter.c ****       uint32_t limit = (type == 'u' ? 0xFF
 2197               	.LM196:
 2198 091e 8537      		cpi r24,lo8(117)
 2199 0920 01F4      		brne .L141
 2200 0922 8FEF      		ldi r24,lo8(255)
 2201 0924 C82E      		mov r12,r24
 2202 0926 D12C      		mov r13,__zero_reg__
 2203 0928 E12C      		mov r14,__zero_reg__
 2204 092a F12C      		mov r15,__zero_reg__
 2205 092c 00C0      		rjmp .L142
 2206               	.L141:
 714:../../../src/net/isa/uart/command-interpreter.c ****                       : (type == 'v' ? 0xFFFF
 2208               	.LM197:
 2209 092e 8637      		cpi r24,lo8(118)
 2210 0930 01F4      		brne .L143
 2211 0932 BFEF      		ldi r27,lo8(65535)
 2212 0934 CB2E      		mov r12,r27
 2213 0936 BFEF      		ldi r27,hi8(65535)
 2214 0938 DB2E      		mov r13,r27
 2215 093a E12C      		mov r14,__zero_reg__
 2216 093c F12C      		mov r15,__zero_reg__
 2217 093e 00C0      		rjmp .L142
 2218               	.L143:
 715:../../../src/net/isa/uart/command-interpreter.c ****                          : (type =='s' ? 0x7F : 0xFFFFFFFFUL)));
 2220               	.LM198:
 2221 0940 8337      		cpi r24,lo8(115)
 2222 0942 01F0      		breq .L144
 2223 0944 CC24      		clr r12
 2224 0946 CA94      		dec r12
 2225 0948 DC2C      		mov r13,r12
 2226 094a 7601      		movw r14,r12
 2227 094c 00C0      		rjmp .L142
 2228               	.L144:
 2229 094e AFE7      		ldi r26,lo8(127)
 2230 0950 CA2E      		mov r12,r26
 2231 0952 D12C      		mov r13,__zero_reg__
 2232 0954 E12C      		mov r14,__zero_reg__
 2233 0956 F12C      		mov r15,__zero_reg__
 2234               	.L142:
 716:../../../src/net/isa/uart/command-interpreter.c ****       if (stringToUnsignedInt(argNum, true) > limit) {
 2236               	.LM199:
 2237 0958 802F      		mov r24,r16
 2238 095a 61E0      		ldi r22,lo8(1)
 2239 095c 0E94 0000 		call stringToUnsignedInt
 2240 0960 C616      		cp r12,r22
 2241 0962 D706      		cpc r13,r23
 2242 0964 E806      		cpc r14,r24
 2243 0966 F906      		cpc r15,r25
 2244 0968 00F4      		brsh .L145
 717:../../../src/net/isa/uart/command-interpreter.c ****         commandState.error = EMBER_CMD_ERR_ARGUMENT_OUT_OF_RANGE;
 2246               	.LM200:
 2247 096a 6092 0000 		sts commandState+47,r6
 2248 096e 00C0      		rjmp .L145
 2249               	.L153:
 2250               	.LBE109:
 724:../../../src/net/isa/uart/command-interpreter.c ****       if (firstChar != '"' && firstChar != '{') {
 2252               	.LM201:
 2253 0970 9232      		cpi r25,lo8(34)
 2254 0972 01F0      		breq .L145
 2255 0974 9B37      		cpi r25,lo8(123)
 2256 0976 01F0      		breq .L145
 725:../../../src/net/isa/uart/command-interpreter.c ****         commandState.error = EMBER_CMD_ERR_ARGUMENT_SYNTAX_ERROR;
 2258               	.LM202:
 2259 0978 5092 0000 		sts commandState+47,r5
 2260 097c 00C0      		rjmp .L145
 2261               	.L137:
 730:../../../src/net/isa/uart/command-interpreter.c ****       commandState.error = EMBER_CMD_ERR_WRONG_NUMBER_OF_ARGUMENTS;
 2263               	.LM203:
 2264 097e A092 0000 		sts commandState+47,r10
 731:../../../src/net/isa/uart/command-interpreter.c ****       break;
 2266               	.LM204:
 2267 0982 00C0      		rjmp .L145
 2268               	.L136:
 734:../../../src/net/isa/uart/command-interpreter.c ****       commandState.error = EMBER_CMD_ERR_INVALID_ARGUMENT_TYPE;
 2270               	.LM205:
 2271 0984 7092 0000 		sts commandState+47,r7
 2272               	.L145:
 738:../../../src/net/isa/uart/command-interpreter.c ****     if (commandFinger->argumentTypes[argTypeNum + 1] != '*') {
 2274               	.LM206:
 2275 0988 EC81      		ldd r30,Y+4
 2276 098a FD81      		ldd r31,Y+5
 2277 098c E80D      		add r30,r8
 2278 098e F91D      		adc r31,r9
 2279 0990 8181      		ldd r24,Z+1
 2280 0992 8A32      		cpi r24,lo8(42)
 2281 0994 01F0      		breq .L146
 739:../../../src/net/isa/uart/command-interpreter.c ****       argTypeNum += 1;
 2283               	.LM207:
 2284 0996 B394      		inc r11
 2285               	.L146:
 742:../../../src/net/isa/uart/command-interpreter.c ****     if (commandState.error != EMBER_CMD_SUCCESS) {
 2287               	.LM208:
 2288 0998 8091 0000 		lds r24,commandState+47
 2289 099c 8823      		tst r24
 2290 099e 01F4      		brne .L131
 2291               	.LBE108:
 703:../../../src/net/isa/uart/command-interpreter.c ****       tokenNum++, argNum++) {
 2293               	.LM209:
 2294 09a0 1F5F      		subi r17,lo8(-(1))
 2295 09a2 0F5F      		subi r16,lo8(-(1))
 2296               	.L149:
 701:../../../src/net/isa/uart/command-interpreter.c ****   for(argTypeNum = 0, argNum = 0;
 2298               	.LM210:
 2299 09a4 8091 0000 		lds r24,commandState+45
 2300 09a8 EC81      		ldd r30,Y+4
 2301 09aa FD81      		ldd r31,Y+5
 2302 09ac 8B2C      		mov r8,r11
 2303 09ae 9924      		clr r9
 2304 09b0 1817      		cp r17,r24
 2305 09b2 00F4      		brsh .+2
 2306 09b4 00C0      		rjmp .L147
 747:../../../src/net/isa/uart/command-interpreter.c ****   if (! (commandFinger->argumentTypes[argTypeNum] == 0
 2308               	.LM211:
 2309 09b6 E80D      		add r30,r8
 2310 09b8 F91D      		adc r31,r9
 2311 09ba 8081      		ld r24,Z
 2312 09bc 8823      		tst r24
 2313 09be 01F0      		breq .L131
 748:../../../src/net/isa/uart/command-interpreter.c ****          || commandFinger->argumentTypes[argTypeNum + 1] == '*')) {
 2315               	.LM212:
 2316 09c0 8181      		ldd r24,Z+1
 2317 09c2 8A32      		cpi r24,lo8(42)
 2318 09c4 01F0      		breq .L131
 749:../../../src/net/isa/uart/command-interpreter.c ****     commandState.error = EMBER_CMD_ERR_WRONG_NUMBER_OF_ARGUMENTS;
 2320               	.LM213:
 2321 09c6 83E0      		ldi r24,lo8(3)
 2322 09c8 E0E0      		ldi r30,lo8(commandState+45)
 2323 09ca F0E0      		ldi r31,hi8(commandState+45)
 2324 09cc 8283      		std Z+2,r24
 2325               	.L131:
 754:../../../src/net/isa/uart/command-interpreter.c ****   if (commandState.error == EMBER_CMD_SUCCESS) {
 2327               	.LM214:
 2328 09ce 8091 0000 		lds r24,commandState+47
 2329 09d2 8823      		tst r24
 2330 09d4 01F4      		brne .L148
 755:../../../src/net/isa/uart/command-interpreter.c ****     (commandFinger->action)();
 2332               	.LM215:
 2333 09d6 EA81      		ldd r30,Y+2
 2334 09d8 FB81      		ldd r31,Y+3
 2335 09da 0995      		icall
 2336 09dc 00C0      		rjmp .L113
 2337               	.L148:
 757:../../../src/net/isa/uart/command-interpreter.c **** 	  if (isPrintEnabled){
 2339               	.LM216:
 2340 09de 9091 0000 		lds r25,isPrintEnabled
 2341 09e2 9923      		tst r25
 2342 09e4 01F0      		breq .L113
 758:../../../src/net/isa/uart/command-interpreter.c ****     emberCommandErrorHandler(commandState.error);
 2344               	.LM217:
 2345 09e6 0E94 0000 		call emberCommandErrorHandler
 2346               	.L113:
 764:../../../src/net/isa/uart/command-interpreter.c ****   emberCommandReaderInit();
 2348               	.LM218:
 2349 09ea 0E94 0000 		call emberCommandReaderInit
 2350               	/* epilogue start */
 765:../../../src/net/isa/uart/command-interpreter.c **** }
 2352               	.LM219:
 2353 09ee DF91      		pop r29
 2354 09f0 CF91      		pop r28
 2355 09f2 1F91      		pop r17
 2356 09f4 0F91      		pop r16
 2357 09f6 FF90      		pop r15
 2358 09f8 EF90      		pop r14
 2359 09fa DF90      		pop r13
 2360 09fc CF90      		pop r12
 2361 09fe BF90      		pop r11
 2362 0a00 AF90      		pop r10
 2363 0a02 9F90      		pop r9
 2364 0a04 8F90      		pop r8
 2365 0a06 7F90      		pop r7
 2366 0a08 6F90      		pop r6
 2367 0a0a 5F90      		pop r5
 2368 0a0c 0895      		ret
 2369               	.L134:
 697:../../../src/net/isa/uart/command-interpreter.c ****   if ( commandFinger->argumentTypes[0] == '?' )
 2371               	.LM220:
 2372 0a0e 8F33      		cpi r24,lo8(63)
 2373 0a10 01F0      		breq .L131
 2374 0a12 00E0      		ldi r16,lo8(0)
 2375 0a14 BB24      		clr r11
 2376               	.LBB113:
 2377               	.LBB112:
 717:../../../src/net/isa/uart/command-interpreter.c ****         commandState.error = EMBER_CMD_ERR_ARGUMENT_OUT_OF_RANGE;
 2379               	.LM221:
 2380 0a16 F4E0      		ldi r31,lo8(4)
 2381 0a18 6F2E      		mov r6,r31
 2382               	.LBE112:
 734:../../../src/net/isa/uart/command-interpreter.c ****       commandState.error = EMBER_CMD_ERR_INVALID_ARGUMENT_TYPE;
 2384               	.LM222:
 2385 0a1a E7E0      		ldi r30,lo8(7)
 2386 0a1c 7E2E      		mov r7,r30
 730:../../../src/net/isa/uart/command-interpreter.c ****       commandState.error = EMBER_CMD_ERR_WRONG_NUMBER_OF_ARGUMENTS;
 2388               	.LM223:
 2389 0a1e 73E0      		ldi r23,lo8(3)
 2390 0a20 A72E      		mov r10,r23
 725:../../../src/net/isa/uart/command-interpreter.c ****         commandState.error = EMBER_CMD_ERR_ARGUMENT_SYNTAX_ERROR;
 2392               	.LM224:
 2393 0a22 65E0      		ldi r22,lo8(5)
 2394 0a24 562E      		mov r5,r22
 2395 0a26 00C0      		rjmp .L149
 2396               	.LBE113:
 2445               	.Lscope22:
 2447               		.stabd	78,0,0
 2448               		.data
 2449               	.LC27:
 2450 026e 2564 2000 		.string	"%d "
 2451               		.text
 2453               	.global	printMatrix
 2455               	printMatrix:
 2456               		.stabd	46,0,0
 267:../../../src/net/isa/uart/command-interpreter.c **** void printMatrix(void){
 2458               	.LM225:
 2459               	.LFBB23:
 2460 0a28 0F93      		push r16
 2461 0a2a 1F93      		push r17
 2462 0a2c CF93      		push r28
 2463 0a2e DF93      		push r29
 2464               	/* prologue: function */
 2465               	/* frame size = 0 */
 267:../../../src/net/isa/uart/command-interpreter.c **** void printMatrix(void){
 2467               	.LM226:
 2468 0a30 C0E0      		ldi r28,lo8(adjacencyMatrix)
 2469 0a32 D0E0      		ldi r29,hi8(adjacencyMatrix)
 2470               	.LBB114:
 272:../../../src/net/isa/uart/command-interpreter.c **** 					printf("%d ",adjacencyMatrix[i]);
 2472               	.LM227:
 2473 0a34 00E0      		ldi r16,lo8(.LC27)
 2474 0a36 10E0      		ldi r17,hi8(.LC27)
 2475               	.L155:
 2476 0a38 00D0      		rcall .
 2477 0a3a 00D0      		rcall .
 2478 0a3c EDB7      		in r30,__SP_L__
 2479 0a3e FEB7      		in r31,__SP_H__
 2480 0a40 1283      		std Z+2,r17
 2481 0a42 0183      		std Z+1,r16
 2482 0a44 8991      		ld r24,Y+
 2483 0a46 9991      		ld r25,Y+
 2484 0a48 9483      		std Z+4,r25
 2485 0a4a 8383      		std Z+3,r24
 2486 0a4c 0E94 0000 		call printf
 270:../../../src/net/isa/uart/command-interpreter.c **** 		for (uint8_t i = 0; i < DLMO_NEIGHBOR_MAX_COUNT; i++)
 2488               	.LM228:
 2489 0a50 0F90      		pop __tmp_reg__
 2490 0a52 0F90      		pop __tmp_reg__
 2491 0a54 0F90      		pop __tmp_reg__
 2492 0a56 0F90      		pop __tmp_reg__
 2493 0a58 F0E0      		ldi r31,hi8(adjacencyMatrix+32)
 2494 0a5a C030      		cpi r28,lo8(adjacencyMatrix+32)
 2495 0a5c DF07      		cpc r29,r31
 2496 0a5e 01F4      		brne .L155
 2497               	.LBE114:
 274:../../../src/net/isa/uart/command-interpreter.c **** 		putchar('\r');
 2499               	.LM229:
 2500 0a60 6091 0000 		lds r22,__iob+2
 2501 0a64 7091 0000 		lds r23,(__iob+2)+1
 2502 0a68 8DE0      		ldi r24,lo8(13)
 2503 0a6a 90E0      		ldi r25,hi8(13)
 2504 0a6c 0E94 0000 		call fputc
 275:../../../src/net/isa/uart/command-interpreter.c **** 		putchar('\n');
 2506               	.LM230:
 2507 0a70 6091 0000 		lds r22,__iob+2
 2508 0a74 7091 0000 		lds r23,(__iob+2)+1
 2509 0a78 8AE0      		ldi r24,lo8(10)
 2510 0a7a 90E0      		ldi r25,hi8(10)
 2511 0a7c 0E94 0000 		call fputc
 2512               	/* epilogue start */
 277:../../../src/net/isa/uart/command-interpreter.c **** 	}
 2514               	.LM231:
 2515 0a80 DF91      		pop r29
 2516 0a82 CF91      		pop r28
 2517 0a84 1F91      		pop r17
 2518 0a86 0F91      		pop r16
 2519 0a88 0895      		ret
 2521               	.Lscope23:
 2523               		.stabd	78,0,0
 2526               	.global	emberSerialReadByte
 2528               	emberSerialReadByte:
 2529               		.stabd	46,0,0
 385:../../../src/net/isa/uart/command-interpreter.c **** {
 2531               	.LM232:
 2532               	.LFBB24:
 2533 0a8a CF93      		push r28
 2534 0a8c DF93      		push r29
 2535               	/* prologue: function */
 2536               	/* frame size = 0 */
 2537 0a8e EC01      		movw r28,r24
 387:../../../src/net/isa/uart/command-interpreter.c **** 	if (nrk_uart_data_ready(NRK_DEFAULT_UART)!=0)
 2539               	.LM233:
 2540 0a90 81E0      		ldi r24,lo8(1)
 2541 0a92 0E94 0000 		call nrk_uart_data_ready
 2542 0a96 8823      		tst r24
 2543 0a98 01F0      		breq .L159
 388:../../../src/net/isa/uart/command-interpreter.c ****   ch = getchar();
 2545               	.LM234:
 2546 0a9a 8091 0000 		lds r24,__iob
 2547 0a9e 9091 0000 		lds r25,(__iob)+1
 2548 0aa2 0E94 0000 		call fgetc
 390:../../../src/net/isa/uart/command-interpreter.c ****   if(ch<0) {
 2550               	.LM235:
 2551 0aa6 87FD      		sbrc r24,7
 2552 0aa8 00C0      		rjmp .L159
 393:../../../src/net/isa/uart/command-interpreter.c ****   *dataByte = (uint8_t)ch;
 2554               	.LM236:
 2555 0aaa 8883      		st Y,r24
 2556 0aac 80E0      		ldi r24,lo8(0)
 394:../../../src/net/isa/uart/command-interpreter.c ****   return EMBER_SUCCESS;
 2558               	.LM237:
 2559 0aae 00C0      		rjmp .L160
 2560               	.L159:
 2561 0ab0 86E2      		ldi r24,lo8(38)
 2562               	.L160:
 2563               	/* epilogue start */
 395:../../../src/net/isa/uart/command-interpreter.c **** }
 2565               	.LM238:
 2566 0ab2 DF91      		pop r29
 2567 0ab4 CF91      		pop r28
 2568 0ab6 0895      		ret
 2570               	.Lscope24:
 2572               		.stabd	78,0,0
 2576               	.global	emberProcessCommandString
 2578               	emberProcessCommandString:
 2579               		.stabd	46,0,0
 405:../../../src/net/isa/uart/command-interpreter.c **** {
 2581               	.LM239:
 2582               	.LFBB25:
 2583 0ab8 4F92      		push r4
 2584 0aba 5F92      		push r5
 2585 0abc 7F92      		push r7
 2586 0abe 8F92      		push r8
 2587 0ac0 9F92      		push r9
 2588 0ac2 AF92      		push r10
 2589 0ac4 BF92      		push r11
 2590 0ac6 CF92      		push r12
 2591 0ac8 DF92      		push r13
 2592 0aca EF92      		push r14
 2593 0acc FF92      		push r15
 2594 0ace 0F93      		push r16
 2595 0ad0 1F93      		push r17
 2596 0ad2 DF93      		push r29
 2597 0ad4 CF93      		push r28
 2598 0ad6 0F92      		push __tmp_reg__
 2599 0ad8 CDB7      		in r28,__SP_L__
 2600 0ada DEB7      		in r29,__SP_H__
 2601               	/* prologue: function */
 2602               	/* frame size = 1 */
 2603 0adc 8C01      		movw r16,r24
 2604 0ade D62E      		mov r13,r22
 405:../../../src/net/isa/uart/command-interpreter.c **** {
 2606               	.LM240:
 2607 0ae0 FF24      		clr r15
 2608               	.LBB115:
 413:../../../src/net/isa/uart/command-interpreter.c ****       switch (emberSerialReadByte(&next)) {
 2610               	.LM241:
 2611 0ae2 2E01      		movw r4,r28
 2612 0ae4 0894      		sec
 2613 0ae6 411C      		adc r4,__zero_reg__
 2614 0ae8 511C      		adc r5,__zero_reg__
 419:../../../src/net/isa/uart/command-interpreter.c ****         commandState.error = EMBER_CMD_ERR_PORT_PROBLEM;
 2616               	.LM242:
 2617 0aea BB24      		clr r11
 2618 0aec B394      		inc r11
 529:../../../src/net/isa/uart/command-interpreter.c ****         commandState.error = EMBER_CMD_ERR_STRING_TOO_LONG;
 2620               	.LM243:
 2621 0aee 26E0      		ldi r18,lo8(6)
 2622 0af0 722E      		mov r7,r18
 516:../../../src/net/isa/uart/command-interpreter.c ****         commandState.error = EMBER_CMD_ERR_WRONG_NUMBER_OF_ARGUMENTS;
 2624               	.LM244:
 2625 0af2 93E0      		ldi r25,lo8(3)
 2626 0af4 C92E      		mov r12,r25
 470:../../../src/net/isa/uart/command-interpreter.c ****         commandState.error = EMBER_CMD_ERR_ARGUMENT_SYNTAX_ERROR;
 2628               	.LM245:
 2629 0af6 85E0      		ldi r24,lo8(5)
 2630 0af8 E82E      		mov r14,r24
 2631               	.LBB116:
 2632               	.LBB117:
 489:../../../src/net/isa/uart/command-interpreter.c ****             commandState.hexHighNibble = 0xFF;
 2634               	.LM246:
 2635 0afa 8824      		clr r8
 2636 0afc 8A94      		dec r8
 2637               	.LBE117:
 2638               	.LBE116:
 449:../../../src/net/isa/uart/command-interpreter.c ****           commandState.state = CMD_READING_STRING;
 2640               	.LM247:
 2641 0afe B2E0      		ldi r27,lo8(2)
 2642 0b00 9B2E      		mov r9,r27
 503:../../../src/net/isa/uart/command-interpreter.c ****       commandState.state = CMD_READING_TO_EOL;
 2644               	.LM248:
 2645 0b02 A4E0      		ldi r26,lo8(4)
 2646 0b04 AA2E      		mov r10,r26
 2647               	.L202:
 412:../../../src/net/isa/uart/command-interpreter.c ****     if (input == NULL) {
 2649               	.LM249:
 2650 0b06 0115      		cp r16,__zero_reg__
 2651 0b08 1105      		cpc r17,__zero_reg__
 2652 0b0a 01F4      		brne .L164
 413:../../../src/net/isa/uart/command-interpreter.c ****       switch (emberSerialReadByte(&next)) {
 2654               	.LM250:
 2655 0b0c C201      		movw r24,r4
 2656 0b0e 0E94 0000 		call emberSerialReadByte
 2657 0b12 8823      		tst r24
 2658 0b14 01F0      		breq .L166
 2659 0b16 8632      		cpi r24,lo8(38)
 2660 0b18 01F4      		brne .+2
 2661 0b1a 00C0      		rjmp .L167
 419:../../../src/net/isa/uart/command-interpreter.c ****         commandState.error = EMBER_CMD_ERR_PORT_PROBLEM;
 2663               	.LM251:
 2664 0b1c B092 0000 		sts commandState+47,r11
 420:../../../src/net/isa/uart/command-interpreter.c ****         goto READING_TO_EOL;
 2666               	.LM252:
 2667 0b20 00C0      		rjmp .L168
 2668               	.L164:
 422:../../../src/net/isa/uart/command-interpreter.c ****     } else if (sizeOrPort == 0) {
 2670               	.LM253:
 2671 0b22 DD20      		tst r13
 2672 0b24 01F4      		brne .+2
 2673 0b26 00C0      		rjmp .L167
 425:../../../src/net/isa/uart/command-interpreter.c ****       next = *input;
 2675               	.LM254:
 2676 0b28 F801      		movw r30,r16
 2677 0b2a 8191      		ld r24,Z+
 2678 0b2c 8F01      		movw r16,r30
 2679 0b2e 8983      		std Y+1,r24
 427:../../../src/net/isa/uart/command-interpreter.c ****       sizeOrPort -= 1;
 2681               	.LM255:
 2682 0b30 DA94      		dec r13
 2683               	.L166:
 432:../../../src/net/isa/uart/command-interpreter.c ****     if (previousCharacter == '\r' && next == '\n') {
 2685               	.LM256:
 2686 0b32 8091 0000 		lds r24,previousCharacter
 2687 0b36 8D30      		cpi r24,lo8(13)
 2688 0b38 01F4      		brne .L169
 2689 0b3a 8981      		ldd r24,Y+1
 2690 0b3c 8A30      		cpi r24,lo8(10)
 2691 0b3e 01F4      		brne .L169
 433:../../../src/net/isa/uart/command-interpreter.c ****       previousCharacter = next;
 2693               	.LM257:
 2694 0b40 8093 0000 		sts previousCharacter,r24
 434:../../../src/net/isa/uart/command-interpreter.c ****       continue;
 2696               	.LM258:
 2697 0b44 00C0      		rjmp .L202
 2698               	.L169:
 436:../../../src/net/isa/uart/command-interpreter.c ****     previousCharacter = next;
 2700               	.LM259:
 2701 0b46 8981      		ldd r24,Y+1
 2702 0b48 8093 0000 		sts previousCharacter,r24
 437:../../../src/net/isa/uart/command-interpreter.c ****     isEol = ((next == '\r') || (next == '\n'));
 2704               	.LM260:
 2705 0b4c 8D30      		cpi r24,lo8(13)
 2706 0b4e 01F0      		breq .L204
 2707 0b50 20E0      		ldi r18,lo8(0)
 2708 0b52 30E0      		ldi r19,hi8(0)
 2709 0b54 8A30      		cpi r24,lo8(10)
 2710 0b56 01F4      		brne .L171
 2711               	.L204:
 2712 0b58 21E0      		ldi r18,lo8(1)
 2713 0b5a 30E0      		ldi r19,hi8(1)
 2714               	.L171:
 2715 0b5c F22E      		mov r15,r18
 438:../../../src/net/isa/uart/command-interpreter.c ****     isSpace = (next == ' ');
 2717               	.LM261:
 2718 0b5e 20E0      		ldi r18,lo8(0)
 2719 0b60 8032      		cpi r24,lo8(32)
 2720 0b62 01F4      		brne .L173
 2721 0b64 21E0      		ldi r18,lo8(1)
 2722               	.L173:
 439:../../../src/net/isa/uart/command-interpreter.c ****     isQuote = (next == '"');
 2724               	.LM262:
 2725 0b66 30E0      		ldi r19,lo8(0)
 2726 0b68 8232      		cpi r24,lo8(34)
 2727 0b6a 01F4      		brne .L174
 2728 0b6c 31E0      		ldi r19,lo8(1)
 2729               	.L174:
 442:../../../src/net/isa/uart/command-interpreter.c ****     switch (commandState.state) {
 2731               	.LM263:
 2732 0b6e 9091 0000 		lds r25,commandState
 2733 0b72 9230      		cpi r25,lo8(2)
 2734 0b74 01F0      		breq .L177
 2735 0b76 9330      		cpi r25,lo8(3)
 2736 0b78 00F4      		brsh .L180
 2737 0b7a 9923      		tst r25
 2738 0b7c 01F0      		breq .L175
 2739 0b7e 9130      		cpi r25,lo8(1)
 2740 0b80 01F4      		brne .L202
 2741 0b82 00C0      		rjmp .L207
 2742               	.L180:
 2743 0b84 9330      		cpi r25,lo8(3)
 2744 0b86 01F0      		breq .L178
 2745 0b88 9430      		cpi r25,lo8(4)
 2746 0b8a 01F0      		breq .+2
 2747 0b8c 00C0      		rjmp .L202
 2748 0b8e 00C0      		rjmp .L179
 2749               	.L175:
 445:../../../src/net/isa/uart/command-interpreter.c ****       if (isEol) {
 2751               	.LM264:
 2752 0b90 FF20      		tst r15
 2753 0b92 01F0      		breq .+2
 2754 0b94 00C0      		rjmp .L203
 447:../../../src/net/isa/uart/command-interpreter.c ****       } else if (! isSpace) {
 2756               	.LM265:
 2757 0b96 2223      		tst r18
 2758 0b98 01F0      		breq .+2
 2759 0b9a 00C0      		rjmp .L202
 448:../../../src/net/isa/uart/command-interpreter.c ****         if (isQuote) {
 2761               	.LM266:
 2762 0b9c 3323      		tst r19
 2763 0b9e 01F0      		breq .L182
 449:../../../src/net/isa/uart/command-interpreter.c ****           commandState.state = CMD_READING_STRING;
 2765               	.LM267:
 2766 0ba0 9092 0000 		sts commandState,r9
 2767 0ba4 00C0      		rjmp .L183
 2768               	.L182:
 450:../../../src/net/isa/uart/command-interpreter.c ****         } else if (next == '{') {
 2770               	.LM268:
 2771 0ba6 8B37      		cpi r24,lo8(123)
 2772 0ba8 01F4      		brne .L184
 451:../../../src/net/isa/uart/command-interpreter.c ****           commandState.state = CMD_READING_HEX_STRING;
 2774               	.LM269:
 2775 0baa C092 0000 		sts commandState,r12
 2776 0bae 00C0      		rjmp .L183
 2777               	.L184:
 453:../../../src/net/isa/uart/command-interpreter.c ****           commandState.state = CMD_READING_ARGUMENT;
 2779               	.LM270:
 2780 0bb0 B092 0000 		sts commandState,r11
 2781 0bb4 00C0      		rjmp .L183
 2782               	.L207:
 460:../../../src/net/isa/uart/command-interpreter.c ****       if (isEol || isSpace) {
 2784               	.LM271:
 2785 0bb6 FF20      		tst r15
 2786 0bb8 01F0      		breq .+2
 2787 0bba 00C0      		rjmp .L185
 2788 0bbc 2223      		tst r18
 2789 0bbe 01F0      		breq .+2
 2790 0bc0 00C0      		rjmp .L185
 2791 0bc2 00C0      		rjmp .L183
 2792               	.L177:
 467:../../../src/net/isa/uart/command-interpreter.c ****       if (isQuote) {
 2794               	.LM272:
 2795 0bc4 3323      		tst r19
 2796 0bc6 01F0      		breq .+2
 2797 0bc8 00C0      		rjmp .L185
 469:../../../src/net/isa/uart/command-interpreter.c ****       } else if (isEol) {
 2799               	.LM273:
 2800 0bca FF20      		tst r15
 2801 0bcc 01F4      		brne .+2
 2802 0bce 00C0      		rjmp .L183
 2803 0bd0 00C0      		rjmp .L205
 2804               	.L178:
 2805               	.LBB121:
 477:../../../src/net/isa/uart/command-interpreter.c ****       bool waitingForLowNibble = (commandState.hexHighNibble != 0xFF);
 2807               	.LM274:
 2808 0bd2 4091 0000 		lds r20,commandState+48
 2809 0bd6 30E0      		ldi r19,lo8(0)
 2810 0bd8 4F3F      		cpi r20,lo8(-1)
 2811 0bda 01F0      		breq .L186
 2812 0bdc 31E0      		ldi r19,lo8(1)
 2813               	.L186:
 478:../../../src/net/isa/uart/command-interpreter.c ****       if (next == '}') {
 2815               	.LM275:
 2816 0bde 8D37      		cpi r24,lo8(125)
 2817 0be0 01F4      		brne .L187
 479:../../../src/net/isa/uart/command-interpreter.c ****         if (waitingForLowNibble) {
 2819               	.LM276:
 2820 0be2 3323      		tst r19
 2821 0be4 01F0      		breq .L185
 2822 0be6 00C0      		rjmp .L205
 2823               	.L187:
 2824               	.LBB120:
 2825               	.LBB118:
 2826               	.LBB119:
 367:../../../src/net/isa/uart/command-interpreter.c ****   return ch - (ch >= 'a' ? 'a' - 10
 2828               	.LM277:
 2829 0be8 8136      		cpi r24,lo8(97)
 2830 0bea 00F0      		brlo .L188
 2831 0bec 97E5      		ldi r25,lo8(87)
 2832 0bee 00C0      		rjmp .L189
 2833               	.L188:
 2834 0bf0 8134      		cpi r24,lo8(65)
 2835 0bf2 00F0      		brlo .L190
 2836 0bf4 97E3      		ldi r25,lo8(55)
 2837 0bf6 00C0      		rjmp .L189
 2838               	.L190:
 2839 0bf8 8A33      		cpi r24,lo8(58)
 2840 0bfa 00F0      		brlo .L191
 2841 0bfc 90E0      		ldi r25,lo8(0)
 2842 0bfe 00C0      		rjmp .L189
 2843               	.L191:
 2844 0c00 90E3      		ldi r25,lo8(48)
 2845               	.L189:
 2846 0c02 891B      		sub r24,r25
 2847               	.LBE119:
 2848               	.LBE118:
 486:../../../src/net/isa/uart/command-interpreter.c ****         if (value < 16) {
 2850               	.LM278:
 2851 0c04 8031      		cpi r24,lo8(16)
 2852 0c06 00F4      		brsh .L192
 487:../../../src/net/isa/uart/command-interpreter.c ****           if (waitingForLowNibble) {
 2854               	.LM279:
 2855 0c08 3323      		tst r19
 2856 0c0a 01F0      		breq .L193
 488:../../../src/net/isa/uart/command-interpreter.c ****             next = (commandState.hexHighNibble << 4) + value;
 2858               	.LM280:
 2859 0c0c 942F      		mov r25,r20
 2860 0c0e 9295      		swap r25
 2861 0c10 907F      		andi r25,lo8(-16)
 2862 0c12 980F      		add r25,r24
 2863 0c14 9983      		std Y+1,r25
 489:../../../src/net/isa/uart/command-interpreter.c ****             commandState.hexHighNibble = 0xFF;
 2865               	.LM281:
 2866 0c16 8092 0000 		sts commandState+48,r8
 490:../../../src/net/isa/uart/command-interpreter.c ****             goto WRITE_TO_BUFFER;
 2868               	.LM282:
 2869 0c1a 00C0      		rjmp .L183
 2870               	.L193:
 492:../../../src/net/isa/uart/command-interpreter.c ****             commandState.hexHighNibble = value;
 2872               	.LM283:
 2873 0c1c 8093 0000 		sts commandState+48,r24
 2874 0c20 00C0      		rjmp .L202
 2875               	.L192:
 494:../../../src/net/isa/uart/command-interpreter.c ****         } else if (! isSpace) {
 2877               	.LM284:
 2878 0c22 2223      		tst r18
 2879 0c24 01F0      		breq .+2
 2880 0c26 00C0      		rjmp .L202
 2881               	.L205:
 495:../../../src/net/isa/uart/command-interpreter.c ****           commandState.error = EMBER_CMD_ERR_ARGUMENT_SYNTAX_ERROR;
 2883               	.LM285:
 2884 0c28 E092 0000 		sts commandState+47,r14
 2885               	.L168:
 2886               	.LBE120:
 2887               	.LBE121:
 503:../../../src/net/isa/uart/command-interpreter.c ****       commandState.state = CMD_READING_TO_EOL;
 2889               	.LM286:
 2890 0c2c A092 0000 		sts commandState,r10
 2891               	.L179:
 506:../../../src/net/isa/uart/command-interpreter.c ****       if (isEol) {
 2893               	.LM287:
 2894 0c30 FF20      		tst r15
 2895 0c32 01F4      		brne .+2
 2896 0c34 00C0      		rjmp .L202
 507:../../../src/net/isa/uart/command-interpreter.c ****         if (commandState.error != EMBER_CMD_SUCCESS) {
 2898               	.LM288:
 2899 0c36 8091 0000 		lds r24,commandState+47
 2900 0c3a 8823      		tst r24
 2901 0c3c 01F0      		breq .L194
 508:../../../src/net/isa/uart/command-interpreter.c ****           emberCommandErrorHandler(commandState.error);
 2903               	.LM289:
 2904 0c3e 0E94 0000 		call emberCommandErrorHandler
 2905               	.L194:
 510:../../../src/net/isa/uart/command-interpreter.c ****         emberCommandReaderInit();
 2907               	.LM290:
 2908 0c42 0E94 0000 		call emberCommandReaderInit
 2909 0c46 00C0      		rjmp .L202
 2910               	.L185:
 515:../../../src/net/isa/uart/command-interpreter.c ****       if (commandState.tokenCount == MAX_TOKEN_COUNT) {
 2912               	.LM291:
 2913 0c48 E091 0000 		lds r30,commandState+45
 2914 0c4c EB30      		cpi r30,lo8(11)
 2915 0c4e 01F4      		brne .L195
 516:../../../src/net/isa/uart/command-interpreter.c ****         commandState.error = EMBER_CMD_ERR_WRONG_NUMBER_OF_ARGUMENTS;
 2917               	.LM292:
 2918 0c50 C092 0000 		sts commandState+47,r12
 517:../../../src/net/isa/uart/command-interpreter.c ****         goto READING_TO_EOL;
 2920               	.LM293:
 2921 0c54 00C0      		rjmp .L168
 2922               	.L195:
 519:../../../src/net/isa/uart/command-interpreter.c ****       commandState.tokenCount += 1;
 2924               	.LM294:
 2925 0c56 EF5F      		subi r30,lo8(-(1))
 2926 0c58 E093 0000 		sts commandState+45,r30
 520:../../../src/net/isa/uart/command-interpreter.c ****       commandState.tokenIndices[commandState.tokenCount] = commandState.index;
 2928               	.LM295:
 2929 0c5c F0E0      		ldi r31,lo8(0)
 2930 0c5e E050      		subi r30,lo8(-(commandState))
 2931 0c60 F040      		sbci r31,hi8(-(commandState))
 2932 0c62 8091 0000 		lds r24,commandState+46
 2933 0c66 81A3      		std Z+33,r24
 521:../../../src/net/isa/uart/command-interpreter.c ****       commandState.state = CMD_AWAITING_ARGUMENT;
 2935               	.LM296:
 2936 0c68 1092 0000 		sts commandState,__zero_reg__
 522:../../../src/net/isa/uart/command-interpreter.c ****       if (isEol) {
 2938               	.LM297:
 2939 0c6c FF20      		tst r15
 2940 0c6e 01F4      		brne .+2
 2941 0c70 00C0      		rjmp .L202
 2942               	.L203:
 523:../../../src/net/isa/uart/command-interpreter.c ****         callCommandAction();
 2944               	.LM298:
 2945 0c72 0E94 0000 		call callCommandAction
 2946 0c76 00C0      		rjmp .L202
 2947               	.L183:
 528:../../../src/net/isa/uart/command-interpreter.c ****       if (commandState.index == EMBER_COMMAND_BUFFER_LENGTH) {
 2949               	.LM299:
 2950 0c78 E091 0000 		lds r30,commandState+46
 2951 0c7c E032      		cpi r30,lo8(32)
 2952 0c7e 01F4      		brne .L196
 529:../../../src/net/isa/uart/command-interpreter.c ****         commandState.error = EMBER_CMD_ERR_STRING_TOO_LONG;
 2954               	.LM300:
 2955 0c80 7092 0000 		sts commandState+47,r7
 530:../../../src/net/isa/uart/command-interpreter.c ****         goto READING_TO_EOL;
 2957               	.LM301:
 2958 0c84 00C0      		rjmp .L168
 2959               	.L196:
 532:../../../src/net/isa/uart/command-interpreter.c ****       if (commandState.state == CMD_READING_ARGUMENT) {
 2961               	.LM302:
 2962 0c86 8091 0000 		lds r24,commandState
 2963 0c8a 8130      		cpi r24,lo8(1)
 2964 0c8c 01F4      		brne .L197
 533:../../../src/net/isa/uart/command-interpreter.c ****         next = charDowncase(next);
 2966               	.LM303:
 2967 0c8e 8981      		ldd r24,Y+1
 2968               	.LBB122:
 2969               	.LBB123:
 574:../../../src/net/isa/uart/command-interpreter.c ****   if ('A' <= c && c <= 'Z')
 2971               	.LM304:
 2972 0c90 982F      		mov r25,r24
 2973 0c92 9154      		subi r25,lo8(-(-65))
 2974 0c94 9A31      		cpi r25,lo8(26)
 2975 0c96 00F4      		brsh .L198
 575:../../../src/net/isa/uart/command-interpreter.c ****     return c + 'a' - 'A';
 2977               	.LM305:
 2978 0c98 805E      		subi r24,lo8(-(32))
 2979               	.L198:
 2980               	.LBE123:
 2981               	.LBE122:
 533:../../../src/net/isa/uart/command-interpreter.c ****         next = charDowncase(next);
 2983               	.LM306:
 2984 0c9a 8983      		std Y+1,r24
 2985               	.L197:
 535:../../../src/net/isa/uart/command-interpreter.c ****       commandState.buffer[commandState.index] = next;
 2987               	.LM307:
 2988 0c9c F0E0      		ldi r31,lo8(0)
 2989 0c9e E050      		subi r30,lo8(-(commandState))
 2990 0ca0 F040      		sbci r31,hi8(-(commandState))
 2991 0ca2 8981      		ldd r24,Y+1
 2992 0ca4 8183      		std Z+1,r24
 536:../../../src/net/isa/uart/command-interpreter.c ****       commandState.index += 1;
 2994               	.LM308:
 2995 0ca6 8091 0000 		lds r24,commandState+46
 2996 0caa 8F5F      		subi r24,lo8(-(1))
 2997 0cac 8093 0000 		sts commandState+46,r24
 2998 0cb0 00C0      		rjmp .L202
 2999               	.L167:
 3000               	.LBE115:
 543:../../../src/net/isa/uart/command-interpreter.c **** }
 3002               	.LM309:
 3003 0cb2 8F2D      		mov r24,r15
 3004               	/* epilogue start */
 3005 0cb4 0F90      		pop __tmp_reg__
 3006 0cb6 CF91      		pop r28
 3007 0cb8 DF91      		pop r29
 3008 0cba 1F91      		pop r17
 3009 0cbc 0F91      		pop r16
 3010 0cbe FF90      		pop r15
 3011 0cc0 EF90      		pop r14
 3012 0cc2 DF90      		pop r13
 3013 0cc4 CF90      		pop r12
 3014 0cc6 BF90      		pop r11
 3015 0cc8 AF90      		pop r10
 3016 0cca 9F90      		pop r9
 3017 0ccc 8F90      		pop r8
 3018 0cce 7F90      		pop r7
 3019 0cd0 5F90      		pop r5
 3020 0cd2 4F90      		pop r4
 3021 0cd4 0895      		ret
 3046               	.Lscope25:
 3048               		.stabd	78,0,0
 3050               	.global	sendConfigLink
 3052               	sendConfigLink:
 3053               		.stabd	46,0,0
 179:../../../src/net/isa/uart/command-interpreter.c **** void sendConfigLink(void){
 3055               	.LM310:
 3056               	.LFBB26:
 3057 0cd6 9F92      		push r9
 3058 0cd8 AF92      		push r10
 3059 0cda BF92      		push r11
 3060 0cdc CF92      		push r12
 3061 0cde DF92      		push r13
 3062 0ce0 EF92      		push r14
 3063 0ce2 FF92      		push r15
 3064 0ce4 0F93      		push r16
 3065 0ce6 1F93      		push r17
 3066 0ce8 DF93      		push r29
 3067 0cea CF93      		push r28
 3068 0cec 0F92      		push __tmp_reg__
 3069 0cee CDB7      		in r28,__SP_L__
 3070 0cf0 DEB7      		in r29,__SP_H__
 3071               	/* prologue: function */
 3072               	/* frame size = 1 */
 181:../../../src/net/isa/uart/command-interpreter.c **** 	uint16_t destId = emberUnsignedCommandArgument(0);
 3074               	.LM311:
 3075 0cf2 80E0      		ldi r24,lo8(0)
 3076 0cf4 0E94 0000 		call emberUnsignedCommandArgument
 182:../../../src/net/isa/uart/command-interpreter.c **** 			if (destId == dmo.dlAddress) {
 3078               	.LM312:
 3079 0cf8 2091 0000 		lds r18,dmo
 3080 0cfc 3091 0000 		lds r19,(dmo)+1
 3081 0d00 2617      		cp r18,r22
 3082 0d02 3707      		cpc r19,r23
 3083 0d04 01F4      		brne .L209
 183:../../../src/net/isa/uart/command-interpreter.c **** 				addLink(emberUnsignedCommandArgument(2),emberUnsignedCommandArgument(3),emberUnsignedCommandArg
 3085               	.LM313:
 3086 0d06 82E0      		ldi r24,lo8(2)
 3087 0d08 0E94 0000 		call emberUnsignedCommandArgument
 3088 0d0c 962E      		mov r9,r22
 3089 0d0e 83E0      		ldi r24,lo8(3)
 3090 0d10 0E94 0000 		call emberUnsignedCommandArgument
 3091 0d14 5B01      		movw r10,r22
 3092 0d16 6C01      		movw r12,r24
 3093 0d18 84E0      		ldi r24,lo8(4)
 3094 0d1a 0E94 0000 		call emberUnsignedCommandArgument
 3095 0d1e 7B01      		movw r14,r22
 3096 0d20 8C01      		movw r16,r24
 3097 0d22 85E0      		ldi r24,lo8(5)
 3098 0d24 0E94 0000 		call emberUnsignedCommandArgument
 3099 0d28 262F      		mov r18,r22
 3100 0d2a 86E0      		ldi r24,lo8(6)
 3101 0d2c 2983      		std Y+1,r18
 3102 0d2e 0E94 0000 		call emberUnsignedCommandArgument
 3103 0d32 962F      		mov r25,r22
 3104 0d34 892D      		mov r24,r9
 3105 0d36 B501      		movw r22,r10
 3106 0d38 A701      		movw r20,r14
 3107 0d3a 2981      		ldd r18,Y+1
 3108 0d3c 092F      		mov r16,r25
 3109 0d3e 0E94 0000 		call addLink
 184:../../../src/net/isa/uart/command-interpreter.c **** 				return;
 3111               	.LM314:
 3112 0d42 00C0      		rjmp .L211
 3113               	.L209:
 189:../../../src/net/isa/uart/command-interpreter.c **** 	message->type = ADD_LINK;
 3115               	.LM315:
 3116 0d44 84E0      		ldi r24,lo8(4)
 3117 0d46 8093 0000 		sts tx_buf+7,r24
 190:../../../src/net/isa/uart/command-interpreter.c **** 	CONFIG_LINK* configLink = &message->data;
 3119               	.LM316:
 3120 0d4a 30E0      		ldi r19,lo8(tx_buf+8)
 3121 0d4c A32E      		mov r10,r19
 3122 0d4e 30E0      		ldi r19,hi8(tx_buf+8)
 3123 0d50 B32E      		mov r11,r19
 191:../../../src/net/isa/uart/command-interpreter.c **** 	configLink->slotNumber =  emberUnsignedCommandArgument(2);
 3125               	.LM317:
 3126 0d52 82E0      		ldi r24,lo8(2)
 3127 0d54 0E94 0000 		call emberUnsignedCommandArgument
 3128 0d58 6093 0000 		sts tx_buf+8,r22
 192:../../../src/net/isa/uart/command-interpreter.c **** 	configLink->neighborId = emberUnsignedCommandArgument(3);
 3130               	.LM318:
 3131 0d5c 83E0      		ldi r24,lo8(3)
 3132 0d5e 0E94 0000 		call emberUnsignedCommandArgument
 3133 0d62 F501      		movw r30,r10
 3134 0d64 7283      		std Z+2,r23
 3135 0d66 6183      		std Z+1,r22
 193:../../../src/net/isa/uart/command-interpreter.c **** 	configLink->graphId = emberUnsignedCommandArgument(4);
 3137               	.LM319:
 3138 0d68 84E0      		ldi r24,lo8(4)
 3139 0d6a 0E94 0000 		call emberUnsignedCommandArgument
 3140 0d6e F501      		movw r30,r10
 3141 0d70 6383      		std Z+3,r22
 194:../../../src/net/isa/uart/command-interpreter.c **** 	configLink->linkType = emberUnsignedCommandArgument(5);
 3143               	.LM320:
 3144 0d72 85E0      		ldi r24,lo8(5)
 3145 0d74 0E94 0000 		call emberUnsignedCommandArgument
 3146 0d78 F501      		movw r30,r10
 3147 0d7a 6483      		std Z+4,r22
 195:../../../src/net/isa/uart/command-interpreter.c **** 	configLink->graphType = emberUnsignedCommandArgument(6);
 3149               	.LM321:
 3150 0d7c 86E0      		ldi r24,lo8(6)
 3151 0d7e 0E94 0000 		call emberUnsignedCommandArgument
 3152 0d82 F501      		movw r30,r10
 3153 0d84 6583      		std Z+5,r22
 197:../../../src/net/isa/uart/command-interpreter.c **** 	sendPacket(emberUnsignedCommandArgument(0),emberUnsignedCommandArgument(1), length, tx_buf, NULL);
 3155               	.LM322:
 3156 0d86 80E0      		ldi r24,lo8(0)
 3157 0d88 0E94 0000 		call emberUnsignedCommandArgument
 3158 0d8c 7B01      		movw r14,r22
 3159 0d8e 8C01      		movw r16,r24
 3160 0d90 81E0      		ldi r24,lo8(1)
 3161 0d92 0E94 0000 		call emberUnsignedCommandArgument
 3162 0d96 C701      		movw r24,r14
 3163 0d98 4EE0      		ldi r20,lo8(14)
 3164 0d9a 9501      		movw r18,r10
 3165 0d9c 2850      		subi r18,lo8(-(-8))
 3166 0d9e 3040      		sbci r19,hi8(-(-8))
 3167 0da0 00E0      		ldi r16,lo8(0)
 3168 0da2 10E0      		ldi r17,hi8(0)
 3169 0da4 0E94 0000 		call sendPacket
 3170               	.L211:
 3171               	/* epilogue start */
 199:../../../src/net/isa/uart/command-interpreter.c **** }
 3173               	.LM323:
 3174 0da8 0F90      		pop __tmp_reg__
 3175 0daa CF91      		pop r28
 3176 0dac DF91      		pop r29
 3177 0dae 1F91      		pop r17
 3178 0db0 0F91      		pop r16
 3179 0db2 FF90      		pop r15
 3180 0db4 EF90      		pop r14
 3181 0db6 DF90      		pop r13
 3182 0db8 CF90      		pop r12
 3183 0dba BF90      		pop r11
 3184 0dbc AF90      		pop r10
 3185 0dbe 9F90      		pop r9
 3186 0dc0 0895      		ret
 3191               	.Lscope26:
 3193               		.stabd	78,0,0
 3195               	.global	flushCandidateTable
 3197               	flushCandidateTable:
 3198               		.stabd	46,0,0
 140:../../../src/net/isa/uart/command-interpreter.c **** void flushCandidateTable(void){
 3200               	.LM324:
 3201               	.LFBB27:
 3202 0dc2 EF92      		push r14
 3203 0dc4 FF92      		push r15
 3204 0dc6 0F93      		push r16
 3205 0dc8 1F93      		push r17
 3206               	/* prologue: function */
 3207               	/* frame size = 0 */
 142:../../../src/net/isa/uart/command-interpreter.c **** 	uint16_t destId = emberUnsignedCommandArgument(0);
 3209               	.LM325:
 3210 0dca 80E0      		ldi r24,lo8(0)
 3211 0dcc 0E94 0000 		call emberUnsignedCommandArgument
 3212 0dd0 7B01      		movw r14,r22
 3213 0dd2 8C01      		movw r16,r24
 143:../../../src/net/isa/uart/command-interpreter.c **** 	if (destId == dmo.dlAddress) {
 3215               	.LM326:
 3216 0dd4 8091 0000 		lds r24,dmo
 3217 0dd8 9091 0000 		lds r25,(dmo)+1
 3218 0ddc 8E15      		cp r24,r14
 3219 0dde 9F05      		cpc r25,r15
 3220 0de0 01F0      		breq .L214
 150:../../../src/net/isa/uart/command-interpreter.c **** 	message->type = FLUSH_CANDIDATE_TABLE;
 3222               	.LM327:
 3223 0de2 85E0      		ldi r24,lo8(5)
 3224 0de4 8093 0000 		sts tx_buf+7,r24
 154:../../../src/net/isa/uart/command-interpreter.c **** 	sendPacket(destId,emberUnsignedCommandArgument(1), length, tx_buf, NULL);
 3226               	.LM328:
 3227 0de8 81E0      		ldi r24,lo8(1)
 3228 0dea 0E94 0000 		call emberUnsignedCommandArgument
 3229 0dee C701      		movw r24,r14
 3230 0df0 49E0      		ldi r20,lo8(9)
 3231 0df2 20E0      		ldi r18,lo8(tx_buf)
 3232 0df4 30E0      		ldi r19,hi8(tx_buf)
 3233 0df6 00E0      		ldi r16,lo8(0)
 3234 0df8 10E0      		ldi r17,hi8(0)
 3235 0dfa 0E94 0000 		call sendPacket
 3236               	.L214:
 3237               	/* epilogue start */
 156:../../../src/net/isa/uart/command-interpreter.c **** }
 3239               	.LM329:
 3240 0dfe 1F91      		pop r17
 3241 0e00 0F91      		pop r16
 3242 0e02 FF90      		pop r15
 3243 0e04 EF90      		pop r14
 3244 0e06 0895      		ret
 3246               	.Lscope27:
 3248               		.stabd	78,0,0
 3250               	.global	sendConfigGraph
 3252               	sendConfigGraph:
 3253               		.stabd	46,0,0
 159:../../../src/net/isa/uart/command-interpreter.c **** void sendConfigGraph(void){
 3255               	.LM330:
 3256               	.LFBB28:
 3257 0e08 4F92      		push r4
 3258 0e0a 5F92      		push r5
 3259 0e0c 6F92      		push r6
 3260 0e0e 7F92      		push r7
 3261 0e10 8F92      		push r8
 3262 0e12 9F92      		push r9
 3263 0e14 AF92      		push r10
 3264 0e16 BF92      		push r11
 3265 0e18 DF92      		push r13
 3266 0e1a EF92      		push r14
 3267 0e1c FF92      		push r15
 3268 0e1e 0F93      		push r16
 3269 0e20 1F93      		push r17
 3270 0e22 DF93      		push r29
 3271 0e24 CF93      		push r28
 3272 0e26 00D0      		rcall .
 3273 0e28 00D0      		rcall .
 3274 0e2a CDB7      		in r28,__SP_L__
 3275 0e2c DEB7      		in r29,__SP_H__
 3276               	/* prologue: function */
 3277               	/* frame size = 4 */
 161:../../../src/net/isa/uart/command-interpreter.c **** 	uint16_t destId = emberUnsignedCommandArgument(0);
 3279               	.LM331:
 3280 0e2e 80E0      		ldi r24,lo8(0)
 3281 0e30 0E94 0000 		call emberUnsignedCommandArgument
 162:../../../src/net/isa/uart/command-interpreter.c **** 		if (destId == dmo.dlAddress) {
 3283               	.LM332:
 3284 0e34 2091 0000 		lds r18,dmo
 3285 0e38 3091 0000 		lds r19,(dmo)+1
 3286 0e3c 2617      		cp r18,r22
 3287 0e3e 3707      		cpc r19,r23
 3288 0e40 01F4      		brne .L216
 163:../../../src/net/isa/uart/command-interpreter.c **** 			addGraph(emberUnsignedCommandArgument(2),emberUnsignedCommandArgument(3),emberUnsignedCommandArg
 3290               	.LM333:
 3291 0e42 82E0      		ldi r24,lo8(2)
 3292 0e44 0E94 0000 		call emberUnsignedCommandArgument
 3293 0e48 4B01      		movw r8,r22
 3294 0e4a 5C01      		movw r10,r24
 3295 0e4c 83E0      		ldi r24,lo8(3)
 3296 0e4e 0E94 0000 		call emberUnsignedCommandArgument
 3297 0e52 D62E      		mov r13,r22
 3298 0e54 84E0      		ldi r24,lo8(4)
 3299 0e56 0E94 0000 		call emberUnsignedCommandArgument
 3300 0e5a 7B01      		movw r14,r22
 3301 0e5c 8C01      		movw r16,r24
 3302 0e5e 85E0      		ldi r24,lo8(5)
 3303 0e60 0E94 0000 		call emberUnsignedCommandArgument
 3304 0e64 6983      		std Y+1,r22
 3305 0e66 7A83      		std Y+2,r23
 3306 0e68 8B83      		std Y+3,r24
 3307 0e6a 9C83      		std Y+4,r25
 3308 0e6c 86E0      		ldi r24,lo8(6)
 3309 0e6e 0E94 0000 		call emberUnsignedCommandArgument
 3310 0e72 2B01      		movw r4,r22
 3311 0e74 3C01      		movw r6,r24
 3312 0e76 C401      		movw r24,r8
 3313 0e78 6D2D      		mov r22,r13
 3314 0e7a A701      		movw r20,r14
 3315 0e7c 2981      		ldd r18,Y+1
 3316 0e7e 3A81      		ldd r19,Y+2
 3317 0e80 8201      		movw r16,r4
 3318 0e82 0E94 0000 		call addGraph
 164:../../../src/net/isa/uart/command-interpreter.c **** 			return;
 3320               	.LM334:
 3321 0e86 00C0      		rjmp .L218
 3322               	.L216:
 169:../../../src/net/isa/uart/command-interpreter.c **** 	message->type = ADD_GRAPH;
 3324               	.LM335:
 3325 0e88 83E0      		ldi r24,lo8(3)
 3326 0e8a 8093 0000 		sts tx_buf+7,r24
 170:../../../src/net/isa/uart/command-interpreter.c **** 	CONFIG_GRAPH* configGraph = &message->data;
 3328               	.LM336:
 3329 0e8e 40E0      		ldi r20,lo8(tx_buf+8)
 3330 0e90 842E      		mov r8,r20
 3331 0e92 40E0      		ldi r20,hi8(tx_buf+8)
 3332 0e94 942E      		mov r9,r20
 171:../../../src/net/isa/uart/command-interpreter.c **** 	configGraph->graphId =  emberUnsignedCommandArgument(2);
 3334               	.LM337:
 3335 0e96 82E0      		ldi r24,lo8(2)
 3336 0e98 0E94 0000 		call emberUnsignedCommandArgument
 3337 0e9c 6093 0000 		sts tx_buf+8,r22
 172:../../../src/net/isa/uart/command-interpreter.c **** 	configGraph->neighborCount = emberUnsignedCommandArgument(3);
 3339               	.LM338:
 3340 0ea0 83E0      		ldi r24,lo8(3)
 3341 0ea2 0E94 0000 		call emberUnsignedCommandArgument
 3342 0ea6 F401      		movw r30,r8
 3343 0ea8 6183      		std Z+1,r22
 173:../../../src/net/isa/uart/command-interpreter.c **** 	configGraph->neigh1 = emberUnsignedCommandArgument(4);
 3345               	.LM339:
 3346 0eaa 84E0      		ldi r24,lo8(4)
 3347 0eac 0E94 0000 		call emberUnsignedCommandArgument
 3348 0eb0 F401      		movw r30,r8
 3349 0eb2 7383      		std Z+3,r23
 3350 0eb4 6283      		std Z+2,r22
 174:../../../src/net/isa/uart/command-interpreter.c **** 	configGraph->neigh2 = emberUnsignedCommandArgument(5);
 3352               	.LM340:
 3353 0eb6 85E0      		ldi r24,lo8(5)
 3354 0eb8 0E94 0000 		call emberUnsignedCommandArgument
 3355 0ebc F401      		movw r30,r8
 3356 0ebe 7583      		std Z+5,r23
 3357 0ec0 6483      		std Z+4,r22
 175:../../../src/net/isa/uart/command-interpreter.c **** 	configGraph->neigh3 = emberUnsignedCommandArgument(6);
 3359               	.LM341:
 3360 0ec2 86E0      		ldi r24,lo8(6)
 3361 0ec4 0E94 0000 		call emberUnsignedCommandArgument
 3362 0ec8 F401      		movw r30,r8
 3363 0eca 7783      		std Z+7,r23
 3364 0ecc 6683      		std Z+6,r22
 177:../../../src/net/isa/uart/command-interpreter.c **** 	sendPacket(emberUnsignedCommandArgument(0),emberUnsignedCommandArgument(1), length, tx_buf, NULL);
 3366               	.LM342:
 3367 0ece 80E0      		ldi r24,lo8(0)
 3368 0ed0 0E94 0000 		call emberUnsignedCommandArgument
 3369 0ed4 7B01      		movw r14,r22
 3370 0ed6 8C01      		movw r16,r24
 3371 0ed8 81E0      		ldi r24,lo8(1)
 3372 0eda 0E94 0000 		call emberUnsignedCommandArgument
 3373 0ede C701      		movw r24,r14
 3374 0ee0 40E1      		ldi r20,lo8(16)
 3375 0ee2 9401      		movw r18,r8
 3376 0ee4 2850      		subi r18,lo8(-(-8))
 3377 0ee6 3040      		sbci r19,hi8(-(-8))
 3378 0ee8 00E0      		ldi r16,lo8(0)
 3379 0eea 10E0      		ldi r17,hi8(0)
 3380 0eec 0E94 0000 		call sendPacket
 3381               	.L218:
 3382               	/* epilogue start */
 178:../../../src/net/isa/uart/command-interpreter.c **** }
 3384               	.LM343:
 3385 0ef0 0F90      		pop __tmp_reg__
 3386 0ef2 0F90      		pop __tmp_reg__
 3387 0ef4 0F90      		pop __tmp_reg__
 3388 0ef6 0F90      		pop __tmp_reg__
 3389 0ef8 CF91      		pop r28
 3390 0efa DF91      		pop r29
 3391 0efc 1F91      		pop r17
 3392 0efe 0F91      		pop r16
 3393 0f00 FF90      		pop r15
 3394 0f02 EF90      		pop r14
 3395 0f04 DF90      		pop r13
 3396 0f06 BF90      		pop r11
 3397 0f08 AF90      		pop r10
 3398 0f0a 9F90      		pop r9
 3399 0f0c 8F90      		pop r8
 3400 0f0e 7F90      		pop r7
 3401 0f10 6F90      		pop r6
 3402 0f12 5F90      		pop r5
 3403 0f14 4F90      		pop r4
 3404 0f16 0895      		ret
 3409               	.Lscope28:
 3411               		.stabd	78,0,0
 3413               	.global	sendConfigNeighbor
 3415               	sendConfigNeighbor:
 3416               		.stabd	46,0,0
 120:../../../src/net/isa/uart/command-interpreter.c **** void sendConfigNeighbor(void){
 3418               	.LM344:
 3419               	.LFBB29:
 3420 0f18 8F92      		push r8
 3421 0f1a AF92      		push r10
 3422 0f1c CF92      		push r12
 3423 0f1e EF92      		push r14
 3424 0f20 FF92      		push r15
 3425 0f22 0F93      		push r16
 3426 0f24 1F93      		push r17
 3427               	/* prologue: function */
 3428               	/* frame size = 0 */
 123:../../../src/net/isa/uart/command-interpreter.c **** 	uint16_t destId = emberUnsignedCommandArgument(0);
 3430               	.LM345:
 3431 0f26 80E0      		ldi r24,lo8(0)
 3432 0f28 0E94 0000 		call emberUnsignedCommandArgument
 3433 0f2c 7B01      		movw r14,r22
 3434 0f2e 8C01      		movw r16,r24
 124:../../../src/net/isa/uart/command-interpreter.c **** 	if (destId == dmo.dlAddress) {
 3436               	.LM346:
 3437 0f30 8091 0000 		lds r24,dmo
 3438 0f34 9091 0000 		lds r25,(dmo)+1
 3439 0f38 8E15      		cp r24,r14
 3440 0f3a 9F05      		cpc r25,r15
 3441 0f3c 01F4      		brne .L220
 125:../../../src/net/isa/uart/command-interpreter.c **** 		  addNeighbor(emberUnsignedCommandArgument(2),0,0,0,false,0,0,0);		//Add a neighbor for myself an
 3443               	.LM347:
 3444 0f3e 82E0      		ldi r24,lo8(2)
 3445 0f40 0E94 0000 		call emberUnsignedCommandArgument
 3446 0f44 DC01      		movw r26,r24
 3447 0f46 CB01      		movw r24,r22
 3448 0f48 00D0      		rcall .
 3449 0f4a EDB7      		in r30,__SP_L__
 3450 0f4c FEB7      		in r31,__SP_H__
 3451 0f4e 1182      		std Z+1,__zero_reg__
 3452 0f50 1282      		std Z+2,__zero_reg__
 3453 0f52 00E0      		ldi r16,lo8(0)
 3454 0f54 10E0      		ldi r17,lo8(0)
 3455 0f56 20E0      		ldi r18,lo8(0)
 3456 0f58 30E0      		ldi r19,lo8(0)
 3457 0f5a 40E0      		ldi r20,lo8(0)
 3458 0f5c 50E0      		ldi r21,lo8(0)
 3459 0f5e 60E0      		ldi r22,lo8(0)
 3460 0f60 70E0      		ldi r23,lo8(0)
 3461 0f62 EE24      		clr r14
 3462 0f64 CC24      		clr r12
 3463 0f66 AA24      		clr r10
 3464 0f68 8824      		clr r8
 3465 0f6a 0E94 0000 		call addNeighbor
 126:../../../src/net/isa/uart/command-interpreter.c **** 		return;
 3467               	.LM348:
 3468 0f6e 0F90      		pop __tmp_reg__
 3469 0f70 0F90      		pop __tmp_reg__
 3470 0f72 00C0      		rjmp .L222
 3471               	.L220:
 131:../../../src/net/isa/uart/command-interpreter.c **** 	message->type = ADD_NEIGHBOR;
 3473               	.LM349:
 3474 0f74 82E0      		ldi r24,lo8(2)
 3475 0f76 8093 0000 		sts tx_buf+7,r24
 133:../../../src/net/isa/uart/command-interpreter.c **** 	configNeighbor->neighborId = emberUnsignedCommandArgument(2);;
 3477               	.LM350:
 3478 0f7a 0E94 0000 		call emberUnsignedCommandArgument
 3479 0f7e 7093 0000 		sts (tx_buf+8)+1,r23
 3480 0f82 6093 0000 		sts tx_buf+8,r22
 135:../../../src/net/isa/uart/command-interpreter.c **** 	sendPacket(destId,emberUnsignedCommandArgument(1), length, tx_buf, NULL);
 3482               	.LM351:
 3483 0f86 81E0      		ldi r24,lo8(1)
 3484 0f88 0E94 0000 		call emberUnsignedCommandArgument
 3485 0f8c C701      		movw r24,r14
 3486 0f8e 4AE0      		ldi r20,lo8(10)
 3487 0f90 20E0      		ldi r18,lo8(tx_buf)
 3488 0f92 30E0      		ldi r19,hi8(tx_buf)
 3489 0f94 00E0      		ldi r16,lo8(0)
 3490 0f96 10E0      		ldi r17,hi8(0)
 3491 0f98 0E94 0000 		call sendPacket
 3492               	.L222:
 3493               	/* epilogue start */
 137:../../../src/net/isa/uart/command-interpreter.c **** }
 3495               	.LM352:
 3496 0f9c 1F91      		pop r17
 3497 0f9e 0F91      		pop r16
 3498 0fa0 FF90      		pop r15
 3499 0fa2 EF90      		pop r14
 3500 0fa4 CF90      		pop r12
 3501 0fa6 AF90      		pop r10
 3502 0fa8 8F90      		pop r8
 3503 0faa 0895      		ret
 3505               	.Lscope29:
 3507               		.stabd	78,0,0
 3508               		.data
 3509               	.LC28:
 3510 0272 6E6F 6465 		.string	"node %d,%c"
 3510      2025 642C 
 3510      2563 00
 3511               		.text
 3513               	.global	sendDummyPacket
 3515               	sendDummyPacket:
 3516               		.stabd	46,0,0
 107:../../../src/net/isa/uart/command-interpreter.c **** void sendDummyPacket(void){
 3518               	.LM353:
 3519               	.LFBB30:
 3520 0fac CF92      		push r12
 3521 0fae DF92      		push r13
 3522 0fb0 EF92      		push r14
 3523 0fb2 FF92      		push r15
 3524 0fb4 0F93      		push r16
 3525 0fb6 1F93      		push r17
 3526 0fb8 CF93      		push r28
 3527 0fba DF93      		push r29
 3528               	/* prologue: function */
 3529               	/* frame size = 0 */
 111:../../../src/net/isa/uart/command-interpreter.c **** 		message = &tx_buf[PKT_DATA_START];
 3531               	.LM354:
 3532 0fbc 00E0      		ldi r16,lo8(tx_buf+7)
 3533 0fbe 10E0      		ldi r17,hi8(tx_buf+7)
 112:../../../src/net/isa/uart/command-interpreter.c **** 		message->type = DUMMY_PAYLOAD;
 3535               	.LM355:
 3536 0fc0 81E0      		ldi r24,lo8(1)
 3537 0fc2 8093 0000 		sts tx_buf+7,r24
 113:../../../src/net/isa/uart/command-interpreter.c **** 		sprintf( &message->data,"node %d,%c",1,cnt1++);
 3539               	.LM356:
 3540 0fc6 8091 0000 		lds r24,cnt1
 3541 0fca 9091 0000 		lds r25,(cnt1)+1
 3542 0fce 9C01      		movw r18,r24
 3543 0fd0 2F5F      		subi r18,lo8(-(1))
 3544 0fd2 3F4F      		sbci r19,hi8(-(1))
 3545 0fd4 3093 0000 		sts (cnt1)+1,r19
 3546 0fd8 2093 0000 		sts cnt1,r18
 3547 0fdc 2DB7      		in r18,__SP_L__
 3548 0fde 3EB7      		in r19,__SP_H__
 3549 0fe0 2850      		subi r18,lo8(-(-8))
 3550 0fe2 3040      		sbci r19,hi8(-(-8))
 3551 0fe4 0FB6      		in __tmp_reg__,__SREG__
 3552 0fe6 F894      		cli
 3553 0fe8 3EBF      		out __SP_H__,r19
 3554 0fea 0FBE      		out __SREG__,__tmp_reg__
 3555 0fec 2DBF      		out __SP_L__,r18
 3556 0fee EDB7      		in r30,__SP_L__
 3557 0ff0 FEB7      		in r31,__SP_H__
 3558 0ff2 3196      		adiw r30,1
 3559 0ff4 9801      		movw r18,r16
 3560 0ff6 2F5F      		subi r18,lo8(-(1))
 3561 0ff8 3F4F      		sbci r19,hi8(-(1))
 3562 0ffa ADB7      		in r26,__SP_L__
 3563 0ffc BEB7      		in r27,__SP_H__
 3564 0ffe 1296      		adiw r26,1+1
 3565 1000 3C93      		st X,r19
 3566 1002 2E93      		st -X,r18
 3567 1004 1197      		sbiw r26,1
 3568 1006 20E0      		ldi r18,lo8(.LC28)
 3569 1008 30E0      		ldi r19,hi8(.LC28)
 3570 100a 3383      		std Z+3,r19
 3571 100c 2283      		std Z+2,r18
 3572 100e 21E0      		ldi r18,lo8(1)
 3573 1010 30E0      		ldi r19,hi8(1)
 3574 1012 3583      		std Z+5,r19
 3575 1014 2483      		std Z+4,r18
 3576 1016 9783      		std Z+7,r25
 3577 1018 8683      		std Z+6,r24
 3578 101a 0E94 0000 		call sprintf
 114:../../../src/net/isa/uart/command-interpreter.c **** 	  	length=strlen(&tx_buf[PKT_DATA_START])+PKT_DATA_START+2; //1 for \0 + 1 for message->type
 3580               	.LM357:
 3581 101e E801      		movw r28,r16
 3582 1020 0990      		ld __tmp_reg__,Y+
 3583 1022 0020      		tst __tmp_reg__
 3584 1024 01F4      		brne .-6
 3585 1026 2197      		sbiw r28,1
 3586 1028 C01B      		sub r28,r16
 3587 102a D10B      		sbc r29,r17
 115:../../../src/net/isa/uart/command-interpreter.c **** 	  	sendPacket(emberUnsignedCommandArgument(0),emberUnsignedCommandArgument(1), length, tx_buf, NUL
 3589               	.LM358:
 3590 102c 2DB7      		in r18,__SP_L__
 3591 102e 3EB7      		in r19,__SP_H__
 3592 1030 285F      		subi r18,lo8(-(8))
 3593 1032 3F4F      		sbci r19,hi8(-(8))
 3594 1034 0FB6      		in __tmp_reg__,__SREG__
 3595 1036 F894      		cli
 3596 1038 3EBF      		out __SP_H__,r19
 3597 103a 0FBE      		out __SREG__,__tmp_reg__
 3598 103c 2DBF      		out __SP_L__,r18
 3599 103e 80E0      		ldi r24,lo8(0)
 3600 1040 0E94 0000 		call emberUnsignedCommandArgument
 3601 1044 6B01      		movw r12,r22
 3602 1046 7C01      		movw r14,r24
 3603 1048 81E0      		ldi r24,lo8(1)
 3604 104a 0E94 0000 		call emberUnsignedCommandArgument
 3605 104e CE01      		movw r24,r28
 3606 1050 875F      		subi r24,lo8(-(9))
 3607 1052 482F      		mov r20,r24
 3608 1054 9801      		movw r18,r16
 3609 1056 2750      		subi r18,lo8(-(-7))
 3610 1058 3040      		sbci r19,hi8(-(-7))
 3611 105a C601      		movw r24,r12
 3612 105c 00E0      		ldi r16,lo8(0)
 3613 105e 10E0      		ldi r17,hi8(0)
 3614 1060 0E94 0000 		call sendPacket
 3615               	/* epilogue start */
 116:../../../src/net/isa/uart/command-interpreter.c **** }
 3617               	.LM359:
 3618 1064 DF91      		pop r29
 3619 1066 CF91      		pop r28
 3620 1068 1F91      		pop r17
 3621 106a 0F91      		pop r16
 3622 106c FF90      		pop r15
 3623 106e EF90      		pop r14
 3624 1070 DF90      		pop r13
 3625 1072 CF90      		pop r12
 3626 1074 0895      		ret
 3631               	.Lscope30:
 3633               		.stabd	78,0,0
 3634               	.global	emberCommandInterpreter2Configuration
 3635               	.global	emberCommandInterpreter2Configuration
 3636               		.section .bss
 3639               	emberCommandInterpreter2Configuration:
 3640 0000 00        		.skip 1,0
 3641               	.global	printCommands
 3642               		.data
 3643               	.LC29:
 3644 027d 7465 6D70 		.string	"temp"
 3644      00
 3645               	.LC30:
 3646 0282 7575 00   		.string	"uu"
 3647               	.LC31:
 3648 0285 636F 6D6D 		.string	"command"
 3648      616E 6400 
 3649               	.LC32:
 3650 028d 00        		.string	""
 3651               	.LC33:
 3652 028e 656E 6162 		.string	"enable"
 3652      6C65 00
 3653               	.LC34:
 3654 0295 6469 7361 		.string	"disable"
 3654      626C 6500 
 3655               	.LC35:
 3656 029d 4C69 6E6B 		.string	"Link"
 3656      00
 3657               	.LC36:
 3658 02a2 4E65 6967 		.string	"Neighbor"
 3658      6862 6F72 
 3658      00
 3659               	.LC37:
 3660 02ab 4772 6170 		.string	"Graph"
 3660      6800 
 3661               	.LC38:
 3662 02b1 4D61 7472 		.string	"Matrix"
 3662      6978 00
 3665               	printCommands:
 3666 02b8 0000      		.word	.LC29
 3667 02ba 0000      		.word	gs(printTempCommand)
 3668 02bc 0000      		.word	.LC30
 3669 02be 0000      		.skip 2,0
 3670 02c0 0000      		.word	.LC31
 3671 02c2 0000      		.word	gs(emberPrintCommandTable)
 3672 02c4 0000      		.word	.LC32
 3673 02c6 0000      		.skip 2,0
 3674 02c8 0000      		.word	.LC33
 3675 02ca 0000      		.word	gs(printEnable)
 3676 02cc 0000      		.word	.LC32
 3677 02ce 0000      		.skip 2,0
 3678 02d0 0000      		.word	.LC34
 3679 02d2 0000      		.word	gs(printDisable)
 3680 02d4 0000      		.word	.LC32
 3681 02d6 0000      		.skip 2,0
 3682 02d8 0000      		.word	.LC35
 3683 02da 0000      		.word	gs(printLink)
 3684 02dc 0000      		.word	.LC32
 3685 02de 0000      		.skip 2,0
 3686 02e0 0000      		.word	.LC36
 3687 02e2 0000      		.word	gs(printNeighbor)
 3688 02e4 0000      		.word	.LC32
 3689 02e6 0000      		.skip 2,0
 3690 02e8 0000      		.word	.LC37
 3691 02ea 0000      		.word	gs(printGraph)
 3692 02ec 0000      		.word	.LC32
 3693 02ee 0000      		.skip 2,0
 3694 02f0 0000      		.word	.LC38
 3695 02f2 0000      		.word	gs(printMatrix)
 3696 02f4 0000      		.word	.LC32
 3697 02f6 0000      		.skip 2,0
 3698 02f8 0000      		.word	0
 3699 02fa 0000 0000 		.skip 6,0
 3699      0000 
 3700               	.global	sendCommands
 3701               	.LC39:
 3702 0300 6475 6D6D 		.string	"dummyPacket"
 3702      7950 6163 
 3702      6B65 7400 
 3703               	.LC40:
 3704 030c 7675 00   		.string	"vu"
 3705               	.LC41:
 3706 030f 4465 7374 		.string	"Destination ID| Graph ID "
 3706      696E 6174 
 3706      696F 6E20 
 3706      4944 7C20 
 3706      4772 6170 
 3707               	.LC42:
 3708 0329 7675 7600 		.string	"vuv"
 3709               	.LC43:
 3710 032d 4465 7374 		.string	"Destination ID| Graph ID| Neighbor to add"
 3710      696E 6174 
 3710      696F 6E20 
 3710      4944 7C20 
 3710      4772 6170 
 3711               	.LC44:
 3712 0357 7675 7575 		.string	"vuuuvvv"
 3712      7676 7600 
 3713               	.LC45:
 3714 035f 4465 7374 		.string	"Destination ID| Graph ID| Graph to add| neighCount| n1| n2| n3"
 3714      696E 6174 
 3714      696F 6E20 
 3714      4944 7C20 
 3714      4772 6170 
 3715               	.LC46:
 3716 039e 7675 7576 		.string	"vuuvuuu"
 3716      7575 7500 
 3717               	.LC47:
 3718 03a6 44        		.ascii	"D"
 3719 03a7 6573 7469 		.string	"estination ID| Graph ID| Slot| neigh| graph| linkType| GraphType"
 3719      6E61 7469 
 3719      6F6E 2049 
 3719      447C 2047 
 3719      7261 7068 
 3720               	.LC48:
 3721 03e8 666C 7573 		.string	"flushCandidate"
 3721      6843 616E 
 3721      6469 6461 
 3721      7465 00
 3722               	.LC49:
 3723 03f7 5365 6E64 		.string	"Sends a command to flush candidate table"
 3723      7320 6120 
 3723      636F 6D6D 
 3723      616E 6420 
 3723      746F 2066 
 3726               	sendCommands:
 3727 0420 0000      		.word	.LC39
 3728 0422 0000      		.word	gs(sendDummyPacket)
 3729 0424 0000      		.word	.LC40
 3730 0426 0000      		.word	.LC41
 3731 0428 0000      		.word	.LC36
 3732 042a 0000      		.word	gs(sendConfigNeighbor)
 3733 042c 0000      		.word	.LC42
 3734 042e 0000      		.word	.LC43
 3735 0430 0000      		.word	.LC37
 3736 0432 0000      		.word	gs(sendConfigGraph)
 3737 0434 0000      		.word	.LC44
 3738 0436 0000      		.word	.LC45
 3739 0438 0000      		.word	.LC35
 3740 043a 0000      		.word	gs(sendConfigLink)
 3741 043c 0000      		.word	.LC46
 3742 043e 0000      		.word	.LC47
 3743 0440 0000      		.word	.LC48
 3744 0442 0000      		.word	gs(flushCandidateTable)
 3745 0444 0000      		.word	.LC40
 3746 0446 0000      		.word	.LC49
 3747 0448 0000      		.word	0
 3748 044a 0000 0000 		.skip 6,0
 3748      0000 
 3749               	.global	emberCommandTable
 3750               	.LC50:
 3751 0450 7072 696E 		.string	"print"
 3751      7400 
 3752               	.LC51:
 3753 0456 7365 6E64 		.string	"send"
 3753      00
 3754               	.LC52:
 3755 045b 4C69 7374 		.string	"List of commands that can be sent"
 3755      206F 6620 
 3755      636F 6D6D 
 3755      616E 6473 
 3755      2074 6861 
 3756               	.LC53:
 3757 047d 6563 686F 		.string	"echo"
 3757      00
 3758               	.LC54:
 3759 0482 7500      		.string	"u"
 3762               	emberCommandTable:
 3763 0484 0000      		.word	.LC50
 3764 0486 0000      		.word	0
 3765 0488 0000      		.word	printCommands
 3766 048a 0000      		.skip 2,0
 3767 048c 0000      		.word	.LC51
 3768 048e 0000      		.word	0
 3769 0490 0000      		.word	sendCommands
 3770 0492 0000      		.word	.LC52
 3771 0494 0000      		.word	.LC53
 3772 0496 0000      		.word	gs(setEcho)
 3773 0498 0000      		.word	.LC54
 3774 049a 0000      		.skip 2,0
 3775 049c 0000      		.word	0
 3776 049e 0000      		.word	0
 3777 04a0 0000      		.word	0
 3778 04a2 0000      		.skip 2,0
 3779               	.global	emberCommandErrorNames
 3780               	.LC55:
 3781 04a4 5365 7269 		.string	"Serial port error"
 3781      616C 2070 
 3781      6F72 7420 
 3781      6572 726F 
 3781      7200 
 3782               	.LC56:
 3783 04b6 4E6F 2073 		.string	"No such command"
 3783      7563 6820 
 3783      636F 6D6D 
 3783      616E 6400 
 3784               	.LC57:
 3785 04c6 5772 6F6E 		.string	"Wrong number of args"
 3785      6720 6E75 
 3785      6D62 6572 
 3785      206F 6620 
 3785      6172 6773 
 3786               	.LC58:
 3787 04db 4172 6720 		.string	"Arg out of range"
 3787      6F75 7420 
 3787      6F66 2072 
 3787      616E 6765 
 3787      00
 3788               	.LC59:
 3789 04ec 4172 6720 		.string	"Arg syntax error"
 3789      7379 6E74 
 3789      6178 2065 
 3789      7272 6F72 
 3789      00
 3790               	.LC60:
 3791 04fd 546F 6F20 		.string	"Too long"
 3791      6C6F 6E67 
 3791      00
 3792               	.LC61:
 3793 0506 4261 6420 		.string	"Bad arg type"
 3793      6172 6720 
 3793      7479 7065 
 3793      00
 3796               	emberCommandErrorNames:
 3797 0513 0000      		.word	.LC32
 3798 0515 0000      		.word	.LC55
 3799 0517 0000      		.word	.LC56
 3800 0519 0000      		.word	.LC57
 3801 051b 0000      		.word	.LC58
 3802 051d 0000      		.word	.LC59
 3803 051f 0000      		.word	.LC60
 3804 0521 0000      		.word	.LC61
 3807               	isPrintEnabled:
 3808 0523 01        		.byte	1
 3809               		.lcomm previousCharacter,1
 3810               		.lcomm cnt1,2
 3811               		.lcomm commandState,50
 3812               		.comm _nrk_signal_list,4,1
 3813               		.comm emberCurrentCommand,2,1
 3825               		.text
 3827               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 command-interpreter.c
     /tmp/ccsvtVul.s:2      *ABS*:0000003f __SREG__
     /tmp/ccsvtVul.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccsvtVul.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccsvtVul.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccsvtVul.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccsvtVul.s:157    .text:00000000 printEnable
     /tmp/ccsvtVul.s:3807   .data:00000523 isPrintEnabled
     /tmp/ccsvtVul.s:179    .text:00000008 printDisable
     /tmp/ccsvtVul.s:200    .text:0000000e emberCommandReaderInit
     /tmp/ccsvtVul.s:3810   .bss:00000004 commandState
                            *COM*:00000002 emberCurrentCommand
     /tmp/ccsvtVul.s:244    .text:00000036 emberCommandArgumentCount
     /tmp/ccsvtVul.s:268    .text:00000042 stringToUnsignedInt
     /tmp/ccsvtVul.s:446    .text:0000010e emberUnsignedCommandArgument
     /tmp/ccsvtVul.s:468    .text:00000116 setEcho
     /tmp/ccsvtVul.s:3639   .bss:00000000 emberCommandInterpreter2Configuration
     /tmp/ccsvtVul.s:504    .text:0000013a emberSignedCommandArgument
     /tmp/ccsvtVul.s:560    .text:00000170 emberStringCommandArgument
     /tmp/ccsvtVul.s:653    .text:000001b4 printCommandUsage
     /tmp/ccsvtVul.s:817    .text:00000292 emberPrintCommandUsage
     /tmp/ccsvtVul.s:908    .text:000002ea emberPrintCommandUsageNotes
     /tmp/ccsvtVul.s:931    .text:000002f4 emberPrintCommandTable
     /tmp/ccsvtVul.s:3762   .data:00000484 emberCommandTable
     /tmp/ccsvtVul.s:982    .text:00000318 emberCommandErrorHandler
     /tmp/ccsvtVul.s:3796   .data:00000513 emberCommandErrorNames
     /tmp/ccsvtVul.s:1168   .text:00000412 printLink
     /tmp/ccsvtVul.s:1305   .text:000004da printGraph
     /tmp/ccsvtVul.s:1427   .text:00000584 printNeighbor
     /tmp/ccsvtVul.s:1536   .text:00000604 printSendCommandArguments
     /tmp/ccsvtVul.s:1607   .text:0000065c printTempCommand
     /tmp/ccsvtVul.s:1690   .text:000006cc emberCopyStringArgument
     /tmp/ccsvtVul.s:1784   .text:00000742 emberSerialWriteData
     /tmp/ccsvtVul.s:1829   .text:0000076e callCommandAction
     /tmp/ccsvtVul.s:2455   .text:00000a28 printMatrix
     /tmp/ccsvtVul.s:2528   .text:00000a8a emberSerialReadByte
     /tmp/ccsvtVul.s:2578   .text:00000ab8 emberProcessCommandString
                             .bss:00000001 previousCharacter
     /tmp/ccsvtVul.s:3052   .text:00000cd6 sendConfigLink
     /tmp/ccsvtVul.s:3197   .text:00000dc2 flushCandidateTable
     /tmp/ccsvtVul.s:3252   .text:00000e08 sendConfigGraph
     /tmp/ccsvtVul.s:3415   .text:00000f18 sendConfigNeighbor
     /tmp/ccsvtVul.s:3515   .text:00000fac sendDummyPacket
     /tmp/ccsvtVul.s:3809   .bss:00000002 cnt1
     /tmp/ccsvtVul.s:3665   .data:000002b8 printCommands
     /tmp/ccsvtVul.s:3726   .data:00000420 sendCommands
                            *COM*:00000004 _nrk_signal_list

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
__mulsi3
printf
puts
putchar
dlmoLink
dlmoGraph
dlmoNeighbor
memset
memcpy
__iob
fputc
adjacencyMatrix
nrk_uart_data_ready
fgetc
dmo
addLink
tx_buf
sendPacket
addGraph
addNeighbor
sprintf
